(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(s){if(s.ep)return;s.ep=!0;const r=t(s);fetch(s.href,r)}})();/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const C7="178",hi={ROTATE:0,DOLLY:1,PAN:2},di={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},q8=0,h5=1,Z8=2,d4=1,k8=2,bn=3,Un=0,Wt=1,gn=2,c1=0,mi=1,m5=2,b5=3,y5=4,J8=5,H1=100,B8=101,K8=102,Q8=103,_8=104,$8=200,el=201,tl=202,nl=203,la=204,da=205,il=206,sl=207,rl=208,al=209,ol=210,ll=211,dl=212,cl=213,ul=214,ca=0,ua=1,pa=2,wi=3,fa=4,ha=5,ma=6,ba=7,z7=0,pl=1,fl=2,u1=0,hl=1,ml=2,bl=3,c4=4,yl=5,vl=6,gl=7,v5="attached",wl="detached",u4=300,Ti=301,xi=302,ya=303,va=304,ms=306,Si=1e3,wn=1001,D3=1002,zt=1003,p4=1004,n2=1005,yt=1006,M3=1007,Tn=1008,xn=1009,f4=1010,h4=1011,d2=1012,A7=1013,R1=1014,Dt=1015,Dn=1016,I7=1017,X7=1018,c2=1020,m4=35902,b4=1021,y4=1022,Ut=1023,u2=1026,p2=1027,bs=1028,V7=1029,v4=1030,F7=1031,D7=1033,O3=33776,E3=33777,C3=33778,z3=33779,ga=35840,wa=35841,Ta=35842,xa=35843,Sa=36196,Pa=37492,Ha=37496,La=37808,Na=37809,Ra=37810,Ma=37811,Oa=37812,Ea=37813,Ca=37814,za=37815,Aa=37816,Ia=37817,Xa=37818,Va=37819,Fa=37820,Da=37821,A3=36492,Wa=36494,ja=36495,g4=36283,Ya=36284,Ga=36285,Ua=36286,f2=2300,h2=2301,Is=2302,g5=2400,w5=2401,T5=2402,Tl=2500,xl=0,w4=1,qa=2,Sl=3200,Pl=3201,W7=0,Hl=1,Vn="",bt="srgb",Tt="srgb-linear",W3="linear",Ie="srgb",F1=7680,x5=519,Ll=512,Nl=513,Rl=514,T4=515,Ml=516,Ol=517,El=518,Cl=519,Za=35044,S5="300 es",Wn=2e3,j3=2001;class z1{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const s=n[e];if(s!==void 0){const r=s.indexOf(t);r!==-1&&s.splice(r,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const s=n.slice(0);for(let r=0,a=s.length;r<a;r++)s[r].call(this,e);e.target=null}}}const xt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let P5=1234567;const bi=Math.PI/180,Pi=180/Math.PI;function pn(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(xt[i&255]+xt[i>>8&255]+xt[i>>16&255]+xt[i>>24&255]+"-"+xt[e&255]+xt[e>>8&255]+"-"+xt[e>>16&15|64]+xt[e>>24&255]+"-"+xt[t&63|128]+xt[t>>8&255]+"-"+xt[t>>16&255]+xt[t>>24&255]+xt[n&255]+xt[n>>8&255]+xt[n>>16&255]+xt[n>>24&255]).toLowerCase()}function le(i,e,t){return Math.max(e,Math.min(t,i))}function j7(i,e){return(i%e+e)%e}function zl(i,e,t,n,s){return n+(i-e)*(s-n)/(t-e)}function Al(i,e,t){return i!==e?(t-i)/(e-i):0}function s2(i,e,t){return(1-t)*i+t*e}function Il(i,e,t,n){return s2(i,e,1-Math.exp(-t*n))}function Xl(i,e=1){return e-Math.abs(j7(i,e*2)-e)}function Vl(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*(3-2*i))}function Fl(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*i*(i*(i*6-15)+10))}function Dl(i,e){return i+Math.floor(Math.random()*(e-i+1))}function Wl(i,e){return i+Math.random()*(e-i)}function jl(i){return i*(.5-Math.random())}function Yl(i){i!==void 0&&(P5=i);let e=P5+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Gl(i){return i*bi}function Ul(i){return i*Pi}function ql(i){return(i&i-1)===0&&i!==0}function Zl(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function kl(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function Jl(i,e,t,n,s){const r=Math.cos,a=Math.sin,o=r(t/2),l=a(t/2),d=r((e+n)/2),c=a((e+n)/2),u=r((e-n)/2),p=a((e-n)/2),h=r((n-e)/2),y=a((n-e)/2);switch(s){case"XYX":i.set(o*c,l*u,l*p,o*d);break;case"YZY":i.set(l*p,o*c,l*u,o*d);break;case"ZXZ":i.set(l*u,l*p,o*c,o*d);break;case"XZX":i.set(o*c,l*y,l*h,o*d);break;case"YXY":i.set(l*h,o*c,l*y,o*d);break;case"ZYZ":i.set(l*y,l*h,o*c,o*d);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function un(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return i/4294967295;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int32Array:return Math.max(i/2147483647,-1);case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function Me(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return Math.round(i*4294967295);case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int32Array:return Math.round(i*2147483647);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}const x4={DEG2RAD:bi,RAD2DEG:Pi,generateUUID:pn,clamp:le,euclideanModulo:j7,mapLinear:zl,inverseLerp:Al,lerp:s2,damp:Il,pingpong:Xl,smoothstep:Vl,smootherstep:Fl,randInt:Dl,randFloat:Wl,randFloatSpread:jl,seededRandom:Yl,degToRad:Gl,radToDeg:Ul,isPowerOfTwo:ql,ceilPowerOfTwo:Zl,floorPowerOfTwo:kl,setQuaternionFromProperEuler:Jl,normalize:Me,denormalize:un};class $0{constructor(e=0,t=0){$0.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6],this.y=s[1]*t+s[4]*n+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=le(this.x,e.x,t.x),this.y=le(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=le(this.x,e,t),this.y=le(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(le(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(le(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),s=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*s+e.x,this.y=r*s+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}let ee=class{constructor(e=0,t=0,n=0,s=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=s}static slerpFlat(e,t,n,s,r,a,o){let l=n[s+0],d=n[s+1],c=n[s+2],u=n[s+3];const p=r[a+0],h=r[a+1],y=r[a+2],T=r[a+3];if(o===0){e[t+0]=l,e[t+1]=d,e[t+2]=c,e[t+3]=u;return}if(o===1){e[t+0]=p,e[t+1]=h,e[t+2]=y,e[t+3]=T;return}if(u!==T||l!==p||d!==h||c!==y){let m=1-o;const f=l*p+d*h+c*y+u*T,N=f>=0?1:-1,M=1-f*f;if(M>Number.EPSILON){const F=Math.sqrt(M),X=Math.atan2(F,f*N);m=Math.sin(m*X)/F,o=Math.sin(o*X)/F}const P=o*N;if(l=l*m+p*P,d=d*m+h*P,c=c*m+y*P,u=u*m+T*P,m===1-o){const F=1/Math.sqrt(l*l+d*d+c*c+u*u);l*=F,d*=F,c*=F,u*=F}}e[t]=l,e[t+1]=d,e[t+2]=c,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,s,r,a){const o=n[s],l=n[s+1],d=n[s+2],c=n[s+3],u=r[a],p=r[a+1],h=r[a+2],y=r[a+3];return e[t]=o*y+c*u+l*h-d*p,e[t+1]=l*y+c*p+d*u-o*h,e[t+2]=d*y+c*h+o*p-l*u,e[t+3]=c*y-o*u-l*p-d*h,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,s){return this._x=e,this._y=t,this._z=n,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,s=e._y,r=e._z,a=e._order,o=Math.cos,l=Math.sin,d=o(n/2),c=o(s/2),u=o(r/2),p=l(n/2),h=l(s/2),y=l(r/2);switch(a){case"XYZ":this._x=p*c*u+d*h*y,this._y=d*h*u-p*c*y,this._z=d*c*y+p*h*u,this._w=d*c*u-p*h*y;break;case"YXZ":this._x=p*c*u+d*h*y,this._y=d*h*u-p*c*y,this._z=d*c*y-p*h*u,this._w=d*c*u+p*h*y;break;case"ZXY":this._x=p*c*u-d*h*y,this._y=d*h*u+p*c*y,this._z=d*c*y+p*h*u,this._w=d*c*u-p*h*y;break;case"ZYX":this._x=p*c*u-d*h*y,this._y=d*h*u+p*c*y,this._z=d*c*y-p*h*u,this._w=d*c*u+p*h*y;break;case"YZX":this._x=p*c*u+d*h*y,this._y=d*h*u+p*c*y,this._z=d*c*y-p*h*u,this._w=d*c*u-p*h*y;break;case"XZY":this._x=p*c*u-d*h*y,this._y=d*h*u-p*c*y,this._z=d*c*y+p*h*u,this._w=d*c*u+p*h*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,s=Math.sin(n);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],s=t[4],r=t[8],a=t[1],o=t[5],l=t[9],d=t[2],c=t[6],u=t[10],p=n+o+u;if(p>0){const h=.5/Math.sqrt(p+1);this._w=.25/h,this._x=(c-l)*h,this._y=(r-d)*h,this._z=(a-s)*h}else if(n>o&&n>u){const h=2*Math.sqrt(1+n-o-u);this._w=(c-l)/h,this._x=.25*h,this._y=(s+a)/h,this._z=(r+d)/h}else if(o>u){const h=2*Math.sqrt(1+o-n-u);this._w=(r-d)/h,this._x=(s+a)/h,this._y=.25*h,this._z=(l+c)/h}else{const h=2*Math.sqrt(1+u-n-o);this._w=(a-s)/h,this._x=(r+d)/h,this._y=(l+c)/h,this._z=.25*h}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<1e-8?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(le(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const s=Math.min(1,t/n);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,s=e._y,r=e._z,a=e._w,o=t._x,l=t._y,d=t._z,c=t._w;return this._x=n*c+a*o+s*d-r*l,this._y=s*c+a*l+r*o-n*d,this._z=r*c+a*d+n*l-s*o,this._w=a*c-n*o-s*l-r*d,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,s=this._y,r=this._z,a=this._w;let o=a*e._w+n*e._x+s*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=s,this._z=r,this;const l=1-o*o;if(l<=Number.EPSILON){const h=1-t;return this._w=h*a+t*this._w,this._x=h*n+t*this._x,this._y=h*s+t*this._y,this._z=h*r+t*this._z,this.normalize(),this}const d=Math.sqrt(l),c=Math.atan2(d,o),u=Math.sin((1-t)*c)/d,p=Math.sin(t*c)/d;return this._w=a*u+this._w*p,this._x=n*u+this._x*p,this._y=s*u+this._y*p,this._z=r*u+this._z*p,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),s=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(s*Math.sin(e),s*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},S=class S4{constructor(e=0,t=0,n=0){S4.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(H5.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(H5.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,s=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*s,this.y=r[1]*t+r[4]*n+r[7]*s,this.z=r[2]*t+r[5]*n+r[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,s=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*s+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*s+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*s+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*s+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,s=this.z,r=e.x,a=e.y,o=e.z,l=e.w,d=2*(a*s-o*n),c=2*(o*t-r*s),u=2*(r*n-a*t);return this.x=t+l*d+a*u-o*c,this.y=n+l*c+o*d-r*u,this.z=s+l*u+r*c-a*d,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,s=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*s,this.y=r[1]*t+r[5]*n+r[9]*s,this.z=r[2]*t+r[6]*n+r[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=le(this.x,e.x,t.x),this.y=le(this.y,e.y,t.y),this.z=le(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=le(this.x,e,t),this.y=le(this.y,e,t),this.z=le(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(le(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,s=e.y,r=e.z,a=t.x,o=t.y,l=t.z;return this.x=s*l-r*o,this.y=r*a-n*l,this.z=n*o-s*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Xs.copy(this).projectOnVector(e),this.sub(Xs)}reflect(e){return this.sub(Xs.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(le(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,s=this.z-e.z;return t*t+n*n+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const s=Math.sin(t)*e;return this.x=s*Math.sin(n),this.y=Math.cos(t)*e,this.z=s*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=s,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const Xs=new S,H5=new ee;class re{constructor(e,t,n,s,r,a,o,l,d){re.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,s,r,a,o,l,d)}set(e,t,n,s,r,a,o,l,d){const c=this.elements;return c[0]=e,c[1]=s,c[2]=o,c[3]=t,c[4]=r,c[5]=l,c[6]=n,c[7]=a,c[8]=d,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,s=t.elements,r=this.elements,a=n[0],o=n[3],l=n[6],d=n[1],c=n[4],u=n[7],p=n[2],h=n[5],y=n[8],T=s[0],m=s[3],f=s[6],N=s[1],M=s[4],P=s[7],F=s[2],X=s[5],D=s[8];return r[0]=a*T+o*N+l*F,r[3]=a*m+o*M+l*X,r[6]=a*f+o*P+l*D,r[1]=d*T+c*N+u*F,r[4]=d*m+c*M+u*X,r[7]=d*f+c*P+u*D,r[2]=p*T+h*N+y*F,r[5]=p*m+h*M+y*X,r[8]=p*f+h*P+y*D,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],a=e[4],o=e[5],l=e[6],d=e[7],c=e[8];return t*a*c-t*o*d-n*r*c+n*o*l+s*r*d-s*a*l}invert(){const e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],a=e[4],o=e[5],l=e[6],d=e[7],c=e[8],u=c*a-o*d,p=o*l-c*r,h=d*r-a*l,y=t*u+n*p+s*h;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const T=1/y;return e[0]=u*T,e[1]=(s*d-c*n)*T,e[2]=(o*n-s*a)*T,e[3]=p*T,e[4]=(c*t-s*l)*T,e[5]=(s*r-o*t)*T,e[6]=h*T,e[7]=(n*l-d*t)*T,e[8]=(a*t-n*r)*T,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,s,r,a,o){const l=Math.cos(r),d=Math.sin(r);return this.set(n*l,n*d,-n*(l*a+d*o)+a+e,-s*d,s*l,-s*(-d*a+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(Vs.makeScale(e,t)),this}rotate(e){return this.premultiply(Vs.makeRotation(-e)),this}translate(e,t){return this.premultiply(Vs.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let s=0;s<9;s++)if(t[s]!==n[s])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Vs=new re;function P4(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}function m2(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function Bl(){const i=m2("canvas");return i.style.display="block",i}const L5={};function yi(i){i in L5||(L5[i]=!0,console.warn(i))}function Kl(i,e,t){return new Promise(function(n,s){function r(){switch(i.clientWaitSync(e,i.SYNC_FLUSH_COMMANDS_BIT,0)){case i.WAIT_FAILED:s();break;case i.TIMEOUT_EXPIRED:setTimeout(r,t);break;default:n()}}setTimeout(r,t)})}function Ql(i){const e=i.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function _l(i){const e=i.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const N5=new re().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),R5=new re().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function $l(){const i={enabled:!0,workingColorSpace:Tt,spaces:{},convert:function(s,r,a){return this.enabled===!1||r===a||!r||!a||(this.spaces[r].transfer===Ie&&(s.r=Gn(s.r),s.g=Gn(s.g),s.b=Gn(s.b)),this.spaces[r].primaries!==this.spaces[a].primaries&&(s.applyMatrix3(this.spaces[r].toXYZ),s.applyMatrix3(this.spaces[a].fromXYZ)),this.spaces[a].transfer===Ie&&(s.r=vi(s.r),s.g=vi(s.g),s.b=vi(s.b))),s},workingToColorSpace:function(s,r){return this.convert(s,this.workingColorSpace,r)},colorSpaceToWorking:function(s,r){return this.convert(s,r,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===Vn?W3:this.spaces[s].transfer},getLuminanceCoefficients:function(s,r=this.workingColorSpace){return s.fromArray(this.spaces[r].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,r,a){return s.copy(this.spaces[r].toXYZ).multiply(this.spaces[a].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(s,r){return yi("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),i.workingToColorSpace(s,r)},toWorkingColorSpace:function(s,r){return yi("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),i.colorSpaceToWorking(s,r)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return i.define({[Tt]:{primaries:e,whitePoint:n,transfer:W3,toXYZ:N5,fromXYZ:R5,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:bt},outputColorSpaceConfig:{drawingBufferColorSpace:bt}},[bt]:{primaries:e,whitePoint:n,transfer:Ie,toXYZ:N5,fromXYZ:R5,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:bt}}}),i}const ge=$l();function Gn(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function vi(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}let D1;class ed{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{D1===void 0&&(D1=m2("canvas")),D1.width=e.width,D1.height=e.height;const s=D1.getContext("2d");e instanceof ImageData?s.putImageData(e,0,0):s.drawImage(e,0,0,e.width,e.height),n=D1}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=m2("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const s=n.getImageData(0,0,e.width,e.height),r=s.data;for(let a=0;a<r.length;a++)r[a]=Gn(r[a]/255)*255;return n.putImageData(s,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Gn(t[n]/255)*255):t[n]=Gn(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let td=0;class Y7{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:td++}),this.uuid=pn(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let a=0,o=s.length;a<o;a++)s[a].isDataTexture?r.push(Fs(s[a].image)):r.push(Fs(s[a]))}else r=Fs(s);n.url=r}return t||(e.images[this.uuid]=n),n}}function Fs(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?ed.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let nd=0;const Ds=new S;class vt extends z1{constructor(e=vt.DEFAULT_IMAGE,t=vt.DEFAULT_MAPPING,n=wn,s=wn,r=yt,a=Tn,o=Ut,l=xn,d=vt.DEFAULT_ANISOTROPY,c=Vn){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:nd++}),this.uuid=pn(),this.name="",this.source=new Y7(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=s,this.magFilter=r,this.minFilter=a,this.anisotropy=d,this.format=o,this.internalFormat=null,this.type=l,this.offset=new $0(0,0),this.repeat=new $0(1,1),this.center=new $0(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new re,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Ds).x}get height(){return this.source.getSize(Ds).y}get depth(){return this.source.getSize(Ds).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const s=this[t];if(s===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}s&&n&&s.isVector2&&n.isVector2||s&&n&&s.isVector3&&n.isVector3||s&&n&&s.isMatrix3&&n.isMatrix3?s.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==u4)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Si:e.x=e.x-Math.floor(e.x);break;case wn:e.x=e.x<0?0:1;break;case D3:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Si:e.y=e.y-Math.floor(e.y);break;case wn:e.y=e.y<0?0:1;break;case D3:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}vt.DEFAULT_IMAGE=null;vt.DEFAULT_MAPPING=u4;vt.DEFAULT_ANISOTROPY=1;class He{constructor(e=0,t=0,n=0,s=1){He.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,s){return this.x=e,this.y=t,this.z=n,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,s=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*s+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*s+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*s+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*s+a[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,s,r;const l=e.elements,d=l[0],c=l[4],u=l[8],p=l[1],h=l[5],y=l[9],T=l[2],m=l[6],f=l[10];if(Math.abs(c-p)<.01&&Math.abs(u-T)<.01&&Math.abs(y-m)<.01){if(Math.abs(c+p)<.1&&Math.abs(u+T)<.1&&Math.abs(y+m)<.1&&Math.abs(d+h+f-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const M=(d+1)/2,P=(h+1)/2,F=(f+1)/2,X=(c+p)/4,D=(u+T)/4,U=(y+m)/4;return M>P&&M>F?M<.01?(n=0,s=.707106781,r=.707106781):(n=Math.sqrt(M),s=X/n,r=D/n):P>F?P<.01?(n=.707106781,s=0,r=.707106781):(s=Math.sqrt(P),n=X/s,r=U/s):F<.01?(n=.707106781,s=.707106781,r=0):(r=Math.sqrt(F),n=D/r,s=U/r),this.set(n,s,r,t),this}let N=Math.sqrt((m-y)*(m-y)+(u-T)*(u-T)+(p-c)*(p-c));return Math.abs(N)<.001&&(N=1),this.x=(m-y)/N,this.y=(u-T)/N,this.z=(p-c)/N,this.w=Math.acos((d+h+f-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=le(this.x,e.x,t.x),this.y=le(this.y,e.y,t.y),this.z=le(this.z,e.z,t.z),this.w=le(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=le(this.x,e,t),this.y=le(this.y,e,t),this.z=le(this.z,e,t),this.w=le(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(le(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class id extends z1{constructor(e=1,t=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:yt,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=n.depth,this.scissor=new He(0,0,e,t),this.scissorTest=!1,this.viewport=new He(0,0,e,t);const s={width:e,height:t,depth:n.depth},r=new vt(s);this.textures=[];const a=n.count;for(let o=0;o<a;o++)this.textures[o]=r.clone(),this.textures[o].isRenderTargetTexture=!0,this.textures[o].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(e={}){const t={minFilter:yt,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let s=0,r=this.textures.length;s<r;s++)this.textures[s].image.width=e,this.textures[s].image.height=t,this.textures[s].image.depth=n,this.textures[s].isArrayTexture=this.textures[s].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const s=Object.assign({},e.textures[t].image);this.textures[t].source=new Y7(s)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class M1 extends id{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class H4 extends vt{constructor(e=null,t=1,n=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:s},this.magFilter=zt,this.minFilter=zt,this.wrapR=wn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class sd extends vt{constructor(e=null,t=1,n=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:s},this.magFilter=zt,this.minFilter=zt,this.wrapR=wn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Jn{constructor(e=new S(1/0,1/0,1/0),t=new S(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(en.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(en.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=en.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const r=n.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let a=0,o=r.count;a<o;a++)e.isMesh===!0?e.getVertexPosition(a,en):en.fromBufferAttribute(r,a),en.applyMatrix4(e.matrixWorld),this.expandByPoint(en);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),C2.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),C2.copy(n.boundingBox)),C2.applyMatrix4(e.matrixWorld),this.union(C2)}const s=e.children;for(let r=0,a=s.length;r<a;r++)this.expandByObject(s[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,en),en.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Fi),z2.subVectors(this.max,Fi),W1.subVectors(e.a,Fi),j1.subVectors(e.b,Fi),Y1.subVectors(e.c,Fi),Kn.subVectors(j1,W1),Qn.subVectors(Y1,j1),m1.subVectors(W1,Y1);let t=[0,-Kn.z,Kn.y,0,-Qn.z,Qn.y,0,-m1.z,m1.y,Kn.z,0,-Kn.x,Qn.z,0,-Qn.x,m1.z,0,-m1.x,-Kn.y,Kn.x,0,-Qn.y,Qn.x,0,-m1.y,m1.x,0];return!Ws(t,W1,j1,Y1,z2)||(t=[1,0,0,0,1,0,0,0,1],!Ws(t,W1,j1,Y1,z2))?!1:(A2.crossVectors(Kn,Qn),t=[A2.x,A2.y,A2.z],Ws(t,W1,j1,Y1,z2))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,en).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(en).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Mn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Mn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Mn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Mn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Mn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Mn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Mn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Mn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Mn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const Mn=[new S,new S,new S,new S,new S,new S,new S,new S],en=new S,C2=new Jn,W1=new S,j1=new S,Y1=new S,Kn=new S,Qn=new S,m1=new S,Fi=new S,z2=new S,A2=new S,b1=new S;function Ws(i,e,t,n,s){for(let r=0,a=i.length-3;r<=a;r+=3){b1.fromArray(i,r);const o=s.x*Math.abs(b1.x)+s.y*Math.abs(b1.y)+s.z*Math.abs(b1.z),l=e.dot(b1),d=t.dot(b1),c=n.dot(b1);if(Math.max(-Math.max(l,d,c),Math.min(l,d,c))>o)return!1}return!0}const rd=new Jn,Di=new S,js=new S;class Pn{constructor(e=new S,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):rd.setFromPoints(e).getCenter(n);let s=0;for(let r=0,a=e.length;r<a;r++)s=Math.max(s,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Di.subVectors(e,this.center);const t=Di.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),s=(n-this.radius)*.5;this.center.addScaledVector(Di,s/n),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(js.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Di.copy(e.center).add(js)),this.expandByPoint(Di.copy(e.center).sub(js))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const On=new S,Ys=new S,I2=new S,_n=new S,Gs=new S,X2=new S,Us=new S;class Mi{constructor(e=new S,t=new S(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,On)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=On.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(On.copy(this.origin).addScaledVector(this.direction,t),On.distanceToSquared(e))}distanceSqToSegment(e,t,n,s){Ys.copy(e).add(t).multiplyScalar(.5),I2.copy(t).sub(e).normalize(),_n.copy(this.origin).sub(Ys);const r=e.distanceTo(t)*.5,a=-this.direction.dot(I2),o=_n.dot(this.direction),l=-_n.dot(I2),d=_n.lengthSq(),c=Math.abs(1-a*a);let u,p,h,y;if(c>0)if(u=a*l-o,p=a*o-l,y=r*c,u>=0)if(p>=-y)if(p<=y){const T=1/c;u*=T,p*=T,h=u*(u+a*p+2*o)+p*(a*u+p+2*l)+d}else p=r,u=Math.max(0,-(a*p+o)),h=-u*u+p*(p+2*l)+d;else p=-r,u=Math.max(0,-(a*p+o)),h=-u*u+p*(p+2*l)+d;else p<=-y?(u=Math.max(0,-(-a*r+o)),p=u>0?-r:Math.min(Math.max(-r,-l),r),h=-u*u+p*(p+2*l)+d):p<=y?(u=0,p=Math.min(Math.max(-r,-l),r),h=p*(p+2*l)+d):(u=Math.max(0,-(a*r+o)),p=u>0?r:Math.min(Math.max(-r,-l),r),h=-u*u+p*(p+2*l)+d);else p=a>0?-r:r,u=Math.max(0,-(a*p+o)),h=-u*u+p*(p+2*l)+d;return n&&n.copy(this.origin).addScaledVector(this.direction,u),s&&s.copy(Ys).addScaledVector(I2,p),h}intersectSphere(e,t){On.subVectors(e.center,this.origin);const n=On.dot(this.direction),s=On.dot(On)-n*n,r=e.radius*e.radius;if(s>r)return null;const a=Math.sqrt(r-s),o=n-a,l=n+a;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,s,r,a,o,l;const d=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,p=this.origin;return d>=0?(n=(e.min.x-p.x)*d,s=(e.max.x-p.x)*d):(n=(e.max.x-p.x)*d,s=(e.min.x-p.x)*d),c>=0?(r=(e.min.y-p.y)*c,a=(e.max.y-p.y)*c):(r=(e.max.y-p.y)*c,a=(e.min.y-p.y)*c),n>a||r>s||((r>n||isNaN(n))&&(n=r),(a<s||isNaN(s))&&(s=a),u>=0?(o=(e.min.z-p.z)*u,l=(e.max.z-p.z)*u):(o=(e.max.z-p.z)*u,l=(e.min.z-p.z)*u),n>l||o>s)||((o>n||n!==n)&&(n=o),(l<s||s!==s)&&(s=l),s<0)?null:this.at(n>=0?n:s,t)}intersectsBox(e){return this.intersectBox(e,On)!==null}intersectTriangle(e,t,n,s,r){Gs.subVectors(t,e),X2.subVectors(n,e),Us.crossVectors(Gs,X2);let a=this.direction.dot(Us),o;if(a>0){if(s)return null;o=1}else if(a<0)o=-1,a=-a;else return null;_n.subVectors(this.origin,e);const l=o*this.direction.dot(X2.crossVectors(_n,X2));if(l<0)return null;const d=o*this.direction.dot(Gs.cross(_n));if(d<0||l+d>a)return null;const c=-o*_n.dot(Us);return c<0?null:this.at(c/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class B0{constructor(e,t,n,s,r,a,o,l,d,c,u,p,h,y,T,m){B0.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,s,r,a,o,l,d,c,u,p,h,y,T,m)}set(e,t,n,s,r,a,o,l,d,c,u,p,h,y,T,m){const f=this.elements;return f[0]=e,f[4]=t,f[8]=n,f[12]=s,f[1]=r,f[5]=a,f[9]=o,f[13]=l,f[2]=d,f[6]=c,f[10]=u,f[14]=p,f[3]=h,f[7]=y,f[11]=T,f[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new B0().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,s=1/G1.setFromMatrixColumn(e,0).length(),r=1/G1.setFromMatrixColumn(e,1).length(),a=1/G1.setFromMatrixColumn(e,2).length();return t[0]=n[0]*s,t[1]=n[1]*s,t[2]=n[2]*s,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,s=e.y,r=e.z,a=Math.cos(n),o=Math.sin(n),l=Math.cos(s),d=Math.sin(s),c=Math.cos(r),u=Math.sin(r);if(e.order==="XYZ"){const p=a*c,h=a*u,y=o*c,T=o*u;t[0]=l*c,t[4]=-l*u,t[8]=d,t[1]=h+y*d,t[5]=p-T*d,t[9]=-o*l,t[2]=T-p*d,t[6]=y+h*d,t[10]=a*l}else if(e.order==="YXZ"){const p=l*c,h=l*u,y=d*c,T=d*u;t[0]=p+T*o,t[4]=y*o-h,t[8]=a*d,t[1]=a*u,t[5]=a*c,t[9]=-o,t[2]=h*o-y,t[6]=T+p*o,t[10]=a*l}else if(e.order==="ZXY"){const p=l*c,h=l*u,y=d*c,T=d*u;t[0]=p-T*o,t[4]=-a*u,t[8]=y+h*o,t[1]=h+y*o,t[5]=a*c,t[9]=T-p*o,t[2]=-a*d,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const p=a*c,h=a*u,y=o*c,T=o*u;t[0]=l*c,t[4]=y*d-h,t[8]=p*d+T,t[1]=l*u,t[5]=T*d+p,t[9]=h*d-y,t[2]=-d,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const p=a*l,h=a*d,y=o*l,T=o*d;t[0]=l*c,t[4]=T-p*u,t[8]=y*u+h,t[1]=u,t[5]=a*c,t[9]=-o*c,t[2]=-d*c,t[6]=h*u+y,t[10]=p-T*u}else if(e.order==="XZY"){const p=a*l,h=a*d,y=o*l,T=o*d;t[0]=l*c,t[4]=-u,t[8]=d*c,t[1]=p*u+T,t[5]=a*c,t[9]=h*u-y,t[2]=y*u-h,t[6]=o*c,t[10]=T*u+p}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(ad,e,od)}lookAt(e,t,n){const s=this.elements;return Yt.subVectors(e,t),Yt.lengthSq()===0&&(Yt.z=1),Yt.normalize(),$n.crossVectors(n,Yt),$n.lengthSq()===0&&(Math.abs(n.z)===1?Yt.x+=1e-4:Yt.z+=1e-4,Yt.normalize(),$n.crossVectors(n,Yt)),$n.normalize(),V2.crossVectors(Yt,$n),s[0]=$n.x,s[4]=V2.x,s[8]=Yt.x,s[1]=$n.y,s[5]=V2.y,s[9]=Yt.y,s[2]=$n.z,s[6]=V2.z,s[10]=Yt.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,s=t.elements,r=this.elements,a=n[0],o=n[4],l=n[8],d=n[12],c=n[1],u=n[5],p=n[9],h=n[13],y=n[2],T=n[6],m=n[10],f=n[14],N=n[3],M=n[7],P=n[11],F=n[15],X=s[0],D=s[4],U=s[8],R=s[12],H=s[1],j=s[5],K=s[9],Q=s[13],e0=s[2],u0=s[6],n0=s[10],y0=s[14],t0=s[3],x0=s[7],L0=s[11],F0=s[15];return r[0]=a*X+o*H+l*e0+d*t0,r[4]=a*D+o*j+l*u0+d*x0,r[8]=a*U+o*K+l*n0+d*L0,r[12]=a*R+o*Q+l*y0+d*F0,r[1]=c*X+u*H+p*e0+h*t0,r[5]=c*D+u*j+p*u0+h*x0,r[9]=c*U+u*K+p*n0+h*L0,r[13]=c*R+u*Q+p*y0+h*F0,r[2]=y*X+T*H+m*e0+f*t0,r[6]=y*D+T*j+m*u0+f*x0,r[10]=y*U+T*K+m*n0+f*L0,r[14]=y*R+T*Q+m*y0+f*F0,r[3]=N*X+M*H+P*e0+F*t0,r[7]=N*D+M*j+P*u0+F*x0,r[11]=N*U+M*K+P*n0+F*L0,r[15]=N*R+M*Q+P*y0+F*F0,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],s=e[8],r=e[12],a=e[1],o=e[5],l=e[9],d=e[13],c=e[2],u=e[6],p=e[10],h=e[14],y=e[3],T=e[7],m=e[11],f=e[15];return y*(+r*l*u-s*d*u-r*o*p+n*d*p+s*o*h-n*l*h)+T*(+t*l*h-t*d*p+r*a*p-s*a*h+s*d*c-r*l*c)+m*(+t*d*u-t*o*h-r*a*u+n*a*h+r*o*c-n*d*c)+f*(-s*o*c-t*l*u+t*o*p+s*a*u-n*a*p+n*l*c)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=t,s[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],a=e[4],o=e[5],l=e[6],d=e[7],c=e[8],u=e[9],p=e[10],h=e[11],y=e[12],T=e[13],m=e[14],f=e[15],N=u*m*d-T*p*d+T*l*h-o*m*h-u*l*f+o*p*f,M=y*p*d-c*m*d-y*l*h+a*m*h+c*l*f-a*p*f,P=c*T*d-y*u*d+y*o*h-a*T*h-c*o*f+a*u*f,F=y*u*l-c*T*l-y*o*p+a*T*p+c*o*m-a*u*m,X=t*N+n*M+s*P+r*F;if(X===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const D=1/X;return e[0]=N*D,e[1]=(T*p*r-u*m*r-T*s*h+n*m*h+u*s*f-n*p*f)*D,e[2]=(o*m*r-T*l*r+T*s*d-n*m*d-o*s*f+n*l*f)*D,e[3]=(u*l*r-o*p*r-u*s*d+n*p*d+o*s*h-n*l*h)*D,e[4]=M*D,e[5]=(c*m*r-y*p*r+y*s*h-t*m*h-c*s*f+t*p*f)*D,e[6]=(y*l*r-a*m*r-y*s*d+t*m*d+a*s*f-t*l*f)*D,e[7]=(a*p*r-c*l*r+c*s*d-t*p*d-a*s*h+t*l*h)*D,e[8]=P*D,e[9]=(y*u*r-c*T*r-y*n*h+t*T*h+c*n*f-t*u*f)*D,e[10]=(a*T*r-y*o*r+y*n*d-t*T*d-a*n*f+t*o*f)*D,e[11]=(c*o*r-a*u*r-c*n*d+t*u*d+a*n*h-t*o*h)*D,e[12]=F*D,e[13]=(c*T*s-y*u*s+y*n*p-t*T*p-c*n*m+t*u*m)*D,e[14]=(y*o*s-a*T*s-y*n*l+t*T*l+a*n*m-t*o*m)*D,e[15]=(a*u*s-c*o*s+c*n*l-t*u*l-a*n*p+t*o*p)*D,this}scale(e){const t=this.elements,n=e.x,s=e.y,r=e.z;return t[0]*=n,t[4]*=s,t[8]*=r,t[1]*=n,t[5]*=s,t[9]*=r,t[2]*=n,t[6]*=s,t[10]*=r,t[3]*=n,t[7]*=s,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,s))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),s=Math.sin(t),r=1-n,a=e.x,o=e.y,l=e.z,d=r*a,c=r*o;return this.set(d*a+n,d*o-s*l,d*l+s*o,0,d*o+s*l,c*o+n,c*l-s*a,0,d*l-s*o,c*l+s*a,r*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,s,r,a){return this.set(1,n,r,0,e,1,a,0,t,s,1,0,0,0,0,1),this}compose(e,t,n){const s=this.elements,r=t._x,a=t._y,o=t._z,l=t._w,d=r+r,c=a+a,u=o+o,p=r*d,h=r*c,y=r*u,T=a*c,m=a*u,f=o*u,N=l*d,M=l*c,P=l*u,F=n.x,X=n.y,D=n.z;return s[0]=(1-(T+f))*F,s[1]=(h+P)*F,s[2]=(y-M)*F,s[3]=0,s[4]=(h-P)*X,s[5]=(1-(p+f))*X,s[6]=(m+N)*X,s[7]=0,s[8]=(y+M)*D,s[9]=(m-N)*D,s[10]=(1-(p+T))*D,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,t,n){const s=this.elements;let r=G1.set(s[0],s[1],s[2]).length();const a=G1.set(s[4],s[5],s[6]).length(),o=G1.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),e.x=s[12],e.y=s[13],e.z=s[14],tn.copy(this);const d=1/r,c=1/a,u=1/o;return tn.elements[0]*=d,tn.elements[1]*=d,tn.elements[2]*=d,tn.elements[4]*=c,tn.elements[5]*=c,tn.elements[6]*=c,tn.elements[8]*=u,tn.elements[9]*=u,tn.elements[10]*=u,t.setFromRotationMatrix(tn),n.x=r,n.y=a,n.z=o,this}makePerspective(e,t,n,s,r,a,o=Wn){const l=this.elements,d=2*r/(t-e),c=2*r/(n-s),u=(t+e)/(t-e),p=(n+s)/(n-s);let h,y;if(o===Wn)h=-(a+r)/(a-r),y=-2*a*r/(a-r);else if(o===j3)h=-a/(a-r),y=-a*r/(a-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=d,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=c,l[9]=p,l[13]=0,l[2]=0,l[6]=0,l[10]=h,l[14]=y,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,s,r,a,o=Wn){const l=this.elements,d=1/(t-e),c=1/(n-s),u=1/(a-r),p=(t+e)*d,h=(n+s)*c;let y,T;if(o===Wn)y=(a+r)*u,T=-2*u;else if(o===j3)y=r*u,T=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=2*d,l[4]=0,l[8]=0,l[12]=-p,l[1]=0,l[5]=2*c,l[9]=0,l[13]=-h,l[2]=0,l[6]=0,l[10]=T,l[14]=-y,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let s=0;s<16;s++)if(t[s]!==n[s])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const G1=new S,tn=new B0,ad=new S(0,0,0),od=new S(1,1,1),$n=new S,V2=new S,Yt=new S,M5=new B0,O5=new ee;class Ne{constructor(e=0,t=0,n=0,s=Ne.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,s=this._order){return this._x=e,this._y=t,this._z=n,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const s=e.elements,r=s[0],a=s[4],o=s[8],l=s[1],d=s[5],c=s[9],u=s[2],p=s[6],h=s[10];switch(t){case"XYZ":this._y=Math.asin(le(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,h),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(p,d),this._z=0);break;case"YXZ":this._x=Math.asin(-le(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,h),this._z=Math.atan2(l,d)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(le(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-u,h),this._z=Math.atan2(-a,d)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-le(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(p,h),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-a,d));break;case"YZX":this._z=Math.asin(le(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-c,d),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(o,h));break;case"XZY":this._z=Math.asin(-le(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(p,d),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-c,h),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return M5.makeRotationFromQuaternion(e),this.setFromRotationMatrix(M5,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return O5.setFromEuler(this),this.setFromQuaternion(O5,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ne.DEFAULT_ORDER="XYZ";class G7{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let ld=0;const E5=new S,U1=new ee,En=new B0,F2=new S,Wi=new S,dd=new S,cd=new ee,C5=new S(1,0,0),z5=new S(0,1,0),A5=new S(0,0,1),I5={type:"added"},ud={type:"removed"},q1={type:"childadded",child:null},qs={type:"childremoved",child:null};class qe extends z1{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ld++}),this.uuid=pn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=qe.DEFAULT_UP.clone();const e=new S,t=new Ne,n=new ee,s=new S(1,1,1);function r(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new B0},normalMatrix:{value:new re}}),this.matrix=new B0,this.matrixWorld=new B0,this.matrixAutoUpdate=qe.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=qe.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new G7,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return U1.setFromAxisAngle(e,t),this.quaternion.multiply(U1),this}rotateOnWorldAxis(e,t){return U1.setFromAxisAngle(e,t),this.quaternion.premultiply(U1),this}rotateX(e){return this.rotateOnAxis(C5,e)}rotateY(e){return this.rotateOnAxis(z5,e)}rotateZ(e){return this.rotateOnAxis(A5,e)}translateOnAxis(e,t){return E5.copy(e).applyQuaternion(this.quaternion),this.position.add(E5.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(C5,e)}translateY(e){return this.translateOnAxis(z5,e)}translateZ(e){return this.translateOnAxis(A5,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(En.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?F2.copy(e):F2.set(e,t,n);const s=this.parent;this.updateWorldMatrix(!0,!1),Wi.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?En.lookAt(Wi,F2,this.up):En.lookAt(F2,Wi,this.up),this.quaternion.setFromRotationMatrix(En),s&&(En.extractRotation(s.matrixWorld),U1.setFromRotationMatrix(En),this.quaternion.premultiply(U1.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(I5),q1.child=e,this.dispatchEvent(q1),q1.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(ud),qs.child=e,this.dispatchEvent(qs),qs.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),En.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),En.multiply(e.parent.matrixWorld)),e.applyMatrix4(En),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(I5),q1.child=e,this.dispatchEvent(q1),q1.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,s=this.children.length;n<s;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const s=this.children;for(let r=0,a=s.length;r<a;r++)s[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Wi,e,dd),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Wi,cd,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const s=this.children;for(let r=0,a=s.length;r<a;r++)s[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.geometryInfo=this._geometryInfo.map(o=>({...o,boundingBox:o.boundingBox?o.boundingBox.toJSON():void 0,boundingSphere:o.boundingSphere?o.boundingSphere.toJSON():void 0})),s.instanceInfo=this._instanceInfo.map(o=>({...o})),s.availableInstanceIds=this._availableInstanceIds.slice(),s.availableGeometryIds=this._availableGeometryIds.slice(),s.nextIndexStart=this._nextIndexStart,s.nextVertexStart=this._nextVertexStart,s.geometryCount=this._geometryCount,s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.matricesTexture=this._matricesTexture.toJSON(e),s.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(s.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(s.boundingBox=this.boundingBox.toJSON()));function r(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let d=0,c=l.length;d<c;d++){const u=l[d];r(e.shapes,u)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,d=this.material.length;l<d;l++)o.push(r(e.materials,this.material[l]));s.material=o}else s.material=r(e.materials,this.material);if(this.children.length>0){s.children=[];for(let o=0;o<this.children.length;o++)s.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];s.animations.push(r(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),d=a(e.textures),c=a(e.images),u=a(e.shapes),p=a(e.skeletons),h=a(e.animations),y=a(e.nodes);o.length>0&&(n.geometries=o),l.length>0&&(n.materials=l),d.length>0&&(n.textures=d),c.length>0&&(n.images=c),u.length>0&&(n.shapes=u),p.length>0&&(n.skeletons=p),h.length>0&&(n.animations=h),y.length>0&&(n.nodes=y)}return n.object=s,n;function a(o){const l=[];for(const d in o){const c=o[d];delete c.metadata,l.push(c)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const s=e.children[n];this.add(s.clone())}return this}}qe.DEFAULT_UP=new S(0,1,0);qe.DEFAULT_MATRIX_AUTO_UPDATE=!0;qe.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const nn=new S,Cn=new S,Zs=new S,zn=new S,Z1=new S,k1=new S,X5=new S,ks=new S,Js=new S,Bs=new S,Ks=new He,Qs=new He,_s=new He;let ri=class ai{constructor(e=new S,t=new S,n=new S){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,s){s.subVectors(n,t),nn.subVectors(e,t),s.cross(nn);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(e,t,n,s,r){nn.subVectors(s,t),Cn.subVectors(n,t),Zs.subVectors(e,t);const a=nn.dot(nn),o=nn.dot(Cn),l=nn.dot(Zs),d=Cn.dot(Cn),c=Cn.dot(Zs),u=a*d-o*o;if(u===0)return r.set(0,0,0),null;const p=1/u,h=(d*l-o*c)*p,y=(a*c-o*l)*p;return r.set(1-h-y,y,h)}static containsPoint(e,t,n,s){return this.getBarycoord(e,t,n,s,zn)===null?!1:zn.x>=0&&zn.y>=0&&zn.x+zn.y<=1}static getInterpolation(e,t,n,s,r,a,o,l){return this.getBarycoord(e,t,n,s,zn)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(r,zn.x),l.addScaledVector(a,zn.y),l.addScaledVector(o,zn.z),l)}static getInterpolatedAttribute(e,t,n,s,r,a){return Ks.setScalar(0),Qs.setScalar(0),_s.setScalar(0),Ks.fromBufferAttribute(e,t),Qs.fromBufferAttribute(e,n),_s.fromBufferAttribute(e,s),a.setScalar(0),a.addScaledVector(Ks,r.x),a.addScaledVector(Qs,r.y),a.addScaledVector(_s,r.z),a}static isFrontFacing(e,t,n,s){return nn.subVectors(n,t),Cn.subVectors(e,t),nn.cross(Cn).dot(s)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,s){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,t,n,s){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return nn.subVectors(this.c,this.b),Cn.subVectors(this.a,this.b),nn.cross(Cn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ai.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ai.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,s,r){return ai.getInterpolation(e,this.a,this.b,this.c,t,n,s,r)}containsPoint(e){return ai.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ai.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,s=this.b,r=this.c;let a,o;Z1.subVectors(s,n),k1.subVectors(r,n),ks.subVectors(e,n);const l=Z1.dot(ks),d=k1.dot(ks);if(l<=0&&d<=0)return t.copy(n);Js.subVectors(e,s);const c=Z1.dot(Js),u=k1.dot(Js);if(c>=0&&u<=c)return t.copy(s);const p=l*u-c*d;if(p<=0&&l>=0&&c<=0)return a=l/(l-c),t.copy(n).addScaledVector(Z1,a);Bs.subVectors(e,r);const h=Z1.dot(Bs),y=k1.dot(Bs);if(y>=0&&h<=y)return t.copy(r);const T=h*d-l*y;if(T<=0&&d>=0&&y<=0)return o=d/(d-y),t.copy(n).addScaledVector(k1,o);const m=c*y-h*u;if(m<=0&&u-c>=0&&h-y>=0)return X5.subVectors(r,s),o=(u-c)/(u-c+(h-y)),t.copy(s).addScaledVector(X5,o);const f=1/(m+T+p);return a=T*f,o=p*f,t.copy(n).addScaledVector(Z1,a).addScaledVector(k1,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}};const L4={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},e1={h:0,s:0,l:0},D2={h:0,s:0,l:0};function $s(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}class te{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const s=e;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=bt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ge.colorSpaceToWorking(this,t),this}setRGB(e,t,n,s=ge.workingColorSpace){return this.r=e,this.g=t,this.b=n,ge.colorSpaceToWorking(this,s),this}setHSL(e,t,n,s=ge.workingColorSpace){if(e=j7(e,1),t=le(t,0,1),n=le(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,a=2*n-r;this.r=$s(a,r,e+1/3),this.g=$s(a,r,e),this.b=$s(a,r,e-1/3)}return ge.colorSpaceToWorking(this,s),this}setStyle(e,t=bt){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const a=s[1],o=s[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=s[1],a=r.length;if(a===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=bt){const n=L4[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Gn(e.r),this.g=Gn(e.g),this.b=Gn(e.b),this}copyLinearToSRGB(e){return this.r=vi(e.r),this.g=vi(e.g),this.b=vi(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=bt){return ge.workingToColorSpace(St.copy(this),e),Math.round(le(St.r*255,0,255))*65536+Math.round(le(St.g*255,0,255))*256+Math.round(le(St.b*255,0,255))}getHexString(e=bt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=ge.workingColorSpace){ge.workingToColorSpace(St.copy(this),t);const n=St.r,s=St.g,r=St.b,a=Math.max(n,s,r),o=Math.min(n,s,r);let l,d;const c=(o+a)/2;if(o===a)l=0,d=0;else{const u=a-o;switch(d=c<=.5?u/(a+o):u/(2-a-o),a){case n:l=(s-r)/u+(s<r?6:0);break;case s:l=(r-n)/u+2;break;case r:l=(n-s)/u+4;break}l/=6}return e.h=l,e.s=d,e.l=c,e}getRGB(e,t=ge.workingColorSpace){return ge.workingToColorSpace(St.copy(this),t),e.r=St.r,e.g=St.g,e.b=St.b,e}getStyle(e=bt){ge.workingToColorSpace(St.copy(this),e);const t=St.r,n=St.g,s=St.b;return e!==bt?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(s*255)})`}offsetHSL(e,t,n){return this.getHSL(e1),this.setHSL(e1.h+e,e1.s+t,e1.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(e1),e.getHSL(D2);const n=s2(e1.h,D2.h,t),s=s2(e1.s,D2.s,t),r=s2(e1.l,D2.l,t);return this.setHSL(n,s,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,s=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*s,this.g=r[1]*t+r[4]*n+r[7]*s,this.b=r[2]*t+r[5]*n+r[8]*s,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const St=new te;te.NAMES=L4;let pd=0;class fn extends z1{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:pd++}),this.uuid=pn(),this.name="",this.type="Material",this.blending=mi,this.side=Un,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=la,this.blendDst=da,this.blendEquation=H1,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new te(0,0,0),this.blendAlpha=0,this.depthFunc=wi,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=x5,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=F1,this.stencilZFail=F1,this.stencilZPass=F1,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const s=this[t];if(s===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(n):s&&s.isVector3&&n&&n.isVector3?s.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==mi&&(n.blending=this.blending),this.side!==Un&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==la&&(n.blendSrc=this.blendSrc),this.blendDst!==da&&(n.blendDst=this.blendDst),this.blendEquation!==H1&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==wi&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==x5&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==F1&&(n.stencilFail=this.stencilFail),this.stencilZFail!==F1&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==F1&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function s(r){const a=[];for(const o in r){const l=r[o];delete l.metadata,a.push(l)}return a}if(t){const r=s(e.textures),a=s(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const s=t.length;n=new Array(s);for(let r=0;r!==s;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class jn extends fn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new te(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ne,this.combine=z7,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Fn=fd();function fd(){const i=new ArrayBuffer(4),e=new Float32Array(i),t=new Uint32Array(i),n=new Uint32Array(512),s=new Uint32Array(512);for(let l=0;l<256;++l){const d=l-127;d<-27?(n[l]=0,n[l|256]=32768,s[l]=24,s[l|256]=24):d<-14?(n[l]=1024>>-d-14,n[l|256]=1024>>-d-14|32768,s[l]=-d-1,s[l|256]=-d-1):d<=15?(n[l]=d+15<<10,n[l|256]=d+15<<10|32768,s[l]=13,s[l|256]=13):d<128?(n[l]=31744,n[l|256]=64512,s[l]=24,s[l|256]=24):(n[l]=31744,n[l|256]=64512,s[l]=13,s[l|256]=13)}const r=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let d=l<<13,c=0;for(;(d&8388608)===0;)d<<=1,c-=8388608;d&=-8388609,c+=947912704,r[l]=d|c}for(let l=1024;l<2048;++l)r[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)a[l]=l<<23;a[31]=1199570944,a[32]=2147483648;for(let l=33;l<63;++l)a[l]=2147483648+(l-32<<23);a[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(o[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:s,mantissaTable:r,exponentTable:a,offsetTable:o}}function hd(i){Math.abs(i)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),i=le(i,-65504,65504),Fn.floatView[0]=i;const e=Fn.uint32View[0],t=e>>23&511;return Fn.baseTable[t]+((e&8388607)>>Fn.shiftTable[t])}function md(i){const e=i>>10;return Fn.uint32View[0]=Fn.mantissaTable[Fn.offsetTable[e]+(i&1023)]+Fn.exponentTable[e],Fn.floatView[0]}class V5{static toHalfFloat(e){return hd(e)}static fromHalfFloat(e){return md(e)}}const Qe=new S,W2=new $0;let bd=0;class At{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:bd++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Za,this.updateRanges=[],this.gpuType=Dt,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[e+s]=t.array[n+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)W2.fromBufferAttribute(this,t),W2.applyMatrix3(e),this.setXY(t,W2.x,W2.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Qe.fromBufferAttribute(this,t),Qe.applyMatrix3(e),this.setXYZ(t,Qe.x,Qe.y,Qe.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Qe.fromBufferAttribute(this,t),Qe.applyMatrix4(e),this.setXYZ(t,Qe.x,Qe.y,Qe.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Qe.fromBufferAttribute(this,t),Qe.applyNormalMatrix(e),this.setXYZ(t,Qe.x,Qe.y,Qe.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Qe.fromBufferAttribute(this,t),Qe.transformDirection(e),this.setXYZ(t,Qe.x,Qe.y,Qe.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=un(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Me(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=un(t,this.array)),t}setX(e,t){return this.normalized&&(t=Me(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=un(t,this.array)),t}setY(e,t){return this.normalized&&(t=Me(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=un(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Me(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=un(t,this.array)),t}setW(e,t){return this.normalized&&(t=Me(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Me(t,this.array),n=Me(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,s){return e*=this.itemSize,this.normalized&&(t=Me(t,this.array),n=Me(n,this.array),s=Me(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this}setXYZW(e,t,n,s,r){return e*=this.itemSize,this.normalized&&(t=Me(t,this.array),n=Me(n,this.array),s=Me(s,this.array),r=Me(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Za&&(e.usage=this.usage),e}}class N4 extends At{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class U7 extends At{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class gt extends At{constructor(e,t,n){super(new Float32Array(e),t,n)}}let yd=0;const qt=new B0,er=new qe,J1=new S,Gt=new Jn,ji=new Jn,ct=new S;class Rt extends z1{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:yd++}),this.uuid=pn(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(P4(e)?U7:N4)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new re().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return qt.makeRotationFromQuaternion(e),this.applyMatrix4(qt),this}rotateX(e){return qt.makeRotationX(e),this.applyMatrix4(qt),this}rotateY(e){return qt.makeRotationY(e),this.applyMatrix4(qt),this}rotateZ(e){return qt.makeRotationZ(e),this.applyMatrix4(qt),this}translate(e,t,n){return qt.makeTranslation(e,t,n),this.applyMatrix4(qt),this}scale(e,t,n){return qt.makeScale(e,t,n),this.applyMatrix4(qt),this}lookAt(e){return er.lookAt(e),er.updateMatrix(),this.applyMatrix4(er.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(J1).negate(),this.translate(J1.x,J1.y,J1.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let s=0,r=e.length;s<r;s++){const a=e[s];n.push(a.x,a.y,a.z||0)}this.setAttribute("position",new gt(n,3))}else{const n=Math.min(e.length,t.count);for(let s=0;s<n;s++){const r=e[s];t.setXYZ(s,r.x,r.y,r.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Jn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new S(-1/0,-1/0,-1/0),new S(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,s=t.length;n<s;n++){const r=t[n];Gt.setFromBufferAttribute(r),this.morphTargetsRelative?(ct.addVectors(this.boundingBox.min,Gt.min),this.boundingBox.expandByPoint(ct),ct.addVectors(this.boundingBox.max,Gt.max),this.boundingBox.expandByPoint(ct)):(this.boundingBox.expandByPoint(Gt.min),this.boundingBox.expandByPoint(Gt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Pn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new S,1/0);return}if(e){const n=this.boundingSphere.center;if(Gt.setFromBufferAttribute(e),t)for(let r=0,a=t.length;r<a;r++){const o=t[r];ji.setFromBufferAttribute(o),this.morphTargetsRelative?(ct.addVectors(Gt.min,ji.min),Gt.expandByPoint(ct),ct.addVectors(Gt.max,ji.max),Gt.expandByPoint(ct)):(Gt.expandByPoint(ji.min),Gt.expandByPoint(ji.max))}Gt.getCenter(n);let s=0;for(let r=0,a=e.count;r<a;r++)ct.fromBufferAttribute(e,r),s=Math.max(s,n.distanceToSquared(ct));if(t)for(let r=0,a=t.length;r<a;r++){const o=t[r],l=this.morphTargetsRelative;for(let d=0,c=o.count;d<c;d++)ct.fromBufferAttribute(o,d),l&&(J1.fromBufferAttribute(e,d),ct.add(J1)),s=Math.max(s,n.distanceToSquared(ct))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,s=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new At(new Float32Array(4*n.count),4));const a=this.getAttribute("tangent"),o=[],l=[];for(let U=0;U<n.count;U++)o[U]=new S,l[U]=new S;const d=new S,c=new S,u=new S,p=new $0,h=new $0,y=new $0,T=new S,m=new S;function f(U,R,H){d.fromBufferAttribute(n,U),c.fromBufferAttribute(n,R),u.fromBufferAttribute(n,H),p.fromBufferAttribute(r,U),h.fromBufferAttribute(r,R),y.fromBufferAttribute(r,H),c.sub(d),u.sub(d),h.sub(p),y.sub(p);const j=1/(h.x*y.y-y.x*h.y);isFinite(j)&&(T.copy(c).multiplyScalar(y.y).addScaledVector(u,-h.y).multiplyScalar(j),m.copy(u).multiplyScalar(h.x).addScaledVector(c,-y.x).multiplyScalar(j),o[U].add(T),o[R].add(T),o[H].add(T),l[U].add(m),l[R].add(m),l[H].add(m))}let N=this.groups;N.length===0&&(N=[{start:0,count:e.count}]);for(let U=0,R=N.length;U<R;++U){const H=N[U],j=H.start,K=H.count;for(let Q=j,e0=j+K;Q<e0;Q+=3)f(e.getX(Q+0),e.getX(Q+1),e.getX(Q+2))}const M=new S,P=new S,F=new S,X=new S;function D(U){F.fromBufferAttribute(s,U),X.copy(F);const R=o[U];M.copy(R),M.sub(F.multiplyScalar(F.dot(R))).normalize(),P.crossVectors(X,R);const j=P.dot(l[U])<0?-1:1;a.setXYZW(U,M.x,M.y,M.z,j)}for(let U=0,R=N.length;U<R;++U){const H=N[U],j=H.start,K=H.count;for(let Q=j,e0=j+K;Q<e0;Q+=3)D(e.getX(Q+0)),D(e.getX(Q+1)),D(e.getX(Q+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new At(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let p=0,h=n.count;p<h;p++)n.setXYZ(p,0,0,0);const s=new S,r=new S,a=new S,o=new S,l=new S,d=new S,c=new S,u=new S;if(e)for(let p=0,h=e.count;p<h;p+=3){const y=e.getX(p+0),T=e.getX(p+1),m=e.getX(p+2);s.fromBufferAttribute(t,y),r.fromBufferAttribute(t,T),a.fromBufferAttribute(t,m),c.subVectors(a,r),u.subVectors(s,r),c.cross(u),o.fromBufferAttribute(n,y),l.fromBufferAttribute(n,T),d.fromBufferAttribute(n,m),o.add(c),l.add(c),d.add(c),n.setXYZ(y,o.x,o.y,o.z),n.setXYZ(T,l.x,l.y,l.z),n.setXYZ(m,d.x,d.y,d.z)}else for(let p=0,h=t.count;p<h;p+=3)s.fromBufferAttribute(t,p+0),r.fromBufferAttribute(t,p+1),a.fromBufferAttribute(t,p+2),c.subVectors(a,r),u.subVectors(s,r),c.cross(u),n.setXYZ(p+0,c.x,c.y,c.z),n.setXYZ(p+1,c.x,c.y,c.z),n.setXYZ(p+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)ct.fromBufferAttribute(e,t),ct.normalize(),e.setXYZ(t,ct.x,ct.y,ct.z)}toNonIndexed(){function e(o,l){const d=o.array,c=o.itemSize,u=o.normalized,p=new d.constructor(l.length*c);let h=0,y=0;for(let T=0,m=l.length;T<m;T++){o.isInterleavedBufferAttribute?h=l[T]*o.data.stride+o.offset:h=l[T]*c;for(let f=0;f<c;f++)p[y++]=d[h++]}return new At(p,c,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Rt,n=this.index.array,s=this.attributes;for(const o in s){const l=s[o],d=e(l,n);t.setAttribute(o,d)}const r=this.morphAttributes;for(const o in r){const l=[],d=r[o];for(let c=0,u=d.length;c<u;c++){const p=d[c],h=e(p,n);l.push(h)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const d=a[o];t.addGroup(d.start,d.count,d.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const d in l)l[d]!==void 0&&(e[d]=l[d]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const d=n[l];e.data.attributes[l]=d.toJSON(e.data)}const s={};let r=!1;for(const l in this.morphAttributes){const d=this.morphAttributes[l],c=[];for(let u=0,p=d.length;u<p;u++){const h=d[u];c.push(h.toJSON(e.data))}c.length>0&&(s[l]=c,r=!0)}r&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere=o.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const s=e.attributes;for(const d in s){const c=s[d];this.setAttribute(d,c.clone(t))}const r=e.morphAttributes;for(const d in r){const c=[],u=r[d];for(let p=0,h=u.length;p<h;p++)c.push(u[p].clone(t));this.morphAttributes[d]=c}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let d=0,c=a.length;d<c;d++){const u=a[d];this.addGroup(u.start,u.count,u.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const F5=new B0,y1=new Mi,j2=new Pn,D5=new S,Y2=new S,G2=new S,U2=new S,tr=new S,q2=new S,W5=new S,Z2=new S;class Be extends qe{constructor(e=new Rt,t=new jn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const s=t[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=s.length;r<a;r++){const o=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}getVertexPosition(e,t){const n=this.geometry,s=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(s,e);const o=this.morphTargetInfluences;if(r&&o){q2.set(0,0,0);for(let l=0,d=r.length;l<d;l++){const c=o[l],u=r[l];c!==0&&(tr.fromBufferAttribute(u,e),a?q2.addScaledVector(tr,c):q2.addScaledVector(tr.sub(t),c))}t.add(q2)}return t}raycast(e,t){const n=this.geometry,s=this.material,r=this.matrixWorld;s!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),j2.copy(n.boundingSphere),j2.applyMatrix4(r),y1.copy(e.ray).recast(e.near),!(j2.containsPoint(y1.origin)===!1&&(y1.intersectSphere(j2,D5)===null||y1.origin.distanceToSquared(D5)>(e.far-e.near)**2))&&(F5.copy(r).invert(),y1.copy(e.ray).applyMatrix4(F5),!(n.boundingBox!==null&&y1.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,y1)))}_computeIntersections(e,t,n){let s;const r=this.geometry,a=this.material,o=r.index,l=r.attributes.position,d=r.attributes.uv,c=r.attributes.uv1,u=r.attributes.normal,p=r.groups,h=r.drawRange;if(o!==null)if(Array.isArray(a))for(let y=0,T=p.length;y<T;y++){const m=p[y],f=a[m.materialIndex],N=Math.max(m.start,h.start),M=Math.min(o.count,Math.min(m.start+m.count,h.start+h.count));for(let P=N,F=M;P<F;P+=3){const X=o.getX(P),D=o.getX(P+1),U=o.getX(P+2);s=k2(this,f,e,n,d,c,u,X,D,U),s&&(s.faceIndex=Math.floor(P/3),s.face.materialIndex=m.materialIndex,t.push(s))}}else{const y=Math.max(0,h.start),T=Math.min(o.count,h.start+h.count);for(let m=y,f=T;m<f;m+=3){const N=o.getX(m),M=o.getX(m+1),P=o.getX(m+2);s=k2(this,a,e,n,d,c,u,N,M,P),s&&(s.faceIndex=Math.floor(m/3),t.push(s))}}else if(l!==void 0)if(Array.isArray(a))for(let y=0,T=p.length;y<T;y++){const m=p[y],f=a[m.materialIndex],N=Math.max(m.start,h.start),M=Math.min(l.count,Math.min(m.start+m.count,h.start+h.count));for(let P=N,F=M;P<F;P+=3){const X=P,D=P+1,U=P+2;s=k2(this,f,e,n,d,c,u,X,D,U),s&&(s.faceIndex=Math.floor(P/3),s.face.materialIndex=m.materialIndex,t.push(s))}}else{const y=Math.max(0,h.start),T=Math.min(l.count,h.start+h.count);for(let m=y,f=T;m<f;m+=3){const N=m,M=m+1,P=m+2;s=k2(this,a,e,n,d,c,u,N,M,P),s&&(s.faceIndex=Math.floor(m/3),t.push(s))}}}}function vd(i,e,t,n,s,r,a,o){let l;if(e.side===Wt?l=n.intersectTriangle(a,r,s,!0,o):l=n.intersectTriangle(s,r,a,e.side===Un,o),l===null)return null;Z2.copy(o),Z2.applyMatrix4(i.matrixWorld);const d=t.ray.origin.distanceTo(Z2);return d<t.near||d>t.far?null:{distance:d,point:Z2.clone(),object:i}}function k2(i,e,t,n,s,r,a,o,l,d){i.getVertexPosition(o,Y2),i.getVertexPosition(l,G2),i.getVertexPosition(d,U2);const c=vd(i,e,t,n,Y2,G2,U2,W5);if(c){const u=new S;ri.getBarycoord(W5,Y2,G2,U2,u),s&&(c.uv=ri.getInterpolatedAttribute(s,o,l,d,u,new $0)),r&&(c.uv1=ri.getInterpolatedAttribute(r,o,l,d,u,new $0)),a&&(c.normal=ri.getInterpolatedAttribute(a,o,l,d,u,new S),c.normal.dot(n.direction)>0&&c.normal.multiplyScalar(-1));const p={a:o,b:l,c:d,normal:new S,materialIndex:0};ri.getNormal(Y2,G2,U2,p.normal),c.face=p,c.barycoord=u}return c}class _t extends Rt{constructor(e=1,t=1,n=1,s=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:s,heightSegments:r,depthSegments:a};const o=this;s=Math.floor(s),r=Math.floor(r),a=Math.floor(a);const l=[],d=[],c=[],u=[];let p=0,h=0;y("z","y","x",-1,-1,n,t,e,a,r,0),y("z","y","x",1,-1,n,t,-e,a,r,1),y("x","z","y",1,1,e,n,t,s,a,2),y("x","z","y",1,-1,e,n,-t,s,a,3),y("x","y","z",1,-1,e,t,n,s,r,4),y("x","y","z",-1,-1,e,t,-n,s,r,5),this.setIndex(l),this.setAttribute("position",new gt(d,3)),this.setAttribute("normal",new gt(c,3)),this.setAttribute("uv",new gt(u,2));function y(T,m,f,N,M,P,F,X,D,U,R){const H=P/D,j=F/U,K=P/2,Q=F/2,e0=X/2,u0=D+1,n0=U+1;let y0=0,t0=0;const x0=new S;for(let L0=0;L0<n0;L0++){const F0=L0*j-Q;for(let K0=0;K0<u0;K0++){const ue=K0*H-K;x0[T]=ue*N,x0[m]=F0*M,x0[f]=e0,d.push(x0.x,x0.y,x0.z),x0[T]=0,x0[m]=0,x0[f]=X>0?1:-1,c.push(x0.x,x0.y,x0.z),u.push(K0/D),u.push(1-L0/U),y0+=1}}for(let L0=0;L0<U;L0++)for(let F0=0;F0<D;F0++){const K0=p+F0+u0*L0,ue=p+F0+u0*(L0+1),s0=p+(F0+1)+u0*(L0+1),w0=p+(F0+1)+u0*L0;l.push(K0,ue,w0),l.push(ue,s0,w0),t0+=6}o.addGroup(h,t0,R),h+=t0,p+=y0}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new _t(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Hi(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const s=i[t][n];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=s.clone():Array.isArray(s)?e[t][n]=s.slice():e[t][n]=s}}return e}function Ot(i){const e={};for(let t=0;t<i.length;t++){const n=Hi(i[t]);for(const s in n)e[s]=n[s]}return e}function gd(i){const e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}function R4(i){const e=i.getRenderTarget();return e===null?i.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:ge.workingColorSpace}const wd={clone:Hi,merge:Ot};var Td=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,xd=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class p1 extends fn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Td,this.fragmentShader=xd,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Hi(e.uniforms),this.uniformsGroups=gd(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const s in this.uniforms){const a=this.uniforms[s].value;a&&a.isTexture?t.uniforms[s]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[s]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[s]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[s]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[s]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[s]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[s]={type:"m4",value:a.toArray()}:t.uniforms[s]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const s in this.extensions)this.extensions[s]===!0&&(n[s]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}let M4=class extends qe{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new B0,this.projectionMatrix=new B0,this.projectionMatrixInverse=new B0,this.coordinateSystem=Wn}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};const t1=new S,j5=new $0,Y5=new $0;class Ct extends M4{constructor(e=50,t=1,n=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=s,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Pi*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(bi*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Pi*2*Math.atan(Math.tan(bi*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){t1.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(t1.x,t1.y).multiplyScalar(-e/t1.z),t1.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(t1.x,t1.y).multiplyScalar(-e/t1.z)}getViewSize(e,t){return this.getViewBounds(e,j5,Y5),t.subVectors(Y5,j5)}setViewOffset(e,t,n,s,r,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(bi*.5*this.fov)/this.zoom,n=2*t,s=this.aspect*n,r=-.5*s;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,d=a.fullHeight;r+=a.offsetX*s/l,t-=a.offsetY*n/d,s*=a.width/l,n*=a.height/d}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+s,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const B1=-90,K1=1;class Sd extends qe{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const s=new Ct(B1,K1,e,t);s.layers=this.layers,this.add(s);const r=new Ct(B1,K1,e,t);r.layers=this.layers,this.add(r);const a=new Ct(B1,K1,e,t);a.layers=this.layers,this.add(a);const o=new Ct(B1,K1,e,t);o.layers=this.layers,this.add(o);const l=new Ct(B1,K1,e,t);l.layers=this.layers,this.add(l);const d=new Ct(B1,K1,e,t);d.layers=this.layers,this.add(d)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,s,r,a,o,l]=t;for(const d of t)this.remove(d);if(e===Wn)n.up.set(0,1,0),n.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===j3)n.up.set(0,-1,0),n.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const d of t)this.add(d),d.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:s}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,a,o,l,d,c]=this.children,u=e.getRenderTarget(),p=e.getActiveCubeFace(),h=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const T=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,s),e.render(t,r),e.setRenderTarget(n,1,s),e.render(t,a),e.setRenderTarget(n,2,s),e.render(t,o),e.setRenderTarget(n,3,s),e.render(t,l),e.setRenderTarget(n,4,s),e.render(t,d),n.texture.generateMipmaps=T,e.setRenderTarget(n,5,s),e.render(t,c),e.setRenderTarget(u,p,h),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class O4 extends vt{constructor(e=[],t=Ti,n,s,r,a,o,l,d,c){super(e,t,n,s,r,a,o,l,d,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Pd extends M1{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},s=[n,n,n,n,n,n];this.texture=new O4(s),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new _t(5,5,5),r=new p1({name:"CubemapFromEquirect",uniforms:Hi(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Wt,blending:c1});r.uniforms.tEquirect.value=t;const a=new Be(s,r),o=t.minFilter;return t.minFilter===Tn&&(t.minFilter=yt),new Sd(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t=!0,n=!0,s=!0){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,s);e.setRenderTarget(r)}}class d1 extends qe{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Hd={type:"move"};class nr{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new d1,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new d1,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new S,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new S),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new d1,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new S,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new S),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let s=null,r=null,a=null;const o=this._targetRay,l=this._grip,d=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(d&&e.hand){a=!0;for(const T of e.hand.values()){const m=t.getJointPose(T,n),f=this._getHandJoint(d,T);m!==null&&(f.matrix.fromArray(m.transform.matrix),f.matrix.decompose(f.position,f.rotation,f.scale),f.matrixWorldNeedsUpdate=!0,f.jointRadius=m.radius),f.visible=m!==null}const c=d.joints["index-finger-tip"],u=d.joints["thumb-tip"],p=c.position.distanceTo(u.position),h=.02,y=.005;d.inputState.pinching&&p>h+y?(d.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!d.inputState.pinching&&p<=h-y&&(d.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(s=t.getPose(e.targetRaySpace,n),s===null&&r!==null&&(s=r),s!==null&&(o.matrix.fromArray(s.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,s.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(s.linearVelocity)):o.hasLinearVelocity=!1,s.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(s.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Hd)))}return o!==null&&(o.visible=s!==null),l!==null&&(l.visible=r!==null),d!==null&&(d.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new d1;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}let G5=class extends qe{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ne,this.environmentIntensity=1,this.environmentRotation=new Ne,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}};class Ld{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Za,this.updateRanges=[],this.version=0,this.uuid=pn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let s=0,r=this.stride;s<r;s++)this.array[e+s]=t.array[n+s];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=pn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=pn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Mt=new S;class q7{constructor(e,t,n,s=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=s}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Mt.fromBufferAttribute(this,t),Mt.applyMatrix4(e),this.setXYZ(t,Mt.x,Mt.y,Mt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Mt.fromBufferAttribute(this,t),Mt.applyNormalMatrix(e),this.setXYZ(t,Mt.x,Mt.y,Mt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Mt.fromBufferAttribute(this,t),Mt.transformDirection(e),this.setXYZ(t,Mt.x,Mt.y,Mt.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=un(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Me(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=Me(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Me(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Me(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Me(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=un(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=un(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=un(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=un(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Me(t,this.array),n=Me(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=Me(t,this.array),n=Me(n,this.array),s=Me(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=s,this}setXYZW(e,t,n,s,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=Me(t,this.array),n=Me(n,this.array),s=Me(s,this.array),r=Me(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=s,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const s=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[s+r])}return new At(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new q7(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const s=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[s+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}const U5=new S,q5=new He,Z5=new He,Nd=new S,k5=new B0,J2=new S,ir=new Pn,J5=new B0,sr=new Mi;class Rd extends Be{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=v5,this.bindMatrix=new B0,this.bindMatrixInverse=new B0,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Jn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,J2),this.boundingBox.expandByPoint(J2)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Pn),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,J2),this.boundingSphere.expandByPoint(J2)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,s=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),ir.copy(this.boundingSphere),ir.applyMatrix4(s),e.ray.intersectsSphere(ir)!==!1&&(J5.copy(s).invert(),sr.copy(e.ray).applyMatrix4(J5),!(this.boundingBox!==null&&sr.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,sr)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new He,t=this.geometry.attributes.skinWeight;for(let n=0,s=t.count;n<s;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===v5?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===wl?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,s=this.geometry;q5.fromBufferAttribute(s.attributes.skinIndex,e),Z5.fromBufferAttribute(s.attributes.skinWeight,e),U5.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const a=Z5.getComponent(r);if(a!==0){const o=q5.getComponent(r);k5.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),t.addScaledVector(Nd.copy(U5).applyMatrix4(k5),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}class E4 extends qe{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Z7 extends vt{constructor(e=null,t=1,n=1,s,r,a,o,l,d=zt,c=zt,u,p){super(null,a,o,l,d,c,s,r,u,p),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const B5=new B0,Md=new B0;class k7{constructor(e=[],t=[]){this.uuid=pn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,s=this.bones.length;n<s;n++)this.boneInverses.push(new B0)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new B0;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,s=this.boneTexture;for(let r=0,a=e.length;r<a;r++){const o=e[r]?e[r].matrixWorld:Md;B5.multiplyMatrices(o,t[r]),B5.toArray(n,r*16)}s!==null&&(s.needsUpdate=!0)}clone(){return new k7(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Z7(t,e,e,Ut,Dt);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const s=this.bones[t];if(s.name===e)return s}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,s=e.bones.length;n<s;n++){const r=e.bones[n];let a=t[r];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new E4),this.bones.push(a),this.boneInverses.push(new B0().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let s=0,r=t.length;s<r;s++){const a=t[s];e.bones.push(a.uuid);const o=n[s];e.boneInverses.push(o.toArray())}return e}}class ka extends At{constructor(e,t,n,s=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=s}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Q1=new B0,K5=new B0,B2=[],Q5=new Jn,Od=new B0,Yi=new Be,Gi=new Pn;class A1 extends Be{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new ka(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let s=0;s<n;s++)this.setMatrixAt(s,Od)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Jn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Q1),Q5.copy(e.boundingBox).applyMatrix4(Q1),this.boundingBox.union(Q5)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Pn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Q1),Gi.copy(e.boundingSphere).applyMatrix4(Q1),this.boundingSphere.union(Gi)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,s=this.morphTexture.source.data.data,r=n.length+1,a=e*r+1;for(let o=0;o<n.length;o++)n[o]=s[a+o]}raycast(e,t){const n=this.matrixWorld,s=this.count;if(Yi.geometry=this.geometry,Yi.material=this.material,Yi.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Gi.copy(this.boundingSphere),Gi.applyMatrix4(n),e.ray.intersectsSphere(Gi)!==!1))for(let r=0;r<s;r++){this.getMatrixAt(r,Q1),K5.multiplyMatrices(n,Q1),Yi.matrixWorld=K5,Yi.raycast(e,B2);for(let a=0,o=B2.length;a<o;a++){const l=B2[a];l.instanceId=r,l.object=this,t.push(l)}B2.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new ka(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,s=n.length+1;this.morphTexture===null&&(this.morphTexture=new Z7(new Float32Array(s*this.count),s,this.count,bs,Dt));const r=this.morphTexture.source.data.data;let a=0;for(let d=0;d<n.length;d++)a+=n[d];const o=this.geometry.morphTargetsRelative?1:1-a,l=s*e;r[l]=o,r.set(n,l+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const rr=new S,Ed=new S,Cd=new re;class a1{constructor(e=new S(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,s){return this.normal.set(e,t,n),this.constant=s,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const s=rr.subVectors(n,t).cross(Ed.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(rr),s=this.normal.dot(n);if(s===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Cd.getNormalMatrix(e),s=this.coplanarPoint(rr).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-s.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const v1=new Pn,zd=new $0(.5,.5),K2=new S;class J7{constructor(e=new a1,t=new a1,n=new a1,s=new a1,r=new a1,a=new a1){this.planes=[e,t,n,s,r,a]}set(e,t,n,s,r,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(s),o[4].copy(r),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Wn){const n=this.planes,s=e.elements,r=s[0],a=s[1],o=s[2],l=s[3],d=s[4],c=s[5],u=s[6],p=s[7],h=s[8],y=s[9],T=s[10],m=s[11],f=s[12],N=s[13],M=s[14],P=s[15];if(n[0].setComponents(l-r,p-d,m-h,P-f).normalize(),n[1].setComponents(l+r,p+d,m+h,P+f).normalize(),n[2].setComponents(l+a,p+c,m+y,P+N).normalize(),n[3].setComponents(l-a,p-c,m-y,P-N).normalize(),n[4].setComponents(l-o,p-u,m-T,P-M).normalize(),t===Wn)n[5].setComponents(l+o,p+u,m+T,P+M).normalize();else if(t===j3)n[5].setComponents(o,u,T,M).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),v1.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),v1.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(v1)}intersectsSprite(e){v1.center.set(0,0,0);const t=zd.distanceTo(e.center);return v1.radius=.7071067811865476+t,v1.applyMatrix4(e.matrixWorld),this.intersectsSphere(v1)}intersectsSphere(e){const t=this.planes,n=e.center,s=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<s)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const s=t[n];if(K2.x=s.normal.x>0?e.max.x:e.min.x,K2.y=s.normal.y>0?e.max.y:e.min.y,K2.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(K2)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class b2 extends fn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new te(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Y3=new S,G3=new S,_5=new B0,Ui=new Mi,Q2=new Pn,ar=new S,$5=new S;class ys extends qe{constructor(e=new Rt,t=new b2){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let s=1,r=t.count;s<r;s++)Y3.fromBufferAttribute(t,s-1),G3.fromBufferAttribute(t,s),n[s]=n[s-1],n[s]+=Y3.distanceTo(G3);e.setAttribute("lineDistance",new gt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,s=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Q2.copy(n.boundingSphere),Q2.applyMatrix4(s),Q2.radius+=r,e.ray.intersectsSphere(Q2)===!1)return;_5.copy(s).invert(),Ui.copy(e.ray).applyMatrix4(_5);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,d=this.isLineSegments?2:1,c=n.index,p=n.attributes.position;if(c!==null){const h=Math.max(0,a.start),y=Math.min(c.count,a.start+a.count);for(let T=h,m=y-1;T<m;T+=d){const f=c.getX(T),N=c.getX(T+1),M=_2(this,e,Ui,l,f,N,T);M&&t.push(M)}if(this.isLineLoop){const T=c.getX(y-1),m=c.getX(h),f=_2(this,e,Ui,l,T,m,y-1);f&&t.push(f)}}else{const h=Math.max(0,a.start),y=Math.min(p.count,a.start+a.count);for(let T=h,m=y-1;T<m;T+=d){const f=_2(this,e,Ui,l,T,T+1,T);f&&t.push(f)}if(this.isLineLoop){const T=_2(this,e,Ui,l,y-1,h,y-1);T&&t.push(T)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const s=t[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=s.length;r<a;r++){const o=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}function _2(i,e,t,n,s,r,a){const o=i.geometry.attributes.position;if(Y3.fromBufferAttribute(o,s),G3.fromBufferAttribute(o,r),t.distanceSqToSegment(Y3,G3,ar,$5)>n)return;ar.applyMatrix4(i.matrixWorld);const d=e.ray.origin.distanceTo(ar);if(!(d<e.near||d>e.far))return{distance:d,point:$5.clone().applyMatrix4(i.matrixWorld),index:a,face:null,faceIndex:null,barycoord:null,object:i}}const e6=new S,t6=new S;class B7 extends ys{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let s=0,r=t.count;s<r;s+=2)e6.fromBufferAttribute(t,s),t6.fromBufferAttribute(t,s+1),n[s]=s===0?0:n[s-1],n[s+1]=n[s]+e6.distanceTo(t6);e.setAttribute("lineDistance",new gt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Ad extends ys{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class C4 extends fn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new te(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const n6=new B0,Ja=new Mi,$2=new Pn,e3=new S;class Id extends qe{constructor(e=new Rt,t=new C4){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,s=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),$2.copy(n.boundingSphere),$2.applyMatrix4(s),$2.radius+=r,e.ray.intersectsSphere($2)===!1)return;n6.copy(s).invert(),Ja.copy(e.ray).applyMatrix4(n6);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,d=n.index,u=n.attributes.position;if(d!==null){const p=Math.max(0,a.start),h=Math.min(d.count,a.start+a.count);for(let y=p,T=h;y<T;y++){const m=d.getX(y);e3.fromBufferAttribute(u,m),i6(e3,m,l,s,e,t,this)}}else{const p=Math.max(0,a.start),h=Math.min(u.count,a.start+a.count);for(let y=p,T=h;y<T;y++)e3.fromBufferAttribute(u,y),i6(e3,y,l,s,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const s=t[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=s.length;r<a;r++){const o=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}function i6(i,e,t,n,s,r,a){const o=Ja.distanceSqToPoint(i);if(o<t){const l=new S;Ja.closestPointToPoint(i,l),l.applyMatrix4(n);const d=s.ray.origin.distanceTo(l);if(d<s.near||d>s.far)return;r.push({distance:d,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:a})}}class z4 extends vt{constructor(e,t,n=R1,s,r,a,o=zt,l=zt,d,c=u2,u=1){if(c!==u2&&c!==p2)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const p={width:e,height:t,depth:u};super(p,s,r,a,o,l,c,n,d),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Y7(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class vs extends Rt{constructor(e=1,t=1,n=1,s=32,r=1,a=!1,o=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:s,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:l};const d=this;s=Math.floor(s),r=Math.floor(r);const c=[],u=[],p=[],h=[];let y=0;const T=[],m=n/2;let f=0;N(),a===!1&&(e>0&&M(!0),t>0&&M(!1)),this.setIndex(c),this.setAttribute("position",new gt(u,3)),this.setAttribute("normal",new gt(p,3)),this.setAttribute("uv",new gt(h,2));function N(){const P=new S,F=new S;let X=0;const D=(t-e)/n;for(let U=0;U<=r;U++){const R=[],H=U/r,j=H*(t-e)+e;for(let K=0;K<=s;K++){const Q=K/s,e0=Q*l+o,u0=Math.sin(e0),n0=Math.cos(e0);F.x=j*u0,F.y=-H*n+m,F.z=j*n0,u.push(F.x,F.y,F.z),P.set(u0,D,n0).normalize(),p.push(P.x,P.y,P.z),h.push(Q,1-H),R.push(y++)}T.push(R)}for(let U=0;U<s;U++)for(let R=0;R<r;R++){const H=T[R][U],j=T[R+1][U],K=T[R+1][U+1],Q=T[R][U+1];(e>0||R!==0)&&(c.push(H,j,Q),X+=3),(t>0||R!==r-1)&&(c.push(j,K,Q),X+=3)}d.addGroup(f,X,0),f+=X}function M(P){const F=y,X=new $0,D=new S;let U=0;const R=P===!0?e:t,H=P===!0?1:-1;for(let K=1;K<=s;K++)u.push(0,m*H,0),p.push(0,H,0),h.push(.5,.5),y++;const j=y;for(let K=0;K<=s;K++){const e0=K/s*l+o,u0=Math.cos(e0),n0=Math.sin(e0);D.x=R*n0,D.y=m*H,D.z=R*u0,u.push(D.x,D.y,D.z),p.push(0,H,0),X.x=u0*.5+.5,X.y=n0*.5*H+.5,h.push(X.x,X.y),y++}for(let K=0;K<s;K++){const Q=F+K,e0=j+K;P===!0?c.push(e0,e0+1,Q):c.push(e0+1,e0,Q),U+=3}d.addGroup(f,U,P===!0?1:2),f+=U}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vs(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}const t3=new S,n3=new S,or=new S,i3=new ri;class Xd extends Rt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const s=Math.pow(10,4),r=Math.cos(bi*t),a=e.getIndex(),o=e.getAttribute("position"),l=a?a.count:o.count,d=[0,0,0],c=["a","b","c"],u=new Array(3),p={},h=[];for(let y=0;y<l;y+=3){a?(d[0]=a.getX(y),d[1]=a.getX(y+1),d[2]=a.getX(y+2)):(d[0]=y,d[1]=y+1,d[2]=y+2);const{a:T,b:m,c:f}=i3;if(T.fromBufferAttribute(o,d[0]),m.fromBufferAttribute(o,d[1]),f.fromBufferAttribute(o,d[2]),i3.getNormal(or),u[0]=`${Math.round(T.x*s)},${Math.round(T.y*s)},${Math.round(T.z*s)}`,u[1]=`${Math.round(m.x*s)},${Math.round(m.y*s)},${Math.round(m.z*s)}`,u[2]=`${Math.round(f.x*s)},${Math.round(f.y*s)},${Math.round(f.z*s)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let N=0;N<3;N++){const M=(N+1)%3,P=u[N],F=u[M],X=i3[c[N]],D=i3[c[M]],U=`${P}_${F}`,R=`${F}_${P}`;R in p&&p[R]?(or.dot(p[R].normal)<=r&&(h.push(X.x,X.y,X.z),h.push(D.x,D.y,D.z)),p[R]=null):U in p||(p[U]={index0:d[N],index1:d[M],normal:or.clone()})}}for(const y in p)if(p[y]){const{index0:T,index1:m}=p[y];t3.fromBufferAttribute(o,T),n3.fromBufferAttribute(o,m),h.push(t3.x,t3.y,t3.z),h.push(n3.x,n3.y,n3.z)}this.setAttribute("position",new gt(h,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class gs extends Rt{constructor(e=1,t=1,n=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:s};const r=e/2,a=t/2,o=Math.floor(n),l=Math.floor(s),d=o+1,c=l+1,u=e/o,p=t/l,h=[],y=[],T=[],m=[];for(let f=0;f<c;f++){const N=f*p-a;for(let M=0;M<d;M++){const P=M*u-r;y.push(P,-N,0),T.push(0,0,1),m.push(M/o),m.push(1-f/l)}}for(let f=0;f<l;f++)for(let N=0;N<o;N++){const M=N+d*f,P=N+d*(f+1),F=N+1+d*(f+1),X=N+1+d*f;h.push(M,P,X),h.push(P,F,X)}this.setIndex(h),this.setAttribute("position",new gt(y,3)),this.setAttribute("normal",new gt(T,3)),this.setAttribute("uv",new gt(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new gs(e.width,e.height,e.widthSegments,e.heightSegments)}}class U3 extends Rt{constructor(e=1,t=32,n=16,s=0,r=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:s,phiLength:r,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(a+o,Math.PI);let d=0;const c=[],u=new S,p=new S,h=[],y=[],T=[],m=[];for(let f=0;f<=n;f++){const N=[],M=f/n;let P=0;f===0&&a===0?P=.5/t:f===n&&l===Math.PI&&(P=-.5/t);for(let F=0;F<=t;F++){const X=F/t;u.x=-e*Math.cos(s+X*r)*Math.sin(a+M*o),u.y=e*Math.cos(a+M*o),u.z=e*Math.sin(s+X*r)*Math.sin(a+M*o),y.push(u.x,u.y,u.z),p.copy(u).normalize(),T.push(p.x,p.y,p.z),m.push(X+P,1-M),N.push(d++)}c.push(N)}for(let f=0;f<n;f++)for(let N=0;N<t;N++){const M=c[f][N+1],P=c[f][N],F=c[f+1][N],X=c[f+1][N+1];(f!==0||a>0)&&h.push(M,P,X),(f!==n-1||l<Math.PI)&&h.push(P,F,X)}this.setIndex(h),this.setAttribute("position",new gt(y,3)),this.setAttribute("normal",new gt(T,3)),this.setAttribute("uv",new gt(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new U3(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Oi extends fn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new te(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new te(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=W7,this.normalScale=new $0(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ne,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Hn extends Oi{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new $0(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return le(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new te(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new te(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new te(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class A4 extends fn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new te(16777215),this.specular=new te(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new te(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=W7,this.normalScale=new $0(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ne,this.combine=z7,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Vd extends fn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Sl,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Fd extends fn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function s3(i,e){return!i||i.constructor===e?i:typeof e.BYTES_PER_ELEMENT=="number"?new e(i):Array.prototype.slice.call(i)}function Dd(i){return ArrayBuffer.isView(i)&&!(i instanceof DataView)}function Wd(i){function e(s,r){return i[s]-i[r]}const t=i.length,n=new Array(t);for(let s=0;s!==t;++s)n[s]=s;return n.sort(e),n}function s6(i,e,t){const n=i.length,s=new i.constructor(n);for(let r=0,a=0;a!==n;++r){const o=t[r]*e;for(let l=0;l!==e;++l)s[a++]=i[o+l]}return s}function I4(i,e,t,n){let s=1,r=i[0];for(;r!==void 0&&r[n]===void 0;)r=i[s++];if(r===void 0)return;let a=r[n];if(a!==void 0)if(Array.isArray(a))do a=r[n],a!==void 0&&(e.push(r.time),t.push(...a)),r=i[s++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[n],a!==void 0&&(e.push(r.time),a.toArray(t,t.length)),r=i[s++];while(r!==void 0);else do a=r[n],a!==void 0&&(e.push(r.time),t.push(a)),r=i[s++];while(r!==void 0)}class H2{constructor(e,t,n,s){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=s!==void 0?s:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,s=t[n],r=t[n-1];n:{e:{let a;t:{i:if(!(e<s)){for(let o=n+2;;){if(s===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===o)break;if(r=s,s=t[++n],e<s)break e}a=t.length;break t}if(!(e>=r)){const o=t[1];e<o&&(n=2,r=o);for(let l=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(s=r,r=t[--n-1],e>=r)break e}a=n,n=0;break t}break n}for(;n<a;){const o=n+a>>>1;e<t[o]?a=o:n=o+1}if(s=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(s===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,s)}return this.interpolate_(n,r,e,s)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,s=this.valueSize,r=e*s;for(let a=0;a!==s;++a)t[a]=n[r+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class jd extends H2{constructor(e,t,n,s){super(e,t,n,s),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:g5,endingEnd:g5}}intervalChanged_(e,t,n){const s=this.parameterPositions;let r=e-2,a=e+1,o=s[r],l=s[a];if(o===void 0)switch(this.getSettings_().endingStart){case w5:r=e,o=2*t-n;break;case T5:r=s.length-2,o=t+s[r]-s[r+1];break;default:r=e,o=n}if(l===void 0)switch(this.getSettings_().endingEnd){case w5:a=e,l=2*n-t;break;case T5:a=1,l=n+s[1]-s[0];break;default:a=e-1,l=t}const d=(n-t)*.5,c=this.valueSize;this._weightPrev=d/(t-o),this._weightNext=d/(l-n),this._offsetPrev=r*c,this._offsetNext=a*c}interpolate_(e,t,n,s){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,d=l-o,c=this._offsetPrev,u=this._offsetNext,p=this._weightPrev,h=this._weightNext,y=(n-t)/(s-t),T=y*y,m=T*y,f=-p*m+2*p*T-p*y,N=(1+p)*m+(-1.5-2*p)*T+(-.5+p)*y+1,M=(-1-h)*m+(1.5+h)*T+.5*y,P=h*m-h*T;for(let F=0;F!==o;++F)r[F]=f*a[c+F]+N*a[d+F]+M*a[l+F]+P*a[u+F];return r}}class Yd extends H2{constructor(e,t,n,s){super(e,t,n,s)}interpolate_(e,t,n,s){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,d=l-o,c=(n-t)/(s-t),u=1-c;for(let p=0;p!==o;++p)r[p]=a[d+p]*u+a[l+p]*c;return r}}class Gd extends H2{constructor(e,t,n,s){super(e,t,n,s)}interpolate_(e){return this.copySampleValue_(e-1)}}class hn{constructor(e,t,n,s){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=s3(t,this.TimeBufferType),this.values=s3(n,this.ValueBufferType),this.setInterpolation(s||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:s3(e.times,Array),values:s3(e.values,Array)};const s=e.getInterpolation();s!==e.DefaultInterpolation&&(n.interpolation=s)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Gd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Yd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new jd(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case f2:t=this.InterpolantFactoryMethodDiscrete;break;case h2:t=this.InterpolantFactoryMethodLinear;break;case Is:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return f2;case this.InterpolantFactoryMethodLinear:return h2;case this.InterpolantFactoryMethodSmooth:return Is}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,s=t.length;n!==s;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,s=t.length;n!==s;++n)t[n]*=e}return this}trim(e,t){const n=this.times,s=n.length;let r=0,a=s-1;for(;r!==s&&n[r]<e;)++r;for(;a!==-1&&n[a]>t;)--a;if(++a,r!==0||a!==s){r>=a&&(a=Math.max(a,1),r=a-1);const o=this.getValueSize();this.times=n.slice(r,a),this.values=this.values.slice(r*o,a*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,s=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==r;o++){const l=n[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(a!==null&&a>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,a),e=!1;break}a=l}if(s!==void 0&&Dd(s))for(let o=0,l=s.length;o!==l;++o){const d=s[o];if(isNaN(d)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,d),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),s=this.getInterpolation()===Is,r=e.length-1;let a=1;for(let o=1;o<r;++o){let l=!1;const d=e[o],c=e[o+1];if(d!==c&&(o!==1||d!==e[0]))if(s)l=!0;else{const u=o*n,p=u-n,h=u+n;for(let y=0;y!==n;++y){const T=t[u+y];if(T!==t[p+y]||T!==t[h+y]){l=!0;break}}}if(l){if(o!==a){e[a]=e[o];const u=o*n,p=a*n;for(let h=0;h!==n;++h)t[p+h]=t[u+h]}++a}}if(r>0){e[a]=e[r];for(let o=r*n,l=a*n,d=0;d!==n;++d)t[l+d]=t[o+d];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,s=new n(this.name,e,t);return s.createInterpolant=this.createInterpolant,s}}hn.prototype.ValueTypeName="";hn.prototype.TimeBufferType=Float32Array;hn.prototype.ValueBufferType=Float32Array;hn.prototype.DefaultInterpolation=h2;class Ei extends hn{constructor(e,t,n){super(e,t,n)}}Ei.prototype.ValueTypeName="bool";Ei.prototype.ValueBufferType=Array;Ei.prototype.DefaultInterpolation=f2;Ei.prototype.InterpolantFactoryMethodLinear=void 0;Ei.prototype.InterpolantFactoryMethodSmooth=void 0;class X4 extends hn{constructor(e,t,n,s){super(e,t,n,s)}}X4.prototype.ValueTypeName="color";class Li extends hn{constructor(e,t,n,s){super(e,t,n,s)}}Li.prototype.ValueTypeName="number";class Ud extends H2{constructor(e,t,n,s){super(e,t,n,s)}interpolate_(e,t,n,s){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(n-t)/(s-t);let d=e*o;for(let c=d+o;d!==c;d+=4)ee.slerpFlat(r,0,a,d-o,a,d,l);return r}}class Ni extends hn{constructor(e,t,n,s){super(e,t,n,s)}InterpolantFactoryMethodLinear(e){return new Ud(this.times,this.values,this.getValueSize(),e)}}Ni.prototype.ValueTypeName="quaternion";Ni.prototype.InterpolantFactoryMethodSmooth=void 0;class Ci extends hn{constructor(e,t,n){super(e,t,n)}}Ci.prototype.ValueTypeName="string";Ci.prototype.ValueBufferType=Array;Ci.prototype.DefaultInterpolation=f2;Ci.prototype.InterpolantFactoryMethodLinear=void 0;Ci.prototype.InterpolantFactoryMethodSmooth=void 0;class Ri extends hn{constructor(e,t,n,s){super(e,t,n,s)}}Ri.prototype.ValueTypeName="vector";class qd{constructor(e="",t=-1,n=[],s=Tl){this.name=e,this.tracks=n,this.duration=t,this.blendMode=s,this.uuid=pn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,s=1/(e.fps||1);for(let a=0,o=n.length;a!==o;++a)t.push(kd(n[a]).scale(s));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,s={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,a=n.length;r!==a;++r)t.push(hn.toJSON(n[r]));return s}static CreateFromMorphTargetSequence(e,t,n,s){const r=t.length,a=[];for(let o=0;o<r;o++){let l=[],d=[];l.push((o+r-1)%r,o,(o+1)%r),d.push(0,1,0);const c=Wd(l);l=s6(l,1,c),d=s6(d,1,c),!s&&l[0]===0&&(l.push(r),d.push(d[0])),a.push(new Li(".morphTargetInfluences["+t[o].name+"]",l,d).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const s=e;n=s.geometry&&s.geometry.animations||s.animations}for(let s=0;s<n.length;s++)if(n[s].name===t)return n[s];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const s={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){const d=e[o],c=d.name.match(r);if(c&&c.length>1){const u=c[1];let p=s[u];p||(s[u]=p=[]),p.push(d)}}const a=[];for(const o in s)a.push(this.CreateFromMorphTargetSequence(o,s[o],t,n));return a}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(u,p,h,y,T){if(h.length!==0){const m=[],f=[];I4(h,m,f,y),m.length!==0&&T.push(new u(p,m,f))}},s=[],r=e.name||"default",a=e.fps||30,o=e.blendMode;let l=e.length||-1;const d=e.hierarchy||[];for(let u=0;u<d.length;u++){const p=d[u].keys;if(!(!p||p.length===0))if(p[0].morphTargets){const h={};let y;for(y=0;y<p.length;y++)if(p[y].morphTargets)for(let T=0;T<p[y].morphTargets.length;T++)h[p[y].morphTargets[T]]=-1;for(const T in h){const m=[],f=[];for(let N=0;N!==p[y].morphTargets.length;++N){const M=p[y];m.push(M.time),f.push(M.morphTarget===T?1:0)}s.push(new Li(".morphTargetInfluence["+T+"]",m,f))}l=h.length*a}else{const h=".bones["+t[u].name+"]";n(Ri,h+".position",p,"pos",s),n(Ni,h+".quaternion",p,"rot",s),n(Ri,h+".scale",p,"scl",s)}}return s.length===0?null:new this(r,l,s,o)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,s=e.length;n!==s;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Zd(i){switch(i.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Li;case"vector":case"vector2":case"vector3":case"vector4":return Ri;case"color":return X4;case"quaternion":return Ni;case"bool":case"boolean":return Ei;case"string":return Ci}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+i)}function kd(i){if(i.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Zd(i.type);if(i.times===void 0){const t=[],n=[];I4(i.keys,t,n,"value"),i.times=t,i.values=n}return e.parse!==void 0?e.parse(i):new e(i.name,i.times,i.values,i.interpolation)}const Yn={enabled:!1,files:{},add:function(i,e){this.enabled!==!1&&(this.files[i]=e)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class Jd{constructor(e,t,n){const s=this;let r=!1,a=0,o=0,l;const d=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(c){o++,r===!1&&s.onStart!==void 0&&s.onStart(c,a,o),r=!0},this.itemEnd=function(c){a++,s.onProgress!==void 0&&s.onProgress(c,a,o),a===o&&(r=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(c){s.onError!==void 0&&s.onError(c)},this.resolveURL=function(c){return l?l(c):c},this.setURLModifier=function(c){return l=c,this},this.addHandler=function(c,u){return d.push(c,u),this},this.removeHandler=function(c){const u=d.indexOf(c);return u!==-1&&d.splice(u,2),this},this.getHandler=function(c){for(let u=0,p=d.length;u<p;u+=2){const h=d[u],y=d[u+1];if(h.global&&(h.lastIndex=0),h.test(c))return y}return null}}}const Bd=new Jd;class I1{constructor(e){this.manager=e!==void 0?e:Bd,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(s,r){n.load(e,s,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}I1.DEFAULT_MATERIAL_NAME="__DEFAULT";const An={};class Kd extends Error{constructor(e,t){super(e),this.response=t}}class K7 extends I1{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,n,s){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Yn.get(`file:${e}`);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(An[e]!==void 0){An[e].push({onLoad:t,onProgress:n,onError:s});return}An[e]=[],An[e].push({onLoad:t,onProgress:n,onError:s});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(a).then(d=>{if(d.status===200||d.status===0){if(d.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||d.body===void 0||d.body.getReader===void 0)return d;const c=An[e],u=d.body.getReader(),p=d.headers.get("X-File-Size")||d.headers.get("Content-Length"),h=p?parseInt(p):0,y=h!==0;let T=0;const m=new ReadableStream({start(f){N();function N(){u.read().then(({done:M,value:P})=>{if(M)f.close();else{T+=P.byteLength;const F=new ProgressEvent("progress",{lengthComputable:y,loaded:T,total:h});for(let X=0,D=c.length;X<D;X++){const U=c[X];U.onProgress&&U.onProgress(F)}f.enqueue(P),N()}},M=>{f.error(M)})}}});return new Response(m)}else throw new Kd(`fetch for "${d.url}" responded with ${d.status}: ${d.statusText}`,d)}).then(d=>{switch(l){case"arraybuffer":return d.arrayBuffer();case"blob":return d.blob();case"document":return d.text().then(c=>new DOMParser().parseFromString(c,o));case"json":return d.json();default:if(o==="")return d.text();{const u=/charset="?([^;"\s]*)"?/i.exec(o),p=u&&u[1]?u[1].toLowerCase():void 0,h=new TextDecoder(p);return d.arrayBuffer().then(y=>h.decode(y))}}}).then(d=>{Yn.add(`file:${e}`,d);const c=An[e];delete An[e];for(let u=0,p=c.length;u<p;u++){const h=c[u];h.onLoad&&h.onLoad(d)}}).catch(d=>{const c=An[e];if(c===void 0)throw this.manager.itemError(e),d;delete An[e];for(let u=0,p=c.length;u<p;u++){const h=c[u];h.onError&&h.onError(d)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}const _1=new WeakMap;class Qd extends I1{constructor(e){super(e)}load(e,t,n,s){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=Yn.get(`image:${e}`);if(a!==void 0){if(a.complete===!0)r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0);else{let u=_1.get(a);u===void 0&&(u=[],_1.set(a,u)),u.push({onLoad:t,onError:s})}return a}const o=m2("img");function l(){c(),t&&t(this);const u=_1.get(this)||[];for(let p=0;p<u.length;p++){const h=u[p];h.onLoad&&h.onLoad(this)}_1.delete(this),r.manager.itemEnd(e)}function d(u){c(),s&&s(u),Yn.remove(`image:${e}`);const p=_1.get(this)||[];for(let h=0;h<p.length;h++){const y=p[h];y.onError&&y.onError(u)}_1.delete(this),r.manager.itemError(e),r.manager.itemEnd(e)}function c(){o.removeEventListener("load",l,!1),o.removeEventListener("error",d,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",d,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),Yn.add(`image:${e}`,o),r.manager.itemStart(e),o.src=e,o}}class _d extends I1{constructor(e){super(e)}load(e,t,n,s){const r=this,a=new Z7,o=new K7(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(e,function(l){let d;try{d=r.parse(l)}catch(c){if(s!==void 0)s(c);else{console.error(c);return}}d.image!==void 0?a.image=d.image:d.data!==void 0&&(a.image.width=d.width,a.image.height=d.height,a.image.data=d.data),a.wrapS=d.wrapS!==void 0?d.wrapS:wn,a.wrapT=d.wrapT!==void 0?d.wrapT:wn,a.magFilter=d.magFilter!==void 0?d.magFilter:yt,a.minFilter=d.minFilter!==void 0?d.minFilter:yt,a.anisotropy=d.anisotropy!==void 0?d.anisotropy:1,d.colorSpace!==void 0&&(a.colorSpace=d.colorSpace),d.flipY!==void 0&&(a.flipY=d.flipY),d.format!==void 0&&(a.format=d.format),d.type!==void 0&&(a.type=d.type),d.mipmaps!==void 0&&(a.mipmaps=d.mipmaps,a.minFilter=Tn),d.mipmapCount===1&&(a.minFilter=yt),d.generateMipmaps!==void 0&&(a.generateMipmaps=d.generateMipmaps),a.needsUpdate=!0,t&&t(a,d)},n,s),a}}class $d extends I1{constructor(e){super(e)}load(e,t,n,s){const r=new vt,a=new Qd(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){r.image=o,r.needsUpdate=!0,t!==void 0&&t(r)},n,s),r}}class ws extends qe{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new te(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}const lr=new B0,r6=new S,a6=new S;class Q7{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new $0(512,512),this.mapType=xn,this.map=null,this.mapPass=null,this.matrix=new B0,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new J7,this._frameExtents=new $0(1,1),this._viewportCount=1,this._viewports=[new He(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;r6.setFromMatrixPosition(e.matrixWorld),t.position.copy(r6),a6.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(a6),t.updateMatrixWorld(),lr.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(lr),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(lr)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class ec extends Q7{constructor(){super(new Ct(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){const t=this.camera,n=Pi*2*e.angle*this.focus,s=this.mapSize.width/this.mapSize.height*this.aspect,r=e.distance||t.far;(n!==t.fov||s!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=s,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class V4 extends ws{constructor(e,t,n=0,s=Math.PI/3,r=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(qe.DEFAULT_UP),this.updateMatrix(),this.target=new qe,this.distance=n,this.angle=s,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new ec}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const o6=new B0,qi=new S,dr=new S;class tc extends Q7{constructor(){super(new Ct(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new $0(4,2),this._viewportCount=6,this._viewports=[new He(2,1,1,1),new He(0,1,1,1),new He(3,1,1,1),new He(1,1,1,1),new He(3,0,1,1),new He(1,0,1,1)],this._cubeDirections=[new S(1,0,0),new S(-1,0,0),new S(0,0,1),new S(0,0,-1),new S(0,1,0),new S(0,-1,0)],this._cubeUps=[new S(0,1,0),new S(0,1,0),new S(0,1,0),new S(0,1,0),new S(0,0,1),new S(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,s=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),qi.setFromMatrixPosition(e.matrixWorld),n.position.copy(qi),dr.copy(n.position),dr.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(dr),n.updateMatrixWorld(),s.makeTranslation(-qi.x,-qi.y,-qi.z),o6.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o6)}}class F4 extends ws{constructor(e,t,n=0,s=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=s,this.shadow=new tc}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class _7 extends M4{constructor(e=-1,t=1,n=1,s=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=s,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,s,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let r=n-e,a=n+e,o=s+t,l=s-t;if(this.view!==null&&this.view.enabled){const d=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=d*this.view.offsetX,a=r+d*this.view.width,o-=c*this.view.offsetY,l=o-c*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class nc extends Q7{constructor(){super(new _7(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class D4 extends ws{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(qe.DEFAULT_UP),this.updateMatrix(),this.target=new qe,this.shadow=new nc}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class ic extends ws{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class r2{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}const cr=new WeakMap;class sc extends I1{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,s){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=Yn.get(`image-bitmap:${e}`);if(a!==void 0){if(r.manager.itemStart(e),a.then){a.then(d=>{if(cr.has(a)===!0)s&&s(cr.get(a)),r.manager.itemError(e),r.manager.itemEnd(e);else return t&&t(d),r.manager.itemEnd(e),d});return}return setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a}const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader;const l=fetch(e,o).then(function(d){return d.blob()}).then(function(d){return createImageBitmap(d,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(d){return Yn.add(`image-bitmap:${e}`,d),t&&t(d),r.manager.itemEnd(e),d}).catch(function(d){s&&s(d),cr.set(l,d),Yn.remove(`image-bitmap:${e}`),r.manager.itemError(e),r.manager.itemEnd(e)});Yn.add(`image-bitmap:${e}`,l),r.manager.itemStart(e)}}class rc extends Ct{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}const $7="\\[\\]\\.:\\/",ac=new RegExp("["+$7+"]","g"),e5="[^"+$7+"]",oc="[^"+$7.replace("\\.","")+"]",lc=/((?:WC+[\/:])*)/.source.replace("WC",e5),dc=/(WCOD+)?/.source.replace("WCOD",oc),cc=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",e5),uc=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",e5),pc=new RegExp("^"+lc+dc+cc+uc+"$"),fc=["material","materials","bones","map"];class hc{constructor(e,t,n){const s=n||Oe.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,s)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,s=this._bindings[n];s!==void 0&&s.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let s=this._targetGroup.nCachedObjects_,r=n.length;s!==r;++s)n[s].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Oe{constructor(e,t,n){this.path=t,this.parsedPath=n||Oe.parseTrackName(t),this.node=Oe.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Oe.Composite(e,t,n):new Oe(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(ac,"")}static parseTrackName(e){const t=pc.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},s=n.nodeName&&n.nodeName.lastIndexOf(".");if(s!==void 0&&s!==-1){const r=n.nodeName.substring(s+1);fc.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,s),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let a=0;a<r.length;a++){const o=r[a];if(o.name===t||o.uuid===t)return o;const l=n(o.children);if(l)return l}return null},s=n(e.children);if(s)return s}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)e[t++]=n[s]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)n[s]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)n[s]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)n[s]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,s=t.propertyName;let r=t.propertyIndex;if(e||(e=Oe.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let d=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let c=0;c<e.length;c++)if(e[c].name===d){d=c;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(d!==void 0){if(e[d]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[d]}}const a=e[s];if(a===void 0){const d=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+d+"."+s+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?o=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(s==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else a.fromArray!==void 0&&a.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=s;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Oe.Composite=hc;Oe.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Oe.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Oe.prototype.GetterByBindingType=[Oe.prototype._getValue_direct,Oe.prototype._getValue_array,Oe.prototype._getValue_arrayElement,Oe.prototype._getValue_toArray];Oe.prototype.SetterByBindingTypeAndVersioning=[[Oe.prototype._setValue_direct,Oe.prototype._setValue_direct_setNeedsUpdate,Oe.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Oe.prototype._setValue_array,Oe.prototype._setValue_array_setNeedsUpdate,Oe.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Oe.prototype._setValue_arrayElement,Oe.prototype._setValue_arrayElement_setNeedsUpdate,Oe.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Oe.prototype._setValue_fromArray,Oe.prototype._setValue_fromArray_setNeedsUpdate,Oe.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];const l6=new B0;class mc{constructor(e,t,n=0,s=1/0){this.ray=new Mi(e,t),this.near=n,this.far=s,this.camera=null,this.layers=new G7,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return l6.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(l6),this}intersectObject(e,t=!0,n=[]){return Ba(e,this,n,t),n.sort(d6),n}intersectObjects(e,t=!0,n=[]){for(let s=0,r=e.length;s<r;s++)Ba(e[s],this,n,t);return n.sort(d6),n}}function d6(i,e){return i.distance-e.distance}function Ba(i,e,t,n){let s=!0;if(i.layers.test(e.layers)&&i.raycast(e,t)===!1&&(s=!1),s===!0&&n===!0){const r=i.children;for(let a=0,o=r.length;a<o;a++)Ba(r[a],e,t,!0)}}class c6{constructor(e=1,t=0,n=0){this.radius=e,this.phi=t,this.theta=n}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=le(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(le(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class bc extends z1{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function u6(i,e,t,n){const s=yc(n);switch(t){case b4:return i*e;case bs:return i*e/s.components*s.byteLength;case V7:return i*e/s.components*s.byteLength;case v4:return i*e*2/s.components*s.byteLength;case F7:return i*e*2/s.components*s.byteLength;case y4:return i*e*3/s.components*s.byteLength;case Ut:return i*e*4/s.components*s.byteLength;case D7:return i*e*4/s.components*s.byteLength;case O3:case E3:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case C3:case z3:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case wa:case xa:return Math.max(i,16)*Math.max(e,8)/4;case ga:case Ta:return Math.max(i,8)*Math.max(e,8)/2;case Sa:case Pa:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case Ha:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case La:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case Na:return Math.floor((i+4)/5)*Math.floor((e+3)/4)*16;case Ra:return Math.floor((i+4)/5)*Math.floor((e+4)/5)*16;case Ma:return Math.floor((i+5)/6)*Math.floor((e+4)/5)*16;case Oa:return Math.floor((i+5)/6)*Math.floor((e+5)/6)*16;case Ea:return Math.floor((i+7)/8)*Math.floor((e+4)/5)*16;case Ca:return Math.floor((i+7)/8)*Math.floor((e+5)/6)*16;case za:return Math.floor((i+7)/8)*Math.floor((e+7)/8)*16;case Aa:return Math.floor((i+9)/10)*Math.floor((e+4)/5)*16;case Ia:return Math.floor((i+9)/10)*Math.floor((e+5)/6)*16;case Xa:return Math.floor((i+9)/10)*Math.floor((e+7)/8)*16;case Va:return Math.floor((i+9)/10)*Math.floor((e+9)/10)*16;case Fa:return Math.floor((i+11)/12)*Math.floor((e+9)/10)*16;case Da:return Math.floor((i+11)/12)*Math.floor((e+11)/12)*16;case A3:case Wa:case ja:return Math.ceil(i/4)*Math.ceil(e/4)*16;case g4:case Ya:return Math.ceil(i/4)*Math.ceil(e/4)*8;case Ga:case Ua:return Math.ceil(i/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function yc(i){switch(i){case xn:case f4:return{byteLength:1,components:1};case d2:case h4:case Dn:return{byteLength:2,components:1};case I7:case X7:return{byteLength:2,components:4};case R1:case A7:case Dt:return{byteLength:4,components:1};case m4:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${i}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:C7}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=C7);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function W4(){let i=null,e=!1,t=null,n=null;function s(r,a){t(r,a),n=i.requestAnimationFrame(s)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(s),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){i=r}}}function vc(i){const e=new WeakMap;function t(o,l){const d=o.array,c=o.usage,u=d.byteLength,p=i.createBuffer();i.bindBuffer(l,p),i.bufferData(l,d,c),o.onUploadCallback();let h;if(d instanceof Float32Array)h=i.FLOAT;else if(typeof Float16Array<"u"&&d instanceof Float16Array)h=i.HALF_FLOAT;else if(d instanceof Uint16Array)o.isFloat16BufferAttribute?h=i.HALF_FLOAT:h=i.UNSIGNED_SHORT;else if(d instanceof Int16Array)h=i.SHORT;else if(d instanceof Uint32Array)h=i.UNSIGNED_INT;else if(d instanceof Int32Array)h=i.INT;else if(d instanceof Int8Array)h=i.BYTE;else if(d instanceof Uint8Array)h=i.UNSIGNED_BYTE;else if(d instanceof Uint8ClampedArray)h=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:p,type:h,bytesPerElement:d.BYTES_PER_ELEMENT,version:o.version,size:u}}function n(o,l,d){const c=l.array,u=l.updateRanges;if(i.bindBuffer(d,o),u.length===0)i.bufferSubData(d,0,c);else{u.sort((h,y)=>h.start-y.start);let p=0;for(let h=1;h<u.length;h++){const y=u[p],T=u[h];T.start<=y.start+y.count+1?y.count=Math.max(y.count,T.start+T.count-y.start):(++p,u[p]=T)}u.length=p+1;for(let h=0,y=u.length;h<y;h++){const T=u[h];i.bufferSubData(d,T.start*c.BYTES_PER_ELEMENT,c,T.start,T.count)}l.clearUpdateRanges()}l.onUploadCallback()}function s(o){return o.isInterleavedBufferAttribute&&(o=o.data),e.get(o)}function r(o){o.isInterleavedBufferAttribute&&(o=o.data);const l=e.get(o);l&&(i.deleteBuffer(l.buffer),e.delete(o))}function a(o,l){if(o.isInterleavedBufferAttribute&&(o=o.data),o.isGLBufferAttribute){const c=e.get(o);(!c||c.version<o.version)&&e.set(o,{buffer:o.buffer,type:o.type,bytesPerElement:o.elementSize,version:o.version});return}const d=e.get(o);if(d===void 0)e.set(o,t(o,l));else if(d.version<o.version){if(d.size!==o.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(d.buffer,o,l),d.version=o.version}}return{get:s,remove:r,update:a}}var gc=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,wc=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,Tc=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,xc=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Sc=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,Pc=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Hc=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Lc=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Nc=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,Rc=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,Mc=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,Oc=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Ec=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Cc=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,zc=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Ac=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,Ic=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Xc=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Vc=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Fc=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Dc=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Wc=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,jc=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,Yc=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Gc=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Uc=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,qc=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Zc=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,kc=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Jc=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Bc="gl_FragColor = linearToOutputTexel( gl_FragColor );",Kc=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Qc=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,_c=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,$c=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,eu=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,tu=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,nu=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,iu=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,su=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,ru=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,au=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,ou=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,lu=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,du=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,cu=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,uu=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,pu=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,fu=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,hu=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,mu=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,bu=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,yu=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,vu=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,gu=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,wu=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,Tu=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,xu=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Su=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Pu=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,Hu=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Lu=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Nu=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Ru=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Mu=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Ou=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Eu=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,Cu=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,zu=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Au=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,Iu=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Xu=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,Vu=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Fu=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Du=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Wu=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,ju=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Yu=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,Gu=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,Uu=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,qu=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Zu=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,ku=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Ju=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Bu=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Ku=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Qu=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,_u=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,$u=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,ep=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,tp=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,np=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,ip=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,sp=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,rp=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,ap=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,op=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,lp=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,dp=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,cp=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,up=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,pp=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,fp=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,hp=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,mp=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,bp=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,yp=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const vp=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,gp=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,wp=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Tp=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,xp=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Sp=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Pp=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Hp=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,Lp=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Np=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Rp=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Mp=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Op=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Ep=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Cp=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,zp=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ap=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ip=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Xp=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Vp=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Fp=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Dp=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Wp=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,jp=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Yp=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Gp=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Up=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qp=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Zp=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,kp=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Jp=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Bp=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Kp=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Qp=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,oe={alphahash_fragment:gc,alphahash_pars_fragment:wc,alphamap_fragment:Tc,alphamap_pars_fragment:xc,alphatest_fragment:Sc,alphatest_pars_fragment:Pc,aomap_fragment:Hc,aomap_pars_fragment:Lc,batching_pars_vertex:Nc,batching_vertex:Rc,begin_vertex:Mc,beginnormal_vertex:Oc,bsdfs:Ec,iridescence_fragment:Cc,bumpmap_pars_fragment:zc,clipping_planes_fragment:Ac,clipping_planes_pars_fragment:Ic,clipping_planes_pars_vertex:Xc,clipping_planes_vertex:Vc,color_fragment:Fc,color_pars_fragment:Dc,color_pars_vertex:Wc,color_vertex:jc,common:Yc,cube_uv_reflection_fragment:Gc,defaultnormal_vertex:Uc,displacementmap_pars_vertex:qc,displacementmap_vertex:Zc,emissivemap_fragment:kc,emissivemap_pars_fragment:Jc,colorspace_fragment:Bc,colorspace_pars_fragment:Kc,envmap_fragment:Qc,envmap_common_pars_fragment:_c,envmap_pars_fragment:$c,envmap_pars_vertex:eu,envmap_physical_pars_fragment:uu,envmap_vertex:tu,fog_vertex:nu,fog_pars_vertex:iu,fog_fragment:su,fog_pars_fragment:ru,gradientmap_pars_fragment:au,lightmap_pars_fragment:ou,lights_lambert_fragment:lu,lights_lambert_pars_fragment:du,lights_pars_begin:cu,lights_toon_fragment:pu,lights_toon_pars_fragment:fu,lights_phong_fragment:hu,lights_phong_pars_fragment:mu,lights_physical_fragment:bu,lights_physical_pars_fragment:yu,lights_fragment_begin:vu,lights_fragment_maps:gu,lights_fragment_end:wu,logdepthbuf_fragment:Tu,logdepthbuf_pars_fragment:xu,logdepthbuf_pars_vertex:Su,logdepthbuf_vertex:Pu,map_fragment:Hu,map_pars_fragment:Lu,map_particle_fragment:Nu,map_particle_pars_fragment:Ru,metalnessmap_fragment:Mu,metalnessmap_pars_fragment:Ou,morphinstance_vertex:Eu,morphcolor_vertex:Cu,morphnormal_vertex:zu,morphtarget_pars_vertex:Au,morphtarget_vertex:Iu,normal_fragment_begin:Xu,normal_fragment_maps:Vu,normal_pars_fragment:Fu,normal_pars_vertex:Du,normal_vertex:Wu,normalmap_pars_fragment:ju,clearcoat_normal_fragment_begin:Yu,clearcoat_normal_fragment_maps:Gu,clearcoat_pars_fragment:Uu,iridescence_pars_fragment:qu,opaque_fragment:Zu,packing:ku,premultiplied_alpha_fragment:Ju,project_vertex:Bu,dithering_fragment:Ku,dithering_pars_fragment:Qu,roughnessmap_fragment:_u,roughnessmap_pars_fragment:$u,shadowmap_pars_fragment:ep,shadowmap_pars_vertex:tp,shadowmap_vertex:np,shadowmask_pars_fragment:ip,skinbase_vertex:sp,skinning_pars_vertex:rp,skinning_vertex:ap,skinnormal_vertex:op,specularmap_fragment:lp,specularmap_pars_fragment:dp,tonemapping_fragment:cp,tonemapping_pars_fragment:up,transmission_fragment:pp,transmission_pars_fragment:fp,uv_pars_fragment:hp,uv_pars_vertex:mp,uv_vertex:bp,worldpos_vertex:yp,background_vert:vp,background_frag:gp,backgroundCube_vert:wp,backgroundCube_frag:Tp,cube_vert:xp,cube_frag:Sp,depth_vert:Pp,depth_frag:Hp,distanceRGBA_vert:Lp,distanceRGBA_frag:Np,equirect_vert:Rp,equirect_frag:Mp,linedashed_vert:Op,linedashed_frag:Ep,meshbasic_vert:Cp,meshbasic_frag:zp,meshlambert_vert:Ap,meshlambert_frag:Ip,meshmatcap_vert:Xp,meshmatcap_frag:Vp,meshnormal_vert:Fp,meshnormal_frag:Dp,meshphong_vert:Wp,meshphong_frag:jp,meshphysical_vert:Yp,meshphysical_frag:Gp,meshtoon_vert:Up,meshtoon_frag:qp,points_vert:Zp,points_frag:kp,shadow_vert:Jp,shadow_frag:Bp,sprite_vert:Kp,sprite_frag:Qp},N0={common:{diffuse:{value:new te(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new re},alphaMap:{value:null},alphaMapTransform:{value:new re},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new re}},envmap:{envMap:{value:null},envMapRotation:{value:new re},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new re}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new re}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new re},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new re},normalScale:{value:new $0(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new re},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new re}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new re}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new re}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new te(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new te(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new re},alphaTest:{value:0},uvTransform:{value:new re}},sprite:{diffuse:{value:new te(16777215)},opacity:{value:1},center:{value:new $0(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new re},alphaMap:{value:null},alphaMapTransform:{value:new re},alphaTest:{value:0}}},vn={basic:{uniforms:Ot([N0.common,N0.specularmap,N0.envmap,N0.aomap,N0.lightmap,N0.fog]),vertexShader:oe.meshbasic_vert,fragmentShader:oe.meshbasic_frag},lambert:{uniforms:Ot([N0.common,N0.specularmap,N0.envmap,N0.aomap,N0.lightmap,N0.emissivemap,N0.bumpmap,N0.normalmap,N0.displacementmap,N0.fog,N0.lights,{emissive:{value:new te(0)}}]),vertexShader:oe.meshlambert_vert,fragmentShader:oe.meshlambert_frag},phong:{uniforms:Ot([N0.common,N0.specularmap,N0.envmap,N0.aomap,N0.lightmap,N0.emissivemap,N0.bumpmap,N0.normalmap,N0.displacementmap,N0.fog,N0.lights,{emissive:{value:new te(0)},specular:{value:new te(1118481)},shininess:{value:30}}]),vertexShader:oe.meshphong_vert,fragmentShader:oe.meshphong_frag},standard:{uniforms:Ot([N0.common,N0.envmap,N0.aomap,N0.lightmap,N0.emissivemap,N0.bumpmap,N0.normalmap,N0.displacementmap,N0.roughnessmap,N0.metalnessmap,N0.fog,N0.lights,{emissive:{value:new te(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:oe.meshphysical_vert,fragmentShader:oe.meshphysical_frag},toon:{uniforms:Ot([N0.common,N0.aomap,N0.lightmap,N0.emissivemap,N0.bumpmap,N0.normalmap,N0.displacementmap,N0.gradientmap,N0.fog,N0.lights,{emissive:{value:new te(0)}}]),vertexShader:oe.meshtoon_vert,fragmentShader:oe.meshtoon_frag},matcap:{uniforms:Ot([N0.common,N0.bumpmap,N0.normalmap,N0.displacementmap,N0.fog,{matcap:{value:null}}]),vertexShader:oe.meshmatcap_vert,fragmentShader:oe.meshmatcap_frag},points:{uniforms:Ot([N0.points,N0.fog]),vertexShader:oe.points_vert,fragmentShader:oe.points_frag},dashed:{uniforms:Ot([N0.common,N0.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:oe.linedashed_vert,fragmentShader:oe.linedashed_frag},depth:{uniforms:Ot([N0.common,N0.displacementmap]),vertexShader:oe.depth_vert,fragmentShader:oe.depth_frag},normal:{uniforms:Ot([N0.common,N0.bumpmap,N0.normalmap,N0.displacementmap,{opacity:{value:1}}]),vertexShader:oe.meshnormal_vert,fragmentShader:oe.meshnormal_frag},sprite:{uniforms:Ot([N0.sprite,N0.fog]),vertexShader:oe.sprite_vert,fragmentShader:oe.sprite_frag},background:{uniforms:{uvTransform:{value:new re},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:oe.background_vert,fragmentShader:oe.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new re}},vertexShader:oe.backgroundCube_vert,fragmentShader:oe.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:oe.cube_vert,fragmentShader:oe.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:oe.equirect_vert,fragmentShader:oe.equirect_frag},distanceRGBA:{uniforms:Ot([N0.common,N0.displacementmap,{referencePosition:{value:new S},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:oe.distanceRGBA_vert,fragmentShader:oe.distanceRGBA_frag},shadow:{uniforms:Ot([N0.lights,N0.fog,{color:{value:new te(0)},opacity:{value:1}}]),vertexShader:oe.shadow_vert,fragmentShader:oe.shadow_frag}};vn.physical={uniforms:Ot([vn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new re},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new re},clearcoatNormalScale:{value:new $0(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new re},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new re},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new re},sheen:{value:0},sheenColor:{value:new te(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new re},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new re},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new re},transmissionSamplerSize:{value:new $0},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new re},attenuationDistance:{value:0},attenuationColor:{value:new te(0)},specularColor:{value:new te(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new re},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new re},anisotropyVector:{value:new $0},anisotropyMap:{value:null},anisotropyMapTransform:{value:new re}}]),vertexShader:oe.meshphysical_vert,fragmentShader:oe.meshphysical_frag};const r3={r:0,b:0,g:0},g1=new Ne,_p=new B0;function $p(i,e,t,n,s,r,a){const o=new te(0);let l=r===!0?0:1,d,c,u=null,p=0,h=null;function y(M){let P=M.isScene===!0?M.background:null;return P&&P.isTexture&&(P=(M.backgroundBlurriness>0?t:e).get(P)),P}function T(M){let P=!1;const F=y(M);F===null?f(o,l):F&&F.isColor&&(f(F,1),P=!0);const X=i.xr.getEnvironmentBlendMode();X==="additive"?n.buffers.color.setClear(0,0,0,1,a):X==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(i.autoClear||P)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil))}function m(M,P){const F=y(P);F&&(F.isCubeTexture||F.mapping===ms)?(c===void 0&&(c=new Be(new _t(1,1,1),new p1({name:"BackgroundCubeMaterial",uniforms:Hi(vn.backgroundCube.uniforms),vertexShader:vn.backgroundCube.vertexShader,fragmentShader:vn.backgroundCube.fragmentShader,side:Wt,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(X,D,U){this.matrixWorld.copyPosition(U.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(c)),g1.copy(P.backgroundRotation),g1.x*=-1,g1.y*=-1,g1.z*=-1,F.isCubeTexture&&F.isRenderTargetTexture===!1&&(g1.y*=-1,g1.z*=-1),c.material.uniforms.envMap.value=F,c.material.uniforms.flipEnvMap.value=F.isCubeTexture&&F.isRenderTargetTexture===!1?-1:1,c.material.uniforms.backgroundBlurriness.value=P.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=P.backgroundIntensity,c.material.uniforms.backgroundRotation.value.setFromMatrix4(_p.makeRotationFromEuler(g1)),c.material.toneMapped=ge.getTransfer(F.colorSpace)!==Ie,(u!==F||p!==F.version||h!==i.toneMapping)&&(c.material.needsUpdate=!0,u=F,p=F.version,h=i.toneMapping),c.layers.enableAll(),M.unshift(c,c.geometry,c.material,0,0,null)):F&&F.isTexture&&(d===void 0&&(d=new Be(new gs(2,2),new p1({name:"BackgroundMaterial",uniforms:Hi(vn.background.uniforms),vertexShader:vn.background.vertexShader,fragmentShader:vn.background.fragmentShader,side:Un,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),d.geometry.deleteAttribute("normal"),Object.defineProperty(d.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(d)),d.material.uniforms.t2D.value=F,d.material.uniforms.backgroundIntensity.value=P.backgroundIntensity,d.material.toneMapped=ge.getTransfer(F.colorSpace)!==Ie,F.matrixAutoUpdate===!0&&F.updateMatrix(),d.material.uniforms.uvTransform.value.copy(F.matrix),(u!==F||p!==F.version||h!==i.toneMapping)&&(d.material.needsUpdate=!0,u=F,p=F.version,h=i.toneMapping),d.layers.enableAll(),M.unshift(d,d.geometry,d.material,0,0,null))}function f(M,P){M.getRGB(r3,R4(i)),n.buffers.color.setClear(r3.r,r3.g,r3.b,P,a)}function N(){c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0),d!==void 0&&(d.geometry.dispose(),d.material.dispose(),d=void 0)}return{getClearColor:function(){return o},setClearColor:function(M,P=1){o.set(M),l=P,f(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(M){l=M,f(o,l)},render:T,addToRenderList:m,dispose:N}}function ef(i,e){const t=i.getParameter(i.MAX_VERTEX_ATTRIBS),n={},s=p(null);let r=s,a=!1;function o(H,j,K,Q,e0){let u0=!1;const n0=u(Q,K,j);r!==n0&&(r=n0,d(r.object)),u0=h(H,Q,K,e0),u0&&y(H,Q,K,e0),e0!==null&&e.update(e0,i.ELEMENT_ARRAY_BUFFER),(u0||a)&&(a=!1,P(H,j,K,Q),e0!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,e.get(e0).buffer))}function l(){return i.createVertexArray()}function d(H){return i.bindVertexArray(H)}function c(H){return i.deleteVertexArray(H)}function u(H,j,K){const Q=K.wireframe===!0;let e0=n[H.id];e0===void 0&&(e0={},n[H.id]=e0);let u0=e0[j.id];u0===void 0&&(u0={},e0[j.id]=u0);let n0=u0[Q];return n0===void 0&&(n0=p(l()),u0[Q]=n0),n0}function p(H){const j=[],K=[],Q=[];for(let e0=0;e0<t;e0++)j[e0]=0,K[e0]=0,Q[e0]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:j,enabledAttributes:K,attributeDivisors:Q,object:H,attributes:{},index:null}}function h(H,j,K,Q){const e0=r.attributes,u0=j.attributes;let n0=0;const y0=K.getAttributes();for(const t0 in y0)if(y0[t0].location>=0){const L0=e0[t0];let F0=u0[t0];if(F0===void 0&&(t0==="instanceMatrix"&&H.instanceMatrix&&(F0=H.instanceMatrix),t0==="instanceColor"&&H.instanceColor&&(F0=H.instanceColor)),L0===void 0||L0.attribute!==F0||F0&&L0.data!==F0.data)return!0;n0++}return r.attributesNum!==n0||r.index!==Q}function y(H,j,K,Q){const e0={},u0=j.attributes;let n0=0;const y0=K.getAttributes();for(const t0 in y0)if(y0[t0].location>=0){let L0=u0[t0];L0===void 0&&(t0==="instanceMatrix"&&H.instanceMatrix&&(L0=H.instanceMatrix),t0==="instanceColor"&&H.instanceColor&&(L0=H.instanceColor));const F0={};F0.attribute=L0,L0&&L0.data&&(F0.data=L0.data),e0[t0]=F0,n0++}r.attributes=e0,r.attributesNum=n0,r.index=Q}function T(){const H=r.newAttributes;for(let j=0,K=H.length;j<K;j++)H[j]=0}function m(H){f(H,0)}function f(H,j){const K=r.newAttributes,Q=r.enabledAttributes,e0=r.attributeDivisors;K[H]=1,Q[H]===0&&(i.enableVertexAttribArray(H),Q[H]=1),e0[H]!==j&&(i.vertexAttribDivisor(H,j),e0[H]=j)}function N(){const H=r.newAttributes,j=r.enabledAttributes;for(let K=0,Q=j.length;K<Q;K++)j[K]!==H[K]&&(i.disableVertexAttribArray(K),j[K]=0)}function M(H,j,K,Q,e0,u0,n0){n0===!0?i.vertexAttribIPointer(H,j,K,e0,u0):i.vertexAttribPointer(H,j,K,Q,e0,u0)}function P(H,j,K,Q){T();const e0=Q.attributes,u0=K.getAttributes(),n0=j.defaultAttributeValues;for(const y0 in u0){const t0=u0[y0];if(t0.location>=0){let x0=e0[y0];if(x0===void 0&&(y0==="instanceMatrix"&&H.instanceMatrix&&(x0=H.instanceMatrix),y0==="instanceColor"&&H.instanceColor&&(x0=H.instanceColor)),x0!==void 0){const L0=x0.normalized,F0=x0.itemSize,K0=e.get(x0);if(K0===void 0)continue;const ue=K0.buffer,s0=K0.type,w0=K0.bytesPerElement,T0=s0===i.INT||s0===i.UNSIGNED_INT||x0.gpuType===A7;if(x0.isInterleavedBufferAttribute){const S0=x0.data,z0=S0.stride,me=x0.offset;if(S0.isInstancedInterleavedBuffer){for(let q0=0;q0<t0.locationSize;q0++)f(t0.location+q0,S0.meshPerAttribute);H.isInstancedMesh!==!0&&Q._maxInstanceCount===void 0&&(Q._maxInstanceCount=S0.meshPerAttribute*S0.count)}else for(let q0=0;q0<t0.locationSize;q0++)m(t0.location+q0);i.bindBuffer(i.ARRAY_BUFFER,ue);for(let q0=0;q0<t0.locationSize;q0++)M(t0.location+q0,F0/t0.locationSize,s0,L0,z0*w0,(me+F0/t0.locationSize*q0)*w0,T0)}else{if(x0.isInstancedBufferAttribute){for(let S0=0;S0<t0.locationSize;S0++)f(t0.location+S0,x0.meshPerAttribute);H.isInstancedMesh!==!0&&Q._maxInstanceCount===void 0&&(Q._maxInstanceCount=x0.meshPerAttribute*x0.count)}else for(let S0=0;S0<t0.locationSize;S0++)m(t0.location+S0);i.bindBuffer(i.ARRAY_BUFFER,ue);for(let S0=0;S0<t0.locationSize;S0++)M(t0.location+S0,F0/t0.locationSize,s0,L0,F0*w0,F0/t0.locationSize*S0*w0,T0)}}else if(n0!==void 0){const L0=n0[y0];if(L0!==void 0)switch(L0.length){case 2:i.vertexAttrib2fv(t0.location,L0);break;case 3:i.vertexAttrib3fv(t0.location,L0);break;case 4:i.vertexAttrib4fv(t0.location,L0);break;default:i.vertexAttrib1fv(t0.location,L0)}}}}N()}function F(){U();for(const H in n){const j=n[H];for(const K in j){const Q=j[K];for(const e0 in Q)c(Q[e0].object),delete Q[e0];delete j[K]}delete n[H]}}function X(H){if(n[H.id]===void 0)return;const j=n[H.id];for(const K in j){const Q=j[K];for(const e0 in Q)c(Q[e0].object),delete Q[e0];delete j[K]}delete n[H.id]}function D(H){for(const j in n){const K=n[j];if(K[H.id]===void 0)continue;const Q=K[H.id];for(const e0 in Q)c(Q[e0].object),delete Q[e0];delete K[H.id]}}function U(){R(),a=!0,r!==s&&(r=s,d(r.object))}function R(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:o,reset:U,resetDefaultState:R,dispose:F,releaseStatesOfGeometry:X,releaseStatesOfProgram:D,initAttributes:T,enableAttribute:m,disableUnusedAttributes:N}}function tf(i,e,t){let n;function s(d){n=d}function r(d,c){i.drawArrays(n,d,c),t.update(c,n,1)}function a(d,c,u){u!==0&&(i.drawArraysInstanced(n,d,c,u),t.update(c,n,u))}function o(d,c,u){if(u===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,d,0,c,0,u);let h=0;for(let y=0;y<u;y++)h+=c[y];t.update(h,n,1)}function l(d,c,u,p){if(u===0)return;const h=e.get("WEBGL_multi_draw");if(h===null)for(let y=0;y<d.length;y++)a(d[y],c[y],p[y]);else{h.multiDrawArraysInstancedWEBGL(n,d,0,c,0,p,0,u);let y=0;for(let T=0;T<u;T++)y+=c[T]*p[T];t.update(y,n,1)}}this.setMode=s,this.render=r,this.renderInstances=a,this.renderMultiDraw=o,this.renderMultiDrawInstances=l}function nf(i,e,t,n){let s;function r(){if(s!==void 0)return s;if(e.has("EXT_texture_filter_anisotropic")===!0){const D=e.get("EXT_texture_filter_anisotropic");s=i.getParameter(D.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s}function a(D){return!(D!==Ut&&n.convert(D)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_FORMAT))}function o(D){const U=D===Dn&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(D!==xn&&n.convert(D)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_TYPE)&&D!==Dt&&!U)}function l(D){if(D==="highp"){if(i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.HIGH_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision>0)return"highp";D="mediump"}return D==="mediump"&&i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.MEDIUM_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let d=t.precision!==void 0?t.precision:"highp";const c=l(d);c!==d&&(console.warn("THREE.WebGLRenderer:",d,"not supported, using",c,"instead."),d=c);const u=t.logarithmicDepthBuffer===!0,p=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),h=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),y=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),T=i.getParameter(i.MAX_TEXTURE_SIZE),m=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),f=i.getParameter(i.MAX_VERTEX_ATTRIBS),N=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),M=i.getParameter(i.MAX_VARYING_VECTORS),P=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),F=y>0,X=i.getParameter(i.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:l,textureFormatReadable:a,textureTypeReadable:o,precision:d,logarithmicDepthBuffer:u,reverseDepthBuffer:p,maxTextures:h,maxVertexTextures:y,maxTextureSize:T,maxCubemapSize:m,maxAttributes:f,maxVertexUniforms:N,maxVaryings:M,maxFragmentUniforms:P,vertexTextures:F,maxSamples:X}}function sf(i){const e=this;let t=null,n=0,s=!1,r=!1;const a=new a1,o=new re,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,p){const h=u.length!==0||p||n!==0||s;return s=p,n=u.length,h},this.beginShadows=function(){r=!0,c(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,p){t=c(u,p,0)},this.setState=function(u,p,h){const y=u.clippingPlanes,T=u.clipIntersection,m=u.clipShadows,f=i.get(u);if(!s||y===null||y.length===0||r&&!m)r?c(null):d();else{const N=r?0:n,M=N*4;let P=f.clippingState||null;l.value=P,P=c(y,p,M,h);for(let F=0;F!==M;++F)P[F]=t[F];f.clippingState=P,this.numIntersection=T?this.numPlanes:0,this.numPlanes+=N}};function d(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function c(u,p,h,y){const T=u!==null?u.length:0;let m=null;if(T!==0){if(m=l.value,y!==!0||m===null){const f=h+T*4,N=p.matrixWorldInverse;o.getNormalMatrix(N),(m===null||m.length<f)&&(m=new Float32Array(f));for(let M=0,P=h;M!==T;++M,P+=4)a.copy(u[M]).applyMatrix4(N,o),a.normal.toArray(m,P),m[P+3]=a.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=T,e.numIntersection=0,m}}function rf(i){let e=new WeakMap;function t(a,o){return o===ya?a.mapping=Ti:o===va&&(a.mapping=xi),a}function n(a){if(a&&a.isTexture){const o=a.mapping;if(o===ya||o===va)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const d=new Pd(l.height);return d.fromEquirectangularTexture(i,a),e.set(a,d),a.addEventListener("dispose",s),t(d.texture,a.mapping)}else return null}}return a}function s(a){const o=a.target;o.removeEventListener("dispose",s);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}const ci=4,p6=[.125,.215,.35,.446,.526,.582],L1=20,ur=new _7,f6=new te;let pr=null,fr=0,hr=0,mr=!1;const S1=(1+Math.sqrt(5))/2,$1=1/S1,h6=[new S(-S1,$1,0),new S(S1,$1,0),new S(-$1,0,S1),new S($1,0,S1),new S(0,S1,-$1),new S(0,S1,$1),new S(-1,1,-1),new S(1,1,-1),new S(-1,1,1),new S(1,1,1)],af=new S;class Ka{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,s=100,r={}){const{size:a=256,position:o=af}=r;pr=this._renderer.getRenderTarget(),fr=this._renderer.getActiveCubeFace(),hr=this._renderer.getActiveMipmapLevel(),mr=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(a);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,n,s,l,o),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=y6(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=b6(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(pr,fr,hr),this._renderer.xr.enabled=mr,e.scissorTest=!1,a3(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Ti||e.mapping===xi?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),pr=this._renderer.getRenderTarget(),fr=this._renderer.getActiveCubeFace(),hr=this._renderer.getActiveMipmapLevel(),mr=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:yt,minFilter:yt,generateMipmaps:!1,type:Dn,format:Ut,colorSpace:Tt,depthBuffer:!1},s=m6(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=m6(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=of(r)),this._blurMaterial=lf(r,e,t)}return s}_compileMaterial(e){const t=new Be(this._lodPlanes[0],e);this._renderer.compile(t,ur)}_sceneToCubeUV(e,t,n,s,r){const l=new Ct(90,1,t,n),d=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,p=u.autoClear,h=u.toneMapping;u.getClearColor(f6),u.toneMapping=u1,u.autoClear=!1;const y=new jn({name:"PMREM.Background",side:Wt,depthWrite:!1,depthTest:!1}),T=new Be(new _t,y);let m=!1;const f=e.background;f?f.isColor&&(y.color.copy(f),e.background=null,m=!0):(y.color.copy(f6),m=!0);for(let N=0;N<6;N++){const M=N%3;M===0?(l.up.set(0,d[N],0),l.position.set(r.x,r.y,r.z),l.lookAt(r.x+c[N],r.y,r.z)):M===1?(l.up.set(0,0,d[N]),l.position.set(r.x,r.y,r.z),l.lookAt(r.x,r.y+c[N],r.z)):(l.up.set(0,d[N],0),l.position.set(r.x,r.y,r.z),l.lookAt(r.x,r.y,r.z+c[N]));const P=this._cubeSize;a3(s,M*P,N>2?P:0,P,P),u.setRenderTarget(s),m&&u.render(T,l),u.render(e,l)}T.geometry.dispose(),T.material.dispose(),u.toneMapping=h,u.autoClear=p,e.background=f}_textureToCubeUV(e,t){const n=this._renderer,s=e.mapping===Ti||e.mapping===xi;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=y6()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=b6());const r=s?this._cubemapMaterial:this._equirectMaterial,a=new Be(this._lodPlanes[0],r),o=r.uniforms;o.envMap.value=e;const l=this._cubeSize;a3(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(a,ur)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const s=this._lodPlanes.length;for(let r=1;r<s;r++){const a=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=h6[(s-r-1)%h6.length];this._blur(e,r-1,r,a,o)}t.autoClear=n}_blur(e,t,n,s,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,s,"latitudinal",r),this._halfBlur(a,e,n,n,s,"longitudinal",r)}_halfBlur(e,t,n,s,r,a,o){const l=this._renderer,d=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const c=3,u=new Be(this._lodPlanes[s],d),p=d.uniforms,h=this._sizeLods[n]-1,y=isFinite(r)?Math.PI/(2*h):2*Math.PI/(2*L1-1),T=r/y,m=isFinite(r)?1+Math.floor(c*T):L1;m>L1&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${L1}`);const f=[];let N=0;for(let D=0;D<L1;++D){const U=D/T,R=Math.exp(-U*U/2);f.push(R),D===0?N+=R:D<m&&(N+=2*R)}for(let D=0;D<f.length;D++)f[D]=f[D]/N;p.envMap.value=e.texture,p.samples.value=m,p.weights.value=f,p.latitudinal.value=a==="latitudinal",o&&(p.poleAxis.value=o);const{_lodMax:M}=this;p.dTheta.value=y,p.mipInt.value=M-n;const P=this._sizeLods[s],F=3*P*(s>M-ci?s-M+ci:0),X=4*(this._cubeSize-P);a3(t,F,X,3*P,2*P),l.setRenderTarget(t),l.render(u,ur)}}function of(i){const e=[],t=[],n=[];let s=i;const r=i-ci+1+p6.length;for(let a=0;a<r;a++){const o=Math.pow(2,s);t.push(o);let l=1/o;a>i-ci?l=p6[a-i+ci-1]:a===0&&(l=0),n.push(l);const d=1/(o-2),c=-d,u=1+d,p=[c,c,u,c,u,u,c,c,u,u,c,u],h=6,y=6,T=3,m=2,f=1,N=new Float32Array(T*y*h),M=new Float32Array(m*y*h),P=new Float32Array(f*y*h);for(let X=0;X<h;X++){const D=X%3*2/3-1,U=X>2?0:-1,R=[D,U,0,D+2/3,U,0,D+2/3,U+1,0,D,U,0,D+2/3,U+1,0,D,U+1,0];N.set(R,T*y*X),M.set(p,m*y*X);const H=[X,X,X,X,X,X];P.set(H,f*y*X)}const F=new Rt;F.setAttribute("position",new At(N,T)),F.setAttribute("uv",new At(M,m)),F.setAttribute("faceIndex",new At(P,f)),e.push(F),s>ci&&s--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function m6(i,e,t){const n=new M1(i,e,t);return n.texture.mapping=ms,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function a3(i,e,t,n,s){i.viewport.set(e,t,n,s),i.scissor.set(e,t,n,s)}function lf(i,e,t){const n=new Float32Array(L1),s=new S(0,1,0);return new p1({name:"SphericalGaussianBlur",defines:{n:L1,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:t5(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:c1,depthTest:!1,depthWrite:!1})}function b6(){return new p1({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:t5(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:c1,depthTest:!1,depthWrite:!1})}function y6(){return new p1({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:t5(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:c1,depthTest:!1,depthWrite:!1})}function t5(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function df(i){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture){const l=o.mapping,d=l===ya||l===va,c=l===Ti||l===xi;if(d||c){let u=e.get(o);const p=u!==void 0?u.texture.pmremVersion:0;if(o.isRenderTargetTexture&&o.pmremVersion!==p)return t===null&&(t=new Ka(i)),u=d?t.fromEquirectangular(o,u):t.fromCubemap(o,u),u.texture.pmremVersion=o.pmremVersion,e.set(o,u),u.texture;if(u!==void 0)return u.texture;{const h=o.image;return d&&h&&h.height>0||c&&h&&s(h)?(t===null&&(t=new Ka(i)),u=d?t.fromEquirectangular(o):t.fromCubemap(o),u.texture.pmremVersion=o.pmremVersion,e.set(o,u),o.addEventListener("dispose",r),u.texture):null}}}return o}function s(o){let l=0;const d=6;for(let c=0;c<d;c++)o[c]!==void 0&&l++;return l===d}function r(o){const l=o.target;l.removeEventListener("dispose",r);const d=e.get(l);d!==void 0&&(e.delete(l),d.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function cf(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let s;switch(n){case"WEBGL_depth_texture":s=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=i.getExtension(n)}return e[n]=s,s}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const s=t(n);return s===null&&yi("THREE.WebGLRenderer: "+n+" extension not supported."),s}}}function uf(i,e,t,n){const s={},r=new WeakMap;function a(u){const p=u.target;p.index!==null&&e.remove(p.index);for(const y in p.attributes)e.remove(p.attributes[y]);p.removeEventListener("dispose",a),delete s[p.id];const h=r.get(p);h&&(e.remove(h),r.delete(p)),n.releaseStatesOfGeometry(p),p.isInstancedBufferGeometry===!0&&delete p._maxInstanceCount,t.memory.geometries--}function o(u,p){return s[p.id]===!0||(p.addEventListener("dispose",a),s[p.id]=!0,t.memory.geometries++),p}function l(u){const p=u.attributes;for(const h in p)e.update(p[h],i.ARRAY_BUFFER)}function d(u){const p=[],h=u.index,y=u.attributes.position;let T=0;if(h!==null){const N=h.array;T=h.version;for(let M=0,P=N.length;M<P;M+=3){const F=N[M+0],X=N[M+1],D=N[M+2];p.push(F,X,X,D,D,F)}}else if(y!==void 0){const N=y.array;T=y.version;for(let M=0,P=N.length/3-1;M<P;M+=3){const F=M+0,X=M+1,D=M+2;p.push(F,X,X,D,D,F)}}else return;const m=new(P4(p)?U7:N4)(p,1);m.version=T;const f=r.get(u);f&&e.remove(f),r.set(u,m)}function c(u){const p=r.get(u);if(p){const h=u.index;h!==null&&p.version<h.version&&d(u)}else d(u);return r.get(u)}return{get:o,update:l,getWireframeAttribute:c}}function pf(i,e,t){let n;function s(p){n=p}let r,a;function o(p){r=p.type,a=p.bytesPerElement}function l(p,h){i.drawElements(n,h,r,p*a),t.update(h,n,1)}function d(p,h,y){y!==0&&(i.drawElementsInstanced(n,h,r,p*a,y),t.update(h,n,y))}function c(p,h,y){if(y===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,h,0,r,p,0,y);let m=0;for(let f=0;f<y;f++)m+=h[f];t.update(m,n,1)}function u(p,h,y,T){if(y===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let f=0;f<p.length;f++)d(p[f]/a,h[f],T[f]);else{m.multiDrawElementsInstancedWEBGL(n,h,0,r,p,0,T,0,y);let f=0;for(let N=0;N<y;N++)f+=h[N]*T[N];t.update(f,n,1)}}this.setMode=s,this.setIndex=o,this.render=l,this.renderInstances=d,this.renderMultiDraw=c,this.renderMultiDrawInstances=u}function ff(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,o){switch(t.calls++,a){case i.TRIANGLES:t.triangles+=o*(r/3);break;case i.LINES:t.lines+=o*(r/2);break;case i.LINE_STRIP:t.lines+=o*(r-1);break;case i.LINE_LOOP:t.lines+=o*r;break;case i.POINTS:t.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function s(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:s,update:n}}function hf(i,e,t){const n=new WeakMap,s=new He;function r(a,o,l){const d=a.morphTargetInfluences,c=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,u=c!==void 0?c.length:0;let p=n.get(o);if(p===void 0||p.count!==u){let R=function(){D.dispose(),n.delete(o),o.removeEventListener("dispose",R)};p!==void 0&&p.texture.dispose();const h=o.morphAttributes.position!==void 0,y=o.morphAttributes.normal!==void 0,T=o.morphAttributes.color!==void 0,m=o.morphAttributes.position||[],f=o.morphAttributes.normal||[],N=o.morphAttributes.color||[];let M=0;h===!0&&(M=1),y===!0&&(M=2),T===!0&&(M=3);let P=o.attributes.position.count*M,F=1;P>e.maxTextureSize&&(F=Math.ceil(P/e.maxTextureSize),P=e.maxTextureSize);const X=new Float32Array(P*F*4*u),D=new H4(X,P,F,u);D.type=Dt,D.needsUpdate=!0;const U=M*4;for(let H=0;H<u;H++){const j=m[H],K=f[H],Q=N[H],e0=P*F*4*H;for(let u0=0;u0<j.count;u0++){const n0=u0*U;h===!0&&(s.fromBufferAttribute(j,u0),X[e0+n0+0]=s.x,X[e0+n0+1]=s.y,X[e0+n0+2]=s.z,X[e0+n0+3]=0),y===!0&&(s.fromBufferAttribute(K,u0),X[e0+n0+4]=s.x,X[e0+n0+5]=s.y,X[e0+n0+6]=s.z,X[e0+n0+7]=0),T===!0&&(s.fromBufferAttribute(Q,u0),X[e0+n0+8]=s.x,X[e0+n0+9]=s.y,X[e0+n0+10]=s.z,X[e0+n0+11]=Q.itemSize===4?s.w:1)}}p={count:u,texture:D,size:new $0(P,F)},n.set(o,p),o.addEventListener("dispose",R)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)l.getUniforms().setValue(i,"morphTexture",a.morphTexture,t);else{let h=0;for(let T=0;T<d.length;T++)h+=d[T];const y=o.morphTargetsRelative?1:1-h;l.getUniforms().setValue(i,"morphTargetBaseInfluence",y),l.getUniforms().setValue(i,"morphTargetInfluences",d)}l.getUniforms().setValue(i,"morphTargetsTexture",p.texture,t),l.getUniforms().setValue(i,"morphTargetsTextureSize",p.size)}return{update:r}}function mf(i,e,t,n){let s=new WeakMap;function r(l){const d=n.render.frame,c=l.geometry,u=e.get(l,c);if(s.get(u)!==d&&(e.update(u),s.set(u,d)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),s.get(l)!==d&&(t.update(l.instanceMatrix,i.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,i.ARRAY_BUFFER),s.set(l,d))),l.isSkinnedMesh){const p=l.skeleton;s.get(p)!==d&&(p.update(),s.set(p,d))}return u}function a(){s=new WeakMap}function o(l){const d=l.target;d.removeEventListener("dispose",o),t.remove(d.instanceMatrix),d.instanceColor!==null&&t.remove(d.instanceColor)}return{update:r,dispose:a}}const j4=new vt,v6=new z4(1,1),Y4=new H4,G4=new sd,U4=new O4,g6=[],w6=[],T6=new Float32Array(16),x6=new Float32Array(9),S6=new Float32Array(4);function zi(i,e,t){const n=i[0];if(n<=0||n>0)return i;const s=e*t;let r=g6[s];if(r===void 0&&(r=new Float32Array(s),g6[s]=r),e!==0){n.toArray(r,0);for(let a=1,o=0;a!==e;++a)o+=t,i[a].toArray(r,o)}return r}function rt(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function at(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function Ts(i,e){let t=w6[e];t===void 0&&(t=new Int32Array(e),w6[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function bf(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function yf(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(rt(t,e))return;i.uniform2fv(this.addr,e),at(t,e)}}function vf(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(rt(t,e))return;i.uniform3fv(this.addr,e),at(t,e)}}function gf(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(rt(t,e))return;i.uniform4fv(this.addr,e),at(t,e)}}function wf(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(rt(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),at(t,e)}else{if(rt(t,n))return;S6.set(n),i.uniformMatrix2fv(this.addr,!1,S6),at(t,n)}}function Tf(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(rt(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),at(t,e)}else{if(rt(t,n))return;x6.set(n),i.uniformMatrix3fv(this.addr,!1,x6),at(t,n)}}function xf(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(rt(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),at(t,e)}else{if(rt(t,n))return;T6.set(n),i.uniformMatrix4fv(this.addr,!1,T6),at(t,n)}}function Sf(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function Pf(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(rt(t,e))return;i.uniform2iv(this.addr,e),at(t,e)}}function Hf(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(rt(t,e))return;i.uniform3iv(this.addr,e),at(t,e)}}function Lf(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(rt(t,e))return;i.uniform4iv(this.addr,e),at(t,e)}}function Nf(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function Rf(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(rt(t,e))return;i.uniform2uiv(this.addr,e),at(t,e)}}function Mf(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(rt(t,e))return;i.uniform3uiv(this.addr,e),at(t,e)}}function Of(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(rt(t,e))return;i.uniform4uiv(this.addr,e),at(t,e)}}function Ef(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s);let r;this.type===i.SAMPLER_2D_SHADOW?(v6.compareFunction=T4,r=v6):r=j4,t.setTexture2D(e||r,s)}function Cf(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTexture3D(e||G4,s)}function zf(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTextureCube(e||U4,s)}function Af(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTexture2DArray(e||Y4,s)}function If(i){switch(i){case 5126:return bf;case 35664:return yf;case 35665:return vf;case 35666:return gf;case 35674:return wf;case 35675:return Tf;case 35676:return xf;case 5124:case 35670:return Sf;case 35667:case 35671:return Pf;case 35668:case 35672:return Hf;case 35669:case 35673:return Lf;case 5125:return Nf;case 36294:return Rf;case 36295:return Mf;case 36296:return Of;case 35678:case 36198:case 36298:case 36306:case 35682:return Ef;case 35679:case 36299:case 36307:return Cf;case 35680:case 36300:case 36308:case 36293:return zf;case 36289:case 36303:case 36311:case 36292:return Af}}function Xf(i,e){i.uniform1fv(this.addr,e)}function Vf(i,e){const t=zi(e,this.size,2);i.uniform2fv(this.addr,t)}function Ff(i,e){const t=zi(e,this.size,3);i.uniform3fv(this.addr,t)}function Df(i,e){const t=zi(e,this.size,4);i.uniform4fv(this.addr,t)}function Wf(i,e){const t=zi(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function jf(i,e){const t=zi(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function Yf(i,e){const t=zi(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function Gf(i,e){i.uniform1iv(this.addr,e)}function Uf(i,e){i.uniform2iv(this.addr,e)}function qf(i,e){i.uniform3iv(this.addr,e)}function Zf(i,e){i.uniform4iv(this.addr,e)}function kf(i,e){i.uniform1uiv(this.addr,e)}function Jf(i,e){i.uniform2uiv(this.addr,e)}function Bf(i,e){i.uniform3uiv(this.addr,e)}function Kf(i,e){i.uniform4uiv(this.addr,e)}function Qf(i,e,t){const n=this.cache,s=e.length,r=Ts(t,s);rt(n,r)||(i.uniform1iv(this.addr,r),at(n,r));for(let a=0;a!==s;++a)t.setTexture2D(e[a]||j4,r[a])}function _f(i,e,t){const n=this.cache,s=e.length,r=Ts(t,s);rt(n,r)||(i.uniform1iv(this.addr,r),at(n,r));for(let a=0;a!==s;++a)t.setTexture3D(e[a]||G4,r[a])}function $f(i,e,t){const n=this.cache,s=e.length,r=Ts(t,s);rt(n,r)||(i.uniform1iv(this.addr,r),at(n,r));for(let a=0;a!==s;++a)t.setTextureCube(e[a]||U4,r[a])}function eh(i,e,t){const n=this.cache,s=e.length,r=Ts(t,s);rt(n,r)||(i.uniform1iv(this.addr,r),at(n,r));for(let a=0;a!==s;++a)t.setTexture2DArray(e[a]||Y4,r[a])}function th(i){switch(i){case 5126:return Xf;case 35664:return Vf;case 35665:return Ff;case 35666:return Df;case 35674:return Wf;case 35675:return jf;case 35676:return Yf;case 5124:case 35670:return Gf;case 35667:case 35671:return Uf;case 35668:case 35672:return qf;case 35669:case 35673:return Zf;case 5125:return kf;case 36294:return Jf;case 36295:return Bf;case 36296:return Kf;case 35678:case 36198:case 36298:case 36306:case 35682:return Qf;case 35679:case 36299:case 36307:return _f;case 35680:case 36300:case 36308:case 36293:return $f;case 36289:case 36303:case 36311:case 36292:return eh}}class nh{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=If(t.type)}}class ih{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=th(t.type)}}class sh{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const s=this.seq;for(let r=0,a=s.length;r!==a;++r){const o=s[r];o.setValue(e,t[o.id],n)}}}const br=/(\w+)(\])?(\[|\.)?/g;function P6(i,e){i.seq.push(e),i.map[e.id]=e}function rh(i,e,t){const n=i.name,s=n.length;for(br.lastIndex=0;;){const r=br.exec(n),a=br.lastIndex;let o=r[1];const l=r[2]==="]",d=r[3];if(l&&(o=o|0),d===void 0||d==="["&&a+2===s){P6(t,d===void 0?new nh(o,i,e):new ih(o,i,e));break}else{let u=t.map[o];u===void 0&&(u=new sh(o),P6(t,u)),t=u}}}class I3{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let s=0;s<n;++s){const r=e.getActiveUniform(t,s),a=e.getUniformLocation(t,r.name);rh(r,a,this)}}setValue(e,t,n,s){const r=this.map[t];r!==void 0&&r.setValue(e,n,s)}setOptional(e,t,n){const s=t[n];s!==void 0&&this.setValue(e,n,s)}static upload(e,t,n,s){for(let r=0,a=t.length;r!==a;++r){const o=t[r],l=n[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,s)}}static seqWithValue(e,t){const n=[];for(let s=0,r=e.length;s!==r;++s){const a=e[s];a.id in t&&n.push(a)}return n}}function H6(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}const ah=37297;let oh=0;function lh(i,e){const t=i.split(`
`),n=[],s=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let a=s;a<r;a++){const o=a+1;n.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return n.join(`
`)}const L6=new re;function dh(i){ge._getMatrix(L6,ge.workingColorSpace,i);const e=`mat3( ${L6.elements.map(t=>t.toFixed(4))} )`;switch(ge.getTransfer(i)){case W3:return[e,"LinearTransferOETF"];case Ie:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",i),[e,"LinearTransferOETF"]}}function N6(i,e,t){const n=i.getShaderParameter(e,i.COMPILE_STATUS),s=i.getShaderInfoLog(e).trim();if(n&&s==="")return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const a=parseInt(r[1]);return t.toUpperCase()+`

`+s+`

`+lh(i.getShaderSource(e),a)}else return s}function ch(i,e){const t=dh(e);return[`vec4 ${i}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function uh(i,e){let t;switch(e){case hl:t="Linear";break;case ml:t="Reinhard";break;case bl:t="Cineon";break;case c4:t="ACESFilmic";break;case vl:t="AgX";break;case gl:t="Neutral";break;case yl:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const o3=new S;function ph(){ge.getLuminanceCoefficients(o3);const i=o3.x.toFixed(4),e=o3.y.toFixed(4),t=o3.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${i}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function fh(i){return[i.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",i.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(i2).join(`
`)}function hh(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function mh(i,e){const t={},n=i.getProgramParameter(e,i.ACTIVE_ATTRIBUTES);for(let s=0;s<n;s++){const r=i.getActiveAttrib(e,s),a=r.name;let o=1;r.type===i.FLOAT_MAT2&&(o=2),r.type===i.FLOAT_MAT3&&(o=3),r.type===i.FLOAT_MAT4&&(o=4),t[a]={type:r.type,location:i.getAttribLocation(e,a),locationSize:o}}return t}function i2(i){return i!==""}function R6(i,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function M6(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const bh=/^[ \t]*#include +<([\w\d./]+)>/gm;function Qa(i){return i.replace(bh,vh)}const yh=new Map;function vh(i,e){let t=oe[e];if(t===void 0){const n=yh.get(e);if(n!==void 0)t=oe[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Qa(t)}const gh=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function O6(i){return i.replace(gh,wh)}function wh(i,e,t,n){let s="";for(let r=parseInt(e);r<parseInt(t);r++)s+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return s}function E6(i){let e=`precision ${i.precision} float;
	precision ${i.precision} int;
	precision ${i.precision} sampler2D;
	precision ${i.precision} samplerCube;
	precision ${i.precision} sampler3D;
	precision ${i.precision} sampler2DArray;
	precision ${i.precision} sampler2DShadow;
	precision ${i.precision} samplerCubeShadow;
	precision ${i.precision} sampler2DArrayShadow;
	precision ${i.precision} isampler2D;
	precision ${i.precision} isampler3D;
	precision ${i.precision} isamplerCube;
	precision ${i.precision} isampler2DArray;
	precision ${i.precision} usampler2D;
	precision ${i.precision} usampler3D;
	precision ${i.precision} usamplerCube;
	precision ${i.precision} usampler2DArray;
	`;return i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Th(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===d4?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===k8?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===bn&&(e="SHADOWMAP_TYPE_VSM"),e}function xh(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case Ti:case xi:e="ENVMAP_TYPE_CUBE";break;case ms:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Sh(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case xi:e="ENVMAP_MODE_REFRACTION";break}return e}function Ph(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case z7:e="ENVMAP_BLENDING_MULTIPLY";break;case pl:e="ENVMAP_BLENDING_MIX";break;case fl:e="ENVMAP_BLENDING_ADD";break}return e}function Hh(i){const e=i.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function Lh(i,e,t,n){const s=i.getContext(),r=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=Th(t),d=xh(t),c=Sh(t),u=Ph(t),p=Hh(t),h=fh(t),y=hh(r),T=s.createProgram();let m,f,N=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(i2).join(`
`),m.length>0&&(m+=`
`),f=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(i2).join(`
`),f.length>0&&(f+=`
`)):(m=[E6(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(i2).join(`
`),f=[E6(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==u1?"#define TONE_MAPPING":"",t.toneMapping!==u1?oe.tonemapping_pars_fragment:"",t.toneMapping!==u1?uh("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",oe.colorspace_pars_fragment,ch("linearToOutputTexel",t.outputColorSpace),ph(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(i2).join(`
`)),a=Qa(a),a=R6(a,t),a=M6(a,t),o=Qa(o),o=R6(o,t),o=M6(o,t),a=O6(a),o=O6(o),t.isRawShaderMaterial!==!0&&(N=`#version 300 es
`,m=[h,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,f=["#define varying in",t.glslVersion===S5?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===S5?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+f);const M=N+m+a,P=N+f+o,F=H6(s,s.VERTEX_SHADER,M),X=H6(s,s.FRAGMENT_SHADER,P);s.attachShader(T,F),s.attachShader(T,X),t.index0AttributeName!==void 0?s.bindAttribLocation(T,0,t.index0AttributeName):t.morphTargets===!0&&s.bindAttribLocation(T,0,"position"),s.linkProgram(T);function D(j){if(i.debug.checkShaderErrors){const K=s.getProgramInfoLog(T).trim(),Q=s.getShaderInfoLog(F).trim(),e0=s.getShaderInfoLog(X).trim();let u0=!0,n0=!0;if(s.getProgramParameter(T,s.LINK_STATUS)===!1)if(u0=!1,typeof i.debug.onShaderError=="function")i.debug.onShaderError(s,T,F,X);else{const y0=N6(s,F,"vertex"),t0=N6(s,X,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(T,s.VALIDATE_STATUS)+`

Material Name: `+j.name+`
Material Type: `+j.type+`

Program Info Log: `+K+`
`+y0+`
`+t0)}else K!==""?console.warn("THREE.WebGLProgram: Program Info Log:",K):(Q===""||e0==="")&&(n0=!1);n0&&(j.diagnostics={runnable:u0,programLog:K,vertexShader:{log:Q,prefix:m},fragmentShader:{log:e0,prefix:f}})}s.deleteShader(F),s.deleteShader(X),U=new I3(s,T),R=mh(s,T)}let U;this.getUniforms=function(){return U===void 0&&D(this),U};let R;this.getAttributes=function(){return R===void 0&&D(this),R};let H=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return H===!1&&(H=s.getProgramParameter(T,ah)),H},this.destroy=function(){n.releaseStatesOfProgram(this),s.deleteProgram(T),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=oh++,this.cacheKey=e,this.usedTimes=1,this.program=T,this.vertexShader=F,this.fragmentShader=X,this}let Nh=0;class Rh{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,s=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(s)===!1&&(a.add(s),s.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new Mh(e),t.set(e,n)),n}}class Mh{constructor(e){this.id=Nh++,this.code=e,this.usedTimes=0}}function Oh(i,e,t,n,s,r,a){const o=new G7,l=new Rh,d=new Set,c=[],u=s.logarithmicDepthBuffer,p=s.vertexTextures;let h=s.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function T(R){return d.add(R),R===0?"uv":`uv${R}`}function m(R,H,j,K,Q){const e0=K.fog,u0=Q.geometry,n0=R.isMeshStandardMaterial?K.environment:null,y0=(R.isMeshStandardMaterial?t:e).get(R.envMap||n0),t0=y0&&y0.mapping===ms?y0.image.height:null,x0=y[R.type];R.precision!==null&&(h=s.getMaxPrecision(R.precision),h!==R.precision&&console.warn("THREE.WebGLProgram.getParameters:",R.precision,"not supported, using",h,"instead."));const L0=u0.morphAttributes.position||u0.morphAttributes.normal||u0.morphAttributes.color,F0=L0!==void 0?L0.length:0;let K0=0;u0.morphAttributes.position!==void 0&&(K0=1),u0.morphAttributes.normal!==void 0&&(K0=2),u0.morphAttributes.color!==void 0&&(K0=3);let ue,s0,w0,T0;if(x0){const Pe=vn[x0];ue=Pe.vertexShader,s0=Pe.fragmentShader}else ue=R.vertexShader,s0=R.fragmentShader,l.update(R),w0=l.getVertexShaderID(R),T0=l.getFragmentShaderID(R);const S0=i.getRenderTarget(),z0=i.state.buffers.depth.getReversed(),me=Q.isInstancedMesh===!0,q0=Q.isBatchedMesh===!0,Re=!!R.map,Ee=!!R.matcap,fe=!!y0,W=!!R.aoMap,lt=!!R.lightMap,we=!!R.bumpMap,Ce=!!R.normalMap,D0=!!R.displacementMap,ve=!!R.emissiveMap,U0=!!R.metalnessMap,ie=!!R.roughnessMap,Ke=R.anisotropy>0,z=R.clearcoat>0,x=R.dispersion>0,B=R.iridescence>0,r0=R.sheen>0,p0=R.transmission>0,i0=Ke&&!!R.anisotropyMap,I0=z&&!!R.clearcoatMap,H0=z&&!!R.clearcoatNormalMap,X0=z&&!!R.clearcoatRoughnessMap,j0=B&&!!R.iridescenceMap,l0=B&&!!R.iridescenceThicknessMap,P0=r0&&!!R.sheenColorMap,Z0=r0&&!!R.sheenRoughnessMap,W0=!!R.specularMap,v0=!!R.specularColorMap,V0=!!R.specularIntensityMap,G=p0&&!!R.transmissionMap,_=p0&&!!R.thicknessMap,h0=!!R.gradientMap,E0=!!R.alphaMap,b0=R.alphaTest>0,d0=!!R.alphaHash,A0=!!R.extensions;let ne=u1;R.toneMapped&&(S0===null||S0.isXRRenderTarget===!0)&&(ne=i.toneMapping);const Fe={shaderID:x0,shaderType:R.type,shaderName:R.name,vertexShader:ue,fragmentShader:s0,defines:R.defines,customVertexShaderID:w0,customFragmentShaderID:T0,isRawShaderMaterial:R.isRawShaderMaterial===!0,glslVersion:R.glslVersion,precision:h,batching:q0,batchingColor:q0&&Q._colorsTexture!==null,instancing:me,instancingColor:me&&Q.instanceColor!==null,instancingMorph:me&&Q.morphTexture!==null,supportsVertexTextures:p,outputColorSpace:S0===null?i.outputColorSpace:S0.isXRRenderTarget===!0?S0.texture.colorSpace:Tt,alphaToCoverage:!!R.alphaToCoverage,map:Re,matcap:Ee,envMap:fe,envMapMode:fe&&y0.mapping,envMapCubeUVHeight:t0,aoMap:W,lightMap:lt,bumpMap:we,normalMap:Ce,displacementMap:p&&D0,emissiveMap:ve,normalMapObjectSpace:Ce&&R.normalMapType===Hl,normalMapTangentSpace:Ce&&R.normalMapType===W7,metalnessMap:U0,roughnessMap:ie,anisotropy:Ke,anisotropyMap:i0,clearcoat:z,clearcoatMap:I0,clearcoatNormalMap:H0,clearcoatRoughnessMap:X0,dispersion:x,iridescence:B,iridescenceMap:j0,iridescenceThicknessMap:l0,sheen:r0,sheenColorMap:P0,sheenRoughnessMap:Z0,specularMap:W0,specularColorMap:v0,specularIntensityMap:V0,transmission:p0,transmissionMap:G,thicknessMap:_,gradientMap:h0,opaque:R.transparent===!1&&R.blending===mi&&R.alphaToCoverage===!1,alphaMap:E0,alphaTest:b0,alphaHash:d0,combine:R.combine,mapUv:Re&&T(R.map.channel),aoMapUv:W&&T(R.aoMap.channel),lightMapUv:lt&&T(R.lightMap.channel),bumpMapUv:we&&T(R.bumpMap.channel),normalMapUv:Ce&&T(R.normalMap.channel),displacementMapUv:D0&&T(R.displacementMap.channel),emissiveMapUv:ve&&T(R.emissiveMap.channel),metalnessMapUv:U0&&T(R.metalnessMap.channel),roughnessMapUv:ie&&T(R.roughnessMap.channel),anisotropyMapUv:i0&&T(R.anisotropyMap.channel),clearcoatMapUv:I0&&T(R.clearcoatMap.channel),clearcoatNormalMapUv:H0&&T(R.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:X0&&T(R.clearcoatRoughnessMap.channel),iridescenceMapUv:j0&&T(R.iridescenceMap.channel),iridescenceThicknessMapUv:l0&&T(R.iridescenceThicknessMap.channel),sheenColorMapUv:P0&&T(R.sheenColorMap.channel),sheenRoughnessMapUv:Z0&&T(R.sheenRoughnessMap.channel),specularMapUv:W0&&T(R.specularMap.channel),specularColorMapUv:v0&&T(R.specularColorMap.channel),specularIntensityMapUv:V0&&T(R.specularIntensityMap.channel),transmissionMapUv:G&&T(R.transmissionMap.channel),thicknessMapUv:_&&T(R.thicknessMap.channel),alphaMapUv:E0&&T(R.alphaMap.channel),vertexTangents:!!u0.attributes.tangent&&(Ce||Ke),vertexColors:R.vertexColors,vertexAlphas:R.vertexColors===!0&&!!u0.attributes.color&&u0.attributes.color.itemSize===4,pointsUvs:Q.isPoints===!0&&!!u0.attributes.uv&&(Re||E0),fog:!!e0,useFog:R.fog===!0,fogExp2:!!e0&&e0.isFogExp2,flatShading:R.flatShading===!0&&R.wireframe===!1,sizeAttenuation:R.sizeAttenuation===!0,logarithmicDepthBuffer:u,reverseDepthBuffer:z0,skinning:Q.isSkinnedMesh===!0,morphTargets:u0.morphAttributes.position!==void 0,morphNormals:u0.morphAttributes.normal!==void 0,morphColors:u0.morphAttributes.color!==void 0,morphTargetsCount:F0,morphTextureStride:K0,numDirLights:H.directional.length,numPointLights:H.point.length,numSpotLights:H.spot.length,numSpotLightMaps:H.spotLightMap.length,numRectAreaLights:H.rectArea.length,numHemiLights:H.hemi.length,numDirLightShadows:H.directionalShadowMap.length,numPointLightShadows:H.pointShadowMap.length,numSpotLightShadows:H.spotShadowMap.length,numSpotLightShadowsWithMaps:H.numSpotLightShadowsWithMaps,numLightProbes:H.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:R.dithering,shadowMapEnabled:i.shadowMap.enabled&&j.length>0,shadowMapType:i.shadowMap.type,toneMapping:ne,decodeVideoTexture:Re&&R.map.isVideoTexture===!0&&ge.getTransfer(R.map.colorSpace)===Ie,decodeVideoTextureEmissive:ve&&R.emissiveMap.isVideoTexture===!0&&ge.getTransfer(R.emissiveMap.colorSpace)===Ie,premultipliedAlpha:R.premultipliedAlpha,doubleSided:R.side===gn,flipSided:R.side===Wt,useDepthPacking:R.depthPacking>=0,depthPacking:R.depthPacking||0,index0AttributeName:R.index0AttributeName,extensionClipCullDistance:A0&&R.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(A0&&R.extensions.multiDraw===!0||q0)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:R.customProgramCacheKey()};return Fe.vertexUv1s=d.has(1),Fe.vertexUv2s=d.has(2),Fe.vertexUv3s=d.has(3),d.clear(),Fe}function f(R){const H=[];if(R.shaderID?H.push(R.shaderID):(H.push(R.customVertexShaderID),H.push(R.customFragmentShaderID)),R.defines!==void 0)for(const j in R.defines)H.push(j),H.push(R.defines[j]);return R.isRawShaderMaterial===!1&&(N(H,R),M(H,R),H.push(i.outputColorSpace)),H.push(R.customProgramCacheKey),H.join()}function N(R,H){R.push(H.precision),R.push(H.outputColorSpace),R.push(H.envMapMode),R.push(H.envMapCubeUVHeight),R.push(H.mapUv),R.push(H.alphaMapUv),R.push(H.lightMapUv),R.push(H.aoMapUv),R.push(H.bumpMapUv),R.push(H.normalMapUv),R.push(H.displacementMapUv),R.push(H.emissiveMapUv),R.push(H.metalnessMapUv),R.push(H.roughnessMapUv),R.push(H.anisotropyMapUv),R.push(H.clearcoatMapUv),R.push(H.clearcoatNormalMapUv),R.push(H.clearcoatRoughnessMapUv),R.push(H.iridescenceMapUv),R.push(H.iridescenceThicknessMapUv),R.push(H.sheenColorMapUv),R.push(H.sheenRoughnessMapUv),R.push(H.specularMapUv),R.push(H.specularColorMapUv),R.push(H.specularIntensityMapUv),R.push(H.transmissionMapUv),R.push(H.thicknessMapUv),R.push(H.combine),R.push(H.fogExp2),R.push(H.sizeAttenuation),R.push(H.morphTargetsCount),R.push(H.morphAttributeCount),R.push(H.numDirLights),R.push(H.numPointLights),R.push(H.numSpotLights),R.push(H.numSpotLightMaps),R.push(H.numHemiLights),R.push(H.numRectAreaLights),R.push(H.numDirLightShadows),R.push(H.numPointLightShadows),R.push(H.numSpotLightShadows),R.push(H.numSpotLightShadowsWithMaps),R.push(H.numLightProbes),R.push(H.shadowMapType),R.push(H.toneMapping),R.push(H.numClippingPlanes),R.push(H.numClipIntersection),R.push(H.depthPacking)}function M(R,H){o.disableAll(),H.supportsVertexTextures&&o.enable(0),H.instancing&&o.enable(1),H.instancingColor&&o.enable(2),H.instancingMorph&&o.enable(3),H.matcap&&o.enable(4),H.envMap&&o.enable(5),H.normalMapObjectSpace&&o.enable(6),H.normalMapTangentSpace&&o.enable(7),H.clearcoat&&o.enable(8),H.iridescence&&o.enable(9),H.alphaTest&&o.enable(10),H.vertexColors&&o.enable(11),H.vertexAlphas&&o.enable(12),H.vertexUv1s&&o.enable(13),H.vertexUv2s&&o.enable(14),H.vertexUv3s&&o.enable(15),H.vertexTangents&&o.enable(16),H.anisotropy&&o.enable(17),H.alphaHash&&o.enable(18),H.batching&&o.enable(19),H.dispersion&&o.enable(20),H.batchingColor&&o.enable(21),H.gradientMap&&o.enable(22),R.push(o.mask),o.disableAll(),H.fog&&o.enable(0),H.useFog&&o.enable(1),H.flatShading&&o.enable(2),H.logarithmicDepthBuffer&&o.enable(3),H.reverseDepthBuffer&&o.enable(4),H.skinning&&o.enable(5),H.morphTargets&&o.enable(6),H.morphNormals&&o.enable(7),H.morphColors&&o.enable(8),H.premultipliedAlpha&&o.enable(9),H.shadowMapEnabled&&o.enable(10),H.doubleSided&&o.enable(11),H.flipSided&&o.enable(12),H.useDepthPacking&&o.enable(13),H.dithering&&o.enable(14),H.transmission&&o.enable(15),H.sheen&&o.enable(16),H.opaque&&o.enable(17),H.pointsUvs&&o.enable(18),H.decodeVideoTexture&&o.enable(19),H.decodeVideoTextureEmissive&&o.enable(20),H.alphaToCoverage&&o.enable(21),R.push(o.mask)}function P(R){const H=y[R.type];let j;if(H){const K=vn[H];j=wd.clone(K.uniforms)}else j=R.uniforms;return j}function F(R,H){let j;for(let K=0,Q=c.length;K<Q;K++){const e0=c[K];if(e0.cacheKey===H){j=e0,++j.usedTimes;break}}return j===void 0&&(j=new Lh(i,H,R,r),c.push(j)),j}function X(R){if(--R.usedTimes===0){const H=c.indexOf(R);c[H]=c[c.length-1],c.pop(),R.destroy()}}function D(R){l.remove(R)}function U(){l.dispose()}return{getParameters:m,getProgramCacheKey:f,getUniforms:P,acquireProgram:F,releaseProgram:X,releaseShaderCache:D,programs:c,dispose:U}}function Eh(){let i=new WeakMap;function e(a){return i.has(a)}function t(a){let o=i.get(a);return o===void 0&&(o={},i.set(a,o)),o}function n(a){i.delete(a)}function s(a,o,l){i.get(a)[o]=l}function r(){i=new WeakMap}return{has:e,get:t,remove:n,update:s,dispose:r}}function Ch(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function C6(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function z6(){const i=[];let e=0;const t=[],n=[],s=[];function r(){e=0,t.length=0,n.length=0,s.length=0}function a(u,p,h,y,T,m){let f=i[e];return f===void 0?(f={id:u.id,object:u,geometry:p,material:h,groupOrder:y,renderOrder:u.renderOrder,z:T,group:m},i[e]=f):(f.id=u.id,f.object=u,f.geometry=p,f.material=h,f.groupOrder=y,f.renderOrder=u.renderOrder,f.z=T,f.group=m),e++,f}function o(u,p,h,y,T,m){const f=a(u,p,h,y,T,m);h.transmission>0?n.push(f):h.transparent===!0?s.push(f):t.push(f)}function l(u,p,h,y,T,m){const f=a(u,p,h,y,T,m);h.transmission>0?n.unshift(f):h.transparent===!0?s.unshift(f):t.unshift(f)}function d(u,p){t.length>1&&t.sort(u||Ch),n.length>1&&n.sort(p||C6),s.length>1&&s.sort(p||C6)}function c(){for(let u=e,p=i.length;u<p;u++){const h=i[u];if(h.id===null)break;h.id=null,h.object=null,h.geometry=null,h.material=null,h.group=null}}return{opaque:t,transmissive:n,transparent:s,init:r,push:o,unshift:l,finish:c,sort:d}}function zh(){let i=new WeakMap;function e(n,s){const r=i.get(n);let a;return r===void 0?(a=new z6,i.set(n,[a])):s>=r.length?(a=new z6,r.push(a)):a=r[s],a}function t(){i=new WeakMap}return{get:e,dispose:t}}function Ah(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new S,color:new te};break;case"SpotLight":t={position:new S,direction:new S,color:new te,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new S,color:new te,distance:0,decay:0};break;case"HemisphereLight":t={direction:new S,skyColor:new te,groundColor:new te};break;case"RectAreaLight":t={color:new te,position:new S,halfWidth:new S,halfHeight:new S};break}return i[e.id]=t,t}}}function Ih(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $0};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $0};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $0,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let Xh=0;function Vh(i,e){return(e.castShadow?2:0)-(i.castShadow?2:0)+(e.map?1:0)-(i.map?1:0)}function Fh(i){const e=new Ah,t=Ih(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let d=0;d<9;d++)n.probe.push(new S);const s=new S,r=new B0,a=new B0;function o(d){let c=0,u=0,p=0;for(let R=0;R<9;R++)n.probe[R].set(0,0,0);let h=0,y=0,T=0,m=0,f=0,N=0,M=0,P=0,F=0,X=0,D=0;d.sort(Vh);for(let R=0,H=d.length;R<H;R++){const j=d[R],K=j.color,Q=j.intensity,e0=j.distance,u0=j.shadow&&j.shadow.map?j.shadow.map.texture:null;if(j.isAmbientLight)c+=K.r*Q,u+=K.g*Q,p+=K.b*Q;else if(j.isLightProbe){for(let n0=0;n0<9;n0++)n.probe[n0].addScaledVector(j.sh.coefficients[n0],Q);D++}else if(j.isDirectionalLight){const n0=e.get(j);if(n0.color.copy(j.color).multiplyScalar(j.intensity),j.castShadow){const y0=j.shadow,t0=t.get(j);t0.shadowIntensity=y0.intensity,t0.shadowBias=y0.bias,t0.shadowNormalBias=y0.normalBias,t0.shadowRadius=y0.radius,t0.shadowMapSize=y0.mapSize,n.directionalShadow[h]=t0,n.directionalShadowMap[h]=u0,n.directionalShadowMatrix[h]=j.shadow.matrix,N++}n.directional[h]=n0,h++}else if(j.isSpotLight){const n0=e.get(j);n0.position.setFromMatrixPosition(j.matrixWorld),n0.color.copy(K).multiplyScalar(Q),n0.distance=e0,n0.coneCos=Math.cos(j.angle),n0.penumbraCos=Math.cos(j.angle*(1-j.penumbra)),n0.decay=j.decay,n.spot[T]=n0;const y0=j.shadow;if(j.map&&(n.spotLightMap[F]=j.map,F++,y0.updateMatrices(j),j.castShadow&&X++),n.spotLightMatrix[T]=y0.matrix,j.castShadow){const t0=t.get(j);t0.shadowIntensity=y0.intensity,t0.shadowBias=y0.bias,t0.shadowNormalBias=y0.normalBias,t0.shadowRadius=y0.radius,t0.shadowMapSize=y0.mapSize,n.spotShadow[T]=t0,n.spotShadowMap[T]=u0,P++}T++}else if(j.isRectAreaLight){const n0=e.get(j);n0.color.copy(K).multiplyScalar(Q),n0.halfWidth.set(j.width*.5,0,0),n0.halfHeight.set(0,j.height*.5,0),n.rectArea[m]=n0,m++}else if(j.isPointLight){const n0=e.get(j);if(n0.color.copy(j.color).multiplyScalar(j.intensity),n0.distance=j.distance,n0.decay=j.decay,j.castShadow){const y0=j.shadow,t0=t.get(j);t0.shadowIntensity=y0.intensity,t0.shadowBias=y0.bias,t0.shadowNormalBias=y0.normalBias,t0.shadowRadius=y0.radius,t0.shadowMapSize=y0.mapSize,t0.shadowCameraNear=y0.camera.near,t0.shadowCameraFar=y0.camera.far,n.pointShadow[y]=t0,n.pointShadowMap[y]=u0,n.pointShadowMatrix[y]=j.shadow.matrix,M++}n.point[y]=n0,y++}else if(j.isHemisphereLight){const n0=e.get(j);n0.skyColor.copy(j.color).multiplyScalar(Q),n0.groundColor.copy(j.groundColor).multiplyScalar(Q),n.hemi[f]=n0,f++}}m>0&&(i.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=N0.LTC_FLOAT_1,n.rectAreaLTC2=N0.LTC_FLOAT_2):(n.rectAreaLTC1=N0.LTC_HALF_1,n.rectAreaLTC2=N0.LTC_HALF_2)),n.ambient[0]=c,n.ambient[1]=u,n.ambient[2]=p;const U=n.hash;(U.directionalLength!==h||U.pointLength!==y||U.spotLength!==T||U.rectAreaLength!==m||U.hemiLength!==f||U.numDirectionalShadows!==N||U.numPointShadows!==M||U.numSpotShadows!==P||U.numSpotMaps!==F||U.numLightProbes!==D)&&(n.directional.length=h,n.spot.length=T,n.rectArea.length=m,n.point.length=y,n.hemi.length=f,n.directionalShadow.length=N,n.directionalShadowMap.length=N,n.pointShadow.length=M,n.pointShadowMap.length=M,n.spotShadow.length=P,n.spotShadowMap.length=P,n.directionalShadowMatrix.length=N,n.pointShadowMatrix.length=M,n.spotLightMatrix.length=P+F-X,n.spotLightMap.length=F,n.numSpotLightShadowsWithMaps=X,n.numLightProbes=D,U.directionalLength=h,U.pointLength=y,U.spotLength=T,U.rectAreaLength=m,U.hemiLength=f,U.numDirectionalShadows=N,U.numPointShadows=M,U.numSpotShadows=P,U.numSpotMaps=F,U.numLightProbes=D,n.version=Xh++)}function l(d,c){let u=0,p=0,h=0,y=0,T=0;const m=c.matrixWorldInverse;for(let f=0,N=d.length;f<N;f++){const M=d[f];if(M.isDirectionalLight){const P=n.directional[u];P.direction.setFromMatrixPosition(M.matrixWorld),s.setFromMatrixPosition(M.target.matrixWorld),P.direction.sub(s),P.direction.transformDirection(m),u++}else if(M.isSpotLight){const P=n.spot[h];P.position.setFromMatrixPosition(M.matrixWorld),P.position.applyMatrix4(m),P.direction.setFromMatrixPosition(M.matrixWorld),s.setFromMatrixPosition(M.target.matrixWorld),P.direction.sub(s),P.direction.transformDirection(m),h++}else if(M.isRectAreaLight){const P=n.rectArea[y];P.position.setFromMatrixPosition(M.matrixWorld),P.position.applyMatrix4(m),a.identity(),r.copy(M.matrixWorld),r.premultiply(m),a.extractRotation(r),P.halfWidth.set(M.width*.5,0,0),P.halfHeight.set(0,M.height*.5,0),P.halfWidth.applyMatrix4(a),P.halfHeight.applyMatrix4(a),y++}else if(M.isPointLight){const P=n.point[p];P.position.setFromMatrixPosition(M.matrixWorld),P.position.applyMatrix4(m),p++}else if(M.isHemisphereLight){const P=n.hemi[T];P.direction.setFromMatrixPosition(M.matrixWorld),P.direction.transformDirection(m),T++}}}return{setup:o,setupView:l,state:n}}function A6(i){const e=new Fh(i),t=[],n=[];function s(c){d.camera=c,t.length=0,n.length=0}function r(c){t.push(c)}function a(c){n.push(c)}function o(){e.setup(t)}function l(c){e.setupView(t,c)}const d={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:s,state:d,setupLights:o,setupLightsView:l,pushLight:r,pushShadow:a}}function Dh(i){let e=new WeakMap;function t(s,r=0){const a=e.get(s);let o;return a===void 0?(o=new A6(i),e.set(s,[o])):r>=a.length?(o=new A6(i),a.push(o)):o=a[r],o}function n(){e=new WeakMap}return{get:t,dispose:n}}const Wh=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,jh=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Yh(i,e,t){let n=new J7;const s=new $0,r=new $0,a=new He,o=new Vd({depthPacking:Pl}),l=new Fd,d={},c=t.maxTextureSize,u={[Un]:Wt,[Wt]:Un,[gn]:gn},p=new p1({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new $0},radius:{value:4}},vertexShader:Wh,fragmentShader:jh}),h=p.clone();h.defines.HORIZONTAL_PASS=1;const y=new Rt;y.setAttribute("position",new At(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const T=new Be(y,p),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=d4;let f=this.type;this.render=function(X,D,U){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||X.length===0)return;const R=i.getRenderTarget(),H=i.getActiveCubeFace(),j=i.getActiveMipmapLevel(),K=i.state;K.setBlending(c1),K.buffers.color.setClear(1,1,1,1),K.buffers.depth.setTest(!0),K.setScissorTest(!1);const Q=f!==bn&&this.type===bn,e0=f===bn&&this.type!==bn;for(let u0=0,n0=X.length;u0<n0;u0++){const y0=X[u0],t0=y0.shadow;if(t0===void 0){console.warn("THREE.WebGLShadowMap:",y0,"has no shadow.");continue}if(t0.autoUpdate===!1&&t0.needsUpdate===!1)continue;s.copy(t0.mapSize);const x0=t0.getFrameExtents();if(s.multiply(x0),r.copy(t0.mapSize),(s.x>c||s.y>c)&&(s.x>c&&(r.x=Math.floor(c/x0.x),s.x=r.x*x0.x,t0.mapSize.x=r.x),s.y>c&&(r.y=Math.floor(c/x0.y),s.y=r.y*x0.y,t0.mapSize.y=r.y)),t0.map===null||Q===!0||e0===!0){const F0=this.type!==bn?{minFilter:zt,magFilter:zt}:{};t0.map!==null&&t0.map.dispose(),t0.map=new M1(s.x,s.y,F0),t0.map.texture.name=y0.name+".shadowMap",t0.camera.updateProjectionMatrix()}i.setRenderTarget(t0.map),i.clear();const L0=t0.getViewportCount();for(let F0=0;F0<L0;F0++){const K0=t0.getViewport(F0);a.set(r.x*K0.x,r.y*K0.y,r.x*K0.z,r.y*K0.w),K.viewport(a),t0.updateMatrices(y0,F0),n=t0.getFrustum(),P(D,U,t0.camera,y0,this.type)}t0.isPointLightShadow!==!0&&this.type===bn&&N(t0,U),t0.needsUpdate=!1}f=this.type,m.needsUpdate=!1,i.setRenderTarget(R,H,j)};function N(X,D){const U=e.update(T);p.defines.VSM_SAMPLES!==X.blurSamples&&(p.defines.VSM_SAMPLES=X.blurSamples,h.defines.VSM_SAMPLES=X.blurSamples,p.needsUpdate=!0,h.needsUpdate=!0),X.mapPass===null&&(X.mapPass=new M1(s.x,s.y)),p.uniforms.shadow_pass.value=X.map.texture,p.uniforms.resolution.value=X.mapSize,p.uniforms.radius.value=X.radius,i.setRenderTarget(X.mapPass),i.clear(),i.renderBufferDirect(D,null,U,p,T,null),h.uniforms.shadow_pass.value=X.mapPass.texture,h.uniforms.resolution.value=X.mapSize,h.uniforms.radius.value=X.radius,i.setRenderTarget(X.map),i.clear(),i.renderBufferDirect(D,null,U,h,T,null)}function M(X,D,U,R){let H=null;const j=U.isPointLight===!0?X.customDistanceMaterial:X.customDepthMaterial;if(j!==void 0)H=j;else if(H=U.isPointLight===!0?l:o,i.localClippingEnabled&&D.clipShadows===!0&&Array.isArray(D.clippingPlanes)&&D.clippingPlanes.length!==0||D.displacementMap&&D.displacementScale!==0||D.alphaMap&&D.alphaTest>0||D.map&&D.alphaTest>0||D.alphaToCoverage===!0){const K=H.uuid,Q=D.uuid;let e0=d[K];e0===void 0&&(e0={},d[K]=e0);let u0=e0[Q];u0===void 0&&(u0=H.clone(),e0[Q]=u0,D.addEventListener("dispose",F)),H=u0}if(H.visible=D.visible,H.wireframe=D.wireframe,R===bn?H.side=D.shadowSide!==null?D.shadowSide:D.side:H.side=D.shadowSide!==null?D.shadowSide:u[D.side],H.alphaMap=D.alphaMap,H.alphaTest=D.alphaToCoverage===!0?.5:D.alphaTest,H.map=D.map,H.clipShadows=D.clipShadows,H.clippingPlanes=D.clippingPlanes,H.clipIntersection=D.clipIntersection,H.displacementMap=D.displacementMap,H.displacementScale=D.displacementScale,H.displacementBias=D.displacementBias,H.wireframeLinewidth=D.wireframeLinewidth,H.linewidth=D.linewidth,U.isPointLight===!0&&H.isMeshDistanceMaterial===!0){const K=i.properties.get(H);K.light=U}return H}function P(X,D,U,R,H){if(X.visible===!1)return;if(X.layers.test(D.layers)&&(X.isMesh||X.isLine||X.isPoints)&&(X.castShadow||X.receiveShadow&&H===bn)&&(!X.frustumCulled||n.intersectsObject(X))){X.modelViewMatrix.multiplyMatrices(U.matrixWorldInverse,X.matrixWorld);const Q=e.update(X),e0=X.material;if(Array.isArray(e0)){const u0=Q.groups;for(let n0=0,y0=u0.length;n0<y0;n0++){const t0=u0[n0],x0=e0[t0.materialIndex];if(x0&&x0.visible){const L0=M(X,x0,R,H);X.onBeforeShadow(i,X,D,U,Q,L0,t0),i.renderBufferDirect(U,null,Q,L0,X,t0),X.onAfterShadow(i,X,D,U,Q,L0,t0)}}}else if(e0.visible){const u0=M(X,e0,R,H);X.onBeforeShadow(i,X,D,U,Q,u0,null),i.renderBufferDirect(U,null,Q,u0,X,null),X.onAfterShadow(i,X,D,U,Q,u0,null)}}const K=X.children;for(let Q=0,e0=K.length;Q<e0;Q++)P(K[Q],D,U,R,H)}function F(X){X.target.removeEventListener("dispose",F);for(const U in d){const R=d[U],H=X.target.uuid;H in R&&(R[H].dispose(),delete R[H])}}}const Gh={[ca]:ua,[pa]:ma,[fa]:ba,[wi]:ha,[ua]:ca,[ma]:pa,[ba]:fa,[ha]:wi};function Uh(i,e){function t(){let G=!1;const _=new He;let h0=null;const E0=new He(0,0,0,0);return{setMask:function(b0){h0!==b0&&!G&&(i.colorMask(b0,b0,b0,b0),h0=b0)},setLocked:function(b0){G=b0},setClear:function(b0,d0,A0,ne,Fe){Fe===!0&&(b0*=ne,d0*=ne,A0*=ne),_.set(b0,d0,A0,ne),E0.equals(_)===!1&&(i.clearColor(b0,d0,A0,ne),E0.copy(_))},reset:function(){G=!1,h0=null,E0.set(-1,0,0,0)}}}function n(){let G=!1,_=!1,h0=null,E0=null,b0=null;return{setReversed:function(d0){if(_!==d0){const A0=e.get("EXT_clip_control");d0?A0.clipControlEXT(A0.LOWER_LEFT_EXT,A0.ZERO_TO_ONE_EXT):A0.clipControlEXT(A0.LOWER_LEFT_EXT,A0.NEGATIVE_ONE_TO_ONE_EXT),_=d0;const ne=b0;b0=null,this.setClear(ne)}},getReversed:function(){return _},setTest:function(d0){d0?S0(i.DEPTH_TEST):z0(i.DEPTH_TEST)},setMask:function(d0){h0!==d0&&!G&&(i.depthMask(d0),h0=d0)},setFunc:function(d0){if(_&&(d0=Gh[d0]),E0!==d0){switch(d0){case ca:i.depthFunc(i.NEVER);break;case ua:i.depthFunc(i.ALWAYS);break;case pa:i.depthFunc(i.LESS);break;case wi:i.depthFunc(i.LEQUAL);break;case fa:i.depthFunc(i.EQUAL);break;case ha:i.depthFunc(i.GEQUAL);break;case ma:i.depthFunc(i.GREATER);break;case ba:i.depthFunc(i.NOTEQUAL);break;default:i.depthFunc(i.LEQUAL)}E0=d0}},setLocked:function(d0){G=d0},setClear:function(d0){b0!==d0&&(_&&(d0=1-d0),i.clearDepth(d0),b0=d0)},reset:function(){G=!1,h0=null,E0=null,b0=null,_=!1}}}function s(){let G=!1,_=null,h0=null,E0=null,b0=null,d0=null,A0=null,ne=null,Fe=null;return{setTest:function(Pe){G||(Pe?S0(i.STENCIL_TEST):z0(i.STENCIL_TEST))},setMask:function(Pe){_!==Pe&&!G&&(i.stencilMask(Pe),_=Pe)},setFunc:function(Pe,jt,$t){(h0!==Pe||E0!==jt||b0!==$t)&&(i.stencilFunc(Pe,jt,$t),h0=Pe,E0=jt,b0=$t)},setOp:function(Pe,jt,$t){(d0!==Pe||A0!==jt||ne!==$t)&&(i.stencilOp(Pe,jt,$t),d0=Pe,A0=jt,ne=$t)},setLocked:function(Pe){G=Pe},setClear:function(Pe){Fe!==Pe&&(i.clearStencil(Pe),Fe=Pe)},reset:function(){G=!1,_=null,h0=null,E0=null,b0=null,d0=null,A0=null,ne=null,Fe=null}}}const r=new t,a=new n,o=new s,l=new WeakMap,d=new WeakMap;let c={},u={},p=new WeakMap,h=[],y=null,T=!1,m=null,f=null,N=null,M=null,P=null,F=null,X=null,D=new te(0,0,0),U=0,R=!1,H=null,j=null,K=null,Q=null,e0=null;const u0=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let n0=!1,y0=0;const t0=i.getParameter(i.VERSION);t0.indexOf("WebGL")!==-1?(y0=parseFloat(/^WebGL (\d)/.exec(t0)[1]),n0=y0>=1):t0.indexOf("OpenGL ES")!==-1&&(y0=parseFloat(/^OpenGL ES (\d)/.exec(t0)[1]),n0=y0>=2);let x0=null,L0={};const F0=i.getParameter(i.SCISSOR_BOX),K0=i.getParameter(i.VIEWPORT),ue=new He().fromArray(F0),s0=new He().fromArray(K0);function w0(G,_,h0,E0){const b0=new Uint8Array(4),d0=i.createTexture();i.bindTexture(G,d0),i.texParameteri(G,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(G,i.TEXTURE_MAG_FILTER,i.NEAREST);for(let A0=0;A0<h0;A0++)G===i.TEXTURE_3D||G===i.TEXTURE_2D_ARRAY?i.texImage3D(_,0,i.RGBA,1,1,E0,0,i.RGBA,i.UNSIGNED_BYTE,b0):i.texImage2D(_+A0,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,b0);return d0}const T0={};T0[i.TEXTURE_2D]=w0(i.TEXTURE_2D,i.TEXTURE_2D,1),T0[i.TEXTURE_CUBE_MAP]=w0(i.TEXTURE_CUBE_MAP,i.TEXTURE_CUBE_MAP_POSITIVE_X,6),T0[i.TEXTURE_2D_ARRAY]=w0(i.TEXTURE_2D_ARRAY,i.TEXTURE_2D_ARRAY,1,1),T0[i.TEXTURE_3D]=w0(i.TEXTURE_3D,i.TEXTURE_3D,1,1),r.setClear(0,0,0,1),a.setClear(1),o.setClear(0),S0(i.DEPTH_TEST),a.setFunc(wi),we(!1),Ce(h5),S0(i.CULL_FACE),W(c1);function S0(G){c[G]!==!0&&(i.enable(G),c[G]=!0)}function z0(G){c[G]!==!1&&(i.disable(G),c[G]=!1)}function me(G,_){return u[G]!==_?(i.bindFramebuffer(G,_),u[G]=_,G===i.DRAW_FRAMEBUFFER&&(u[i.FRAMEBUFFER]=_),G===i.FRAMEBUFFER&&(u[i.DRAW_FRAMEBUFFER]=_),!0):!1}function q0(G,_){let h0=h,E0=!1;if(G){h0=p.get(_),h0===void 0&&(h0=[],p.set(_,h0));const b0=G.textures;if(h0.length!==b0.length||h0[0]!==i.COLOR_ATTACHMENT0){for(let d0=0,A0=b0.length;d0<A0;d0++)h0[d0]=i.COLOR_ATTACHMENT0+d0;h0.length=b0.length,E0=!0}}else h0[0]!==i.BACK&&(h0[0]=i.BACK,E0=!0);E0&&i.drawBuffers(h0)}function Re(G){return y!==G?(i.useProgram(G),y=G,!0):!1}const Ee={[H1]:i.FUNC_ADD,[B8]:i.FUNC_SUBTRACT,[K8]:i.FUNC_REVERSE_SUBTRACT};Ee[Q8]=i.MIN,Ee[_8]=i.MAX;const fe={[$8]:i.ZERO,[el]:i.ONE,[tl]:i.SRC_COLOR,[la]:i.SRC_ALPHA,[ol]:i.SRC_ALPHA_SATURATE,[rl]:i.DST_COLOR,[il]:i.DST_ALPHA,[nl]:i.ONE_MINUS_SRC_COLOR,[da]:i.ONE_MINUS_SRC_ALPHA,[al]:i.ONE_MINUS_DST_COLOR,[sl]:i.ONE_MINUS_DST_ALPHA,[ll]:i.CONSTANT_COLOR,[dl]:i.ONE_MINUS_CONSTANT_COLOR,[cl]:i.CONSTANT_ALPHA,[ul]:i.ONE_MINUS_CONSTANT_ALPHA};function W(G,_,h0,E0,b0,d0,A0,ne,Fe,Pe){if(G===c1){T===!0&&(z0(i.BLEND),T=!1);return}if(T===!1&&(S0(i.BLEND),T=!0),G!==J8){if(G!==m||Pe!==R){if((f!==H1||P!==H1)&&(i.blendEquation(i.FUNC_ADD),f=H1,P=H1),Pe)switch(G){case mi:i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case m5:i.blendFunc(i.ONE,i.ONE);break;case b5:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case y5:i.blendFuncSeparate(i.DST_COLOR,i.ONE_MINUS_SRC_ALPHA,i.ZERO,i.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case mi:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case m5:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE,i.ONE,i.ONE);break;case b5:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case y5:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}N=null,M=null,F=null,X=null,D.set(0,0,0),U=0,m=G,R=Pe}return}b0=b0||_,d0=d0||h0,A0=A0||E0,(_!==f||b0!==P)&&(i.blendEquationSeparate(Ee[_],Ee[b0]),f=_,P=b0),(h0!==N||E0!==M||d0!==F||A0!==X)&&(i.blendFuncSeparate(fe[h0],fe[E0],fe[d0],fe[A0]),N=h0,M=E0,F=d0,X=A0),(ne.equals(D)===!1||Fe!==U)&&(i.blendColor(ne.r,ne.g,ne.b,Fe),D.copy(ne),U=Fe),m=G,R=!1}function lt(G,_){G.side===gn?z0(i.CULL_FACE):S0(i.CULL_FACE);let h0=G.side===Wt;_&&(h0=!h0),we(h0),G.blending===mi&&G.transparent===!1?W(c1):W(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.blendColor,G.blendAlpha,G.premultipliedAlpha),a.setFunc(G.depthFunc),a.setTest(G.depthTest),a.setMask(G.depthWrite),r.setMask(G.colorWrite);const E0=G.stencilWrite;o.setTest(E0),E0&&(o.setMask(G.stencilWriteMask),o.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),o.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),ve(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?S0(i.SAMPLE_ALPHA_TO_COVERAGE):z0(i.SAMPLE_ALPHA_TO_COVERAGE)}function we(G){H!==G&&(G?i.frontFace(i.CW):i.frontFace(i.CCW),H=G)}function Ce(G){G!==q8?(S0(i.CULL_FACE),G!==j&&(G===h5?i.cullFace(i.BACK):G===Z8?i.cullFace(i.FRONT):i.cullFace(i.FRONT_AND_BACK))):z0(i.CULL_FACE),j=G}function D0(G){G!==K&&(n0&&i.lineWidth(G),K=G)}function ve(G,_,h0){G?(S0(i.POLYGON_OFFSET_FILL),(Q!==_||e0!==h0)&&(i.polygonOffset(_,h0),Q=_,e0=h0)):z0(i.POLYGON_OFFSET_FILL)}function U0(G){G?S0(i.SCISSOR_TEST):z0(i.SCISSOR_TEST)}function ie(G){G===void 0&&(G=i.TEXTURE0+u0-1),x0!==G&&(i.activeTexture(G),x0=G)}function Ke(G,_,h0){h0===void 0&&(x0===null?h0=i.TEXTURE0+u0-1:h0=x0);let E0=L0[h0];E0===void 0&&(E0={type:void 0,texture:void 0},L0[h0]=E0),(E0.type!==G||E0.texture!==_)&&(x0!==h0&&(i.activeTexture(h0),x0=h0),i.bindTexture(G,_||T0[G]),E0.type=G,E0.texture=_)}function z(){const G=L0[x0];G!==void 0&&G.type!==void 0&&(i.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function x(){try{i.compressedTexImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function B(){try{i.compressedTexImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function r0(){try{i.texSubImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function p0(){try{i.texSubImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function i0(){try{i.compressedTexSubImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function I0(){try{i.compressedTexSubImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function H0(){try{i.texStorage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function X0(){try{i.texStorage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function j0(){try{i.texImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function l0(){try{i.texImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function P0(G){ue.equals(G)===!1&&(i.scissor(G.x,G.y,G.z,G.w),ue.copy(G))}function Z0(G){s0.equals(G)===!1&&(i.viewport(G.x,G.y,G.z,G.w),s0.copy(G))}function W0(G,_){let h0=d.get(_);h0===void 0&&(h0=new WeakMap,d.set(_,h0));let E0=h0.get(G);E0===void 0&&(E0=i.getUniformBlockIndex(_,G.name),h0.set(G,E0))}function v0(G,_){const E0=d.get(_).get(G);l.get(_)!==E0&&(i.uniformBlockBinding(_,E0,G.__bindingPointIndex),l.set(_,E0))}function V0(){i.disable(i.BLEND),i.disable(i.CULL_FACE),i.disable(i.DEPTH_TEST),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SCISSOR_TEST),i.disable(i.STENCIL_TEST),i.disable(i.SAMPLE_ALPHA_TO_COVERAGE),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ZERO),i.blendFuncSeparate(i.ONE,i.ZERO,i.ONE,i.ZERO),i.blendColor(0,0,0,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(i.LESS),a.setReversed(!1),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(i.ALWAYS,0,4294967295),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.clearStencil(0),i.cullFace(i.BACK),i.frontFace(i.CCW),i.polygonOffset(0,0),i.activeTexture(i.TEXTURE0),i.bindFramebuffer(i.FRAMEBUFFER,null),i.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),i.bindFramebuffer(i.READ_FRAMEBUFFER,null),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),c={},x0=null,L0={},u={},p=new WeakMap,h=[],y=null,T=!1,m=null,f=null,N=null,M=null,P=null,F=null,X=null,D=new te(0,0,0),U=0,R=!1,H=null,j=null,K=null,Q=null,e0=null,ue.set(0,0,i.canvas.width,i.canvas.height),s0.set(0,0,i.canvas.width,i.canvas.height),r.reset(),a.reset(),o.reset()}return{buffers:{color:r,depth:a,stencil:o},enable:S0,disable:z0,bindFramebuffer:me,drawBuffers:q0,useProgram:Re,setBlending:W,setMaterial:lt,setFlipSided:we,setCullFace:Ce,setLineWidth:D0,setPolygonOffset:ve,setScissorTest:U0,activeTexture:ie,bindTexture:Ke,unbindTexture:z,compressedTexImage2D:x,compressedTexImage3D:B,texImage2D:j0,texImage3D:l0,updateUBOMapping:W0,uniformBlockBinding:v0,texStorage2D:H0,texStorage3D:X0,texSubImage2D:r0,texSubImage3D:p0,compressedTexSubImage2D:i0,compressedTexSubImage3D:I0,scissor:P0,viewport:Z0,reset:V0}}function qh(i,e,t,n,s,r,a){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),d=new $0,c=new WeakMap;let u;const p=new WeakMap;let h=!1;try{h=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(z,x){return h?new OffscreenCanvas(z,x):m2("canvas")}function T(z,x,B){let r0=1;const p0=Ke(z);if((p0.width>B||p0.height>B)&&(r0=B/Math.max(p0.width,p0.height)),r0<1)if(typeof HTMLImageElement<"u"&&z instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&z instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&z instanceof ImageBitmap||typeof VideoFrame<"u"&&z instanceof VideoFrame){const i0=Math.floor(r0*p0.width),I0=Math.floor(r0*p0.height);u===void 0&&(u=y(i0,I0));const H0=x?y(i0,I0):u;return H0.width=i0,H0.height=I0,H0.getContext("2d").drawImage(z,0,0,i0,I0),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+p0.width+"x"+p0.height+") to ("+i0+"x"+I0+")."),H0}else return"data"in z&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+p0.width+"x"+p0.height+")."),z;return z}function m(z){return z.generateMipmaps}function f(z){i.generateMipmap(z)}function N(z){return z.isWebGLCubeRenderTarget?i.TEXTURE_CUBE_MAP:z.isWebGL3DRenderTarget?i.TEXTURE_3D:z.isWebGLArrayRenderTarget||z.isCompressedArrayTexture?i.TEXTURE_2D_ARRAY:i.TEXTURE_2D}function M(z,x,B,r0,p0=!1){if(z!==null){if(i[z]!==void 0)return i[z];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+z+"'")}let i0=x;if(x===i.RED&&(B===i.FLOAT&&(i0=i.R32F),B===i.HALF_FLOAT&&(i0=i.R16F),B===i.UNSIGNED_BYTE&&(i0=i.R8)),x===i.RED_INTEGER&&(B===i.UNSIGNED_BYTE&&(i0=i.R8UI),B===i.UNSIGNED_SHORT&&(i0=i.R16UI),B===i.UNSIGNED_INT&&(i0=i.R32UI),B===i.BYTE&&(i0=i.R8I),B===i.SHORT&&(i0=i.R16I),B===i.INT&&(i0=i.R32I)),x===i.RG&&(B===i.FLOAT&&(i0=i.RG32F),B===i.HALF_FLOAT&&(i0=i.RG16F),B===i.UNSIGNED_BYTE&&(i0=i.RG8)),x===i.RG_INTEGER&&(B===i.UNSIGNED_BYTE&&(i0=i.RG8UI),B===i.UNSIGNED_SHORT&&(i0=i.RG16UI),B===i.UNSIGNED_INT&&(i0=i.RG32UI),B===i.BYTE&&(i0=i.RG8I),B===i.SHORT&&(i0=i.RG16I),B===i.INT&&(i0=i.RG32I)),x===i.RGB_INTEGER&&(B===i.UNSIGNED_BYTE&&(i0=i.RGB8UI),B===i.UNSIGNED_SHORT&&(i0=i.RGB16UI),B===i.UNSIGNED_INT&&(i0=i.RGB32UI),B===i.BYTE&&(i0=i.RGB8I),B===i.SHORT&&(i0=i.RGB16I),B===i.INT&&(i0=i.RGB32I)),x===i.RGBA_INTEGER&&(B===i.UNSIGNED_BYTE&&(i0=i.RGBA8UI),B===i.UNSIGNED_SHORT&&(i0=i.RGBA16UI),B===i.UNSIGNED_INT&&(i0=i.RGBA32UI),B===i.BYTE&&(i0=i.RGBA8I),B===i.SHORT&&(i0=i.RGBA16I),B===i.INT&&(i0=i.RGBA32I)),x===i.RGB&&B===i.UNSIGNED_INT_5_9_9_9_REV&&(i0=i.RGB9_E5),x===i.RGBA){const I0=p0?W3:ge.getTransfer(r0);B===i.FLOAT&&(i0=i.RGBA32F),B===i.HALF_FLOAT&&(i0=i.RGBA16F),B===i.UNSIGNED_BYTE&&(i0=I0===Ie?i.SRGB8_ALPHA8:i.RGBA8),B===i.UNSIGNED_SHORT_4_4_4_4&&(i0=i.RGBA4),B===i.UNSIGNED_SHORT_5_5_5_1&&(i0=i.RGB5_A1)}return(i0===i.R16F||i0===i.R32F||i0===i.RG16F||i0===i.RG32F||i0===i.RGBA16F||i0===i.RGBA32F)&&e.get("EXT_color_buffer_float"),i0}function P(z,x){let B;return z?x===null||x===R1||x===c2?B=i.DEPTH24_STENCIL8:x===Dt?B=i.DEPTH32F_STENCIL8:x===d2&&(B=i.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):x===null||x===R1||x===c2?B=i.DEPTH_COMPONENT24:x===Dt?B=i.DEPTH_COMPONENT32F:x===d2&&(B=i.DEPTH_COMPONENT16),B}function F(z,x){return m(z)===!0||z.isFramebufferTexture&&z.minFilter!==zt&&z.minFilter!==yt?Math.log2(Math.max(x.width,x.height))+1:z.mipmaps!==void 0&&z.mipmaps.length>0?z.mipmaps.length:z.isCompressedTexture&&Array.isArray(z.image)?x.mipmaps.length:1}function X(z){const x=z.target;x.removeEventListener("dispose",X),U(x),x.isVideoTexture&&c.delete(x)}function D(z){const x=z.target;x.removeEventListener("dispose",D),H(x)}function U(z){const x=n.get(z);if(x.__webglInit===void 0)return;const B=z.source,r0=p.get(B);if(r0){const p0=r0[x.__cacheKey];p0.usedTimes--,p0.usedTimes===0&&R(z),Object.keys(r0).length===0&&p.delete(B)}n.remove(z)}function R(z){const x=n.get(z);i.deleteTexture(x.__webglTexture);const B=z.source,r0=p.get(B);delete r0[x.__cacheKey],a.memory.textures--}function H(z){const x=n.get(z);if(z.depthTexture&&(z.depthTexture.dispose(),n.remove(z.depthTexture)),z.isWebGLCubeRenderTarget)for(let r0=0;r0<6;r0++){if(Array.isArray(x.__webglFramebuffer[r0]))for(let p0=0;p0<x.__webglFramebuffer[r0].length;p0++)i.deleteFramebuffer(x.__webglFramebuffer[r0][p0]);else i.deleteFramebuffer(x.__webglFramebuffer[r0]);x.__webglDepthbuffer&&i.deleteRenderbuffer(x.__webglDepthbuffer[r0])}else{if(Array.isArray(x.__webglFramebuffer))for(let r0=0;r0<x.__webglFramebuffer.length;r0++)i.deleteFramebuffer(x.__webglFramebuffer[r0]);else i.deleteFramebuffer(x.__webglFramebuffer);if(x.__webglDepthbuffer&&i.deleteRenderbuffer(x.__webglDepthbuffer),x.__webglMultisampledFramebuffer&&i.deleteFramebuffer(x.__webglMultisampledFramebuffer),x.__webglColorRenderbuffer)for(let r0=0;r0<x.__webglColorRenderbuffer.length;r0++)x.__webglColorRenderbuffer[r0]&&i.deleteRenderbuffer(x.__webglColorRenderbuffer[r0]);x.__webglDepthRenderbuffer&&i.deleteRenderbuffer(x.__webglDepthRenderbuffer)}const B=z.textures;for(let r0=0,p0=B.length;r0<p0;r0++){const i0=n.get(B[r0]);i0.__webglTexture&&(i.deleteTexture(i0.__webglTexture),a.memory.textures--),n.remove(B[r0])}n.remove(z)}let j=0;function K(){j=0}function Q(){const z=j;return z>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+z+" texture units while this GPU supports only "+s.maxTextures),j+=1,z}function e0(z){const x=[];return x.push(z.wrapS),x.push(z.wrapT),x.push(z.wrapR||0),x.push(z.magFilter),x.push(z.minFilter),x.push(z.anisotropy),x.push(z.internalFormat),x.push(z.format),x.push(z.type),x.push(z.generateMipmaps),x.push(z.premultiplyAlpha),x.push(z.flipY),x.push(z.unpackAlignment),x.push(z.colorSpace),x.join()}function u0(z,x){const B=n.get(z);if(z.isVideoTexture&&U0(z),z.isRenderTargetTexture===!1&&z.version>0&&B.__version!==z.version){const r0=z.image;if(r0===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(r0.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{T0(B,z,x);return}}t.bindTexture(i.TEXTURE_2D,B.__webglTexture,i.TEXTURE0+x)}function n0(z,x){const B=n.get(z);if(z.version>0&&B.__version!==z.version){T0(B,z,x);return}t.bindTexture(i.TEXTURE_2D_ARRAY,B.__webglTexture,i.TEXTURE0+x)}function y0(z,x){const B=n.get(z);if(z.version>0&&B.__version!==z.version){T0(B,z,x);return}t.bindTexture(i.TEXTURE_3D,B.__webglTexture,i.TEXTURE0+x)}function t0(z,x){const B=n.get(z);if(z.version>0&&B.__version!==z.version){S0(B,z,x);return}t.bindTexture(i.TEXTURE_CUBE_MAP,B.__webglTexture,i.TEXTURE0+x)}const x0={[Si]:i.REPEAT,[wn]:i.CLAMP_TO_EDGE,[D3]:i.MIRRORED_REPEAT},L0={[zt]:i.NEAREST,[p4]:i.NEAREST_MIPMAP_NEAREST,[n2]:i.NEAREST_MIPMAP_LINEAR,[yt]:i.LINEAR,[M3]:i.LINEAR_MIPMAP_NEAREST,[Tn]:i.LINEAR_MIPMAP_LINEAR},F0={[Ll]:i.NEVER,[Cl]:i.ALWAYS,[Nl]:i.LESS,[T4]:i.LEQUAL,[Rl]:i.EQUAL,[El]:i.GEQUAL,[Ml]:i.GREATER,[Ol]:i.NOTEQUAL};function K0(z,x){if(x.type===Dt&&e.has("OES_texture_float_linear")===!1&&(x.magFilter===yt||x.magFilter===M3||x.magFilter===n2||x.magFilter===Tn||x.minFilter===yt||x.minFilter===M3||x.minFilter===n2||x.minFilter===Tn)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),i.texParameteri(z,i.TEXTURE_WRAP_S,x0[x.wrapS]),i.texParameteri(z,i.TEXTURE_WRAP_T,x0[x.wrapT]),(z===i.TEXTURE_3D||z===i.TEXTURE_2D_ARRAY)&&i.texParameteri(z,i.TEXTURE_WRAP_R,x0[x.wrapR]),i.texParameteri(z,i.TEXTURE_MAG_FILTER,L0[x.magFilter]),i.texParameteri(z,i.TEXTURE_MIN_FILTER,L0[x.minFilter]),x.compareFunction&&(i.texParameteri(z,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(z,i.TEXTURE_COMPARE_FUNC,F0[x.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(x.magFilter===zt||x.minFilter!==n2&&x.minFilter!==Tn||x.type===Dt&&e.has("OES_texture_float_linear")===!1)return;if(x.anisotropy>1||n.get(x).__currentAnisotropy){const B=e.get("EXT_texture_filter_anisotropic");i.texParameterf(z,B.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(x.anisotropy,s.getMaxAnisotropy())),n.get(x).__currentAnisotropy=x.anisotropy}}}function ue(z,x){let B=!1;z.__webglInit===void 0&&(z.__webglInit=!0,x.addEventListener("dispose",X));const r0=x.source;let p0=p.get(r0);p0===void 0&&(p0={},p.set(r0,p0));const i0=e0(x);if(i0!==z.__cacheKey){p0[i0]===void 0&&(p0[i0]={texture:i.createTexture(),usedTimes:0},a.memory.textures++,B=!0),p0[i0].usedTimes++;const I0=p0[z.__cacheKey];I0!==void 0&&(p0[z.__cacheKey].usedTimes--,I0.usedTimes===0&&R(x)),z.__cacheKey=i0,z.__webglTexture=p0[i0].texture}return B}function s0(z,x,B){return Math.floor(Math.floor(z/B)/x)}function w0(z,x,B,r0){const i0=z.updateRanges;if(i0.length===0)t.texSubImage2D(i.TEXTURE_2D,0,0,0,x.width,x.height,B,r0,x.data);else{i0.sort((l0,P0)=>l0.start-P0.start);let I0=0;for(let l0=1;l0<i0.length;l0++){const P0=i0[I0],Z0=i0[l0],W0=P0.start+P0.count,v0=s0(Z0.start,x.width,4),V0=s0(P0.start,x.width,4);Z0.start<=W0+1&&v0===V0&&s0(Z0.start+Z0.count-1,x.width,4)===v0?P0.count=Math.max(P0.count,Z0.start+Z0.count-P0.start):(++I0,i0[I0]=Z0)}i0.length=I0+1;const H0=i.getParameter(i.UNPACK_ROW_LENGTH),X0=i.getParameter(i.UNPACK_SKIP_PIXELS),j0=i.getParameter(i.UNPACK_SKIP_ROWS);i.pixelStorei(i.UNPACK_ROW_LENGTH,x.width);for(let l0=0,P0=i0.length;l0<P0;l0++){const Z0=i0[l0],W0=Math.floor(Z0.start/4),v0=Math.ceil(Z0.count/4),V0=W0%x.width,G=Math.floor(W0/x.width),_=v0,h0=1;i.pixelStorei(i.UNPACK_SKIP_PIXELS,V0),i.pixelStorei(i.UNPACK_SKIP_ROWS,G),t.texSubImage2D(i.TEXTURE_2D,0,V0,G,_,h0,B,r0,x.data)}z.clearUpdateRanges(),i.pixelStorei(i.UNPACK_ROW_LENGTH,H0),i.pixelStorei(i.UNPACK_SKIP_PIXELS,X0),i.pixelStorei(i.UNPACK_SKIP_ROWS,j0)}}function T0(z,x,B){let r0=i.TEXTURE_2D;(x.isDataArrayTexture||x.isCompressedArrayTexture)&&(r0=i.TEXTURE_2D_ARRAY),x.isData3DTexture&&(r0=i.TEXTURE_3D);const p0=ue(z,x),i0=x.source;t.bindTexture(r0,z.__webglTexture,i.TEXTURE0+B);const I0=n.get(i0);if(i0.version!==I0.__version||p0===!0){t.activeTexture(i.TEXTURE0+B);const H0=ge.getPrimaries(ge.workingColorSpace),X0=x.colorSpace===Vn?null:ge.getPrimaries(x.colorSpace),j0=x.colorSpace===Vn||H0===X0?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,x.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,x.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,x.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,j0);let l0=T(x.image,!1,s.maxTextureSize);l0=ie(x,l0);const P0=r.convert(x.format,x.colorSpace),Z0=r.convert(x.type);let W0=M(x.internalFormat,P0,Z0,x.colorSpace,x.isVideoTexture);K0(r0,x);let v0;const V0=x.mipmaps,G=x.isVideoTexture!==!0,_=I0.__version===void 0||p0===!0,h0=i0.dataReady,E0=F(x,l0);if(x.isDepthTexture)W0=P(x.format===p2,x.type),_&&(G?t.texStorage2D(i.TEXTURE_2D,1,W0,l0.width,l0.height):t.texImage2D(i.TEXTURE_2D,0,W0,l0.width,l0.height,0,P0,Z0,null));else if(x.isDataTexture)if(V0.length>0){G&&_&&t.texStorage2D(i.TEXTURE_2D,E0,W0,V0[0].width,V0[0].height);for(let b0=0,d0=V0.length;b0<d0;b0++)v0=V0[b0],G?h0&&t.texSubImage2D(i.TEXTURE_2D,b0,0,0,v0.width,v0.height,P0,Z0,v0.data):t.texImage2D(i.TEXTURE_2D,b0,W0,v0.width,v0.height,0,P0,Z0,v0.data);x.generateMipmaps=!1}else G?(_&&t.texStorage2D(i.TEXTURE_2D,E0,W0,l0.width,l0.height),h0&&w0(x,l0,P0,Z0)):t.texImage2D(i.TEXTURE_2D,0,W0,l0.width,l0.height,0,P0,Z0,l0.data);else if(x.isCompressedTexture)if(x.isCompressedArrayTexture){G&&_&&t.texStorage3D(i.TEXTURE_2D_ARRAY,E0,W0,V0[0].width,V0[0].height,l0.depth);for(let b0=0,d0=V0.length;b0<d0;b0++)if(v0=V0[b0],x.format!==Ut)if(P0!==null)if(G){if(h0)if(x.layerUpdates.size>0){const A0=u6(v0.width,v0.height,x.format,x.type);for(const ne of x.layerUpdates){const Fe=v0.data.subarray(ne*A0/v0.data.BYTES_PER_ELEMENT,(ne+1)*A0/v0.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,b0,0,0,ne,v0.width,v0.height,1,P0,Fe)}x.clearLayerUpdates()}else t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,b0,0,0,0,v0.width,v0.height,l0.depth,P0,v0.data)}else t.compressedTexImage3D(i.TEXTURE_2D_ARRAY,b0,W0,v0.width,v0.height,l0.depth,0,v0.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else G?h0&&t.texSubImage3D(i.TEXTURE_2D_ARRAY,b0,0,0,0,v0.width,v0.height,l0.depth,P0,Z0,v0.data):t.texImage3D(i.TEXTURE_2D_ARRAY,b0,W0,v0.width,v0.height,l0.depth,0,P0,Z0,v0.data)}else{G&&_&&t.texStorage2D(i.TEXTURE_2D,E0,W0,V0[0].width,V0[0].height);for(let b0=0,d0=V0.length;b0<d0;b0++)v0=V0[b0],x.format!==Ut?P0!==null?G?h0&&t.compressedTexSubImage2D(i.TEXTURE_2D,b0,0,0,v0.width,v0.height,P0,v0.data):t.compressedTexImage2D(i.TEXTURE_2D,b0,W0,v0.width,v0.height,0,v0.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):G?h0&&t.texSubImage2D(i.TEXTURE_2D,b0,0,0,v0.width,v0.height,P0,Z0,v0.data):t.texImage2D(i.TEXTURE_2D,b0,W0,v0.width,v0.height,0,P0,Z0,v0.data)}else if(x.isDataArrayTexture)if(G){if(_&&t.texStorage3D(i.TEXTURE_2D_ARRAY,E0,W0,l0.width,l0.height,l0.depth),h0)if(x.layerUpdates.size>0){const b0=u6(l0.width,l0.height,x.format,x.type);for(const d0 of x.layerUpdates){const A0=l0.data.subarray(d0*b0/l0.data.BYTES_PER_ELEMENT,(d0+1)*b0/l0.data.BYTES_PER_ELEMENT);t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,d0,l0.width,l0.height,1,P0,Z0,A0)}x.clearLayerUpdates()}else t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,l0.width,l0.height,l0.depth,P0,Z0,l0.data)}else t.texImage3D(i.TEXTURE_2D_ARRAY,0,W0,l0.width,l0.height,l0.depth,0,P0,Z0,l0.data);else if(x.isData3DTexture)G?(_&&t.texStorage3D(i.TEXTURE_3D,E0,W0,l0.width,l0.height,l0.depth),h0&&t.texSubImage3D(i.TEXTURE_3D,0,0,0,0,l0.width,l0.height,l0.depth,P0,Z0,l0.data)):t.texImage3D(i.TEXTURE_3D,0,W0,l0.width,l0.height,l0.depth,0,P0,Z0,l0.data);else if(x.isFramebufferTexture){if(_)if(G)t.texStorage2D(i.TEXTURE_2D,E0,W0,l0.width,l0.height);else{let b0=l0.width,d0=l0.height;for(let A0=0;A0<E0;A0++)t.texImage2D(i.TEXTURE_2D,A0,W0,b0,d0,0,P0,Z0,null),b0>>=1,d0>>=1}}else if(V0.length>0){if(G&&_){const b0=Ke(V0[0]);t.texStorage2D(i.TEXTURE_2D,E0,W0,b0.width,b0.height)}for(let b0=0,d0=V0.length;b0<d0;b0++)v0=V0[b0],G?h0&&t.texSubImage2D(i.TEXTURE_2D,b0,0,0,P0,Z0,v0):t.texImage2D(i.TEXTURE_2D,b0,W0,P0,Z0,v0);x.generateMipmaps=!1}else if(G){if(_){const b0=Ke(l0);t.texStorage2D(i.TEXTURE_2D,E0,W0,b0.width,b0.height)}h0&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,P0,Z0,l0)}else t.texImage2D(i.TEXTURE_2D,0,W0,P0,Z0,l0);m(x)&&f(r0),I0.__version=i0.version,x.onUpdate&&x.onUpdate(x)}z.__version=x.version}function S0(z,x,B){if(x.image.length!==6)return;const r0=ue(z,x),p0=x.source;t.bindTexture(i.TEXTURE_CUBE_MAP,z.__webglTexture,i.TEXTURE0+B);const i0=n.get(p0);if(p0.version!==i0.__version||r0===!0){t.activeTexture(i.TEXTURE0+B);const I0=ge.getPrimaries(ge.workingColorSpace),H0=x.colorSpace===Vn?null:ge.getPrimaries(x.colorSpace),X0=x.colorSpace===Vn||I0===H0?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,x.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,x.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,x.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,X0);const j0=x.isCompressedTexture||x.image[0].isCompressedTexture,l0=x.image[0]&&x.image[0].isDataTexture,P0=[];for(let d0=0;d0<6;d0++)!j0&&!l0?P0[d0]=T(x.image[d0],!0,s.maxCubemapSize):P0[d0]=l0?x.image[d0].image:x.image[d0],P0[d0]=ie(x,P0[d0]);const Z0=P0[0],W0=r.convert(x.format,x.colorSpace),v0=r.convert(x.type),V0=M(x.internalFormat,W0,v0,x.colorSpace),G=x.isVideoTexture!==!0,_=i0.__version===void 0||r0===!0,h0=p0.dataReady;let E0=F(x,Z0);K0(i.TEXTURE_CUBE_MAP,x);let b0;if(j0){G&&_&&t.texStorage2D(i.TEXTURE_CUBE_MAP,E0,V0,Z0.width,Z0.height);for(let d0=0;d0<6;d0++){b0=P0[d0].mipmaps;for(let A0=0;A0<b0.length;A0++){const ne=b0[A0];x.format!==Ut?W0!==null?G?h0&&t.compressedTexSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+d0,A0,0,0,ne.width,ne.height,W0,ne.data):t.compressedTexImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+d0,A0,V0,ne.width,ne.height,0,ne.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):G?h0&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+d0,A0,0,0,ne.width,ne.height,W0,v0,ne.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+d0,A0,V0,ne.width,ne.height,0,W0,v0,ne.data)}}}else{if(b0=x.mipmaps,G&&_){b0.length>0&&E0++;const d0=Ke(P0[0]);t.texStorage2D(i.TEXTURE_CUBE_MAP,E0,V0,d0.width,d0.height)}for(let d0=0;d0<6;d0++)if(l0){G?h0&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+d0,0,0,0,P0[d0].width,P0[d0].height,W0,v0,P0[d0].data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+d0,0,V0,P0[d0].width,P0[d0].height,0,W0,v0,P0[d0].data);for(let A0=0;A0<b0.length;A0++){const Fe=b0[A0].image[d0].image;G?h0&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+d0,A0+1,0,0,Fe.width,Fe.height,W0,v0,Fe.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+d0,A0+1,V0,Fe.width,Fe.height,0,W0,v0,Fe.data)}}else{G?h0&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+d0,0,0,0,W0,v0,P0[d0]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+d0,0,V0,W0,v0,P0[d0]);for(let A0=0;A0<b0.length;A0++){const ne=b0[A0];G?h0&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+d0,A0+1,0,0,W0,v0,ne.image[d0]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+d0,A0+1,V0,W0,v0,ne.image[d0])}}}m(x)&&f(i.TEXTURE_CUBE_MAP),i0.__version=p0.version,x.onUpdate&&x.onUpdate(x)}z.__version=x.version}function z0(z,x,B,r0,p0,i0){const I0=r.convert(B.format,B.colorSpace),H0=r.convert(B.type),X0=M(B.internalFormat,I0,H0,B.colorSpace),j0=n.get(x),l0=n.get(B);if(l0.__renderTarget=x,!j0.__hasExternalTextures){const P0=Math.max(1,x.width>>i0),Z0=Math.max(1,x.height>>i0);p0===i.TEXTURE_3D||p0===i.TEXTURE_2D_ARRAY?t.texImage3D(p0,i0,X0,P0,Z0,x.depth,0,I0,H0,null):t.texImage2D(p0,i0,X0,P0,Z0,0,I0,H0,null)}t.bindFramebuffer(i.FRAMEBUFFER,z),ve(x)?o.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,r0,p0,l0.__webglTexture,0,D0(x)):(p0===i.TEXTURE_2D||p0>=i.TEXTURE_CUBE_MAP_POSITIVE_X&&p0<=i.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&i.framebufferTexture2D(i.FRAMEBUFFER,r0,p0,l0.__webglTexture,i0),t.bindFramebuffer(i.FRAMEBUFFER,null)}function me(z,x,B){if(i.bindRenderbuffer(i.RENDERBUFFER,z),x.depthBuffer){const r0=x.depthTexture,p0=r0&&r0.isDepthTexture?r0.type:null,i0=P(x.stencilBuffer,p0),I0=x.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,H0=D0(x);ve(x)?o.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,H0,i0,x.width,x.height):B?i.renderbufferStorageMultisample(i.RENDERBUFFER,H0,i0,x.width,x.height):i.renderbufferStorage(i.RENDERBUFFER,i0,x.width,x.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,I0,i.RENDERBUFFER,z)}else{const r0=x.textures;for(let p0=0;p0<r0.length;p0++){const i0=r0[p0],I0=r.convert(i0.format,i0.colorSpace),H0=r.convert(i0.type),X0=M(i0.internalFormat,I0,H0,i0.colorSpace),j0=D0(x);B&&ve(x)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,j0,X0,x.width,x.height):ve(x)?o.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,j0,X0,x.width,x.height):i.renderbufferStorage(i.RENDERBUFFER,X0,x.width,x.height)}}i.bindRenderbuffer(i.RENDERBUFFER,null)}function q0(z,x){if(x&&x.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(i.FRAMEBUFFER,z),!(x.depthTexture&&x.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const r0=n.get(x.depthTexture);r0.__renderTarget=x,(!r0.__webglTexture||x.depthTexture.image.width!==x.width||x.depthTexture.image.height!==x.height)&&(x.depthTexture.image.width=x.width,x.depthTexture.image.height=x.height,x.depthTexture.needsUpdate=!0),u0(x.depthTexture,0);const p0=r0.__webglTexture,i0=D0(x);if(x.depthTexture.format===u2)ve(x)?o.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,p0,0,i0):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,p0,0);else if(x.depthTexture.format===p2)ve(x)?o.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,p0,0,i0):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,p0,0);else throw new Error("Unknown depthTexture format")}function Re(z){const x=n.get(z),B=z.isWebGLCubeRenderTarget===!0;if(x.__boundDepthTexture!==z.depthTexture){const r0=z.depthTexture;if(x.__depthDisposeCallback&&x.__depthDisposeCallback(),r0){const p0=()=>{delete x.__boundDepthTexture,delete x.__depthDisposeCallback,r0.removeEventListener("dispose",p0)};r0.addEventListener("dispose",p0),x.__depthDisposeCallback=p0}x.__boundDepthTexture=r0}if(z.depthTexture&&!x.__autoAllocateDepthBuffer){if(B)throw new Error("target.depthTexture not supported in Cube render targets");const r0=z.texture.mipmaps;r0&&r0.length>0?q0(x.__webglFramebuffer[0],z):q0(x.__webglFramebuffer,z)}else if(B){x.__webglDepthbuffer=[];for(let r0=0;r0<6;r0++)if(t.bindFramebuffer(i.FRAMEBUFFER,x.__webglFramebuffer[r0]),x.__webglDepthbuffer[r0]===void 0)x.__webglDepthbuffer[r0]=i.createRenderbuffer(),me(x.__webglDepthbuffer[r0],z,!1);else{const p0=z.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,i0=x.__webglDepthbuffer[r0];i.bindRenderbuffer(i.RENDERBUFFER,i0),i.framebufferRenderbuffer(i.FRAMEBUFFER,p0,i.RENDERBUFFER,i0)}}else{const r0=z.texture.mipmaps;if(r0&&r0.length>0?t.bindFramebuffer(i.FRAMEBUFFER,x.__webglFramebuffer[0]):t.bindFramebuffer(i.FRAMEBUFFER,x.__webglFramebuffer),x.__webglDepthbuffer===void 0)x.__webglDepthbuffer=i.createRenderbuffer(),me(x.__webglDepthbuffer,z,!1);else{const p0=z.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,i0=x.__webglDepthbuffer;i.bindRenderbuffer(i.RENDERBUFFER,i0),i.framebufferRenderbuffer(i.FRAMEBUFFER,p0,i.RENDERBUFFER,i0)}}t.bindFramebuffer(i.FRAMEBUFFER,null)}function Ee(z,x,B){const r0=n.get(z);x!==void 0&&z0(r0.__webglFramebuffer,z,z.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,0),B!==void 0&&Re(z)}function fe(z){const x=z.texture,B=n.get(z),r0=n.get(x);z.addEventListener("dispose",D);const p0=z.textures,i0=z.isWebGLCubeRenderTarget===!0,I0=p0.length>1;if(I0||(r0.__webglTexture===void 0&&(r0.__webglTexture=i.createTexture()),r0.__version=x.version,a.memory.textures++),i0){B.__webglFramebuffer=[];for(let H0=0;H0<6;H0++)if(x.mipmaps&&x.mipmaps.length>0){B.__webglFramebuffer[H0]=[];for(let X0=0;X0<x.mipmaps.length;X0++)B.__webglFramebuffer[H0][X0]=i.createFramebuffer()}else B.__webglFramebuffer[H0]=i.createFramebuffer()}else{if(x.mipmaps&&x.mipmaps.length>0){B.__webglFramebuffer=[];for(let H0=0;H0<x.mipmaps.length;H0++)B.__webglFramebuffer[H0]=i.createFramebuffer()}else B.__webglFramebuffer=i.createFramebuffer();if(I0)for(let H0=0,X0=p0.length;H0<X0;H0++){const j0=n.get(p0[H0]);j0.__webglTexture===void 0&&(j0.__webglTexture=i.createTexture(),a.memory.textures++)}if(z.samples>0&&ve(z)===!1){B.__webglMultisampledFramebuffer=i.createFramebuffer(),B.__webglColorRenderbuffer=[],t.bindFramebuffer(i.FRAMEBUFFER,B.__webglMultisampledFramebuffer);for(let H0=0;H0<p0.length;H0++){const X0=p0[H0];B.__webglColorRenderbuffer[H0]=i.createRenderbuffer(),i.bindRenderbuffer(i.RENDERBUFFER,B.__webglColorRenderbuffer[H0]);const j0=r.convert(X0.format,X0.colorSpace),l0=r.convert(X0.type),P0=M(X0.internalFormat,j0,l0,X0.colorSpace,z.isXRRenderTarget===!0),Z0=D0(z);i.renderbufferStorageMultisample(i.RENDERBUFFER,Z0,P0,z.width,z.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+H0,i.RENDERBUFFER,B.__webglColorRenderbuffer[H0])}i.bindRenderbuffer(i.RENDERBUFFER,null),z.depthBuffer&&(B.__webglDepthRenderbuffer=i.createRenderbuffer(),me(B.__webglDepthRenderbuffer,z,!0)),t.bindFramebuffer(i.FRAMEBUFFER,null)}}if(i0){t.bindTexture(i.TEXTURE_CUBE_MAP,r0.__webglTexture),K0(i.TEXTURE_CUBE_MAP,x);for(let H0=0;H0<6;H0++)if(x.mipmaps&&x.mipmaps.length>0)for(let X0=0;X0<x.mipmaps.length;X0++)z0(B.__webglFramebuffer[H0][X0],z,x,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+H0,X0);else z0(B.__webglFramebuffer[H0],z,x,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+H0,0);m(x)&&f(i.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(I0){for(let H0=0,X0=p0.length;H0<X0;H0++){const j0=p0[H0],l0=n.get(j0);t.bindTexture(i.TEXTURE_2D,l0.__webglTexture),K0(i.TEXTURE_2D,j0),z0(B.__webglFramebuffer,z,j0,i.COLOR_ATTACHMENT0+H0,i.TEXTURE_2D,0),m(j0)&&f(i.TEXTURE_2D)}t.unbindTexture()}else{let H0=i.TEXTURE_2D;if((z.isWebGL3DRenderTarget||z.isWebGLArrayRenderTarget)&&(H0=z.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY),t.bindTexture(H0,r0.__webglTexture),K0(H0,x),x.mipmaps&&x.mipmaps.length>0)for(let X0=0;X0<x.mipmaps.length;X0++)z0(B.__webglFramebuffer[X0],z,x,i.COLOR_ATTACHMENT0,H0,X0);else z0(B.__webglFramebuffer,z,x,i.COLOR_ATTACHMENT0,H0,0);m(x)&&f(H0),t.unbindTexture()}z.depthBuffer&&Re(z)}function W(z){const x=z.textures;for(let B=0,r0=x.length;B<r0;B++){const p0=x[B];if(m(p0)){const i0=N(z),I0=n.get(p0).__webglTexture;t.bindTexture(i0,I0),f(i0),t.unbindTexture()}}}const lt=[],we=[];function Ce(z){if(z.samples>0){if(ve(z)===!1){const x=z.textures,B=z.width,r0=z.height;let p0=i.COLOR_BUFFER_BIT;const i0=z.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,I0=n.get(z),H0=x.length>1;if(H0)for(let j0=0;j0<x.length;j0++)t.bindFramebuffer(i.FRAMEBUFFER,I0.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+j0,i.RENDERBUFFER,null),t.bindFramebuffer(i.FRAMEBUFFER,I0.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+j0,i.TEXTURE_2D,null,0);t.bindFramebuffer(i.READ_FRAMEBUFFER,I0.__webglMultisampledFramebuffer);const X0=z.texture.mipmaps;X0&&X0.length>0?t.bindFramebuffer(i.DRAW_FRAMEBUFFER,I0.__webglFramebuffer[0]):t.bindFramebuffer(i.DRAW_FRAMEBUFFER,I0.__webglFramebuffer);for(let j0=0;j0<x.length;j0++){if(z.resolveDepthBuffer&&(z.depthBuffer&&(p0|=i.DEPTH_BUFFER_BIT),z.stencilBuffer&&z.resolveStencilBuffer&&(p0|=i.STENCIL_BUFFER_BIT)),H0){i.framebufferRenderbuffer(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,I0.__webglColorRenderbuffer[j0]);const l0=n.get(x[j0]).__webglTexture;i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,l0,0)}i.blitFramebuffer(0,0,B,r0,0,0,B,r0,p0,i.NEAREST),l===!0&&(lt.length=0,we.length=0,lt.push(i.COLOR_ATTACHMENT0+j0),z.depthBuffer&&z.resolveDepthBuffer===!1&&(lt.push(i0),we.push(i0),i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,we)),i.invalidateFramebuffer(i.READ_FRAMEBUFFER,lt))}if(t.bindFramebuffer(i.READ_FRAMEBUFFER,null),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),H0)for(let j0=0;j0<x.length;j0++){t.bindFramebuffer(i.FRAMEBUFFER,I0.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+j0,i.RENDERBUFFER,I0.__webglColorRenderbuffer[j0]);const l0=n.get(x[j0]).__webglTexture;t.bindFramebuffer(i.FRAMEBUFFER,I0.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+j0,i.TEXTURE_2D,l0,0)}t.bindFramebuffer(i.DRAW_FRAMEBUFFER,I0.__webglMultisampledFramebuffer)}else if(z.depthBuffer&&z.resolveDepthBuffer===!1&&l){const x=z.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT;i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,[x])}}}function D0(z){return Math.min(s.maxSamples,z.samples)}function ve(z){const x=n.get(z);return z.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&x.__useRenderToTexture!==!1}function U0(z){const x=a.render.frame;c.get(z)!==x&&(c.set(z,x),z.update())}function ie(z,x){const B=z.colorSpace,r0=z.format,p0=z.type;return z.isCompressedTexture===!0||z.isVideoTexture===!0||B!==Tt&&B!==Vn&&(ge.getTransfer(B)===Ie?(r0!==Ut||p0!==xn)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",B)),x}function Ke(z){return typeof HTMLImageElement<"u"&&z instanceof HTMLImageElement?(d.width=z.naturalWidth||z.width,d.height=z.naturalHeight||z.height):typeof VideoFrame<"u"&&z instanceof VideoFrame?(d.width=z.displayWidth,d.height=z.displayHeight):(d.width=z.width,d.height=z.height),d}this.allocateTextureUnit=Q,this.resetTextureUnits=K,this.setTexture2D=u0,this.setTexture2DArray=n0,this.setTexture3D=y0,this.setTextureCube=t0,this.rebindTextures=Ee,this.setupRenderTarget=fe,this.updateRenderTargetMipmap=W,this.updateMultisampleRenderTarget=Ce,this.setupDepthRenderbuffer=Re,this.setupFrameBufferTexture=z0,this.useMultisampledRTT=ve}function Zh(i,e){function t(n,s=Vn){let r;const a=ge.getTransfer(s);if(n===xn)return i.UNSIGNED_BYTE;if(n===I7)return i.UNSIGNED_SHORT_4_4_4_4;if(n===X7)return i.UNSIGNED_SHORT_5_5_5_1;if(n===m4)return i.UNSIGNED_INT_5_9_9_9_REV;if(n===f4)return i.BYTE;if(n===h4)return i.SHORT;if(n===d2)return i.UNSIGNED_SHORT;if(n===A7)return i.INT;if(n===R1)return i.UNSIGNED_INT;if(n===Dt)return i.FLOAT;if(n===Dn)return i.HALF_FLOAT;if(n===b4)return i.ALPHA;if(n===y4)return i.RGB;if(n===Ut)return i.RGBA;if(n===u2)return i.DEPTH_COMPONENT;if(n===p2)return i.DEPTH_STENCIL;if(n===bs)return i.RED;if(n===V7)return i.RED_INTEGER;if(n===v4)return i.RG;if(n===F7)return i.RG_INTEGER;if(n===D7)return i.RGBA_INTEGER;if(n===O3||n===E3||n===C3||n===z3)if(a===Ie)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(n===O3)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===E3)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===C3)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===z3)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(n===O3)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===E3)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===C3)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===z3)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===ga||n===wa||n===Ta||n===xa)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(n===ga)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===wa)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Ta)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===xa)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Sa||n===Pa||n===Ha)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(n===Sa||n===Pa)return a===Ie?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===Ha)return a===Ie?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===La||n===Na||n===Ra||n===Ma||n===Oa||n===Ea||n===Ca||n===za||n===Aa||n===Ia||n===Xa||n===Va||n===Fa||n===Da)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(n===La)return a===Ie?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Na)return a===Ie?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Ra)return a===Ie?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Ma)return a===Ie?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Oa)return a===Ie?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Ea)return a===Ie?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Ca)return a===Ie?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===za)return a===Ie?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Aa)return a===Ie?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Ia)return a===Ie?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Xa)return a===Ie?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Va)return a===Ie?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Fa)return a===Ie?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Da)return a===Ie?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===A3||n===Wa||n===ja)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(n===A3)return a===Ie?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Wa)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===ja)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===g4||n===Ya||n===Ga||n===Ua)if(r=e.get("EXT_texture_compression_rgtc"),r!==null){if(n===A3)return r.COMPRESSED_RED_RGTC1_EXT;if(n===Ya)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Ga)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Ua)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===c2?i.UNSIGNED_INT_24_8:i[n]!==void 0?i[n]:null}return{convert:t}}const kh=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,Jh=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class Bh{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const s=new vt,r=e.properties.get(s);r.__webglTexture=t.texture,(t.depthNear!==n.depthNear||t.depthFar!==n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=s}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new p1({vertexShader:kh,fragmentShader:Jh,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new Be(new gs(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class Kh extends z1{constructor(e,t){super();const n=this;let s=null,r=1,a=null,o="local-floor",l=1,d=null,c=null,u=null,p=null,h=null,y=null;const T=new Bh,m=t.getContextAttributes();let f=null,N=null;const M=[],P=[],F=new $0;let X=null;const D=new Ct;D.viewport=new He;const U=new Ct;U.viewport=new He;const R=[D,U],H=new rc;let j=null,K=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(s0){let w0=M[s0];return w0===void 0&&(w0=new nr,M[s0]=w0),w0.getTargetRaySpace()},this.getControllerGrip=function(s0){let w0=M[s0];return w0===void 0&&(w0=new nr,M[s0]=w0),w0.getGripSpace()},this.getHand=function(s0){let w0=M[s0];return w0===void 0&&(w0=new nr,M[s0]=w0),w0.getHandSpace()};function Q(s0){const w0=P.indexOf(s0.inputSource);if(w0===-1)return;const T0=M[w0];T0!==void 0&&(T0.update(s0.inputSource,s0.frame,d||a),T0.dispatchEvent({type:s0.type,data:s0.inputSource}))}function e0(){s.removeEventListener("select",Q),s.removeEventListener("selectstart",Q),s.removeEventListener("selectend",Q),s.removeEventListener("squeeze",Q),s.removeEventListener("squeezestart",Q),s.removeEventListener("squeezeend",Q),s.removeEventListener("end",e0),s.removeEventListener("inputsourceschange",u0);for(let s0=0;s0<M.length;s0++){const w0=P[s0];w0!==null&&(P[s0]=null,M[s0].disconnect(w0))}j=null,K=null,T.reset(),e.setRenderTarget(f),h=null,p=null,u=null,s=null,N=null,ue.stop(),n.isPresenting=!1,e.setPixelRatio(X),e.setSize(F.width,F.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(s0){r=s0,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(s0){o=s0,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return d||a},this.setReferenceSpace=function(s0){d=s0},this.getBaseLayer=function(){return p!==null?p:h},this.getBinding=function(){return u},this.getFrame=function(){return y},this.getSession=function(){return s},this.setSession=async function(s0){if(s=s0,s!==null){if(f=e.getRenderTarget(),s.addEventListener("select",Q),s.addEventListener("selectstart",Q),s.addEventListener("selectend",Q),s.addEventListener("squeeze",Q),s.addEventListener("squeezestart",Q),s.addEventListener("squeezeend",Q),s.addEventListener("end",e0),s.addEventListener("inputsourceschange",u0),m.xrCompatible!==!0&&await t.makeXRCompatible(),X=e.getPixelRatio(),e.getSize(F),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let T0=null,S0=null,z0=null;m.depth&&(z0=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,T0=m.stencil?p2:u2,S0=m.stencil?c2:R1);const me={colorFormat:t.RGBA8,depthFormat:z0,scaleFactor:r};u=new XRWebGLBinding(s,t),p=u.createProjectionLayer(me),s.updateRenderState({layers:[p]}),e.setPixelRatio(1),e.setSize(p.textureWidth,p.textureHeight,!1),N=new M1(p.textureWidth,p.textureHeight,{format:Ut,type:xn,depthTexture:new z4(p.textureWidth,p.textureHeight,S0,void 0,void 0,void 0,void 0,void 0,void 0,T0),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0,resolveDepthBuffer:p.ignoreDepthValues===!1,resolveStencilBuffer:p.ignoreDepthValues===!1})}else{const T0={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:r};h=new XRWebGLLayer(s,t,T0),s.updateRenderState({baseLayer:h}),e.setPixelRatio(1),e.setSize(h.framebufferWidth,h.framebufferHeight,!1),N=new M1(h.framebufferWidth,h.framebufferHeight,{format:Ut,type:xn,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil,resolveDepthBuffer:h.ignoreDepthValues===!1,resolveStencilBuffer:h.ignoreDepthValues===!1})}N.isXRRenderTarget=!0,this.setFoveation(l),d=null,a=await s.requestReferenceSpace(o),ue.setContext(s),ue.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode},this.getDepthTexture=function(){return T.getDepthTexture()};function u0(s0){for(let w0=0;w0<s0.removed.length;w0++){const T0=s0.removed[w0],S0=P.indexOf(T0);S0>=0&&(P[S0]=null,M[S0].disconnect(T0))}for(let w0=0;w0<s0.added.length;w0++){const T0=s0.added[w0];let S0=P.indexOf(T0);if(S0===-1){for(let me=0;me<M.length;me++)if(me>=P.length){P.push(T0),S0=me;break}else if(P[me]===null){P[me]=T0,S0=me;break}if(S0===-1)break}const z0=M[S0];z0&&z0.connect(T0)}}const n0=new S,y0=new S;function t0(s0,w0,T0){n0.setFromMatrixPosition(w0.matrixWorld),y0.setFromMatrixPosition(T0.matrixWorld);const S0=n0.distanceTo(y0),z0=w0.projectionMatrix.elements,me=T0.projectionMatrix.elements,q0=z0[14]/(z0[10]-1),Re=z0[14]/(z0[10]+1),Ee=(z0[9]+1)/z0[5],fe=(z0[9]-1)/z0[5],W=(z0[8]-1)/z0[0],lt=(me[8]+1)/me[0],we=q0*W,Ce=q0*lt,D0=S0/(-W+lt),ve=D0*-W;if(w0.matrixWorld.decompose(s0.position,s0.quaternion,s0.scale),s0.translateX(ve),s0.translateZ(D0),s0.matrixWorld.compose(s0.position,s0.quaternion,s0.scale),s0.matrixWorldInverse.copy(s0.matrixWorld).invert(),z0[10]===-1)s0.projectionMatrix.copy(w0.projectionMatrix),s0.projectionMatrixInverse.copy(w0.projectionMatrixInverse);else{const U0=q0+D0,ie=Re+D0,Ke=we-ve,z=Ce+(S0-ve),x=Ee*Re/ie*U0,B=fe*Re/ie*U0;s0.projectionMatrix.makePerspective(Ke,z,x,B,U0,ie),s0.projectionMatrixInverse.copy(s0.projectionMatrix).invert()}}function x0(s0,w0){w0===null?s0.matrixWorld.copy(s0.matrix):s0.matrixWorld.multiplyMatrices(w0.matrixWorld,s0.matrix),s0.matrixWorldInverse.copy(s0.matrixWorld).invert()}this.updateCamera=function(s0){if(s===null)return;let w0=s0.near,T0=s0.far;T.texture!==null&&(T.depthNear>0&&(w0=T.depthNear),T.depthFar>0&&(T0=T.depthFar)),H.near=U.near=D.near=w0,H.far=U.far=D.far=T0,(j!==H.near||K!==H.far)&&(s.updateRenderState({depthNear:H.near,depthFar:H.far}),j=H.near,K=H.far),D.layers.mask=s0.layers.mask|2,U.layers.mask=s0.layers.mask|4,H.layers.mask=D.layers.mask|U.layers.mask;const S0=s0.parent,z0=H.cameras;x0(H,S0);for(let me=0;me<z0.length;me++)x0(z0[me],S0);z0.length===2?t0(H,D,U):H.projectionMatrix.copy(D.projectionMatrix),L0(s0,H,S0)};function L0(s0,w0,T0){T0===null?s0.matrix.copy(w0.matrixWorld):(s0.matrix.copy(T0.matrixWorld),s0.matrix.invert(),s0.matrix.multiply(w0.matrixWorld)),s0.matrix.decompose(s0.position,s0.quaternion,s0.scale),s0.updateMatrixWorld(!0),s0.projectionMatrix.copy(w0.projectionMatrix),s0.projectionMatrixInverse.copy(w0.projectionMatrixInverse),s0.isPerspectiveCamera&&(s0.fov=Pi*2*Math.atan(1/s0.projectionMatrix.elements[5]),s0.zoom=1)}this.getCamera=function(){return H},this.getFoveation=function(){if(!(p===null&&h===null))return l},this.setFoveation=function(s0){l=s0,p!==null&&(p.fixedFoveation=s0),h!==null&&h.fixedFoveation!==void 0&&(h.fixedFoveation=s0)},this.hasDepthSensing=function(){return T.texture!==null},this.getDepthSensingMesh=function(){return T.getMesh(H)};let F0=null;function K0(s0,w0){if(c=w0.getViewerPose(d||a),y=w0,c!==null){const T0=c.views;h!==null&&(e.setRenderTargetFramebuffer(N,h.framebuffer),e.setRenderTarget(N));let S0=!1;T0.length!==H.cameras.length&&(H.cameras.length=0,S0=!0);for(let q0=0;q0<T0.length;q0++){const Re=T0[q0];let Ee=null;if(h!==null)Ee=h.getViewport(Re);else{const W=u.getViewSubImage(p,Re);Ee=W.viewport,q0===0&&(e.setRenderTargetTextures(N,W.colorTexture,W.depthStencilTexture),e.setRenderTarget(N))}let fe=R[q0];fe===void 0&&(fe=new Ct,fe.layers.enable(q0),fe.viewport=new He,R[q0]=fe),fe.matrix.fromArray(Re.transform.matrix),fe.matrix.decompose(fe.position,fe.quaternion,fe.scale),fe.projectionMatrix.fromArray(Re.projectionMatrix),fe.projectionMatrixInverse.copy(fe.projectionMatrix).invert(),fe.viewport.set(Ee.x,Ee.y,Ee.width,Ee.height),q0===0&&(H.matrix.copy(fe.matrix),H.matrix.decompose(H.position,H.quaternion,H.scale)),S0===!0&&H.cameras.push(fe)}const z0=s.enabledFeatures;if(z0&&z0.includes("depth-sensing")&&s.depthUsage=="gpu-optimized"&&u){const q0=u.getDepthInformation(T0[0]);q0&&q0.isValid&&q0.texture&&T.init(e,q0,s.renderState)}}for(let T0=0;T0<M.length;T0++){const S0=P[T0],z0=M[T0];S0!==null&&z0!==void 0&&z0.update(S0,w0,d||a)}F0&&F0(s0,w0),w0.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:w0}),y=null}const ue=new W4;ue.setAnimationLoop(K0),this.setAnimationLoop=function(s0){F0=s0},this.dispose=function(){}}}const w1=new Ne,Qh=new B0;function _h(i,e){function t(m,f){m.matrixAutoUpdate===!0&&m.updateMatrix(),f.value.copy(m.matrix)}function n(m,f){f.color.getRGB(m.fogColor.value,R4(i)),f.isFog?(m.fogNear.value=f.near,m.fogFar.value=f.far):f.isFogExp2&&(m.fogDensity.value=f.density)}function s(m,f,N,M,P){f.isMeshBasicMaterial||f.isMeshLambertMaterial?r(m,f):f.isMeshToonMaterial?(r(m,f),u(m,f)):f.isMeshPhongMaterial?(r(m,f),c(m,f)):f.isMeshStandardMaterial?(r(m,f),p(m,f),f.isMeshPhysicalMaterial&&h(m,f,P)):f.isMeshMatcapMaterial?(r(m,f),y(m,f)):f.isMeshDepthMaterial?r(m,f):f.isMeshDistanceMaterial?(r(m,f),T(m,f)):f.isMeshNormalMaterial?r(m,f):f.isLineBasicMaterial?(a(m,f),f.isLineDashedMaterial&&o(m,f)):f.isPointsMaterial?l(m,f,N,M):f.isSpriteMaterial?d(m,f):f.isShadowMaterial?(m.color.value.copy(f.color),m.opacity.value=f.opacity):f.isShaderMaterial&&(f.uniformsNeedUpdate=!1)}function r(m,f){m.opacity.value=f.opacity,f.color&&m.diffuse.value.copy(f.color),f.emissive&&m.emissive.value.copy(f.emissive).multiplyScalar(f.emissiveIntensity),f.map&&(m.map.value=f.map,t(f.map,m.mapTransform)),f.alphaMap&&(m.alphaMap.value=f.alphaMap,t(f.alphaMap,m.alphaMapTransform)),f.bumpMap&&(m.bumpMap.value=f.bumpMap,t(f.bumpMap,m.bumpMapTransform),m.bumpScale.value=f.bumpScale,f.side===Wt&&(m.bumpScale.value*=-1)),f.normalMap&&(m.normalMap.value=f.normalMap,t(f.normalMap,m.normalMapTransform),m.normalScale.value.copy(f.normalScale),f.side===Wt&&m.normalScale.value.negate()),f.displacementMap&&(m.displacementMap.value=f.displacementMap,t(f.displacementMap,m.displacementMapTransform),m.displacementScale.value=f.displacementScale,m.displacementBias.value=f.displacementBias),f.emissiveMap&&(m.emissiveMap.value=f.emissiveMap,t(f.emissiveMap,m.emissiveMapTransform)),f.specularMap&&(m.specularMap.value=f.specularMap,t(f.specularMap,m.specularMapTransform)),f.alphaTest>0&&(m.alphaTest.value=f.alphaTest);const N=e.get(f),M=N.envMap,P=N.envMapRotation;M&&(m.envMap.value=M,w1.copy(P),w1.x*=-1,w1.y*=-1,w1.z*=-1,M.isCubeTexture&&M.isRenderTargetTexture===!1&&(w1.y*=-1,w1.z*=-1),m.envMapRotation.value.setFromMatrix4(Qh.makeRotationFromEuler(w1)),m.flipEnvMap.value=M.isCubeTexture&&M.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=f.reflectivity,m.ior.value=f.ior,m.refractionRatio.value=f.refractionRatio),f.lightMap&&(m.lightMap.value=f.lightMap,m.lightMapIntensity.value=f.lightMapIntensity,t(f.lightMap,m.lightMapTransform)),f.aoMap&&(m.aoMap.value=f.aoMap,m.aoMapIntensity.value=f.aoMapIntensity,t(f.aoMap,m.aoMapTransform))}function a(m,f){m.diffuse.value.copy(f.color),m.opacity.value=f.opacity,f.map&&(m.map.value=f.map,t(f.map,m.mapTransform))}function o(m,f){m.dashSize.value=f.dashSize,m.totalSize.value=f.dashSize+f.gapSize,m.scale.value=f.scale}function l(m,f,N,M){m.diffuse.value.copy(f.color),m.opacity.value=f.opacity,m.size.value=f.size*N,m.scale.value=M*.5,f.map&&(m.map.value=f.map,t(f.map,m.uvTransform)),f.alphaMap&&(m.alphaMap.value=f.alphaMap,t(f.alphaMap,m.alphaMapTransform)),f.alphaTest>0&&(m.alphaTest.value=f.alphaTest)}function d(m,f){m.diffuse.value.copy(f.color),m.opacity.value=f.opacity,m.rotation.value=f.rotation,f.map&&(m.map.value=f.map,t(f.map,m.mapTransform)),f.alphaMap&&(m.alphaMap.value=f.alphaMap,t(f.alphaMap,m.alphaMapTransform)),f.alphaTest>0&&(m.alphaTest.value=f.alphaTest)}function c(m,f){m.specular.value.copy(f.specular),m.shininess.value=Math.max(f.shininess,1e-4)}function u(m,f){f.gradientMap&&(m.gradientMap.value=f.gradientMap)}function p(m,f){m.metalness.value=f.metalness,f.metalnessMap&&(m.metalnessMap.value=f.metalnessMap,t(f.metalnessMap,m.metalnessMapTransform)),m.roughness.value=f.roughness,f.roughnessMap&&(m.roughnessMap.value=f.roughnessMap,t(f.roughnessMap,m.roughnessMapTransform)),f.envMap&&(m.envMapIntensity.value=f.envMapIntensity)}function h(m,f,N){m.ior.value=f.ior,f.sheen>0&&(m.sheenColor.value.copy(f.sheenColor).multiplyScalar(f.sheen),m.sheenRoughness.value=f.sheenRoughness,f.sheenColorMap&&(m.sheenColorMap.value=f.sheenColorMap,t(f.sheenColorMap,m.sheenColorMapTransform)),f.sheenRoughnessMap&&(m.sheenRoughnessMap.value=f.sheenRoughnessMap,t(f.sheenRoughnessMap,m.sheenRoughnessMapTransform))),f.clearcoat>0&&(m.clearcoat.value=f.clearcoat,m.clearcoatRoughness.value=f.clearcoatRoughness,f.clearcoatMap&&(m.clearcoatMap.value=f.clearcoatMap,t(f.clearcoatMap,m.clearcoatMapTransform)),f.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=f.clearcoatRoughnessMap,t(f.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),f.clearcoatNormalMap&&(m.clearcoatNormalMap.value=f.clearcoatNormalMap,t(f.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(f.clearcoatNormalScale),f.side===Wt&&m.clearcoatNormalScale.value.negate())),f.dispersion>0&&(m.dispersion.value=f.dispersion),f.iridescence>0&&(m.iridescence.value=f.iridescence,m.iridescenceIOR.value=f.iridescenceIOR,m.iridescenceThicknessMinimum.value=f.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=f.iridescenceThicknessRange[1],f.iridescenceMap&&(m.iridescenceMap.value=f.iridescenceMap,t(f.iridescenceMap,m.iridescenceMapTransform)),f.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=f.iridescenceThicknessMap,t(f.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),f.transmission>0&&(m.transmission.value=f.transmission,m.transmissionSamplerMap.value=N.texture,m.transmissionSamplerSize.value.set(N.width,N.height),f.transmissionMap&&(m.transmissionMap.value=f.transmissionMap,t(f.transmissionMap,m.transmissionMapTransform)),m.thickness.value=f.thickness,f.thicknessMap&&(m.thicknessMap.value=f.thicknessMap,t(f.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=f.attenuationDistance,m.attenuationColor.value.copy(f.attenuationColor)),f.anisotropy>0&&(m.anisotropyVector.value.set(f.anisotropy*Math.cos(f.anisotropyRotation),f.anisotropy*Math.sin(f.anisotropyRotation)),f.anisotropyMap&&(m.anisotropyMap.value=f.anisotropyMap,t(f.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=f.specularIntensity,m.specularColor.value.copy(f.specularColor),f.specularColorMap&&(m.specularColorMap.value=f.specularColorMap,t(f.specularColorMap,m.specularColorMapTransform)),f.specularIntensityMap&&(m.specularIntensityMap.value=f.specularIntensityMap,t(f.specularIntensityMap,m.specularIntensityMapTransform))}function y(m,f){f.matcap&&(m.matcap.value=f.matcap)}function T(m,f){const N=e.get(f).light;m.referencePosition.value.setFromMatrixPosition(N.matrixWorld),m.nearDistance.value=N.shadow.camera.near,m.farDistance.value=N.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:s}}function $h(i,e,t,n){let s={},r={},a=[];const o=i.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS);function l(N,M){const P=M.program;n.uniformBlockBinding(N,P)}function d(N,M){let P=s[N.id];P===void 0&&(y(N),P=c(N),s[N.id]=P,N.addEventListener("dispose",m));const F=M.program;n.updateUBOMapping(N,F);const X=e.render.frame;r[N.id]!==X&&(p(N),r[N.id]=X)}function c(N){const M=u();N.__bindingPointIndex=M;const P=i.createBuffer(),F=N.__size,X=N.usage;return i.bindBuffer(i.UNIFORM_BUFFER,P),i.bufferData(i.UNIFORM_BUFFER,F,X),i.bindBuffer(i.UNIFORM_BUFFER,null),i.bindBufferBase(i.UNIFORM_BUFFER,M,P),P}function u(){for(let N=0;N<o;N++)if(a.indexOf(N)===-1)return a.push(N),N;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function p(N){const M=s[N.id],P=N.uniforms,F=N.__cache;i.bindBuffer(i.UNIFORM_BUFFER,M);for(let X=0,D=P.length;X<D;X++){const U=Array.isArray(P[X])?P[X]:[P[X]];for(let R=0,H=U.length;R<H;R++){const j=U[R];if(h(j,X,R,F)===!0){const K=j.__offset,Q=Array.isArray(j.value)?j.value:[j.value];let e0=0;for(let u0=0;u0<Q.length;u0++){const n0=Q[u0],y0=T(n0);typeof n0=="number"||typeof n0=="boolean"?(j.__data[0]=n0,i.bufferSubData(i.UNIFORM_BUFFER,K+e0,j.__data)):n0.isMatrix3?(j.__data[0]=n0.elements[0],j.__data[1]=n0.elements[1],j.__data[2]=n0.elements[2],j.__data[3]=0,j.__data[4]=n0.elements[3],j.__data[5]=n0.elements[4],j.__data[6]=n0.elements[5],j.__data[7]=0,j.__data[8]=n0.elements[6],j.__data[9]=n0.elements[7],j.__data[10]=n0.elements[8],j.__data[11]=0):(n0.toArray(j.__data,e0),e0+=y0.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(i.UNIFORM_BUFFER,K,j.__data)}}}i.bindBuffer(i.UNIFORM_BUFFER,null)}function h(N,M,P,F){const X=N.value,D=M+"_"+P;if(F[D]===void 0)return typeof X=="number"||typeof X=="boolean"?F[D]=X:F[D]=X.clone(),!0;{const U=F[D];if(typeof X=="number"||typeof X=="boolean"){if(U!==X)return F[D]=X,!0}else if(U.equals(X)===!1)return U.copy(X),!0}return!1}function y(N){const M=N.uniforms;let P=0;const F=16;for(let D=0,U=M.length;D<U;D++){const R=Array.isArray(M[D])?M[D]:[M[D]];for(let H=0,j=R.length;H<j;H++){const K=R[H],Q=Array.isArray(K.value)?K.value:[K.value];for(let e0=0,u0=Q.length;e0<u0;e0++){const n0=Q[e0],y0=T(n0),t0=P%F,x0=t0%y0.boundary,L0=t0+x0;P+=x0,L0!==0&&F-L0<y0.storage&&(P+=F-L0),K.__data=new Float32Array(y0.storage/Float32Array.BYTES_PER_ELEMENT),K.__offset=P,P+=y0.storage}}}const X=P%F;return X>0&&(P+=F-X),N.__size=P,N.__cache={},this}function T(N){const M={boundary:0,storage:0};return typeof N=="number"||typeof N=="boolean"?(M.boundary=4,M.storage=4):N.isVector2?(M.boundary=8,M.storage=8):N.isVector3||N.isColor?(M.boundary=16,M.storage=12):N.isVector4?(M.boundary=16,M.storage=16):N.isMatrix3?(M.boundary=48,M.storage=48):N.isMatrix4?(M.boundary=64,M.storage=64):N.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",N),M}function m(N){const M=N.target;M.removeEventListener("dispose",m);const P=a.indexOf(M.__bindingPointIndex);a.splice(P,1),i.deleteBuffer(s[M.id]),delete s[M.id],delete r[M.id]}function f(){for(const N in s)i.deleteBuffer(s[N]);a=[],s={},r={}}return{bind:l,update:d,dispose:f}}class em{constructor(e={}){const{canvas:t=Bl(),context:n=null,depth:s=!0,stencil:r=!1,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:d=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:u=!1,reverseDepthBuffer:p=!1}=e;this.isWebGLRenderer=!0;let h;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");h=n.getContextAttributes().alpha}else h=a;const y=new Uint32Array(4),T=new Int32Array(4);let m=null,f=null;const N=[],M=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=u1,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const P=this;let F=!1;this._outputColorSpace=bt;let X=0,D=0,U=null,R=-1,H=null;const j=new He,K=new He;let Q=null;const e0=new te(0);let u0=0,n0=t.width,y0=t.height,t0=1,x0=null,L0=null;const F0=new He(0,0,n0,y0),K0=new He(0,0,n0,y0);let ue=!1;const s0=new J7;let w0=!1,T0=!1;const S0=new B0,z0=new B0,me=new S,q0=new He,Re={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Ee=!1;function fe(){return U===null?t0:1}let W=n;function lt(w,O){return t.getContext(w,O)}try{const w={alpha:!0,depth:s,stencil:r,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:d,powerPreference:c,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${C7}`),t.addEventListener("webglcontextlost",E0,!1),t.addEventListener("webglcontextrestored",b0,!1),t.addEventListener("webglcontextcreationerror",d0,!1),W===null){const O="webgl2";if(W=lt(O,w),W===null)throw lt(O)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(w){throw console.error("THREE.WebGLRenderer: "+w.message),w}let we,Ce,D0,ve,U0,ie,Ke,z,x,B,r0,p0,i0,I0,H0,X0,j0,l0,P0,Z0,W0,v0,V0,G;function _(){we=new cf(W),we.init(),v0=new Zh(W,we),Ce=new nf(W,we,e,v0),D0=new Uh(W,we),Ce.reverseDepthBuffer&&p&&D0.buffers.depth.setReversed(!0),ve=new ff(W),U0=new Eh,ie=new qh(W,we,D0,U0,Ce,v0,ve),Ke=new rf(P),z=new df(P),x=new vc(W),V0=new ef(W,x),B=new uf(W,x,ve,V0),r0=new mf(W,B,x,ve),P0=new hf(W,Ce,ie),X0=new sf(U0),p0=new Oh(P,Ke,z,we,Ce,V0,X0),i0=new _h(P,U0),I0=new zh,H0=new Dh(we),l0=new $p(P,Ke,z,D0,r0,h,l),j0=new Yh(P,r0,Ce),G=new $h(W,ve,Ce,D0),Z0=new tf(W,we,ve),W0=new pf(W,we,ve),ve.programs=p0.programs,P.capabilities=Ce,P.extensions=we,P.properties=U0,P.renderLists=I0,P.shadowMap=j0,P.state=D0,P.info=ve}_();const h0=new Kh(P,W);this.xr=h0,this.getContext=function(){return W},this.getContextAttributes=function(){return W.getContextAttributes()},this.forceContextLoss=function(){const w=we.get("WEBGL_lose_context");w&&w.loseContext()},this.forceContextRestore=function(){const w=we.get("WEBGL_lose_context");w&&w.restoreContext()},this.getPixelRatio=function(){return t0},this.setPixelRatio=function(w){w!==void 0&&(t0=w,this.setSize(n0,y0,!1))},this.getSize=function(w){return w.set(n0,y0)},this.setSize=function(w,O,E=!0){if(h0.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}n0=w,y0=O,t.width=Math.floor(w*t0),t.height=Math.floor(O*t0),E===!0&&(t.style.width=w+"px",t.style.height=O+"px"),this.setViewport(0,0,w,O)},this.getDrawingBufferSize=function(w){return w.set(n0*t0,y0*t0).floor()},this.setDrawingBufferSize=function(w,O,E){n0=w,y0=O,t0=E,t.width=Math.floor(w*E),t.height=Math.floor(O*E),this.setViewport(0,0,w,O)},this.getCurrentViewport=function(w){return w.copy(j)},this.getViewport=function(w){return w.copy(F0)},this.setViewport=function(w,O,E,I){w.isVector4?F0.set(w.x,w.y,w.z,w.w):F0.set(w,O,E,I),D0.viewport(j.copy(F0).multiplyScalar(t0).round())},this.getScissor=function(w){return w.copy(K0)},this.setScissor=function(w,O,E,I){w.isVector4?K0.set(w.x,w.y,w.z,w.w):K0.set(w,O,E,I),D0.scissor(K.copy(K0).multiplyScalar(t0).round())},this.getScissorTest=function(){return ue},this.setScissorTest=function(w){D0.setScissorTest(ue=w)},this.setOpaqueSort=function(w){x0=w},this.setTransparentSort=function(w){L0=w},this.getClearColor=function(w){return w.copy(l0.getClearColor())},this.setClearColor=function(){l0.setClearColor(...arguments)},this.getClearAlpha=function(){return l0.getClearAlpha()},this.setClearAlpha=function(){l0.setClearAlpha(...arguments)},this.clear=function(w=!0,O=!0,E=!0){let I=0;if(w){let C=!1;if(U!==null){const q=U.texture.format;C=q===D7||q===F7||q===V7}if(C){const q=U.texture.type,k=q===xn||q===R1||q===d2||q===c2||q===I7||q===X7,J=l0.getClearColor(),$=l0.getClearAlpha(),a0=J.r,o0=J.g,c0=J.b;k?(y[0]=a0,y[1]=o0,y[2]=c0,y[3]=$,W.clearBufferuiv(W.COLOR,0,y)):(T[0]=a0,T[1]=o0,T[2]=c0,T[3]=$,W.clearBufferiv(W.COLOR,0,T))}else I|=W.COLOR_BUFFER_BIT}O&&(I|=W.DEPTH_BUFFER_BIT),E&&(I|=W.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),W.clear(I)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",E0,!1),t.removeEventListener("webglcontextrestored",b0,!1),t.removeEventListener("webglcontextcreationerror",d0,!1),l0.dispose(),I0.dispose(),H0.dispose(),U0.dispose(),Ke.dispose(),z.dispose(),r0.dispose(),V0.dispose(),G.dispose(),p0.dispose(),h0.dispose(),h0.removeEventListener("sessionstart",R2),h0.removeEventListener("sessionend",M2),Nn.stop()};function E0(w){w.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),F=!0}function b0(){console.log("THREE.WebGLRenderer: Context Restored."),F=!1;const w=ve.autoReset,O=j0.enabled,E=j0.autoUpdate,I=j0.needsUpdate,C=j0.type;_(),ve.autoReset=w,j0.enabled=O,j0.autoUpdate=E,j0.needsUpdate=I,j0.type=C}function d0(w){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",w.statusMessage)}function A0(w){const O=w.target;O.removeEventListener("dispose",A0),ne(O)}function ne(w){Fe(w),U0.remove(w)}function Fe(w){const O=U0.get(w).programs;O!==void 0&&(O.forEach(function(E){p0.releaseProgram(E)}),w.isShaderMaterial&&p0.releaseShaderCache(w))}this.renderBufferDirect=function(w,O,E,I,C,q){O===null&&(O=Re);const k=C.isMesh&&C.matrixWorld.determinant()<0,J=zs(w,O,E,I,C);D0.setMaterial(I,k);let $=E.index,a0=1;if(I.wireframe===!0){if($=B.getWireframeAttribute(E),$===void 0)return;a0=2}const o0=E.drawRange,c0=E.attributes.position;let f0=o0.start*a0,g0=(o0.start+o0.count)*a0;q!==null&&(f0=Math.max(f0,q.start*a0),g0=Math.min(g0,(q.start+q.count)*a0)),$!==null?(f0=Math.max(f0,0),g0=Math.min(g0,$.count)):c0!=null&&(f0=Math.max(f0,0),g0=Math.min(g0,c0.count));const M0=g0-f0;if(M0<0||M0===1/0)return;V0.setup(C,I,J,E,$);let G0,k0=Z0;if($!==null&&(G0=x.get($),k0=W0,k0.setIndex(G0)),C.isMesh)I.wireframe===!0?(D0.setLineWidth(I.wireframeLinewidth*fe()),k0.setMode(W.LINES)):k0.setMode(W.TRIANGLES);else if(C.isLine){let C0=I.linewidth;C0===void 0&&(C0=1),D0.setLineWidth(C0*fe()),C.isLineSegments?k0.setMode(W.LINES):C.isLineLoop?k0.setMode(W.LINE_LOOP):k0.setMode(W.LINE_STRIP)}else C.isPoints?k0.setMode(W.POINTS):C.isSprite&&k0.setMode(W.TRIANGLES);if(C.isBatchedMesh)if(C._multiDrawInstances!==null)yi("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),k0.renderMultiDrawInstances(C._multiDrawStarts,C._multiDrawCounts,C._multiDrawCount,C._multiDrawInstances);else if(we.get("WEBGL_multi_draw"))k0.renderMultiDraw(C._multiDrawStarts,C._multiDrawCounts,C._multiDrawCount);else{const C0=C._multiDrawStarts,_0=C._multiDrawCounts,O0=C._multiDrawCount,Te=$?x.get($).bytesPerElement:1,et=U0.get(I).currentProgram.getUniforms();for(let xe=0;xe<O0;xe++)et.setValue(W,"_gl_DrawID",xe),k0.render(C0[xe]/Te,_0[xe])}else if(C.isInstancedMesh)k0.renderInstances(f0,M0,C.count);else if(E.isInstancedBufferGeometry){const C0=E._maxInstanceCount!==void 0?E._maxInstanceCount:1/0,_0=Math.min(E.instanceCount,C0);k0.renderInstances(f0,M0,_0)}else k0.render(f0,M0)};function Pe(w,O,E){w.transparent===!0&&w.side===gn&&w.forceSinglePass===!1?(w.side=Wt,w.needsUpdate=!0,V1(w,O,E),w.side=Un,w.needsUpdate=!0,V1(w,O,E),w.side=gn):V1(w,O,E)}this.compile=function(w,O,E=null){E===null&&(E=w),f=H0.get(E),f.init(O),M.push(f),E.traverseVisible(function(C){C.isLight&&C.layers.test(O.layers)&&(f.pushLight(C),C.castShadow&&f.pushShadow(C))}),w!==E&&w.traverseVisible(function(C){C.isLight&&C.layers.test(O.layers)&&(f.pushLight(C),C.castShadow&&f.pushShadow(C))}),f.setupLights();const I=new Set;return w.traverse(function(C){if(!(C.isMesh||C.isPoints||C.isLine||C.isSprite))return;const q=C.material;if(q)if(Array.isArray(q))for(let k=0;k<q.length;k++){const J=q[k];Pe(J,E,C),I.add(J)}else Pe(q,E,C),I.add(q)}),f=M.pop(),I},this.compileAsync=function(w,O,E=null){const I=this.compile(w,O,E);return new Promise(C=>{function q(){if(I.forEach(function(k){U0.get(k).currentProgram.isReady()&&I.delete(k)}),I.size===0){C(w);return}setTimeout(q,10)}we.get("KHR_parallel_shader_compile")!==null?q():setTimeout(q,10)})};let jt=null;function $t(w){jt&&jt(w)}function R2(){Nn.stop()}function M2(){Nn.start()}const Nn=new W4;Nn.setAnimationLoop($t),typeof self<"u"&&Nn.setContext(self),this.setAnimationLoop=function(w){jt=w,h0.setAnimationLoop(w),w===null?Nn.stop():Nn.start()},h0.addEventListener("sessionstart",R2),h0.addEventListener("sessionend",M2),this.render=function(w,O){if(O!==void 0&&O.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(F===!0)return;if(w.matrixWorldAutoUpdate===!0&&w.updateMatrixWorld(),O.parent===null&&O.matrixWorldAutoUpdate===!0&&O.updateMatrixWorld(),h0.enabled===!0&&h0.isPresenting===!0&&(h0.cameraAutoUpdate===!0&&h0.updateCamera(O),O=h0.getCamera()),w.isScene===!0&&w.onBeforeRender(P,w,O,U),f=H0.get(w,M.length),f.init(O),M.push(f),z0.multiplyMatrices(O.projectionMatrix,O.matrixWorldInverse),s0.setFromProjectionMatrix(z0),T0=this.localClippingEnabled,w0=X0.init(this.clippingPlanes,T0),m=I0.get(w,N.length),m.init(),N.push(m),h0.enabled===!0&&h0.isPresenting===!0){const q=P.xr.getDepthSensingMesh();q!==null&&Ai(q,O,-1/0,P.sortObjects)}Ai(w,O,0,P.sortObjects),m.finish(),P.sortObjects===!0&&m.sort(x0,L0),Ee=h0.enabled===!1||h0.isPresenting===!1||h0.hasDepthSensing()===!1,Ee&&l0.addToRenderList(m,w),this.info.render.frame++,w0===!0&&X0.beginShadows();const E=f.state.shadowsArray;j0.render(E,w,O),w0===!0&&X0.endShadows(),this.info.autoReset===!0&&this.info.reset();const I=m.opaque,C=m.transmissive;if(f.setupLights(),O.isArrayCamera){const q=O.cameras;if(C.length>0)for(let k=0,J=q.length;k<J;k++){const $=q[k];O2(I,C,w,$)}Ee&&l0.render(w);for(let k=0,J=q.length;k<J;k++){const $=q[k];Ii(m,w,$,$.viewport)}}else C.length>0&&O2(I,C,w,O),Ee&&l0.render(w),Ii(m,w,O);U!==null&&D===0&&(ie.updateMultisampleRenderTarget(U),ie.updateRenderTargetMipmap(U)),w.isScene===!0&&w.onAfterRender(P,w,O),V0.resetDefaultState(),R=-1,H=null,M.pop(),M.length>0?(f=M[M.length-1],w0===!0&&X0.setGlobalState(P.clippingPlanes,f.state.camera)):f=null,N.pop(),N.length>0?m=N[N.length-1]:m=null};function Ai(w,O,E,I){if(w.visible===!1)return;if(w.layers.test(O.layers)){if(w.isGroup)E=w.renderOrder;else if(w.isLOD)w.autoUpdate===!0&&w.update(O);else if(w.isLight)f.pushLight(w),w.castShadow&&f.pushShadow(w);else if(w.isSprite){if(!w.frustumCulled||s0.intersectsSprite(w)){I&&q0.setFromMatrixPosition(w.matrixWorld).applyMatrix4(z0);const k=r0.update(w),J=w.material;J.visible&&m.push(w,k,J,E,q0.z,null)}}else if((w.isMesh||w.isLine||w.isPoints)&&(!w.frustumCulled||s0.intersectsObject(w))){const k=r0.update(w),J=w.material;if(I&&(w.boundingSphere!==void 0?(w.boundingSphere===null&&w.computeBoundingSphere(),q0.copy(w.boundingSphere.center)):(k.boundingSphere===null&&k.computeBoundingSphere(),q0.copy(k.boundingSphere.center)),q0.applyMatrix4(w.matrixWorld).applyMatrix4(z0)),Array.isArray(J)){const $=k.groups;for(let a0=0,o0=$.length;a0<o0;a0++){const c0=$[a0],f0=J[c0.materialIndex];f0&&f0.visible&&m.push(w,k,f0,E,q0.z,c0)}}else J.visible&&m.push(w,k,J,E,q0.z,null)}}const q=w.children;for(let k=0,J=q.length;k<J;k++)Ai(q[k],O,E,I)}function Ii(w,O,E,I){const C=w.opaque,q=w.transmissive,k=w.transparent;f.setupLightsView(E),w0===!0&&X0.setGlobalState(P.clippingPlanes,E),I&&D0.viewport(j.copy(I)),C.length>0&&X1(C,O,E),q.length>0&&X1(q,O,E),k.length>0&&X1(k,O,E),D0.buffers.depth.setTest(!0),D0.buffers.depth.setMask(!0),D0.buffers.color.setMask(!0),D0.setPolygonOffset(!1)}function O2(w,O,E,I){if((E.isScene===!0?E.overrideMaterial:null)!==null)return;f.state.transmissionRenderTarget[I.id]===void 0&&(f.state.transmissionRenderTarget[I.id]=new M1(1,1,{generateMipmaps:!0,type:we.has("EXT_color_buffer_half_float")||we.has("EXT_color_buffer_float")?Dn:xn,minFilter:Tn,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:ge.workingColorSpace}));const q=f.state.transmissionRenderTarget[I.id],k=I.viewport||j;q.setSize(k.z*P.transmissionResolutionScale,k.w*P.transmissionResolutionScale);const J=P.getRenderTarget(),$=P.getActiveCubeFace(),a0=P.getActiveMipmapLevel();P.setRenderTarget(q),P.getClearColor(e0),u0=P.getClearAlpha(),u0<1&&P.setClearColor(16777215,.5),P.clear(),Ee&&l0.render(E);const o0=P.toneMapping;P.toneMapping=u1;const c0=I.viewport;if(I.viewport!==void 0&&(I.viewport=void 0),f.setupLightsView(I),w0===!0&&X0.setGlobalState(P.clippingPlanes,I),X1(w,E,I),ie.updateMultisampleRenderTarget(q),ie.updateRenderTargetMipmap(q),we.has("WEBGL_multisampled_render_to_texture")===!1){let f0=!1;for(let g0=0,M0=O.length;g0<M0;g0++){const G0=O[g0],k0=G0.object,C0=G0.geometry,_0=G0.material,O0=G0.group;if(_0.side===gn&&k0.layers.test(I.layers)){const Te=_0.side;_0.side=Wt,_0.needsUpdate=!0,E2(k0,E,I,C0,_0,O0),_0.side=Te,_0.needsUpdate=!0,f0=!0}}f0===!0&&(ie.updateMultisampleRenderTarget(q),ie.updateRenderTargetMipmap(q))}P.setRenderTarget(J,$,a0),P.setClearColor(e0,u0),c0!==void 0&&(I.viewport=c0),P.toneMapping=o0}function X1(w,O,E){const I=O.isScene===!0?O.overrideMaterial:null;for(let C=0,q=w.length;C<q;C++){const k=w[C],J=k.object,$=k.geometry,a0=k.group;let o0=k.material;o0.allowOverride===!0&&I!==null&&(o0=I),J.layers.test(E.layers)&&E2(J,O,E,$,o0,a0)}}function E2(w,O,E,I,C,q){w.onBeforeRender(P,O,E,I,C,q),w.modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,w.matrixWorld),w.normalMatrix.getNormalMatrix(w.modelViewMatrix),C.onBeforeRender(P,O,E,I,w,q),C.transparent===!0&&C.side===gn&&C.forceSinglePass===!1?(C.side=Wt,C.needsUpdate=!0,P.renderBufferDirect(E,O,I,C,w,q),C.side=Un,C.needsUpdate=!0,P.renderBufferDirect(E,O,I,C,w,q),C.side=gn):P.renderBufferDirect(E,O,I,C,w,q),w.onAfterRender(P,O,E,I,C,q)}function V1(w,O,E){O.isScene!==!0&&(O=Re);const I=U0.get(w),C=f.state.lights,q=f.state.shadowsArray,k=C.state.version,J=p0.getParameters(w,C.state,q,O,E),$=p0.getProgramCacheKey(J);let a0=I.programs;I.environment=w.isMeshStandardMaterial?O.environment:null,I.fog=O.fog,I.envMap=(w.isMeshStandardMaterial?z:Ke).get(w.envMap||I.environment),I.envMapRotation=I.environment!==null&&w.envMap===null?O.environmentRotation:w.envMapRotation,a0===void 0&&(w.addEventListener("dispose",A0),a0=new Map,I.programs=a0);let o0=a0.get($);if(o0!==void 0){if(I.currentProgram===o0&&I.lightsStateVersion===k)return Vi(w,J),o0}else J.uniforms=p0.getUniforms(w),w.onBeforeCompile(J,P),o0=p0.acquireProgram(J,$),a0.set($,o0),I.uniforms=J.uniforms;const c0=I.uniforms;return(!w.isShaderMaterial&&!w.isRawShaderMaterial||w.clipping===!0)&&(c0.clippingPlanes=X0.uniform),Vi(w,J),I.needsLights=Bn(w),I.lightsStateVersion=k,I.needsLights&&(c0.ambientLightColor.value=C.state.ambient,c0.lightProbe.value=C.state.probe,c0.directionalLights.value=C.state.directional,c0.directionalLightShadows.value=C.state.directionalShadow,c0.spotLights.value=C.state.spot,c0.spotLightShadows.value=C.state.spotShadow,c0.rectAreaLights.value=C.state.rectArea,c0.ltc_1.value=C.state.rectAreaLTC1,c0.ltc_2.value=C.state.rectAreaLTC2,c0.pointLights.value=C.state.point,c0.pointLightShadows.value=C.state.pointShadow,c0.hemisphereLights.value=C.state.hemi,c0.directionalShadowMap.value=C.state.directionalShadowMap,c0.directionalShadowMatrix.value=C.state.directionalShadowMatrix,c0.spotShadowMap.value=C.state.spotShadowMap,c0.spotLightMatrix.value=C.state.spotLightMatrix,c0.spotLightMap.value=C.state.spotLightMap,c0.pointShadowMap.value=C.state.pointShadowMap,c0.pointShadowMatrix.value=C.state.pointShadowMatrix),I.currentProgram=o0,I.uniformsList=null,o0}function Xi(w){if(w.uniformsList===null){const O=w.currentProgram.getUniforms();w.uniformsList=I3.seqWithValue(O.seq,w.uniforms)}return w.uniformsList}function Vi(w,O){const E=U0.get(w);E.outputColorSpace=O.outputColorSpace,E.batching=O.batching,E.batchingColor=O.batchingColor,E.instancing=O.instancing,E.instancingColor=O.instancingColor,E.instancingMorph=O.instancingMorph,E.skinning=O.skinning,E.morphTargets=O.morphTargets,E.morphNormals=O.morphNormals,E.morphColors=O.morphColors,E.morphTargetsCount=O.morphTargetsCount,E.numClippingPlanes=O.numClippingPlanes,E.numIntersection=O.numClipIntersection,E.vertexAlphas=O.vertexAlphas,E.vertexTangents=O.vertexTangents,E.toneMapping=O.toneMapping}function zs(w,O,E,I,C){O.isScene!==!0&&(O=Re),ie.resetTextureUnits();const q=O.fog,k=I.isMeshStandardMaterial?O.environment:null,J=U===null?P.outputColorSpace:U.isXRRenderTarget===!0?U.texture.colorSpace:Tt,$=(I.isMeshStandardMaterial?z:Ke).get(I.envMap||k),a0=I.vertexColors===!0&&!!E.attributes.color&&E.attributes.color.itemSize===4,o0=!!E.attributes.tangent&&(!!I.normalMap||I.anisotropy>0),c0=!!E.morphAttributes.position,f0=!!E.morphAttributes.normal,g0=!!E.morphAttributes.color;let M0=u1;I.toneMapped&&(U===null||U.isXRRenderTarget===!0)&&(M0=P.toneMapping);const G0=E.morphAttributes.position||E.morphAttributes.normal||E.morphAttributes.color,k0=G0!==void 0?G0.length:0,C0=U0.get(I),_0=f.state.lights;if(w0===!0&&(T0===!0||w!==H)){const De=w===H&&I.id===R;X0.setState(I,w,De)}let O0=!1;I.version===C0.__version?(C0.needsLights&&C0.lightsStateVersion!==_0.state.version||C0.outputColorSpace!==J||C.isBatchedMesh&&C0.batching===!1||!C.isBatchedMesh&&C0.batching===!0||C.isBatchedMesh&&C0.batchingColor===!0&&C.colorTexture===null||C.isBatchedMesh&&C0.batchingColor===!1&&C.colorTexture!==null||C.isInstancedMesh&&C0.instancing===!1||!C.isInstancedMesh&&C0.instancing===!0||C.isSkinnedMesh&&C0.skinning===!1||!C.isSkinnedMesh&&C0.skinning===!0||C.isInstancedMesh&&C0.instancingColor===!0&&C.instanceColor===null||C.isInstancedMesh&&C0.instancingColor===!1&&C.instanceColor!==null||C.isInstancedMesh&&C0.instancingMorph===!0&&C.morphTexture===null||C.isInstancedMesh&&C0.instancingMorph===!1&&C.morphTexture!==null||C0.envMap!==$||I.fog===!0&&C0.fog!==q||C0.numClippingPlanes!==void 0&&(C0.numClippingPlanes!==X0.numPlanes||C0.numIntersection!==X0.numIntersection)||C0.vertexAlphas!==a0||C0.vertexTangents!==o0||C0.morphTargets!==c0||C0.morphNormals!==f0||C0.morphColors!==g0||C0.toneMapping!==M0||C0.morphTargetsCount!==k0)&&(O0=!0):(O0=!0,C0.__version=I.version);let Te=C0.currentProgram;O0===!0&&(Te=V1(I,O,C));let et=!1,xe=!1,be=!1;const J0=Te.getUniforms(),ke=C0.uniforms;if(D0.useProgram(Te.program)&&(et=!0,xe=!0,be=!0),I.id!==R&&(R=I.id,xe=!0),et||H!==w){D0.buffers.depth.getReversed()?(S0.copy(w.projectionMatrix),Ql(S0),_l(S0),J0.setValue(W,"projectionMatrix",S0)):J0.setValue(W,"projectionMatrix",w.projectionMatrix),J0.setValue(W,"viewMatrix",w.matrixWorldInverse);const tt=J0.map.cameraPosition;tt!==void 0&&tt.setValue(W,me.setFromMatrixPosition(w.matrixWorld)),Ce.logarithmicDepthBuffer&&J0.setValue(W,"logDepthBufFC",2/(Math.log(w.far+1)/Math.LN2)),(I.isMeshPhongMaterial||I.isMeshToonMaterial||I.isMeshLambertMaterial||I.isMeshBasicMaterial||I.isMeshStandardMaterial||I.isShaderMaterial)&&J0.setValue(W,"isOrthographic",w.isOrthographicCamera===!0),H!==w&&(H=w,xe=!0,be=!0)}if(C.isSkinnedMesh){J0.setOptional(W,C,"bindMatrix"),J0.setOptional(W,C,"bindMatrixInverse");const De=C.skeleton;De&&(De.boneTexture===null&&De.computeBoneTexture(),J0.setValue(W,"boneTexture",De.boneTexture,ie))}C.isBatchedMesh&&(J0.setOptional(W,C,"batchingTexture"),J0.setValue(W,"batchingTexture",C._matricesTexture,ie),J0.setOptional(W,C,"batchingIdTexture"),J0.setValue(W,"batchingIdTexture",C._indirectTexture,ie),J0.setOptional(W,C,"batchingColorTexture"),C._colorsTexture!==null&&J0.setValue(W,"batchingColorTexture",C._colorsTexture,ie));const dt=E.morphAttributes;if((dt.position!==void 0||dt.normal!==void 0||dt.color!==void 0)&&P0.update(C,E,Te),(xe||C0.receiveShadow!==C.receiveShadow)&&(C0.receiveShadow=C.receiveShadow,J0.setValue(W,"receiveShadow",C.receiveShadow)),I.isMeshGouraudMaterial&&I.envMap!==null&&(ke.envMap.value=$,ke.flipEnvMap.value=$.isCubeTexture&&$.isRenderTargetTexture===!1?-1:1),I.isMeshStandardMaterial&&I.envMap===null&&O.environment!==null&&(ke.envMapIntensity.value=O.environmentIntensity),xe&&(J0.setValue(W,"toneMappingExposure",P.toneMappingExposure),C0.needsLights&&Rn(ke,be),q&&I.fog===!0&&i0.refreshFogUniforms(ke,q),i0.refreshMaterialUniforms(ke,I,t0,y0,f.state.transmissionRenderTarget[w.id]),I3.upload(W,Xi(C0),ke,ie)),I.isShaderMaterial&&I.uniformsNeedUpdate===!0&&(I3.upload(W,Xi(C0),ke,ie),I.uniformsNeedUpdate=!1),I.isSpriteMaterial&&J0.setValue(W,"center",C.center),J0.setValue(W,"modelViewMatrix",C.modelViewMatrix),J0.setValue(W,"normalMatrix",C.normalMatrix),J0.setValue(W,"modelMatrix",C.matrixWorld),I.isShaderMaterial||I.isRawShaderMaterial){const De=I.uniformsGroups;for(let tt=0,As=De.length;tt<As;tt++){const h1=De[tt];G.update(h1,Te),G.bind(h1,Te)}}return Te}function Rn(w,O){w.ambientLightColor.needsUpdate=O,w.lightProbe.needsUpdate=O,w.directionalLights.needsUpdate=O,w.directionalLightShadows.needsUpdate=O,w.pointLights.needsUpdate=O,w.pointLightShadows.needsUpdate=O,w.spotLights.needsUpdate=O,w.spotLightShadows.needsUpdate=O,w.rectAreaLights.needsUpdate=O,w.hemisphereLights.needsUpdate=O}function Bn(w){return w.isMeshLambertMaterial||w.isMeshToonMaterial||w.isMeshPhongMaterial||w.isMeshStandardMaterial||w.isShadowMaterial||w.isShaderMaterial&&w.lights===!0}this.getActiveCubeFace=function(){return X},this.getActiveMipmapLevel=function(){return D},this.getRenderTarget=function(){return U},this.setRenderTargetTextures=function(w,O,E){const I=U0.get(w);I.__autoAllocateDepthBuffer=w.resolveDepthBuffer===!1,I.__autoAllocateDepthBuffer===!1&&(I.__useRenderToTexture=!1),U0.get(w.texture).__webglTexture=O,U0.get(w.depthTexture).__webglTexture=I.__autoAllocateDepthBuffer?void 0:E,I.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(w,O){const E=U0.get(w);E.__webglFramebuffer=O,E.__useDefaultFramebuffer=O===void 0};const g=W.createFramebuffer();this.setRenderTarget=function(w,O=0,E=0){U=w,X=O,D=E;let I=!0,C=null,q=!1,k=!1;if(w){const $=U0.get(w);if($.__useDefaultFramebuffer!==void 0)D0.bindFramebuffer(W.FRAMEBUFFER,null),I=!1;else if($.__webglFramebuffer===void 0)ie.setupRenderTarget(w);else if($.__hasExternalTextures)ie.rebindTextures(w,U0.get(w.texture).__webglTexture,U0.get(w.depthTexture).__webglTexture);else if(w.depthBuffer){const c0=w.depthTexture;if($.__boundDepthTexture!==c0){if(c0!==null&&U0.has(c0)&&(w.width!==c0.image.width||w.height!==c0.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");ie.setupDepthRenderbuffer(w)}}const a0=w.texture;(a0.isData3DTexture||a0.isDataArrayTexture||a0.isCompressedArrayTexture)&&(k=!0);const o0=U0.get(w).__webglFramebuffer;w.isWebGLCubeRenderTarget?(Array.isArray(o0[O])?C=o0[O][E]:C=o0[O],q=!0):w.samples>0&&ie.useMultisampledRTT(w)===!1?C=U0.get(w).__webglMultisampledFramebuffer:Array.isArray(o0)?C=o0[E]:C=o0,j.copy(w.viewport),K.copy(w.scissor),Q=w.scissorTest}else j.copy(F0).multiplyScalar(t0).floor(),K.copy(K0).multiplyScalar(t0).floor(),Q=ue;if(E!==0&&(C=g),D0.bindFramebuffer(W.FRAMEBUFFER,C)&&I&&D0.drawBuffers(w,C),D0.viewport(j),D0.scissor(K),D0.setScissorTest(Q),q){const $=U0.get(w.texture);W.framebufferTexture2D(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,W.TEXTURE_CUBE_MAP_POSITIVE_X+O,$.__webglTexture,E)}else if(k){const $=U0.get(w.texture),a0=O;W.framebufferTextureLayer(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,$.__webglTexture,E,a0)}else if(w!==null&&E!==0){const $=U0.get(w.texture);W.framebufferTexture2D(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,W.TEXTURE_2D,$.__webglTexture,E)}R=-1},this.readRenderTargetPixels=function(w,O,E,I,C,q,k,J=0){if(!(w&&w.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let $=U0.get(w).__webglFramebuffer;if(w.isWebGLCubeRenderTarget&&k!==void 0&&($=$[k]),$){D0.bindFramebuffer(W.FRAMEBUFFER,$);try{const a0=w.textures[J],o0=a0.format,c0=a0.type;if(!Ce.textureFormatReadable(o0)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Ce.textureTypeReadable(c0)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}O>=0&&O<=w.width-I&&E>=0&&E<=w.height-C&&(w.textures.length>1&&W.readBuffer(W.COLOR_ATTACHMENT0+J),W.readPixels(O,E,I,C,v0.convert(o0),v0.convert(c0),q))}finally{const a0=U!==null?U0.get(U).__webglFramebuffer:null;D0.bindFramebuffer(W.FRAMEBUFFER,a0)}}},this.readRenderTargetPixelsAsync=async function(w,O,E,I,C,q,k,J=0){if(!(w&&w.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let $=U0.get(w).__webglFramebuffer;if(w.isWebGLCubeRenderTarget&&k!==void 0&&($=$[k]),$)if(O>=0&&O<=w.width-I&&E>=0&&E<=w.height-C){D0.bindFramebuffer(W.FRAMEBUFFER,$);const a0=w.textures[J],o0=a0.format,c0=a0.type;if(!Ce.textureFormatReadable(o0))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Ce.textureTypeReadable(c0))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const f0=W.createBuffer();W.bindBuffer(W.PIXEL_PACK_BUFFER,f0),W.bufferData(W.PIXEL_PACK_BUFFER,q.byteLength,W.STREAM_READ),w.textures.length>1&&W.readBuffer(W.COLOR_ATTACHMENT0+J),W.readPixels(O,E,I,C,v0.convert(o0),v0.convert(c0),0);const g0=U!==null?U0.get(U).__webglFramebuffer:null;D0.bindFramebuffer(W.FRAMEBUFFER,g0);const M0=W.fenceSync(W.SYNC_GPU_COMMANDS_COMPLETE,0);return W.flush(),await Kl(W,M0,4),W.bindBuffer(W.PIXEL_PACK_BUFFER,f0),W.getBufferSubData(W.PIXEL_PACK_BUFFER,0,q),W.deleteBuffer(f0),W.deleteSync(M0),q}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(w,O=null,E=0){const I=Math.pow(2,-E),C=Math.floor(w.image.width*I),q=Math.floor(w.image.height*I),k=O!==null?O.x:0,J=O!==null?O.y:0;ie.setTexture2D(w,0),W.copyTexSubImage2D(W.TEXTURE_2D,E,0,0,k,J,C,q),D0.unbindTexture()};const L=W.createFramebuffer(),A=W.createFramebuffer();this.copyTextureToTexture=function(w,O,E=null,I=null,C=0,q=null){q===null&&(C!==0?(yi("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),q=C,C=0):q=0);let k,J,$,a0,o0,c0,f0,g0,M0;const G0=w.isCompressedTexture?w.mipmaps[q]:w.image;if(E!==null)k=E.max.x-E.min.x,J=E.max.y-E.min.y,$=E.isBox3?E.max.z-E.min.z:1,a0=E.min.x,o0=E.min.y,c0=E.isBox3?E.min.z:0;else{const dt=Math.pow(2,-C);k=Math.floor(G0.width*dt),J=Math.floor(G0.height*dt),w.isDataArrayTexture?$=G0.depth:w.isData3DTexture?$=Math.floor(G0.depth*dt):$=1,a0=0,o0=0,c0=0}I!==null?(f0=I.x,g0=I.y,M0=I.z):(f0=0,g0=0,M0=0);const k0=v0.convert(O.format),C0=v0.convert(O.type);let _0;O.isData3DTexture?(ie.setTexture3D(O,0),_0=W.TEXTURE_3D):O.isDataArrayTexture||O.isCompressedArrayTexture?(ie.setTexture2DArray(O,0),_0=W.TEXTURE_2D_ARRAY):(ie.setTexture2D(O,0),_0=W.TEXTURE_2D),W.pixelStorei(W.UNPACK_FLIP_Y_WEBGL,O.flipY),W.pixelStorei(W.UNPACK_PREMULTIPLY_ALPHA_WEBGL,O.premultiplyAlpha),W.pixelStorei(W.UNPACK_ALIGNMENT,O.unpackAlignment);const O0=W.getParameter(W.UNPACK_ROW_LENGTH),Te=W.getParameter(W.UNPACK_IMAGE_HEIGHT),et=W.getParameter(W.UNPACK_SKIP_PIXELS),xe=W.getParameter(W.UNPACK_SKIP_ROWS),be=W.getParameter(W.UNPACK_SKIP_IMAGES);W.pixelStorei(W.UNPACK_ROW_LENGTH,G0.width),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,G0.height),W.pixelStorei(W.UNPACK_SKIP_PIXELS,a0),W.pixelStorei(W.UNPACK_SKIP_ROWS,o0),W.pixelStorei(W.UNPACK_SKIP_IMAGES,c0);const J0=w.isDataArrayTexture||w.isData3DTexture,ke=O.isDataArrayTexture||O.isData3DTexture;if(w.isDepthTexture){const dt=U0.get(w),De=U0.get(O),tt=U0.get(dt.__renderTarget),As=U0.get(De.__renderTarget);D0.bindFramebuffer(W.READ_FRAMEBUFFER,tt.__webglFramebuffer),D0.bindFramebuffer(W.DRAW_FRAMEBUFFER,As.__webglFramebuffer);for(let h1=0;h1<$;h1++)J0&&(W.framebufferTextureLayer(W.READ_FRAMEBUFFER,W.COLOR_ATTACHMENT0,U0.get(w).__webglTexture,C,c0+h1),W.framebufferTextureLayer(W.DRAW_FRAMEBUFFER,W.COLOR_ATTACHMENT0,U0.get(O).__webglTexture,q,M0+h1)),W.blitFramebuffer(a0,o0,k,J,f0,g0,k,J,W.DEPTH_BUFFER_BIT,W.NEAREST);D0.bindFramebuffer(W.READ_FRAMEBUFFER,null),D0.bindFramebuffer(W.DRAW_FRAMEBUFFER,null)}else if(C!==0||w.isRenderTargetTexture||U0.has(w)){const dt=U0.get(w),De=U0.get(O);D0.bindFramebuffer(W.READ_FRAMEBUFFER,L),D0.bindFramebuffer(W.DRAW_FRAMEBUFFER,A);for(let tt=0;tt<$;tt++)J0?W.framebufferTextureLayer(W.READ_FRAMEBUFFER,W.COLOR_ATTACHMENT0,dt.__webglTexture,C,c0+tt):W.framebufferTexture2D(W.READ_FRAMEBUFFER,W.COLOR_ATTACHMENT0,W.TEXTURE_2D,dt.__webglTexture,C),ke?W.framebufferTextureLayer(W.DRAW_FRAMEBUFFER,W.COLOR_ATTACHMENT0,De.__webglTexture,q,M0+tt):W.framebufferTexture2D(W.DRAW_FRAMEBUFFER,W.COLOR_ATTACHMENT0,W.TEXTURE_2D,De.__webglTexture,q),C!==0?W.blitFramebuffer(a0,o0,k,J,f0,g0,k,J,W.COLOR_BUFFER_BIT,W.NEAREST):ke?W.copyTexSubImage3D(_0,q,f0,g0,M0+tt,a0,o0,k,J):W.copyTexSubImage2D(_0,q,f0,g0,a0,o0,k,J);D0.bindFramebuffer(W.READ_FRAMEBUFFER,null),D0.bindFramebuffer(W.DRAW_FRAMEBUFFER,null)}else ke?w.isDataTexture||w.isData3DTexture?W.texSubImage3D(_0,q,f0,g0,M0,k,J,$,k0,C0,G0.data):O.isCompressedArrayTexture?W.compressedTexSubImage3D(_0,q,f0,g0,M0,k,J,$,k0,G0.data):W.texSubImage3D(_0,q,f0,g0,M0,k,J,$,k0,C0,G0):w.isDataTexture?W.texSubImage2D(W.TEXTURE_2D,q,f0,g0,k,J,k0,C0,G0.data):w.isCompressedTexture?W.compressedTexSubImage2D(W.TEXTURE_2D,q,f0,g0,G0.width,G0.height,k0,G0.data):W.texSubImage2D(W.TEXTURE_2D,q,f0,g0,k,J,k0,C0,G0);W.pixelStorei(W.UNPACK_ROW_LENGTH,O0),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,Te),W.pixelStorei(W.UNPACK_SKIP_PIXELS,et),W.pixelStorei(W.UNPACK_SKIP_ROWS,xe),W.pixelStorei(W.UNPACK_SKIP_IMAGES,be),q===0&&O.generateMipmaps&&W.generateMipmap(_0),D0.unbindTexture()},this.copyTextureToTexture3D=function(w,O,E=null,I=null,C=0){return yi('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(w,O,E,I,C)},this.initRenderTarget=function(w){U0.get(w).__webglFramebuffer===void 0&&ie.setupRenderTarget(w)},this.initTexture=function(w){w.isCubeTexture?ie.setTextureCube(w,0):w.isData3DTexture?ie.setTexture3D(w,0):w.isDataArrayTexture||w.isCompressedArrayTexture?ie.setTexture2DArray(w,0):ie.setTexture2D(w,0),D0.unbindTexture()},this.resetState=function(){X=0,D=0,U=null,D0.reset(),V0.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Wn}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=ge._getDrawingBufferColorSpace(e),t.unpackColorSpace=ge._getUnpackColorSpace()}}const Zi=new S;function Zt(i,e,t,n,s,r){const a=2*Math.PI*s/4,o=Math.max(r-2*s,0),l=Math.PI/4;Zi.copy(e),Zi[n]=0,Zi.normalize();const d=.5*a/(a+o),c=1-Zi.angleTo(i)/l;return Math.sign(Zi[t])===1?c*d:o/(a+o)+d+d*(1-c)}class tm extends _t{constructor(e=1,t=1,n=1,s=2,r=.1){if(s=s*2+1,r=Math.min(e/2,t/2,n/2,r),super(e,t,n,s,s,s),s===1)return;const a=this.toNonIndexed();this.index=null,this.attributes.position=a.attributes.position,this.attributes.normal=a.attributes.normal,this.attributes.uv=a.attributes.uv;const o=new S,l=new S,d=new S(e,t,n).divideScalar(2).subScalar(r),c=this.attributes.position.array,u=this.attributes.normal.array,p=this.attributes.uv.array,h=c.length/6,y=new S,T=.5/s;for(let m=0,f=0;m<c.length;m+=3,f+=2)switch(o.fromArray(c,m),l.copy(o),l.x-=Math.sign(l.x)*T,l.y-=Math.sign(l.y)*T,l.z-=Math.sign(l.z)*T,l.normalize(),c[m+0]=d.x*Math.sign(o.x)+l.x*r,c[m+1]=d.y*Math.sign(o.y)+l.y*r,c[m+2]=d.z*Math.sign(o.z)+l.z*r,u[m+0]=l.x,u[m+1]=l.y,u[m+2]=l.z,Math.floor(m/h)){case 0:y.set(1,0,0),p[f+0]=Zt(y,l,"z","y",r,n),p[f+1]=1-Zt(y,l,"y","z",r,t);break;case 1:y.set(-1,0,0),p[f+0]=1-Zt(y,l,"z","y",r,n),p[f+1]=1-Zt(y,l,"y","z",r,t);break;case 2:y.set(0,1,0),p[f+0]=1-Zt(y,l,"x","z",r,e),p[f+1]=Zt(y,l,"z","x",r,n);break;case 3:y.set(0,-1,0),p[f+0]=1-Zt(y,l,"x","z",r,e),p[f+1]=1-Zt(y,l,"z","x",r,n);break;case 4:y.set(0,0,1),p[f+0]=1-Zt(y,l,"x","y",r,e),p[f+1]=1-Zt(y,l,"y","x",r,t);break;case 5:y.set(0,0,-1),p[f+0]=Zt(y,l,"x","y",r,e),p[f+1]=1-Zt(y,l,"y","x",r,t);break}}}const ki=new S,Ji=new S,I6=new re;class nm extends B7{constructor(e,t=1,n=16711680){const s=new Rt,r=e.geometry.attributes.normal.count,a=new gt(r*2*3,3);s.setAttribute("position",a),super(s,new b2({color:n,toneMapped:!1})),this.object=e,this.size=t,this.type="VertexNormalsHelper",this.matrixAutoUpdate=!1,this.isVertexNormalsHelper=!0,this.update()}update(){this.object.updateMatrixWorld(!0),I6.getNormalMatrix(this.object.matrixWorld);const e=this.object.matrixWorld,t=this.geometry.attributes.position,n=this.object.geometry;if(n){const s=n.attributes.position,r=n.attributes.normal;let a=0;for(let o=0,l=s.count;o<l;o++)ki.fromBufferAttribute(s,o).applyMatrix4(e),Ji.fromBufferAttribute(r,o),Ji.applyMatrix3(I6).normalize().multiplyScalar(this.size).add(ki),t.setXYZ(a,ki.x,ki.y,ki.z),a=a+1,t.setXYZ(a,Ji.x,Ji.y,Ji.z),a=a+1}t.needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}class im{constructor({scene:e,joints:t=[]}){this.#e=e,this.#t=t}#e;#t;#n=new Map;#a=new WeakMap;#r=new WeakMap;initialize(){this.#e.forEachCollider(e=>{let t=this.#r.get(e.parent());t||(t=Math.round(16777215*Math.random()),this.#r.set(e.parent(),t));const n=new b2({color:t}),s=e.shapeType(),r=e.translation(),a=e.rotation();let o;if(s===0){const l=e.radius();o=new U3(l,8,8)}else if(s===1){const l=e.halfExtents();o=new _t(l.x*2,l.y*2,l.z*2)}else if(s===6||s===9){const l=e.vertices(),d=e.indices();o=new Rt,o.setIndex(new U7(d,1)),o.setAttribute("position",new gt(l,3))}else if(s===10){const l=e.radius(),d=e.halfHeight()*2;o=new vs(l,l,d,6)}else if(s===12){const l=e.halfExtents();o=new tm(l.x*2,l.y*2,l.z*2,1,e.roundRadius())}else console.warn("Unsupported collider shape:",s);if(o){o.computeVertexNormals();const l=new B7(new Xd(o),n);l.position.set(r.x,r.y,r.z),l.quaternion.set(a.x,a.y,a.z,a.w),l.material.depthTest=!1,l.material.transparent=!0,l.material.opacity=.5,this.#e.addObject(l);const d=new Be(o);d.position.copy(r),d.quaternion.copy(a);const c=new nm(d,.025);c.material.transparent=!0,c.material.opacity=.25,this.#e.addObject(c),this.#n.set(e,{wireframe:l,normalsHelper:c,normalMesh:d})}}),this.#t.forEach(({joint:e,jointData:t})=>{const n=new U3(5e-4,4,4),s=e.body1(),r=e.body2(),a=new jn({color:this.#r.get(s),depthTest:!1}),o=new jn({color:this.#r.get(r),depthTest:!1}),l=new Be(n,a),d=new Be(n,o),c=ei(e.body1(),e.anchor1()),u=ei(e.body2(),e.anchor2());l.position.copy(c),d.position.copy(u),this.#e.addObject(l),this.#e.addObject(d);const p={anchor1Mesh:l,anchor2Mesh:d};if(t.axis!==void 0){const h=ei(e.body1(),e.anchor1()),y=t.axis.clone().applyQuaternion(e.body1().rotation()),T=h.clone().add(y.multiplyScalar(.02)),m=new Rt().setFromPoints([h,T]),f=new b2({color:16776960,depthTest:!1}),N=new ys(m,f);this.#e.addObject(N),p.axisLine=N,p.axis=t.axis}this.#a.set(e,p)})}update(){this.#e.forEachCollider(e=>{const t=this.#n.get(e);if(t){const{wireframe:n,normalsHelper:s,normalMesh:r}=t,a=e.translation(),o=e.rotation();n.position.set(a.x,a.y,a.z),n.quaternion.set(o.x,o.y,o.z,o.w);const l=e.parent().isSleeping();r.position.set(a.x,a.y,a.z),r.quaternion.set(o.x,o.y,o.z,o.w);const d=l?0:this.#r.get(e.parent());s.material.color.setHex(d),s.update()}}),this.#t.forEach(({joint:e})=>{const{anchor1Mesh:t,anchor2Mesh:n,axisLine:s,axis:r}=this.#a.get(e),a=ei(e.body1(),e.anchor1()),o=ei(e.body2(),e.anchor2());if(t.position.copy(a),n.position.copy(o),s){const l=ei(e.body1(),e.anchor1()),d=r.clone().applyQuaternion(e.body1().rotation()),c=.01,u=l.clone().add(d.clone().multiplyScalar(-c)),p=l.clone().add(d.clone().multiplyScalar(c));s.geometry.setFromPoints([u,p])}})}}function ei(i,e){const t=new S().copy(i.translation());return t.add(new S().copy(e).applyQuaternion(i.rotation())),t}class sm{constructor({containerElement:e}){this.#e=document.createElement("div"),this.#e.style.position="absolute",this.#e.style.top="10px",this.#e.style.left="10px",this.#e.style.color="white",this.#e.style.fontSize="20px",this.#e.style.zIndex="1000",this.#e.style.pointerEvents="none",this.#e.style.userSelect="none",this.#e.style.fontFamily="Arial, sans-serif",this.#e.style.backgroundColor="rgba(0, 0, 0, 0.5)",this.#e.style.padding="5px",this.#e.style.borderRadius="5px",this.#e.style.boxShadow="0 0 10px rgba(0, 0, 0, 0.5)",e.appendChild(this.#e)}#e=null;#t=0;initialize(){}update(){const e=performance.now();if(this.#t){const t=e-this.#t;let n=Math.round(1e3/t);this.#e.innerText=`FPS: ${n}`}this.#t=e}}class rm{constructor({scene:e,containerElement:t}){this.#e=e,this.#t=document.createElement("div"),this.#t.style.position="absolute",this.#t.style.bottom="10px",this.#t.style.left="10px",this.#t.style.color="white",this.#t.style.fontSize="20px",this.#t.style.zIndex="1000",this.#t.style.pointerEvents="none",this.#t.style.userSelect="none",this.#t.style.fontFamily="Arial, sans-serif",this.#t.style.backgroundColor="rgba(0, 0, 0, 0.5)",this.#t.style.padding="5px",this.#t.style.borderRadius="5px",this.#t.style.boxShadow="0 0 10px rgba(0, 0, 0, 0.5)",t.appendChild(this.#t)}#e=null;#t=null;initialize(){}update(){const e=this.#e.triangles;this.#t.innerText=`Polygons: ${Intl.NumberFormat("en-US").format(e)}`}}const X6={type:"change"},n5={type:"start"},q4={type:"end"},l3=new Mi,V6=new a1,am=Math.cos(70*x4.DEG2RAD),nt=new S,It=2*Math.PI,Ve={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},yr=1e-6;class om extends bc{constructor(e,t=null){super(e,t),this.state=Ve.NONE,this.target=new S,this.cursor=new S,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:hi.ROTATE,MIDDLE:hi.DOLLY,RIGHT:hi.PAN},this.touches={ONE:di.ROTATE,TWO:di.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new S,this._lastQuaternion=new ee,this._lastTargetPosition=new S,this._quat=new ee().setFromUnitVectors(e.up,new S(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new c6,this._sphericalDelta=new c6,this._scale=1,this._panOffset=new S,this._rotateStart=new $0,this._rotateEnd=new $0,this._rotateDelta=new $0,this._panStart=new $0,this._panEnd=new $0,this._panDelta=new $0,this._dollyStart=new $0,this._dollyEnd=new $0,this._dollyDelta=new $0,this._dollyDirection=new S,this._mouse=new $0,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=dm.bind(this),this._onPointerDown=lm.bind(this),this._onPointerUp=cm.bind(this),this._onContextMenu=ym.bind(this),this._onMouseWheel=fm.bind(this),this._onKeyDown=hm.bind(this),this._onTouchStart=mm.bind(this),this._onTouchMove=bm.bind(this),this._onMouseDown=um.bind(this),this._onMouseMove=pm.bind(this),this._interceptControlDown=vm.bind(this),this._interceptControlUp=gm.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(X6),this.update(),this.state=Ve.NONE}update(e=null){const t=this.object.position;nt.copy(t).sub(this.target),nt.applyQuaternion(this._quat),this._spherical.setFromVector3(nt),this.autoRotate&&this.state===Ve.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,s=this.maxAzimuthAngle;isFinite(n)&&isFinite(s)&&(n<-Math.PI?n+=It:n>Math.PI&&(n-=It),s<-Math.PI?s+=It:s>Math.PI&&(s-=It),n<=s?this._spherical.theta=Math.max(n,Math.min(s,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(n+s)/2?Math.max(n,this._spherical.theta):Math.min(s,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const a=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=a!=this._spherical.radius}if(nt.setFromSpherical(this._spherical),nt.applyQuaternion(this._quatInverse),t.copy(this.target).add(nt),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let a=null;if(this.object.isPerspectiveCamera){const o=nt.length();a=this._clampDistance(o*this._scale);const l=o-a;this.object.position.addScaledVector(this._dollyDirection,l),this.object.updateMatrixWorld(),r=!!l}else if(this.object.isOrthographicCamera){const o=new S(this._mouse.x,this._mouse.y,0);o.unproject(this.object);const l=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=l!==this.object.zoom;const d=new S(this._mouse.x,this._mouse.y,0);d.unproject(this.object),this.object.position.sub(d).add(o),this.object.updateMatrixWorld(),a=nt.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;a!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(a).add(this.object.position):(l3.origin.copy(this.object.position),l3.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(l3.direction))<am?this.object.lookAt(this.target):(V6.setFromNormalAndCoplanarPoint(this.object.up,this.target),l3.intersectPlane(V6,this.target))))}else if(this.object.isOrthographicCamera){const a=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),a!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,r||this._lastPosition.distanceToSquared(this.object.position)>yr||8*(1-this._lastQuaternion.dot(this.object.quaternion))>yr||this._lastTargetPosition.distanceToSquared(this.target)>yr?(this.dispatchEvent(X6),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?It/60*this.autoRotateSpeed*e:It/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){nt.setFromMatrixColumn(t,0),nt.multiplyScalar(-e),this._panOffset.add(nt)}_panUp(e,t){this.screenSpacePanning===!0?nt.setFromMatrixColumn(t,1):(nt.setFromMatrixColumn(t,0),nt.crossVectors(this.object.up,nt)),nt.multiplyScalar(e),this._panOffset.add(nt)}_pan(e,t){const n=this.domElement;if(this.object.isPerspectiveCamera){const s=this.object.position;nt.copy(s).sub(this.target);let r=nt.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*r/n.clientHeight,this.object.matrix),this._panUp(2*t*r/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),s=e-n.left,r=t-n.top,a=n.width,o=n.height;this._mouse.x=s/a*2-1,this._mouse.y=-(r/o)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(It*this._rotateDelta.x/t.clientHeight),this._rotateUp(It*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(It*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-It*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(It*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-It*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),s=.5*(e.pageY+t.y);this._rotateStart.set(n,s)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),s=.5*(e.pageY+t.y);this._panStart.set(n,s)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,s=e.pageY-t.y,r=Math.sqrt(n*n+s*s);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),s=.5*(e.pageX+n.x),r=.5*(e.pageY+n.y);this._rotateEnd.set(s,r)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(It*this._rotateDelta.x/t.clientHeight),this._rotateUp(It*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),s=.5*(e.pageY+t.y);this._panEnd.set(n,s)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,s=e.pageY-t.y,r=Math.sqrt(n*n+s*s);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const a=(e.pageX+t.x)*.5,o=(e.pageY+t.y)*.5;this._updateZoomParameters(a,o)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new $0,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,n={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}}function lm(i){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(i.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(i)&&(this._addPointer(i),i.pointerType==="touch"?this._onTouchStart(i):this._onMouseDown(i)))}function dm(i){this.enabled!==!1&&(i.pointerType==="touch"?this._onTouchMove(i):this._onMouseMove(i))}function cm(i){switch(this._removePointer(i),this._pointers.length){case 0:this.domElement.releasePointerCapture(i.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(q4),this.state=Ve.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function um(i){let e;switch(i.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case hi.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(i),this.state=Ve.DOLLY;break;case hi.ROTATE:if(i.ctrlKey||i.metaKey||i.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(i),this.state=Ve.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(i),this.state=Ve.ROTATE}break;case hi.PAN:if(i.ctrlKey||i.metaKey||i.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(i),this.state=Ve.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(i),this.state=Ve.PAN}break;default:this.state=Ve.NONE}this.state!==Ve.NONE&&this.dispatchEvent(n5)}function pm(i){switch(this.state){case Ve.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(i);break;case Ve.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(i);break;case Ve.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(i);break}}function fm(i){this.enabled===!1||this.enableZoom===!1||this.state!==Ve.NONE||(i.preventDefault(),this.dispatchEvent(n5),this._handleMouseWheel(this._customWheelEvent(i)),this.dispatchEvent(q4))}function hm(i){this.enabled!==!1&&this._handleKeyDown(i)}function mm(i){switch(this._trackPointer(i),this._pointers.length){case 1:switch(this.touches.ONE){case di.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(i),this.state=Ve.TOUCH_ROTATE;break;case di.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(i),this.state=Ve.TOUCH_PAN;break;default:this.state=Ve.NONE}break;case 2:switch(this.touches.TWO){case di.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(i),this.state=Ve.TOUCH_DOLLY_PAN;break;case di.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(i),this.state=Ve.TOUCH_DOLLY_ROTATE;break;default:this.state=Ve.NONE}break;default:this.state=Ve.NONE}this.state!==Ve.NONE&&this.dispatchEvent(n5)}function bm(i){switch(this._trackPointer(i),this.state){case Ve.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(i),this.update();break;case Ve.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(i),this.update();break;case Ve.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(i),this.update();break;case Ve.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(i),this.update();break;default:this.state=Ve.NONE}}function ym(i){this.enabled!==!1&&i.preventDefault()}function vm(i){i.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function gm(i){i.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const wm=new S(0,.45,0);class Tm{constructor({camera:e,containerElement:t}){this.#e=e,this.#t=t}#e;#t;initialize(){const e=new om(this.#e,this.#t);e.target.copy(wm),e.update()}update(){}}class ti{static DEBUG_COLLIDERS=!1;static DEBUG_FPS=!1;static DEBUG_POLYGONS=!1;static DEBUG_CONTROLS=!1;static#e;static#t;static#n;static#a;static#r;static#o;static#u;static async initialize({scene:e,containerElement:t,camera:n,joints:s}){this.#e=e,this.#t=t,this.#n=n,this.DEBUG_COLLIDERS&&(this.#a=new im({scene:this.#e,joints:s}),this.#a.initialize()),this.DEBUG_FPS&&(this.#r=new sm({containerElement:this.#t}),this.#r.initialize()),this.DEBUG_POLYGONS&&(this.#o=new rm({scene:this.#e,containerElement:this.#t}),this.#o.initialize()),this.DEBUG_CONTROLS&&(this.#u=new Tm({scene:this.#e,containerElement:this.#t,camera:this.#n}),this.#u.initialize())}static update(){this.DEBUG_COLLIDERS&&this.#a.update(),this.DEBUG_FPS&&this.#r.update(),this.DEBUG_POLYGONS&&this.#o.update(),this.DEBUG_CONTROLS&&this.#u.update()}}function F6(i,e){if(e===xl)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),i;if(e===qa||e===w4){let t=i.getIndex();if(t===null){const a=[],o=i.getAttribute("position");if(o!==void 0){for(let l=0;l<o.count;l++)a.push(l);i.setIndex(a),t=i.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),i}const n=t.count-2,s=[];if(e===qa)for(let a=1;a<=n;a++)s.push(t.getX(0)),s.push(t.getX(a)),s.push(t.getX(a+1));else for(let a=0;a<n;a++)a%2===0?(s.push(t.getX(a)),s.push(t.getX(a+1)),s.push(t.getX(a+2))):(s.push(t.getX(a+2)),s.push(t.getX(a+1)),s.push(t.getX(a)));s.length/3!==n&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const r=i.clone();return r.setIndex(s),r.clearGroups(),r}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),i}class xm extends I1{constructor(e){super(e),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(t){return new Nm(t)}),this.register(function(t){return new Rm(t)}),this.register(function(t){return new Vm(t)}),this.register(function(t){return new Fm(t)}),this.register(function(t){return new Dm(t)}),this.register(function(t){return new Om(t)}),this.register(function(t){return new Em(t)}),this.register(function(t){return new Cm(t)}),this.register(function(t){return new zm(t)}),this.register(function(t){return new Lm(t)}),this.register(function(t){return new Am(t)}),this.register(function(t){return new Mm(t)}),this.register(function(t){return new Xm(t)}),this.register(function(t){return new Im(t)}),this.register(function(t){return new Pm(t)}),this.register(function(t){return new Wm(t)}),this.register(function(t){return new jm(t)})}load(e,t,n,s){const r=this;let a;if(this.resourcePath!=="")a=this.resourcePath;else if(this.path!==""){const d=r2.extractUrlBase(e);a=r2.resolveURL(d,this.path)}else a=r2.extractUrlBase(e);this.manager.itemStart(e);const o=function(d){s?s(d):console.error(d),r.manager.itemError(e),r.manager.itemEnd(e)},l=new K7(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(d){try{r.parse(d,a,function(c){t(c),r.manager.itemEnd(e)},o)}catch(c){o(c)}},n,o)}setDRACOLoader(e){return this.dracoLoader=e,this}setKTX2Loader(e){return this.ktx2Loader=e,this}setMeshoptDecoder(e){return this.meshoptDecoder=e,this}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,n,s){let r;const a={},o={},l=new TextDecoder;if(typeof e=="string")r=JSON.parse(e);else if(e instanceof ArrayBuffer)if(l.decode(new Uint8Array(e,0,4))===Z4){try{a[he.KHR_BINARY_GLTF]=new Ym(e)}catch(u){s&&s(u);return}r=JSON.parse(a[he.KHR_BINARY_GLTF].content)}else r=JSON.parse(l.decode(e));else r=e;if(r.asset===void 0||r.asset.version[0]<2){s&&s(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));return}const d=new tb(r,{path:t||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});d.fileLoader.setRequestHeader(this.requestHeader);for(let c=0;c<this.pluginCallbacks.length;c++){const u=this.pluginCallbacks[c](d);u.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),o[u.name]=u,a[u.name]=!0}if(r.extensionsUsed)for(let c=0;c<r.extensionsUsed.length;++c){const u=r.extensionsUsed[c],p=r.extensionsRequired||[];switch(u){case he.KHR_MATERIALS_UNLIT:a[u]=new Hm;break;case he.KHR_DRACO_MESH_COMPRESSION:a[u]=new Gm(r,this.dracoLoader);break;case he.KHR_TEXTURE_TRANSFORM:a[u]=new Um;break;case he.KHR_MESH_QUANTIZATION:a[u]=new qm;break;default:p.indexOf(u)>=0&&o[u]===void 0&&console.warn('THREE.GLTFLoader: Unknown extension "'+u+'".')}}d.setExtensions(a),d.setPlugins(o),d.parse(n,s)}parseAsync(e,t){const n=this;return new Promise(function(s,r){n.parse(e,t,s,r)})}}function Sm(){let i={};return{get:function(e){return i[e]},add:function(e,t){i[e]=t},remove:function(e){delete i[e]},removeAll:function(){i={}}}}const he={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class Pm{constructor(e){this.parser=e,this.name=he.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const e=this.parser,t=this.parser.json.nodes||[];for(let n=0,s=t.length;n<s;n++){const r=t[n];r.extensions&&r.extensions[this.name]&&r.extensions[this.name].light!==void 0&&e._addNodeRef(this.cache,r.extensions[this.name].light)}}_loadLight(e){const t=this.parser,n="light:"+e;let s=t.cache.get(n);if(s)return s;const r=t.json,l=((r.extensions&&r.extensions[this.name]||{}).lights||[])[e];let d;const c=new te(16777215);l.color!==void 0&&c.setRGB(l.color[0],l.color[1],l.color[2],Tt);const u=l.range!==void 0?l.range:0;switch(l.type){case"directional":d=new D4(c),d.target.position.set(0,0,-1),d.add(d.target);break;case"point":d=new F4(c),d.distance=u;break;case"spot":d=new V4(c),d.distance=u,l.spot=l.spot||{},l.spot.innerConeAngle=l.spot.innerConeAngle!==void 0?l.spot.innerConeAngle:0,l.spot.outerConeAngle=l.spot.outerConeAngle!==void 0?l.spot.outerConeAngle:Math.PI/4,d.angle=l.spot.outerConeAngle,d.penumbra=1-l.spot.innerConeAngle/l.spot.outerConeAngle,d.target.position.set(0,0,-1),d.add(d.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+l.type)}return d.position.set(0,0,0),In(d,l),l.intensity!==void 0&&(d.intensity=l.intensity),d.name=t.createUniqueName(l.name||"light_"+e),s=Promise.resolve(d),t.cache.add(n,s),s}getDependency(e,t){if(e==="light")return this._loadLight(t)}createNodeAttachment(e){const t=this,n=this.parser,r=n.json.nodes[e],o=(r.extensions&&r.extensions[this.name]||{}).light;return o===void 0?null:this._loadLight(o).then(function(l){return n._getNodeRef(t.cache,o,l)})}}class Hm{constructor(){this.name=he.KHR_MATERIALS_UNLIT}getMaterialType(){return jn}extendParams(e,t,n){const s=[];e.color=new te(1,1,1),e.opacity=1;const r=t.pbrMetallicRoughness;if(r){if(Array.isArray(r.baseColorFactor)){const a=r.baseColorFactor;e.color.setRGB(a[0],a[1],a[2],Tt),e.opacity=a[3]}r.baseColorTexture!==void 0&&s.push(n.assignTexture(e,"map",r.baseColorTexture,bt))}return Promise.all(s)}}class Lm{constructor(e){this.parser=e,this.name=he.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(e,t){const s=this.parser.json.materials[e];if(!s.extensions||!s.extensions[this.name])return Promise.resolve();const r=s.extensions[this.name].emissiveStrength;return r!==void 0&&(t.emissiveIntensity=r),Promise.resolve()}}class Nm{constructor(e){this.parser=e,this.name=he.KHR_MATERIALS_CLEARCOAT}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Hn}extendMaterialParams(e,t){const n=this.parser,s=n.json.materials[e];if(!s.extensions||!s.extensions[this.name])return Promise.resolve();const r=[],a=s.extensions[this.name];if(a.clearcoatFactor!==void 0&&(t.clearcoat=a.clearcoatFactor),a.clearcoatTexture!==void 0&&r.push(n.assignTexture(t,"clearcoatMap",a.clearcoatTexture)),a.clearcoatRoughnessFactor!==void 0&&(t.clearcoatRoughness=a.clearcoatRoughnessFactor),a.clearcoatRoughnessTexture!==void 0&&r.push(n.assignTexture(t,"clearcoatRoughnessMap",a.clearcoatRoughnessTexture)),a.clearcoatNormalTexture!==void 0&&(r.push(n.assignTexture(t,"clearcoatNormalMap",a.clearcoatNormalTexture)),a.clearcoatNormalTexture.scale!==void 0)){const o=a.clearcoatNormalTexture.scale;t.clearcoatNormalScale=new $0(o,o)}return Promise.all(r)}}class Rm{constructor(e){this.parser=e,this.name=he.KHR_MATERIALS_DISPERSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Hn}extendMaterialParams(e,t){const s=this.parser.json.materials[e];if(!s.extensions||!s.extensions[this.name])return Promise.resolve();const r=s.extensions[this.name];return t.dispersion=r.dispersion!==void 0?r.dispersion:0,Promise.resolve()}}class Mm{constructor(e){this.parser=e,this.name=he.KHR_MATERIALS_IRIDESCENCE}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Hn}extendMaterialParams(e,t){const n=this.parser,s=n.json.materials[e];if(!s.extensions||!s.extensions[this.name])return Promise.resolve();const r=[],a=s.extensions[this.name];return a.iridescenceFactor!==void 0&&(t.iridescence=a.iridescenceFactor),a.iridescenceTexture!==void 0&&r.push(n.assignTexture(t,"iridescenceMap",a.iridescenceTexture)),a.iridescenceIor!==void 0&&(t.iridescenceIOR=a.iridescenceIor),t.iridescenceThicknessRange===void 0&&(t.iridescenceThicknessRange=[100,400]),a.iridescenceThicknessMinimum!==void 0&&(t.iridescenceThicknessRange[0]=a.iridescenceThicknessMinimum),a.iridescenceThicknessMaximum!==void 0&&(t.iridescenceThicknessRange[1]=a.iridescenceThicknessMaximum),a.iridescenceThicknessTexture!==void 0&&r.push(n.assignTexture(t,"iridescenceThicknessMap",a.iridescenceThicknessTexture)),Promise.all(r)}}class Om{constructor(e){this.parser=e,this.name=he.KHR_MATERIALS_SHEEN}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Hn}extendMaterialParams(e,t){const n=this.parser,s=n.json.materials[e];if(!s.extensions||!s.extensions[this.name])return Promise.resolve();const r=[];t.sheenColor=new te(0,0,0),t.sheenRoughness=0,t.sheen=1;const a=s.extensions[this.name];if(a.sheenColorFactor!==void 0){const o=a.sheenColorFactor;t.sheenColor.setRGB(o[0],o[1],o[2],Tt)}return a.sheenRoughnessFactor!==void 0&&(t.sheenRoughness=a.sheenRoughnessFactor),a.sheenColorTexture!==void 0&&r.push(n.assignTexture(t,"sheenColorMap",a.sheenColorTexture,bt)),a.sheenRoughnessTexture!==void 0&&r.push(n.assignTexture(t,"sheenRoughnessMap",a.sheenRoughnessTexture)),Promise.all(r)}}class Em{constructor(e){this.parser=e,this.name=he.KHR_MATERIALS_TRANSMISSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Hn}extendMaterialParams(e,t){const n=this.parser,s=n.json.materials[e];if(!s.extensions||!s.extensions[this.name])return Promise.resolve();const r=[],a=s.extensions[this.name];return a.transmissionFactor!==void 0&&(t.transmission=a.transmissionFactor),a.transmissionTexture!==void 0&&r.push(n.assignTexture(t,"transmissionMap",a.transmissionTexture)),Promise.all(r)}}class Cm{constructor(e){this.parser=e,this.name=he.KHR_MATERIALS_VOLUME}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Hn}extendMaterialParams(e,t){const n=this.parser,s=n.json.materials[e];if(!s.extensions||!s.extensions[this.name])return Promise.resolve();const r=[],a=s.extensions[this.name];t.thickness=a.thicknessFactor!==void 0?a.thicknessFactor:0,a.thicknessTexture!==void 0&&r.push(n.assignTexture(t,"thicknessMap",a.thicknessTexture)),t.attenuationDistance=a.attenuationDistance||1/0;const o=a.attenuationColor||[1,1,1];return t.attenuationColor=new te().setRGB(o[0],o[1],o[2],Tt),Promise.all(r)}}class zm{constructor(e){this.parser=e,this.name=he.KHR_MATERIALS_IOR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Hn}extendMaterialParams(e,t){const s=this.parser.json.materials[e];if(!s.extensions||!s.extensions[this.name])return Promise.resolve();const r=s.extensions[this.name];return t.ior=r.ior!==void 0?r.ior:1.5,Promise.resolve()}}class Am{constructor(e){this.parser=e,this.name=he.KHR_MATERIALS_SPECULAR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Hn}extendMaterialParams(e,t){const n=this.parser,s=n.json.materials[e];if(!s.extensions||!s.extensions[this.name])return Promise.resolve();const r=[],a=s.extensions[this.name];t.specularIntensity=a.specularFactor!==void 0?a.specularFactor:1,a.specularTexture!==void 0&&r.push(n.assignTexture(t,"specularIntensityMap",a.specularTexture));const o=a.specularColorFactor||[1,1,1];return t.specularColor=new te().setRGB(o[0],o[1],o[2],Tt),a.specularColorTexture!==void 0&&r.push(n.assignTexture(t,"specularColorMap",a.specularColorTexture,bt)),Promise.all(r)}}class Im{constructor(e){this.parser=e,this.name=he.EXT_MATERIALS_BUMP}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Hn}extendMaterialParams(e,t){const n=this.parser,s=n.json.materials[e];if(!s.extensions||!s.extensions[this.name])return Promise.resolve();const r=[],a=s.extensions[this.name];return t.bumpScale=a.bumpFactor!==void 0?a.bumpFactor:1,a.bumpTexture!==void 0&&r.push(n.assignTexture(t,"bumpMap",a.bumpTexture)),Promise.all(r)}}class Xm{constructor(e){this.parser=e,this.name=he.KHR_MATERIALS_ANISOTROPY}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Hn}extendMaterialParams(e,t){const n=this.parser,s=n.json.materials[e];if(!s.extensions||!s.extensions[this.name])return Promise.resolve();const r=[],a=s.extensions[this.name];return a.anisotropyStrength!==void 0&&(t.anisotropy=a.anisotropyStrength),a.anisotropyRotation!==void 0&&(t.anisotropyRotation=a.anisotropyRotation),a.anisotropyTexture!==void 0&&r.push(n.assignTexture(t,"anisotropyMap",a.anisotropyTexture)),Promise.all(r)}}class Vm{constructor(e){this.parser=e,this.name=he.KHR_TEXTURE_BASISU}loadTexture(e){const t=this.parser,n=t.json,s=n.textures[e];if(!s.extensions||!s.extensions[this.name])return null;const r=s.extensions[this.name],a=t.options.ktx2Loader;if(!a){if(n.extensionsRequired&&n.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return t.loadTextureImage(e,r.source,a)}}class Fm{constructor(e){this.parser=e,this.name=he.EXT_TEXTURE_WEBP}loadTexture(e){const t=this.name,n=this.parser,s=n.json,r=s.textures[e];if(!r.extensions||!r.extensions[t])return null;const a=r.extensions[t],o=s.images[a.source];let l=n.textureLoader;if(o.uri){const d=n.options.manager.getHandler(o.uri);d!==null&&(l=d)}return n.loadTextureImage(e,a.source,l)}}class Dm{constructor(e){this.parser=e,this.name=he.EXT_TEXTURE_AVIF}loadTexture(e){const t=this.name,n=this.parser,s=n.json,r=s.textures[e];if(!r.extensions||!r.extensions[t])return null;const a=r.extensions[t],o=s.images[a.source];let l=n.textureLoader;if(o.uri){const d=n.options.manager.getHandler(o.uri);d!==null&&(l=d)}return n.loadTextureImage(e,a.source,l)}}class Wm{constructor(e){this.name=he.EXT_MESHOPT_COMPRESSION,this.parser=e}loadBufferView(e){const t=this.parser.json,n=t.bufferViews[e];if(n.extensions&&n.extensions[this.name]){const s=n.extensions[this.name],r=this.parser.getDependency("buffer",s.buffer),a=this.parser.options.meshoptDecoder;if(!a||!a.supported){if(t.extensionsRequired&&t.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return r.then(function(o){const l=s.byteOffset||0,d=s.byteLength||0,c=s.count,u=s.byteStride,p=new Uint8Array(o,l,d);return a.decodeGltfBufferAsync?a.decodeGltfBufferAsync(c,u,p,s.mode,s.filter).then(function(h){return h.buffer}):a.ready.then(function(){const h=new ArrayBuffer(c*u);return a.decodeGltfBuffer(new Uint8Array(h),c,u,p,s.mode,s.filter),h})})}else return null}}class jm{constructor(e){this.name=he.EXT_MESH_GPU_INSTANCING,this.parser=e}createNodeMesh(e){const t=this.parser.json,n=t.nodes[e];if(!n.extensions||!n.extensions[this.name]||n.mesh===void 0)return null;const s=t.meshes[n.mesh];for(const d of s.primitives)if(d.mode!==Bt.TRIANGLES&&d.mode!==Bt.TRIANGLE_STRIP&&d.mode!==Bt.TRIANGLE_FAN&&d.mode!==void 0)return null;const a=n.extensions[this.name].attributes,o=[],l={};for(const d in a)o.push(this.parser.getDependency("accessor",a[d]).then(c=>(l[d]=c,l[d])));return o.length<1?null:(o.push(this.parser.createNodeMesh(e)),Promise.all(o).then(d=>{const c=d.pop(),u=c.isGroup?c.children:[c],p=d[0].count,h=[];for(const y of u){const T=new B0,m=new S,f=new ee,N=new S(1,1,1),M=new A1(y.geometry,y.material,p);for(let P=0;P<p;P++)l.TRANSLATION&&m.fromBufferAttribute(l.TRANSLATION,P),l.ROTATION&&f.fromBufferAttribute(l.ROTATION,P),l.SCALE&&N.fromBufferAttribute(l.SCALE,P),M.setMatrixAt(P,T.compose(m,f,N));for(const P in l)if(P==="_COLOR_0"){const F=l[P];M.instanceColor=new ka(F.array,F.itemSize,F.normalized)}else P!=="TRANSLATION"&&P!=="ROTATION"&&P!=="SCALE"&&y.geometry.setAttribute(P,l[P]);qe.prototype.copy.call(M,y),this.parser.assignFinalMaterial(M),h.push(M)}return c.isGroup?(c.clear(),c.add(...h),c):h[0]}))}}const Z4="glTF",Bi=12,D6={JSON:1313821514,BIN:5130562};class Ym{constructor(e){this.name=he.KHR_BINARY_GLTF,this.content=null,this.body=null;const t=new DataView(e,0,Bi),n=new TextDecoder;if(this.header={magic:n.decode(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==Z4)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const s=this.header.length-Bi,r=new DataView(e,Bi);let a=0;for(;a<s;){const o=r.getUint32(a,!0);a+=4;const l=r.getUint32(a,!0);if(a+=4,l===D6.JSON){const d=new Uint8Array(e,Bi+a,o);this.content=n.decode(d)}else if(l===D6.BIN){const d=Bi+a;this.body=e.slice(d,d+o)}a+=o}if(this.content===null)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class Gm{constructor(e,t){if(!t)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=he.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,this.dracoLoader.preload()}decodePrimitive(e,t){const n=this.json,s=this.dracoLoader,r=e.extensions[this.name].bufferView,a=e.extensions[this.name].attributes,o={},l={},d={};for(const c in a){const u=_a[c]||c.toLowerCase();o[u]=a[c]}for(const c in e.attributes){const u=_a[c]||c.toLowerCase();if(a[c]!==void 0){const p=n.accessors[e.attributes[c]],h=gi[p.componentType];d[u]=h.name,l[u]=p.normalized===!0}}return t.getDependency("bufferView",r).then(function(c){return new Promise(function(u,p){s.decodeDracoFile(c,function(h){for(const y in h.attributes){const T=h.attributes[y],m=l[y];m!==void 0&&(T.normalized=m)}u(h)},o,d,Tt,p)})})}}class Um{constructor(){this.name=he.KHR_TEXTURE_TRANSFORM}extendTexture(e,t){return(t.texCoord===void 0||t.texCoord===e.channel)&&t.offset===void 0&&t.rotation===void 0&&t.scale===void 0||(e=e.clone(),t.texCoord!==void 0&&(e.channel=t.texCoord),t.offset!==void 0&&e.offset.fromArray(t.offset),t.rotation!==void 0&&(e.rotation=t.rotation),t.scale!==void 0&&e.repeat.fromArray(t.scale),e.needsUpdate=!0),e}}class qm{constructor(){this.name=he.KHR_MESH_QUANTIZATION}}class k4 extends H2{constructor(e,t,n,s){super(e,t,n,s)}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,s=this.valueSize,r=e*s*3+s;for(let a=0;a!==s;a++)t[a]=n[r+a];return t}interpolate_(e,t,n,s){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=o*2,d=o*3,c=s-t,u=(n-t)/c,p=u*u,h=p*u,y=e*d,T=y-d,m=-2*h+3*p,f=h-p,N=1-m,M=f-p+u;for(let P=0;P!==o;P++){const F=a[T+P+o],X=a[T+P+l]*c,D=a[y+P+o],U=a[y+P]*c;r[P]=N*F+M*X+m*D+f*U}return r}}const Zm=new ee;class km extends k4{interpolate_(e,t,n,s){const r=super.interpolate_(e,t,n,s);return Zm.fromArray(r).normalize().toArray(r),r}}const Bt={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},gi={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},W6={9728:zt,9729:yt,9984:p4,9985:M3,9986:n2,9987:Tn},j6={33071:wn,33648:D3,10497:Si},vr={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},_a={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},n1={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},Jm={CUBICSPLINE:void 0,LINEAR:h2,STEP:f2},gr={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"};function Bm(i){return i.DefaultMaterial===void 0&&(i.DefaultMaterial=new Oi({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:Un})),i.DefaultMaterial}function T1(i,e,t){for(const n in t.extensions)i[n]===void 0&&(e.userData.gltfExtensions=e.userData.gltfExtensions||{},e.userData.gltfExtensions[n]=t.extensions[n])}function In(i,e){e.extras!==void 0&&(typeof e.extras=="object"?Object.assign(i.userData,e.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+e.extras))}function Km(i,e,t){let n=!1,s=!1,r=!1;for(let d=0,c=e.length;d<c;d++){const u=e[d];if(u.POSITION!==void 0&&(n=!0),u.NORMAL!==void 0&&(s=!0),u.COLOR_0!==void 0&&(r=!0),n&&s&&r)break}if(!n&&!s&&!r)return Promise.resolve(i);const a=[],o=[],l=[];for(let d=0,c=e.length;d<c;d++){const u=e[d];if(n){const p=u.POSITION!==void 0?t.getDependency("accessor",u.POSITION):i.attributes.position;a.push(p)}if(s){const p=u.NORMAL!==void 0?t.getDependency("accessor",u.NORMAL):i.attributes.normal;o.push(p)}if(r){const p=u.COLOR_0!==void 0?t.getDependency("accessor",u.COLOR_0):i.attributes.color;l.push(p)}}return Promise.all([Promise.all(a),Promise.all(o),Promise.all(l)]).then(function(d){const c=d[0],u=d[1],p=d[2];return n&&(i.morphAttributes.position=c),s&&(i.morphAttributes.normal=u),r&&(i.morphAttributes.color=p),i.morphTargetsRelative=!0,i})}function Qm(i,e){if(i.updateMorphTargets(),e.weights!==void 0)for(let t=0,n=e.weights.length;t<n;t++)i.morphTargetInfluences[t]=e.weights[t];if(e.extras&&Array.isArray(e.extras.targetNames)){const t=e.extras.targetNames;if(i.morphTargetInfluences.length===t.length){i.morphTargetDictionary={};for(let n=0,s=t.length;n<s;n++)i.morphTargetDictionary[t[n]]=n}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function _m(i){let e;const t=i.extensions&&i.extensions[he.KHR_DRACO_MESH_COMPRESSION];if(t?e="draco:"+t.bufferView+":"+t.indices+":"+wr(t.attributes):e=i.indices+":"+wr(i.attributes)+":"+i.mode,i.targets!==void 0)for(let n=0,s=i.targets.length;n<s;n++)e+=":"+wr(i.targets[n]);return e}function wr(i){let e="";const t=Object.keys(i).sort();for(let n=0,s=t.length;n<s;n++)e+=t[n]+":"+i[t[n]]+";";return e}function $a(i){switch(i){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}function $m(i){return i.search(/\.jpe?g($|\?)/i)>0||i.search(/^data\:image\/jpeg/)===0?"image/jpeg":i.search(/\.webp($|\?)/i)>0||i.search(/^data\:image\/webp/)===0?"image/webp":i.search(/\.ktx2($|\?)/i)>0||i.search(/^data\:image\/ktx2/)===0?"image/ktx2":"image/png"}const eb=new B0;class tb{constructor(e={},t={}){this.json=e,this.extensions={},this.plugins={},this.options=t,this.cache=new Sm,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let n=!1,s=-1,r=!1,a=-1;if(typeof navigator<"u"){const o=navigator.userAgent;n=/^((?!chrome|android).)*safari/i.test(o)===!0;const l=o.match(/Version\/(\d+)/);s=n&&l?parseInt(l[1],10):-1,r=o.indexOf("Firefox")>-1,a=r?o.match(/Firefox\/([0-9]+)\./)[1]:-1}typeof createImageBitmap>"u"||n&&s<17||r&&a<98?this.textureLoader=new $d(this.options.manager):this.textureLoader=new sc(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new K7(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),this.options.crossOrigin==="use-credentials"&&this.fileLoader.setWithCredentials(!0)}setExtensions(e){this.extensions=e}setPlugins(e){this.plugins=e}parse(e,t){const n=this,s=this.json,r=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(a){return a._markDefs&&a._markDefs()}),Promise.all(this._invokeAll(function(a){return a.beforeRoot&&a.beforeRoot()})).then(function(){return Promise.all([n.getDependencies("scene"),n.getDependencies("animation"),n.getDependencies("camera")])}).then(function(a){const o={scene:a[0][s.scene||0],scenes:a[0],animations:a[1],cameras:a[2],asset:s.asset,parser:n,userData:{}};return T1(r,o,s),In(o,s),Promise.all(n._invokeAll(function(l){return l.afterRoot&&l.afterRoot(o)})).then(function(){for(const l of o.scenes)l.updateMatrixWorld();e(o)})}).catch(t)}_markDefs(){const e=this.json.nodes||[],t=this.json.skins||[],n=this.json.meshes||[];for(let s=0,r=t.length;s<r;s++){const a=t[s].joints;for(let o=0,l=a.length;o<l;o++)e[a[o]].isBone=!0}for(let s=0,r=e.length;s<r;s++){const a=e[s];a.mesh!==void 0&&(this._addNodeRef(this.meshCache,a.mesh),a.skin!==void 0&&(n[a.mesh].isSkinnedMesh=!0)),a.camera!==void 0&&this._addNodeRef(this.cameraCache,a.camera)}}_addNodeRef(e,t){t!==void 0&&(e.refs[t]===void 0&&(e.refs[t]=e.uses[t]=0),e.refs[t]++)}_getNodeRef(e,t,n){if(e.refs[t]<=1)return n;const s=n.clone(),r=(a,o)=>{const l=this.associations.get(a);l!=null&&this.associations.set(o,l);for(const[d,c]of a.children.entries())r(c,o.children[d])};return r(n,s),s.name+="_instance_"+e.uses[t]++,s}_invokeOne(e){const t=Object.values(this.plugins);t.push(this);for(let n=0;n<t.length;n++){const s=e(t[n]);if(s)return s}return null}_invokeAll(e){const t=Object.values(this.plugins);t.unshift(this);const n=[];for(let s=0;s<t.length;s++){const r=e(t[s]);r&&n.push(r)}return n}getDependency(e,t){const n=e+":"+t;let s=this.cache.get(n);if(!s){switch(e){case"scene":s=this.loadScene(t);break;case"node":s=this._invokeOne(function(r){return r.loadNode&&r.loadNode(t)});break;case"mesh":s=this._invokeOne(function(r){return r.loadMesh&&r.loadMesh(t)});break;case"accessor":s=this.loadAccessor(t);break;case"bufferView":s=this._invokeOne(function(r){return r.loadBufferView&&r.loadBufferView(t)});break;case"buffer":s=this.loadBuffer(t);break;case"material":s=this._invokeOne(function(r){return r.loadMaterial&&r.loadMaterial(t)});break;case"texture":s=this._invokeOne(function(r){return r.loadTexture&&r.loadTexture(t)});break;case"skin":s=this.loadSkin(t);break;case"animation":s=this._invokeOne(function(r){return r.loadAnimation&&r.loadAnimation(t)});break;case"camera":s=this.loadCamera(t);break;default:if(s=this._invokeOne(function(r){return r!=this&&r.getDependency&&r.getDependency(e,t)}),!s)throw new Error("Unknown type: "+e);break}this.cache.add(n,s)}return s}getDependencies(e){let t=this.cache.get(e);if(!t){const n=this,s=this.json[e+(e==="mesh"?"es":"s")]||[];t=Promise.all(s.map(function(r,a){return n.getDependency(e,a)})),this.cache.add(e,t)}return t}loadBuffer(e){const t=this.json.buffers[e],n=this.fileLoader;if(t.type&&t.type!=="arraybuffer")throw new Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(t.uri===void 0&&e===0)return Promise.resolve(this.extensions[he.KHR_BINARY_GLTF].body);const s=this.options;return new Promise(function(r,a){n.load(r2.resolveURL(t.uri,s.path),r,void 0,function(){a(new Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))})})}loadBufferView(e){const t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then(function(n){const s=t.byteLength||0,r=t.byteOffset||0;return n.slice(r,r+s)})}loadAccessor(e){const t=this,n=this.json,s=this.json.accessors[e];if(s.bufferView===void 0&&s.sparse===void 0){const a=vr[s.type],o=gi[s.componentType],l=s.normalized===!0,d=new o(s.count*a);return Promise.resolve(new At(d,a,l))}const r=[];return s.bufferView!==void 0?r.push(this.getDependency("bufferView",s.bufferView)):r.push(null),s.sparse!==void 0&&(r.push(this.getDependency("bufferView",s.sparse.indices.bufferView)),r.push(this.getDependency("bufferView",s.sparse.values.bufferView))),Promise.all(r).then(function(a){const o=a[0],l=vr[s.type],d=gi[s.componentType],c=d.BYTES_PER_ELEMENT,u=c*l,p=s.byteOffset||0,h=s.bufferView!==void 0?n.bufferViews[s.bufferView].byteStride:void 0,y=s.normalized===!0;let T,m;if(h&&h!==u){const f=Math.floor(p/h),N="InterleavedBuffer:"+s.bufferView+":"+s.componentType+":"+f+":"+s.count;let M=t.cache.get(N);M||(T=new d(o,f*h,s.count*h/c),M=new Ld(T,h/c),t.cache.add(N,M)),m=new q7(M,l,p%h/c,y)}else o===null?T=new d(s.count*l):T=new d(o,p,s.count*l),m=new At(T,l,y);if(s.sparse!==void 0){const f=vr.SCALAR,N=gi[s.sparse.indices.componentType],M=s.sparse.indices.byteOffset||0,P=s.sparse.values.byteOffset||0,F=new N(a[1],M,s.sparse.count*f),X=new d(a[2],P,s.sparse.count*l);o!==null&&(m=new At(m.array.slice(),m.itemSize,m.normalized)),m.normalized=!1;for(let D=0,U=F.length;D<U;D++){const R=F[D];if(m.setX(R,X[D*l]),l>=2&&m.setY(R,X[D*l+1]),l>=3&&m.setZ(R,X[D*l+2]),l>=4&&m.setW(R,X[D*l+3]),l>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}m.normalized=y}return m})}loadTexture(e){const t=this.json,n=this.options,r=t.textures[e].source,a=t.images[r];let o=this.textureLoader;if(a.uri){const l=n.manager.getHandler(a.uri);l!==null&&(o=l)}return this.loadTextureImage(e,r,o)}loadTextureImage(e,t,n){const s=this,r=this.json,a=r.textures[e],o=r.images[t],l=(o.uri||o.bufferView)+":"+a.sampler;if(this.textureCache[l])return this.textureCache[l];const d=this.loadImageSource(t,n).then(function(c){c.flipY=!1,c.name=a.name||o.name||"",c.name===""&&typeof o.uri=="string"&&o.uri.startsWith("data:image/")===!1&&(c.name=o.uri);const p=(r.samplers||{})[a.sampler]||{};return c.magFilter=W6[p.magFilter]||yt,c.minFilter=W6[p.minFilter]||Tn,c.wrapS=j6[p.wrapS]||Si,c.wrapT=j6[p.wrapT]||Si,c.generateMipmaps=!c.isCompressedTexture&&c.minFilter!==zt&&c.minFilter!==yt,s.associations.set(c,{textures:e}),c}).catch(function(){return null});return this.textureCache[l]=d,d}loadImageSource(e,t){const n=this,s=this.json,r=this.options;if(this.sourceCache[e]!==void 0)return this.sourceCache[e].then(u=>u.clone());const a=s.images[e],o=self.URL||self.webkitURL;let l=a.uri||"",d=!1;if(a.bufferView!==void 0)l=n.getDependency("bufferView",a.bufferView).then(function(u){d=!0;const p=new Blob([u],{type:a.mimeType});return l=o.createObjectURL(p),l});else if(a.uri===void 0)throw new Error("THREE.GLTFLoader: Image "+e+" is missing URI and bufferView");const c=Promise.resolve(l).then(function(u){return new Promise(function(p,h){let y=p;t.isImageBitmapLoader===!0&&(y=function(T){const m=new vt(T);m.needsUpdate=!0,p(m)}),t.load(r2.resolveURL(u,r.path),y,void 0,h)})}).then(function(u){return d===!0&&o.revokeObjectURL(l),In(u,a),u.userData.mimeType=a.mimeType||$m(a.uri),u}).catch(function(u){throw console.error("THREE.GLTFLoader: Couldn't load texture",l),u});return this.sourceCache[e]=c,c}assignTexture(e,t,n,s){const r=this;return this.getDependency("texture",n.index).then(function(a){if(!a)return null;if(n.texCoord!==void 0&&n.texCoord>0&&(a=a.clone(),a.channel=n.texCoord),r.extensions[he.KHR_TEXTURE_TRANSFORM]){const o=n.extensions!==void 0?n.extensions[he.KHR_TEXTURE_TRANSFORM]:void 0;if(o){const l=r.associations.get(a);a=r.extensions[he.KHR_TEXTURE_TRANSFORM].extendTexture(a,o),r.associations.set(a,l)}}return s!==void 0&&(a.colorSpace=s),e[t]=a,a})}assignFinalMaterial(e){const t=e.geometry;let n=e.material;const s=t.attributes.tangent===void 0,r=t.attributes.color!==void 0,a=t.attributes.normal===void 0;if(e.isPoints){const o="PointsMaterial:"+n.uuid;let l=this.cache.get(o);l||(l=new C4,fn.prototype.copy.call(l,n),l.color.copy(n.color),l.map=n.map,l.sizeAttenuation=!1,this.cache.add(o,l)),n=l}else if(e.isLine){const o="LineBasicMaterial:"+n.uuid;let l=this.cache.get(o);l||(l=new b2,fn.prototype.copy.call(l,n),l.color.copy(n.color),l.map=n.map,this.cache.add(o,l)),n=l}if(s||r||a){let o="ClonedMaterial:"+n.uuid+":";s&&(o+="derivative-tangents:"),r&&(o+="vertex-colors:"),a&&(o+="flat-shading:");let l=this.cache.get(o);l||(l=n.clone(),r&&(l.vertexColors=!0),a&&(l.flatShading=!0),s&&(l.normalScale&&(l.normalScale.y*=-1),l.clearcoatNormalScale&&(l.clearcoatNormalScale.y*=-1)),this.cache.add(o,l),this.associations.set(l,this.associations.get(n))),n=l}e.material=n}getMaterialType(){return Oi}loadMaterial(e){const t=this,n=this.json,s=this.extensions,r=n.materials[e];let a;const o={},l=r.extensions||{},d=[];if(l[he.KHR_MATERIALS_UNLIT]){const u=s[he.KHR_MATERIALS_UNLIT];a=u.getMaterialType(),d.push(u.extendParams(o,r,t))}else{const u=r.pbrMetallicRoughness||{};if(o.color=new te(1,1,1),o.opacity=1,Array.isArray(u.baseColorFactor)){const p=u.baseColorFactor;o.color.setRGB(p[0],p[1],p[2],Tt),o.opacity=p[3]}u.baseColorTexture!==void 0&&d.push(t.assignTexture(o,"map",u.baseColorTexture,bt)),o.metalness=u.metallicFactor!==void 0?u.metallicFactor:1,o.roughness=u.roughnessFactor!==void 0?u.roughnessFactor:1,u.metallicRoughnessTexture!==void 0&&(d.push(t.assignTexture(o,"metalnessMap",u.metallicRoughnessTexture)),d.push(t.assignTexture(o,"roughnessMap",u.metallicRoughnessTexture))),a=this._invokeOne(function(p){return p.getMaterialType&&p.getMaterialType(e)}),d.push(Promise.all(this._invokeAll(function(p){return p.extendMaterialParams&&p.extendMaterialParams(e,o)})))}r.doubleSided===!0&&(o.side=gn);const c=r.alphaMode||gr.OPAQUE;if(c===gr.BLEND?(o.transparent=!0,o.depthWrite=!1):(o.transparent=!1,c===gr.MASK&&(o.alphaTest=r.alphaCutoff!==void 0?r.alphaCutoff:.5)),r.normalTexture!==void 0&&a!==jn&&(d.push(t.assignTexture(o,"normalMap",r.normalTexture)),o.normalScale=new $0(1,1),r.normalTexture.scale!==void 0)){const u=r.normalTexture.scale;o.normalScale.set(u,u)}if(r.occlusionTexture!==void 0&&a!==jn&&(d.push(t.assignTexture(o,"aoMap",r.occlusionTexture)),r.occlusionTexture.strength!==void 0&&(o.aoMapIntensity=r.occlusionTexture.strength)),r.emissiveFactor!==void 0&&a!==jn){const u=r.emissiveFactor;o.emissive=new te().setRGB(u[0],u[1],u[2],Tt)}return r.emissiveTexture!==void 0&&a!==jn&&d.push(t.assignTexture(o,"emissiveMap",r.emissiveTexture,bt)),Promise.all(d).then(function(){const u=new a(o);return r.name&&(u.name=r.name),In(u,r),t.associations.set(u,{materials:e}),r.extensions&&T1(s,u,r),u})}createUniqueName(e){const t=Oe.sanitizeNodeName(e||"");return t in this.nodeNamesUsed?t+"_"+ ++this.nodeNamesUsed[t]:(this.nodeNamesUsed[t]=0,t)}loadGeometries(e){const t=this,n=this.extensions,s=this.primitiveCache;function r(o){return n[he.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(o,t).then(function(l){return Y6(l,o,t)})}const a=[];for(let o=0,l=e.length;o<l;o++){const d=e[o],c=_m(d),u=s[c];if(u)a.push(u.promise);else{let p;d.extensions&&d.extensions[he.KHR_DRACO_MESH_COMPRESSION]?p=r(d):p=Y6(new Rt,d,t),s[c]={primitive:d,promise:p},a.push(p)}}return Promise.all(a)}loadMesh(e){const t=this,n=this.json,s=this.extensions,r=n.meshes[e],a=r.primitives,o=[];for(let l=0,d=a.length;l<d;l++){const c=a[l].material===void 0?Bm(this.cache):this.getDependency("material",a[l].material);o.push(c)}return o.push(t.loadGeometries(a)),Promise.all(o).then(function(l){const d=l.slice(0,l.length-1),c=l[l.length-1],u=[];for(let h=0,y=c.length;h<y;h++){const T=c[h],m=a[h];let f;const N=d[h];if(m.mode===Bt.TRIANGLES||m.mode===Bt.TRIANGLE_STRIP||m.mode===Bt.TRIANGLE_FAN||m.mode===void 0)f=r.isSkinnedMesh===!0?new Rd(T,N):new Be(T,N),f.isSkinnedMesh===!0&&f.normalizeSkinWeights(),m.mode===Bt.TRIANGLE_STRIP?f.geometry=F6(f.geometry,w4):m.mode===Bt.TRIANGLE_FAN&&(f.geometry=F6(f.geometry,qa));else if(m.mode===Bt.LINES)f=new B7(T,N);else if(m.mode===Bt.LINE_STRIP)f=new ys(T,N);else if(m.mode===Bt.LINE_LOOP)f=new Ad(T,N);else if(m.mode===Bt.POINTS)f=new Id(T,N);else throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+m.mode);Object.keys(f.geometry.morphAttributes).length>0&&Qm(f,r),f.name=t.createUniqueName(r.name||"mesh_"+e),In(f,r),m.extensions&&T1(s,f,m),t.assignFinalMaterial(f),u.push(f)}for(let h=0,y=u.length;h<y;h++)t.associations.set(u[h],{meshes:e,primitives:h});if(u.length===1)return r.extensions&&T1(s,u[0],r),u[0];const p=new d1;r.extensions&&T1(s,p,r),t.associations.set(p,{meshes:e});for(let h=0,y=u.length;h<y;h++)p.add(u[h]);return p})}loadCamera(e){let t;const n=this.json.cameras[e],s=n[n.type];if(!s){console.warn("THREE.GLTFLoader: Missing camera parameters.");return}return n.type==="perspective"?t=new Ct(x4.radToDeg(s.yfov),s.aspectRatio||1,s.znear||1,s.zfar||2e6):n.type==="orthographic"&&(t=new _7(-s.xmag,s.xmag,s.ymag,-s.ymag,s.znear,s.zfar)),n.name&&(t.name=this.createUniqueName(n.name)),In(t,n),Promise.resolve(t)}loadSkin(e){const t=this.json.skins[e],n=[];for(let s=0,r=t.joints.length;s<r;s++)n.push(this._loadNodeShallow(t.joints[s]));return t.inverseBindMatrices!==void 0?n.push(this.getDependency("accessor",t.inverseBindMatrices)):n.push(null),Promise.all(n).then(function(s){const r=s.pop(),a=s,o=[],l=[];for(let d=0,c=a.length;d<c;d++){const u=a[d];if(u){o.push(u);const p=new B0;r!==null&&p.fromArray(r.array,d*16),l.push(p)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',t.joints[d])}return new k7(o,l)})}loadAnimation(e){const t=this.json,n=this,s=t.animations[e],r=s.name?s.name:"animation_"+e,a=[],o=[],l=[],d=[],c=[];for(let u=0,p=s.channels.length;u<p;u++){const h=s.channels[u],y=s.samplers[h.sampler],T=h.target,m=T.node,f=s.parameters!==void 0?s.parameters[y.input]:y.input,N=s.parameters!==void 0?s.parameters[y.output]:y.output;T.node!==void 0&&(a.push(this.getDependency("node",m)),o.push(this.getDependency("accessor",f)),l.push(this.getDependency("accessor",N)),d.push(y),c.push(T))}return Promise.all([Promise.all(a),Promise.all(o),Promise.all(l),Promise.all(d),Promise.all(c)]).then(function(u){const p=u[0],h=u[1],y=u[2],T=u[3],m=u[4],f=[];for(let N=0,M=p.length;N<M;N++){const P=p[N],F=h[N],X=y[N],D=T[N],U=m[N];if(P===void 0)continue;P.updateMatrix&&P.updateMatrix();const R=n._createAnimationTracks(P,F,X,D,U);if(R)for(let H=0;H<R.length;H++)f.push(R[H])}return new qd(r,void 0,f)})}createNodeMesh(e){const t=this.json,n=this,s=t.nodes[e];return s.mesh===void 0?null:n.getDependency("mesh",s.mesh).then(function(r){const a=n._getNodeRef(n.meshCache,s.mesh,r);return s.weights!==void 0&&a.traverse(function(o){if(o.isMesh)for(let l=0,d=s.weights.length;l<d;l++)o.morphTargetInfluences[l]=s.weights[l]}),a})}loadNode(e){const t=this.json,n=this,s=t.nodes[e],r=n._loadNodeShallow(e),a=[],o=s.children||[];for(let d=0,c=o.length;d<c;d++)a.push(n.getDependency("node",o[d]));const l=s.skin===void 0?Promise.resolve(null):n.getDependency("skin",s.skin);return Promise.all([r,Promise.all(a),l]).then(function(d){const c=d[0],u=d[1],p=d[2];p!==null&&c.traverse(function(h){h.isSkinnedMesh&&h.bind(p,eb)});for(let h=0,y=u.length;h<y;h++)c.add(u[h]);return c})}_loadNodeShallow(e){const t=this.json,n=this.extensions,s=this;if(this.nodeCache[e]!==void 0)return this.nodeCache[e];const r=t.nodes[e],a=r.name?s.createUniqueName(r.name):"",o=[],l=s._invokeOne(function(d){return d.createNodeMesh&&d.createNodeMesh(e)});return l&&o.push(l),r.camera!==void 0&&o.push(s.getDependency("camera",r.camera).then(function(d){return s._getNodeRef(s.cameraCache,r.camera,d)})),s._invokeAll(function(d){return d.createNodeAttachment&&d.createNodeAttachment(e)}).forEach(function(d){o.push(d)}),this.nodeCache[e]=Promise.all(o).then(function(d){let c;if(r.isBone===!0?c=new E4:d.length>1?c=new d1:d.length===1?c=d[0]:c=new qe,c!==d[0])for(let u=0,p=d.length;u<p;u++)c.add(d[u]);if(r.name&&(c.userData.name=r.name,c.name=a),In(c,r),r.extensions&&T1(n,c,r),r.matrix!==void 0){const u=new B0;u.fromArray(r.matrix),c.applyMatrix4(u)}else r.translation!==void 0&&c.position.fromArray(r.translation),r.rotation!==void 0&&c.quaternion.fromArray(r.rotation),r.scale!==void 0&&c.scale.fromArray(r.scale);if(!s.associations.has(c))s.associations.set(c,{});else if(r.mesh!==void 0&&s.meshCache.refs[r.mesh]>1){const u=s.associations.get(c);s.associations.set(c,{...u})}return s.associations.get(c).nodes=e,c}),this.nodeCache[e]}loadScene(e){const t=this.extensions,n=this.json.scenes[e],s=this,r=new d1;n.name&&(r.name=s.createUniqueName(n.name)),In(r,n),n.extensions&&T1(t,r,n);const a=n.nodes||[],o=[];for(let l=0,d=a.length;l<d;l++)o.push(s.getDependency("node",a[l]));return Promise.all(o).then(function(l){for(let c=0,u=l.length;c<u;c++)r.add(l[c]);const d=c=>{const u=new Map;for(const[p,h]of s.associations)(p instanceof fn||p instanceof vt)&&u.set(p,h);return c.traverse(p=>{const h=s.associations.get(p);h!=null&&u.set(p,h)}),u};return s.associations=d(r),r})}_createAnimationTracks(e,t,n,s,r){const a=[],o=e.name?e.name:e.uuid,l=[];n1[r.path]===n1.weights?e.traverse(function(p){p.morphTargetInfluences&&l.push(p.name?p.name:p.uuid)}):l.push(o);let d;switch(n1[r.path]){case n1.weights:d=Li;break;case n1.rotation:d=Ni;break;case n1.translation:case n1.scale:d=Ri;break;default:switch(n.itemSize){case 1:d=Li;break;case 2:case 3:default:d=Ri;break}break}const c=s.interpolation!==void 0?Jm[s.interpolation]:h2,u=this._getArrayFromAccessor(n);for(let p=0,h=l.length;p<h;p++){const y=new d(l[p]+"."+n1[r.path],t.array,u,c);s.interpolation==="CUBICSPLINE"&&this._createCubicSplineTrackInterpolant(y),a.push(y)}return a}_getArrayFromAccessor(e){let t=e.array;if(e.normalized){const n=$a(t.constructor),s=new Float32Array(t.length);for(let r=0,a=t.length;r<a;r++)s[r]=t[r]*n;t=s}return t}_createCubicSplineTrackInterpolant(e){e.createInterpolant=function(n){const s=this instanceof Ni?km:k4;return new s(this.times,this.values,this.getValueSize()/3,n)},e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function nb(i,e,t){const n=e.attributes,s=new Jn;if(n.POSITION!==void 0){const o=t.json.accessors[n.POSITION],l=o.min,d=o.max;if(l!==void 0&&d!==void 0){if(s.set(new S(l[0],l[1],l[2]),new S(d[0],d[1],d[2])),o.normalized){const c=$a(gi[o.componentType]);s.min.multiplyScalar(c),s.max.multiplyScalar(c)}}else{console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");return}}else return;const r=e.targets;if(r!==void 0){const o=new S,l=new S;for(let d=0,c=r.length;d<c;d++){const u=r[d];if(u.POSITION!==void 0){const p=t.json.accessors[u.POSITION],h=p.min,y=p.max;if(h!==void 0&&y!==void 0){if(l.setX(Math.max(Math.abs(h[0]),Math.abs(y[0]))),l.setY(Math.max(Math.abs(h[1]),Math.abs(y[1]))),l.setZ(Math.max(Math.abs(h[2]),Math.abs(y[2]))),p.normalized){const T=$a(gi[p.componentType]);l.multiplyScalar(T)}o.max(l)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}s.expandByVector(o)}i.boundingBox=s;const a=new Pn;s.getCenter(a.center),a.radius=s.min.distanceTo(s.max)/2,i.boundingSphere=a}function Y6(i,e,t){const n=e.attributes,s=[];function r(a,o){return t.getDependency("accessor",a).then(function(l){i.setAttribute(o,l)})}for(const a in n){const o=_a[a]||a.toLowerCase();o in i.attributes||s.push(r(n[a],o))}if(e.indices!==void 0&&!i.index){const a=t.getDependency("accessor",e.indices).then(function(o){i.setIndex(o)});s.push(a)}return ge.workingColorSpace!==Tt&&"COLOR_0"in n&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${ge.workingColorSpace}" not supported.`),In(i,e),nb(i,e,t),Promise.all(s).then(function(){return e.targets!==void 0?Km(i,e.targets,t):i})}/*!
fflate - fast JavaScript compression/decompression
<https://101arrowz.github.io/fflate>
Licensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE
version 0.8.2
*/var Qt=Uint8Array,ui=Uint16Array,ib=Int32Array,J4=new Qt([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),B4=new Qt([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),sb=new Qt([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),K4=function(i,e){for(var t=new ui(31),n=0;n<31;++n)t[n]=e+=1<<i[n-1];for(var s=new ib(t[30]),n=1;n<30;++n)for(var r=t[n];r<t[n+1];++r)s[r]=r-t[n]<<5|n;return{b:t,r:s}},Q4=K4(J4,2),_4=Q4.b,rb=Q4.r;_4[28]=258,rb[258]=28;var ab=K4(B4,0),ob=ab.b,e7=new ui(32768);for(var Ge=0;Ge<32768;++Ge){var i1=(Ge&43690)>>1|(Ge&21845)<<1;i1=(i1&52428)>>2|(i1&13107)<<2,i1=(i1&61680)>>4|(i1&3855)<<4,e7[Ge]=((i1&65280)>>8|(i1&255)<<8)>>1}var a2=function(i,e,t){for(var n=i.length,s=0,r=new ui(e);s<n;++s)i[s]&&++r[i[s]-1];var a=new ui(e);for(s=1;s<e;++s)a[s]=a[s-1]+r[s-1]<<1;var o;if(t){o=new ui(1<<e);var l=15-e;for(s=0;s<n;++s)if(i[s])for(var d=s<<4|i[s],c=e-i[s],u=a[i[s]-1]++<<c,p=u|(1<<c)-1;u<=p;++u)o[e7[u]>>l]=d}else for(o=new ui(n),s=0;s<n;++s)i[s]&&(o[s]=e7[a[i[s]-1]++]>>15-i[s]);return o},L2=new Qt(288);for(var Ge=0;Ge<144;++Ge)L2[Ge]=8;for(var Ge=144;Ge<256;++Ge)L2[Ge]=9;for(var Ge=256;Ge<280;++Ge)L2[Ge]=7;for(var Ge=280;Ge<288;++Ge)L2[Ge]=8;var $4=new Qt(32);for(var Ge=0;Ge<32;++Ge)$4[Ge]=5;var lb=a2(L2,9,1),db=a2($4,5,1),Tr=function(i){for(var e=i[0],t=1;t<i.length;++t)i[t]>e&&(e=i[t]);return e},sn=function(i,e,t){var n=e/8|0;return(i[n]|i[n+1]<<8)>>(e&7)&t},xr=function(i,e){var t=e/8|0;return(i[t]|i[t+1]<<8|i[t+2]<<16)>>(e&7)},cb=function(i){return(i+7)/8|0},ub=function(i,e,t){return(t==null||t>i.length)&&(t=i.length),new Qt(i.subarray(e,t))},pb=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],on=function(i,e,t){var n=new Error(e||pb[i]);if(n.code=i,Error.captureStackTrace&&Error.captureStackTrace(n,on),!t)throw n;return n},fb=function(i,e,t,n){var s=i.length,r=0;if(!s||e.f&&!e.l)return t||new Qt(0);var a=!t,o=a||e.i!=2,l=e.i;a&&(t=new Qt(s*3));var d=function(Re){var Ee=t.length;if(Re>Ee){var fe=new Qt(Math.max(Ee*2,Re));fe.set(t),t=fe}},c=e.f||0,u=e.p||0,p=e.b||0,h=e.l,y=e.d,T=e.m,m=e.n,f=s*8;do{if(!h){c=sn(i,u,1);var N=sn(i,u+1,3);if(u+=3,N)if(N==1)h=lb,y=db,T=9,m=5;else if(N==2){var X=sn(i,u,31)+257,D=sn(i,u+10,15)+4,U=X+sn(i,u+5,31)+1;u+=14;for(var R=new Qt(U),H=new Qt(19),j=0;j<D;++j)H[sb[j]]=sn(i,u+j*3,7);u+=D*3;for(var K=Tr(H),Q=(1<<K)-1,e0=a2(H,K,1),j=0;j<U;){var u0=e0[sn(i,u,Q)];u+=u0&15;var M=u0>>4;if(M<16)R[j++]=M;else{var n0=0,y0=0;for(M==16?(y0=3+sn(i,u,3),u+=2,n0=R[j-1]):M==17?(y0=3+sn(i,u,7),u+=3):M==18&&(y0=11+sn(i,u,127),u+=7);y0--;)R[j++]=n0}}var t0=R.subarray(0,X),x0=R.subarray(X);T=Tr(t0),m=Tr(x0),h=a2(t0,T,1),y=a2(x0,m,1)}else on(1);else{var M=cb(u)+4,P=i[M-4]|i[M-3]<<8,F=M+P;if(F>s){l&&on(0);break}o&&d(p+P),t.set(i.subarray(M,F),p),e.b=p+=P,e.p=u=F*8,e.f=c;continue}if(u>f){l&&on(0);break}}o&&d(p+131072);for(var L0=(1<<T)-1,F0=(1<<m)-1,K0=u;;K0=u){var n0=h[xr(i,u)&L0],ue=n0>>4;if(u+=n0&15,u>f){l&&on(0);break}if(n0||on(2),ue<256)t[p++]=ue;else if(ue==256){K0=u,h=null;break}else{var s0=ue-254;if(ue>264){var j=ue-257,w0=J4[j];s0=sn(i,u,(1<<w0)-1)+_4[j],u+=w0}var T0=y[xr(i,u)&F0],S0=T0>>4;T0||on(3),u+=T0&15;var x0=ob[S0];if(S0>3){var w0=B4[S0];x0+=xr(i,u)&(1<<w0)-1,u+=w0}if(u>f){l&&on(0);break}o&&d(p+131072);var z0=p+s0;if(p<x0){var me=r-x0,q0=Math.min(x0,z0);for(me+p<0&&on(3);p<q0;++p)t[p]=n[me+p]}for(;p<z0;++p)t[p]=t[p-x0]}}e.l=h,e.p=K0,e.b=p,e.f=c,h&&(c=1,e.m=T,e.d=y,e.n=m)}while(!c);return p!=t.length&&a?ub(t,0,p):t.subarray(0,p)},hb=new Qt(0),mb=function(i,e){return((i[0]&15)!=8||i[0]>>4>7||(i[0]<<8|i[1])%31)&&on(6,"invalid zlib data"),(i[1]>>5&1)==1&&on(6,"invalid zlib data: "+(i[1]&32?"need":"unexpected")+" dictionary"),(i[1]>>3&4)+2};function d3(i,e){return fb(i.subarray(mb(i),-4),{i:2},e,e)}var bb=typeof TextDecoder<"u"&&new TextDecoder,yb=0;try{bb.decode(hb,{stream:!0}),yb=1}catch{}class vb extends _d{constructor(e){super(e),this.type=Dn}parse(e){const R=Math.pow(2.7182818,2.2);function H(g,L){let A=0;for(let O=0;O<65536;++O)(O==0||g[O>>3]&1<<(O&7))&&(L[A++]=O);const w=A-1;for(;A<65536;)L[A++]=0;return w}function j(g){for(let L=0;L<16384;L++)g[L]={},g[L].len=0,g[L].lit=0,g[L].p=null}const K={l:0,c:0,lc:0};function Q(g,L,A,w,O){for(;A<g;)L=L<<8|Z0(w,O),A+=8;A-=g,K.l=L>>A&(1<<g)-1,K.c=L,K.lc=A}const e0=new Array(59);function u0(g){for(let A=0;A<=58;++A)e0[A]=0;for(let A=0;A<65537;++A)e0[g[A]]+=1;let L=0;for(let A=58;A>0;--A){const w=L+e0[A]>>1;e0[A]=L,L=w}for(let A=0;A<65537;++A){const w=g[A];w>0&&(g[A]=w|e0[w]++<<6)}}function n0(g,L,A,w,O,E){const I=L;let C=0,q=0;for(;w<=O;w++){if(I.value-L.value>A)return!1;Q(6,C,q,g,I);const k=K.l;if(C=K.c,q=K.lc,E[w]=k,k==63){if(I.value-L.value>A)throw new Error("Something wrong with hufUnpackEncTable");Q(8,C,q,g,I);let J=K.l+6;if(C=K.c,q=K.lc,w+J>O+1)throw new Error("Something wrong with hufUnpackEncTable");for(;J--;)E[w++]=0;w--}else if(k>=59){let J=k-59+2;if(w+J>O+1)throw new Error("Something wrong with hufUnpackEncTable");for(;J--;)E[w++]=0;w--}}u0(E)}function y0(g){return g&63}function t0(g){return g>>6}function x0(g,L,A,w){for(;L<=A;L++){const O=t0(g[L]),E=y0(g[L]);if(O>>E)throw new Error("Invalid table entry");if(E>14){const I=w[O>>E-14];if(I.len)throw new Error("Invalid table entry");if(I.lit++,I.p){const C=I.p;I.p=new Array(I.lit);for(let q=0;q<I.lit-1;++q)I.p[q]=C[q]}else I.p=new Array(1);I.p[I.lit-1]=L}else if(E){let I=0;for(let C=1<<14-E;C>0;C--){const q=w[(O<<14-E)+I];if(q.len||q.p)throw new Error("Invalid table entry");q.len=E,q.lit=L,I++}}}return!0}const L0={c:0,lc:0};function F0(g,L,A,w){g=g<<8|Z0(A,w),L+=8,L0.c=g,L0.lc=L}const K0={c:0,lc:0};function ue(g,L,A,w,O,E,I,C,q){if(g==L){w<8&&(F0(A,w,O,E),A=L0.c,w=L0.lc),w-=8;let k=A>>w;if(k=new Uint8Array([k])[0],C.value+k>q)return!1;const J=I[C.value-1];for(;k-- >0;)I[C.value++]=J}else if(C.value<q)I[C.value++]=g;else return!1;K0.c=A,K0.lc=w}function s0(g){return g&65535}function w0(g){const L=s0(g);return L>32767?L-65536:L}const T0={a:0,b:0};function S0(g,L){const A=w0(g),O=w0(L),E=A+(O&1)+(O>>1),I=E,C=E-O;T0.a=I,T0.b=C}function z0(g,L){const A=s0(g),w=s0(L),O=A-(w>>1)&65535,E=w+O-32768&65535;T0.a=E,T0.b=O}function me(g,L,A,w,O,E,I){const C=I<16384,q=A>O?O:A;let k=1,J,$;for(;k<=q;)k<<=1;for(k>>=1,J=k,k>>=1;k>=1;){$=0;const a0=$+E*(O-J),o0=E*k,c0=E*J,f0=w*k,g0=w*J;let M0,G0,k0,C0;for(;$<=a0;$+=c0){let _0=$;const O0=$+w*(A-J);for(;_0<=O0;_0+=g0){const Te=_0+f0,et=_0+o0,xe=et+f0;C?(S0(g[_0+L],g[et+L]),M0=T0.a,k0=T0.b,S0(g[Te+L],g[xe+L]),G0=T0.a,C0=T0.b,S0(M0,G0),g[_0+L]=T0.a,g[Te+L]=T0.b,S0(k0,C0),g[et+L]=T0.a,g[xe+L]=T0.b):(z0(g[_0+L],g[et+L]),M0=T0.a,k0=T0.b,z0(g[Te+L],g[xe+L]),G0=T0.a,C0=T0.b,z0(M0,G0),g[_0+L]=T0.a,g[Te+L]=T0.b,z0(k0,C0),g[et+L]=T0.a,g[xe+L]=T0.b)}if(A&k){const Te=_0+o0;C?S0(g[_0+L],g[Te+L]):z0(g[_0+L],g[Te+L]),M0=T0.a,g[Te+L]=T0.b,g[_0+L]=M0}}if(O&k){let _0=$;const O0=$+w*(A-J);for(;_0<=O0;_0+=g0){const Te=_0+f0;C?S0(g[_0+L],g[Te+L]):z0(g[_0+L],g[Te+L]),M0=T0.a,g[Te+L]=T0.b,g[_0+L]=M0}}J=k,k>>=1}return $}function q0(g,L,A,w,O,E,I,C,q){let k=0,J=0;const $=I,a0=Math.trunc(w.value+(O+7)/8);for(;w.value<a0;)for(F0(k,J,A,w),k=L0.c,J=L0.lc;J>=14;){const c0=k>>J-14&16383,f0=L[c0];if(f0.len)J-=f0.len,ue(f0.lit,E,k,J,A,w,C,q,$),k=K0.c,J=K0.lc;else{if(!f0.p)throw new Error("hufDecode issues");let g0;for(g0=0;g0<f0.lit;g0++){const M0=y0(g[f0.p[g0]]);for(;J<M0&&w.value<a0;)F0(k,J,A,w),k=L0.c,J=L0.lc;if(J>=M0&&t0(g[f0.p[g0]])==(k>>J-M0&(1<<M0)-1)){J-=M0,ue(f0.p[g0],E,k,J,A,w,C,q,$),k=K0.c,J=K0.lc;break}}if(g0==f0.lit)throw new Error("hufDecode issues")}}const o0=8-O&7;for(k>>=o0,J-=o0;J>0;){const c0=L[k<<14-J&16383];if(c0.len)J-=c0.len,ue(c0.lit,E,k,J,A,w,C,q,$),k=K0.c,J=K0.lc;else throw new Error("hufDecode issues")}return!0}function Re(g,L,A,w,O,E){const I={value:0},C=A.value,q=P0(L,A),k=P0(L,A);A.value+=4;const J=P0(L,A);if(A.value+=4,q<0||q>=65537||k<0||k>=65537)throw new Error("Something wrong with HUF_ENCSIZE");const $=new Array(65537),a0=new Array(16384);j(a0);const o0=w-(A.value-C);if(n0(g,A,o0,q,k,$),J>8*(w-(A.value-C)))throw new Error("Something wrong with hufUncompress");x0($,q,k,a0),q0($,a0,g,A,J,k,E,O,I)}function Ee(g,L,A){for(let w=0;w<A;++w)L[w]=g[L[w]]}function fe(g){for(let L=1;L<g.length;L++){const A=g[L-1]+g[L]-128;g[L]=A}}function W(g,L){let A=0,w=Math.floor((g.length+1)/2),O=0;const E=g.length-1;for(;!(O>E||(L[O++]=g[A++],O>E));)L[O++]=g[w++]}function lt(g){let L=g.byteLength;const A=new Array;let w=0;const O=new DataView(g);for(;L>0;){const E=O.getInt8(w++);if(E<0){const I=-E;L-=I+1;for(let C=0;C<I;C++)A.push(O.getUint8(w++))}else{const I=E;L-=2;const C=O.getUint8(w++);for(let q=0;q<I+1;q++)A.push(C)}}return A}function we(g,L,A,w,O,E){let I=new DataView(E.buffer);const C=A[g.idx[0]].width,q=A[g.idx[0]].height,k=3,J=Math.floor(C/8),$=Math.ceil(C/8),a0=Math.ceil(q/8),o0=C-($-1)*8,c0=q-(a0-1)*8,f0={value:0},g0=new Array(k),M0=new Array(k),G0=new Array(k),k0=new Array(k),C0=new Array(k);for(let O0=0;O0<k;++O0)C0[O0]=L[g.idx[O0]],g0[O0]=O0<1?0:g0[O0-1]+$*a0,M0[O0]=new Float32Array(64),G0[O0]=new Uint16Array(64),k0[O0]=new Uint16Array($*64);for(let O0=0;O0<a0;++O0){let Te=8;O0==a0-1&&(Te=c0);let et=8;for(let be=0;be<$;++be){be==$-1&&(et=o0);for(let J0=0;J0<k;++J0)G0[J0].fill(0),G0[J0][0]=O[g0[J0]++],Ce(f0,w,G0[J0]),D0(G0[J0],M0[J0]),ve(M0[J0]);U0(M0);for(let J0=0;J0<k;++J0)ie(M0[J0],k0[J0],be*64)}let xe=0;for(let be=0;be<k;++be){const J0=A[g.idx[be]].type;for(let ke=8*O0;ke<8*O0+Te;++ke){xe=C0[be][ke];for(let dt=0;dt<J;++dt){const De=dt*64+(ke&7)*8;I.setUint16(xe+0*2*J0,k0[be][De+0],!0),I.setUint16(xe+1*2*J0,k0[be][De+1],!0),I.setUint16(xe+2*2*J0,k0[be][De+2],!0),I.setUint16(xe+3*2*J0,k0[be][De+3],!0),I.setUint16(xe+4*2*J0,k0[be][De+4],!0),I.setUint16(xe+5*2*J0,k0[be][De+5],!0),I.setUint16(xe+6*2*J0,k0[be][De+6],!0),I.setUint16(xe+7*2*J0,k0[be][De+7],!0),xe+=8*2*J0}}if(J!=$)for(let ke=8*O0;ke<8*O0+Te;++ke){const dt=C0[be][ke]+8*J*2*J0,De=J*64+(ke&7)*8;for(let tt=0;tt<et;++tt)I.setUint16(dt+tt*2*J0,k0[be][De+tt],!0)}}}const _0=new Uint16Array(C);I=new DataView(E.buffer);for(let O0=0;O0<k;++O0){A[g.idx[O0]].decoded=!0;const Te=A[g.idx[O0]].type;if(A[O0].type==2)for(let et=0;et<q;++et){const xe=C0[O0][et];for(let be=0;be<C;++be)_0[be]=I.getUint16(xe+be*2*Te,!0);for(let be=0;be<C;++be)I.setFloat32(xe+be*2*Te,_(_0[be]),!0)}}}function Ce(g,L,A){let w,O=1;for(;O<64;)w=L[g.value],w==65280?O=64:w>>8==255?O+=w&255:(A[O]=w,O++),g.value++}function D0(g,L){L[0]=_(g[0]),L[1]=_(g[1]),L[2]=_(g[5]),L[3]=_(g[6]),L[4]=_(g[14]),L[5]=_(g[15]),L[6]=_(g[27]),L[7]=_(g[28]),L[8]=_(g[2]),L[9]=_(g[4]),L[10]=_(g[7]),L[11]=_(g[13]),L[12]=_(g[16]),L[13]=_(g[26]),L[14]=_(g[29]),L[15]=_(g[42]),L[16]=_(g[3]),L[17]=_(g[8]),L[18]=_(g[12]),L[19]=_(g[17]),L[20]=_(g[25]),L[21]=_(g[30]),L[22]=_(g[41]),L[23]=_(g[43]),L[24]=_(g[9]),L[25]=_(g[11]),L[26]=_(g[18]),L[27]=_(g[24]),L[28]=_(g[31]),L[29]=_(g[40]),L[30]=_(g[44]),L[31]=_(g[53]),L[32]=_(g[10]),L[33]=_(g[19]),L[34]=_(g[23]),L[35]=_(g[32]),L[36]=_(g[39]),L[37]=_(g[45]),L[38]=_(g[52]),L[39]=_(g[54]),L[40]=_(g[20]),L[41]=_(g[22]),L[42]=_(g[33]),L[43]=_(g[38]),L[44]=_(g[46]),L[45]=_(g[51]),L[46]=_(g[55]),L[47]=_(g[60]),L[48]=_(g[21]),L[49]=_(g[34]),L[50]=_(g[37]),L[51]=_(g[47]),L[52]=_(g[50]),L[53]=_(g[56]),L[54]=_(g[59]),L[55]=_(g[61]),L[56]=_(g[35]),L[57]=_(g[36]),L[58]=_(g[48]),L[59]=_(g[49]),L[60]=_(g[57]),L[61]=_(g[58]),L[62]=_(g[62]),L[63]=_(g[63])}function ve(g){const L=.5*Math.cos(.7853975),A=.5*Math.cos(3.14159/16),w=.5*Math.cos(3.14159/8),O=.5*Math.cos(3*3.14159/16),E=.5*Math.cos(5*3.14159/16),I=.5*Math.cos(3*3.14159/8),C=.5*Math.cos(7*3.14159/16),q=new Array(4),k=new Array(4),J=new Array(4),$=new Array(4);for(let a0=0;a0<8;++a0){const o0=a0*8;q[0]=w*g[o0+2],q[1]=I*g[o0+2],q[2]=w*g[o0+6],q[3]=I*g[o0+6],k[0]=A*g[o0+1]+O*g[o0+3]+E*g[o0+5]+C*g[o0+7],k[1]=O*g[o0+1]-C*g[o0+3]-A*g[o0+5]-E*g[o0+7],k[2]=E*g[o0+1]-A*g[o0+3]+C*g[o0+5]+O*g[o0+7],k[3]=C*g[o0+1]-E*g[o0+3]+O*g[o0+5]-A*g[o0+7],J[0]=L*(g[o0+0]+g[o0+4]),J[3]=L*(g[o0+0]-g[o0+4]),J[1]=q[0]+q[3],J[2]=q[1]-q[2],$[0]=J[0]+J[1],$[1]=J[3]+J[2],$[2]=J[3]-J[2],$[3]=J[0]-J[1],g[o0+0]=$[0]+k[0],g[o0+1]=$[1]+k[1],g[o0+2]=$[2]+k[2],g[o0+3]=$[3]+k[3],g[o0+4]=$[3]-k[3],g[o0+5]=$[2]-k[2],g[o0+6]=$[1]-k[1],g[o0+7]=$[0]-k[0]}for(let a0=0;a0<8;++a0)q[0]=w*g[16+a0],q[1]=I*g[16+a0],q[2]=w*g[48+a0],q[3]=I*g[48+a0],k[0]=A*g[8+a0]+O*g[24+a0]+E*g[40+a0]+C*g[56+a0],k[1]=O*g[8+a0]-C*g[24+a0]-A*g[40+a0]-E*g[56+a0],k[2]=E*g[8+a0]-A*g[24+a0]+C*g[40+a0]+O*g[56+a0],k[3]=C*g[8+a0]-E*g[24+a0]+O*g[40+a0]-A*g[56+a0],J[0]=L*(g[a0]+g[32+a0]),J[3]=L*(g[a0]-g[32+a0]),J[1]=q[0]+q[3],J[2]=q[1]-q[2],$[0]=J[0]+J[1],$[1]=J[3]+J[2],$[2]=J[3]-J[2],$[3]=J[0]-J[1],g[0+a0]=$[0]+k[0],g[8+a0]=$[1]+k[1],g[16+a0]=$[2]+k[2],g[24+a0]=$[3]+k[3],g[32+a0]=$[3]-k[3],g[40+a0]=$[2]-k[2],g[48+a0]=$[1]-k[1],g[56+a0]=$[0]-k[0]}function U0(g){for(let L=0;L<64;++L){const A=g[0][L],w=g[1][L],O=g[2][L];g[0][L]=A+1.5747*O,g[1][L]=A-.1873*w-.4682*O,g[2][L]=A+1.8556*w}}function ie(g,L,A){for(let w=0;w<64;++w)L[A+w]=V5.toHalfFloat(Ke(g[w]))}function Ke(g){return g<=1?Math.sign(g)*Math.pow(Math.abs(g),2.2):Math.sign(g)*Math.pow(R,Math.abs(g)-1)}function z(g){return new DataView(g.array.buffer,g.offset.value,g.size)}function x(g){const L=g.viewer.buffer.slice(g.offset.value,g.offset.value+g.size),A=new Uint8Array(lt(L)),w=new Uint8Array(A.length);return fe(A),W(A,w),new DataView(w.buffer)}function B(g){const L=g.array.slice(g.offset.value,g.offset.value+g.size),A=d3(L),w=new Uint8Array(A.length);return fe(A),W(A,w),new DataView(w.buffer)}function r0(g){const L=g.viewer,A={value:g.offset.value},w=new Uint16Array(g.columns*g.lines*(g.inputChannels.length*g.type)),O=new Uint8Array(8192);let E=0;const I=new Array(g.inputChannels.length);for(let c0=0,f0=g.inputChannels.length;c0<f0;c0++)I[c0]={},I[c0].start=E,I[c0].end=I[c0].start,I[c0].nx=g.columns,I[c0].ny=g.lines,I[c0].size=g.type,E+=I[c0].nx*I[c0].ny*I[c0].size;const C=h0(L,A),q=h0(L,A);if(q>=8192)throw new Error("Something is wrong with PIZ_COMPRESSION BITMAP_SIZE");if(C<=q)for(let c0=0;c0<q-C+1;c0++)O[c0+C]=W0(L,A);const k=new Uint16Array(65536),J=H(O,k),$=P0(L,A);Re(g.array,L,A,$,w,E);for(let c0=0;c0<g.inputChannels.length;++c0){const f0=I[c0];for(let g0=0;g0<I[c0].size;++g0)me(w,f0.start+g0,f0.nx,f0.size,f0.ny,f0.nx*f0.size,J)}Ee(k,w,E);let a0=0;const o0=new Uint8Array(w.buffer.byteLength);for(let c0=0;c0<g.lines;c0++)for(let f0=0;f0<g.inputChannels.length;f0++){const g0=I[f0],M0=g0.nx*g0.size,G0=new Uint8Array(w.buffer,g0.end*2,M0*2);o0.set(G0,a0),a0+=M0*2,g0.end+=M0}return new DataView(o0.buffer)}function p0(g){const L=g.array.slice(g.offset.value,g.offset.value+g.size),A=d3(L),w=g.inputChannels.length*g.lines*g.columns*g.totalBytes,O=new ArrayBuffer(w),E=new DataView(O);let I=0,C=0;const q=new Array(4);for(let k=0;k<g.lines;k++)for(let J=0;J<g.inputChannels.length;J++){let $=0;switch(g.inputChannels[J].pixelType){case 1:q[0]=I,q[1]=q[0]+g.columns,I=q[1]+g.columns;for(let o0=0;o0<g.columns;++o0){const c0=A[q[0]++]<<8|A[q[1]++];$+=c0,E.setUint16(C,$,!0),C+=2}break;case 2:q[0]=I,q[1]=q[0]+g.columns,q[2]=q[1]+g.columns,I=q[2]+g.columns;for(let o0=0;o0<g.columns;++o0){const c0=A[q[0]++]<<24|A[q[1]++]<<16|A[q[2]++]<<8;$+=c0,E.setUint32(C,$,!0),C+=4}break}}return E}function i0(g){const L=g.viewer,A={value:g.offset.value},w=new Uint8Array(g.columns*g.lines*(g.inputChannels.length*g.type*2)),O={version:v0(L,A),unknownUncompressedSize:v0(L,A),unknownCompressedSize:v0(L,A),acCompressedSize:v0(L,A),dcCompressedSize:v0(L,A),rleCompressedSize:v0(L,A),rleUncompressedSize:v0(L,A),rleRawSize:v0(L,A),totalAcUncompressedCount:v0(L,A),totalDcUncompressedCount:v0(L,A),acCompression:v0(L,A)};if(O.version<2)throw new Error("EXRLoader.parse: "+Rn.compression+" version "+O.version+" is unsupported");const E=new Array;let I=h0(L,A)-2;for(;I>0;){const f0=I0(L.buffer,A),g0=W0(L,A),M0=g0>>2&3,G0=(g0>>4)-1,k0=new Int8Array([G0])[0],C0=W0(L,A);E.push({name:f0,index:k0,type:C0,compression:M0}),I-=f0.length+3}const C=Rn.channels,q=new Array(g.inputChannels.length);for(let f0=0;f0<g.inputChannels.length;++f0){const g0=q[f0]={},M0=C[f0];g0.name=M0.name,g0.compression=0,g0.decoded=!1,g0.type=M0.pixelType,g0.pLinear=M0.pLinear,g0.width=g.columns,g0.height=g.lines}const k={idx:new Array(3)};for(let f0=0;f0<g.inputChannels.length;++f0){const g0=q[f0];for(let M0=0;M0<E.length;++M0){const G0=E[M0];g0.name==G0.name&&(g0.compression=G0.compression,G0.index>=0&&(k.idx[G0.index]=f0),g0.offset=f0)}}let J,$,a0;if(O.acCompressedSize>0)switch(O.acCompression){case 0:J=new Uint16Array(O.totalAcUncompressedCount),Re(g.array,L,A,O.acCompressedSize,J,O.totalAcUncompressedCount);break;case 1:const f0=g.array.slice(A.value,A.value+O.totalAcUncompressedCount),g0=d3(f0);J=new Uint16Array(g0.buffer),A.value+=O.totalAcUncompressedCount;break}if(O.dcCompressedSize>0){const f0={array:g.array,offset:A,size:O.dcCompressedSize};$=new Uint16Array(B(f0).buffer),A.value+=O.dcCompressedSize}if(O.rleRawSize>0){const f0=g.array.slice(A.value,A.value+O.rleCompressedSize),g0=d3(f0);a0=lt(g0.buffer),A.value+=O.rleCompressedSize}let o0=0;const c0=new Array(q.length);for(let f0=0;f0<c0.length;++f0)c0[f0]=new Array;for(let f0=0;f0<g.lines;++f0)for(let g0=0;g0<q.length;++g0)c0[g0].push(o0),o0+=q[g0].width*g.type*2;we(k,c0,q,J,$,w);for(let f0=0;f0<q.length;++f0){const g0=q[f0];if(!g0.decoded)switch(g0.compression){case 2:let M0=0,G0=0;for(let k0=0;k0<g.lines;++k0){let C0=c0[f0][M0];for(let _0=0;_0<g0.width;++_0){for(let O0=0;O0<2*g0.type;++O0)w[C0++]=a0[G0+O0*g0.width*g0.height];G0++}M0++}break;case 1:default:throw new Error("EXRLoader.parse: unsupported channel compression")}}return new DataView(w.buffer)}function I0(g,L){const A=new Uint8Array(g);let w=0;for(;A[L.value+w]!=0;)w+=1;const O=new TextDecoder().decode(A.slice(L.value,L.value+w));return L.value=L.value+w+1,O}function H0(g,L,A){const w=new TextDecoder().decode(new Uint8Array(g).slice(L.value,L.value+A));return L.value=L.value+A,w}function X0(g,L){const A=l0(g,L),w=P0(g,L);return[A,w]}function j0(g,L){const A=P0(g,L),w=P0(g,L);return[A,w]}function l0(g,L){const A=g.getInt32(L.value,!0);return L.value=L.value+4,A}function P0(g,L){const A=g.getUint32(L.value,!0);return L.value=L.value+4,A}function Z0(g,L){const A=g[L.value];return L.value=L.value+1,A}function W0(g,L){const A=g.getUint8(L.value);return L.value=L.value+1,A}const v0=function(g,L){let A;return"getBigInt64"in DataView.prototype?A=Number(g.getBigInt64(L.value,!0)):A=g.getUint32(L.value+4,!0)+Number(g.getUint32(L.value,!0)<<32),L.value+=8,A};function V0(g,L){const A=g.getFloat32(L.value,!0);return L.value+=4,A}function G(g,L){return V5.toHalfFloat(V0(g,L))}function _(g){const L=(g&31744)>>10,A=g&1023;return(g>>15?-1:1)*(L?L===31?A?NaN:1/0:Math.pow(2,L-15)*(1+A/1024):6103515625e-14*(A/1024))}function h0(g,L){const A=g.getUint16(L.value,!0);return L.value+=2,A}function E0(g,L){return _(h0(g,L))}function b0(g,L,A,w){const O=A.value,E=[];for(;A.value<O+w-1;){const I=I0(L,A),C=l0(g,A),q=W0(g,A);A.value+=3;const k=l0(g,A),J=l0(g,A);E.push({name:I,pixelType:C,pLinear:q,xSampling:k,ySampling:J})}return A.value+=1,E}function d0(g,L){const A=V0(g,L),w=V0(g,L),O=V0(g,L),E=V0(g,L),I=V0(g,L),C=V0(g,L),q=V0(g,L),k=V0(g,L);return{redX:A,redY:w,greenX:O,greenY:E,blueX:I,blueY:C,whiteX:q,whiteY:k}}function A0(g,L){const A=["NO_COMPRESSION","RLE_COMPRESSION","ZIPS_COMPRESSION","ZIP_COMPRESSION","PIZ_COMPRESSION","PXR24_COMPRESSION","B44_COMPRESSION","B44A_COMPRESSION","DWAA_COMPRESSION","DWAB_COMPRESSION"],w=W0(g,L);return A[w]}function ne(g,L){const A=l0(g,L),w=l0(g,L),O=l0(g,L),E=l0(g,L);return{xMin:A,yMin:w,xMax:O,yMax:E}}function Fe(g,L){const A=["INCREASING_Y","DECREASING_Y","RANDOM_Y"],w=W0(g,L);return A[w]}function Pe(g,L){const A=["ENVMAP_LATLONG","ENVMAP_CUBE"],w=W0(g,L);return A[w]}function jt(g,L){const A=["ONE_LEVEL","MIPMAP_LEVELS","RIPMAP_LEVELS"],w=["ROUND_DOWN","ROUND_UP"],O=P0(g,L),E=P0(g,L),I=W0(g,L);return{xSize:O,ySize:E,levelMode:A[I&15],roundingMode:w[I>>4]}}function $t(g,L){const A=V0(g,L),w=V0(g,L);return[A,w]}function R2(g,L){const A=V0(g,L),w=V0(g,L),O=V0(g,L);return[A,w,O]}function M2(g,L,A,w,O){if(w==="string"||w==="stringvector"||w==="iccProfile")return H0(L,A,O);if(w==="chlist")return b0(g,L,A,O);if(w==="chromaticities")return d0(g,A);if(w==="compression")return A0(g,A);if(w==="box2i")return ne(g,A);if(w==="envmap")return Pe(g,A);if(w==="tiledesc")return jt(g,A);if(w==="lineOrder")return Fe(g,A);if(w==="float")return V0(g,A);if(w==="v2f")return $t(g,A);if(w==="v3f")return R2(g,A);if(w==="int")return l0(g,A);if(w==="rational")return X0(g,A);if(w==="timecode")return j0(g,A);if(w==="preview")return A.value+=O,"skipped";A.value+=O}function Nn(g,L){const A=Math.log2(g);return L=="ROUND_DOWN"?Math.floor(A):Math.ceil(A)}function Ai(g,L,A){let w=0;switch(g.levelMode){case"ONE_LEVEL":w=1;break;case"MIPMAP_LEVELS":w=Nn(Math.max(L,A),g.roundingMode)+1;break;case"RIPMAP_LEVELS":throw new Error("THREE.EXRLoader: RIPMAP_LEVELS tiles currently unsupported.")}return w}function Ii(g,L,A,w){const O=new Array(g);for(let E=0;E<g;E++){const I=1<<E;let C=L/I|0;w=="ROUND_UP"&&C*I<L&&(C+=1);const q=Math.max(C,1);O[E]=(q+A-1)/A|0}return O}function O2(){const g=this,L=g.offset,A={value:0};for(let w=0;w<g.tileCount;w++){const O=l0(g.viewer,L),E=l0(g.viewer,L);L.value+=8,g.size=P0(g.viewer,L);const I=O*g.blockWidth,C=E*g.blockHeight;g.columns=I+g.blockWidth>g.width?g.width-I:g.blockWidth,g.lines=C+g.blockHeight>g.height?g.height-C:g.blockHeight;const q=g.columns*g.totalBytes,J=g.size<g.lines*q?g.uncompress(g):z(g);L.value+=g.size;for(let $=0;$<g.lines;$++){const a0=$*g.columns*g.totalBytes;for(let o0=0;o0<g.inputChannels.length;o0++){const c0=Rn.channels[o0].name,f0=g.channelByteOffsets[c0]*g.columns,g0=g.decodeChannels[c0];if(g0===void 0)continue;A.value=a0+f0;const M0=(g.height-(1+C+$))*g.outLineWidth;for(let G0=0;G0<g.columns;G0++){const k0=M0+(G0+I)*g.outputChannels+g0;g.byteArray[k0]=g.getter(J,A)}}}}}function X1(){const g=this,L=g.offset,A={value:0};for(let w=0;w<g.height/g.blockHeight;w++){const O=l0(g.viewer,L)-Rn.dataWindow.yMin;g.size=P0(g.viewer,L),g.lines=O+g.blockHeight>g.height?g.height-O:g.blockHeight;const E=g.columns*g.totalBytes,C=g.size<g.lines*E?g.uncompress(g):z(g);L.value+=g.size;for(let q=0;q<g.blockHeight;q++){const k=w*g.blockHeight,J=q+g.scanOrder(k);if(J>=g.height)continue;const $=q*E,a0=(g.height-1-J)*g.outLineWidth;for(let o0=0;o0<g.inputChannels.length;o0++){const c0=Rn.channels[o0].name,f0=g.channelByteOffsets[c0]*g.columns,g0=g.decodeChannels[c0];if(g0!==void 0){A.value=$+f0;for(let M0=0;M0<g.columns;M0++){const G0=a0+M0*g.outputChannels+g0;g.byteArray[G0]=g.getter(C,A)}}}}}}function E2(g,L,A){const w={};if(g.getUint32(0,!0)!=20000630)throw new Error("THREE.EXRLoader: Provided file doesn't appear to be in OpenEXR format.");w.version=g.getUint8(4);const O=g.getUint8(5);w.spec={singleTile:!!(O&2),longName:!!(O&4),deepFormat:!!(O&8),multiPart:!!(O&16)},A.value=8;let E=!0;for(;E;){const I=I0(L,A);if(I==="")E=!1;else{const C=I0(L,A),q=P0(g,A),k=M2(g,L,A,C,q);k===void 0?console.warn(`THREE.EXRLoader: Skipped unknown header attribute type '${C}'.`):w[I]=k}}if((O&-7)!=0)throw console.error("THREE.EXRHeader:",w),new Error("THREE.EXRLoader: Provided file is currently unsupported.");return w}function V1(g,L,A,w,O){const E={size:0,viewer:L,array:A,offset:w,width:g.dataWindow.xMax-g.dataWindow.xMin+1,height:g.dataWindow.yMax-g.dataWindow.yMin+1,inputChannels:g.channels,channelByteOffsets:{},scanOrder:null,totalBytes:null,columns:null,lines:null,type:null,uncompress:null,getter:null,format:null,colorSpace:Tt};switch(g.compression){case"NO_COMPRESSION":E.blockHeight=1,E.uncompress=z;break;case"RLE_COMPRESSION":E.blockHeight=1,E.uncompress=x;break;case"ZIPS_COMPRESSION":E.blockHeight=1,E.uncompress=B;break;case"ZIP_COMPRESSION":E.blockHeight=16,E.uncompress=B;break;case"PIZ_COMPRESSION":E.blockHeight=32,E.uncompress=r0;break;case"PXR24_COMPRESSION":E.blockHeight=16,E.uncompress=p0;break;case"DWAA_COMPRESSION":E.blockHeight=32,E.uncompress=i0;break;case"DWAB_COMPRESSION":E.blockHeight=256,E.uncompress=i0;break;default:throw new Error("EXRLoader.parse: "+g.compression+" is unsupported")}const I={};for(const J of g.channels)switch(J.name){case"Y":case"R":case"G":case"B":case"A":I[J.name]=!0,E.type=J.pixelType}let C=!1;if(I.R&&I.G&&I.B)C=!I.A,E.outputChannels=4,E.decodeChannels={R:0,G:1,B:2,A:3};else if(I.Y)E.outputChannels=1,E.decodeChannels={Y:0};else throw new Error("EXRLoader.parse: file contains unsupported data channels.");if(E.type==1)switch(O){case Dt:E.getter=E0;break;case Dn:E.getter=h0;break}else if(E.type==2)switch(O){case Dt:E.getter=V0;break;case Dn:E.getter=G}else throw new Error("EXRLoader.parse: unsupported pixelType "+E.type+" for "+g.compression+".");E.columns=E.width;const q=E.width*E.height*E.outputChannels;switch(O){case Dt:E.byteArray=new Float32Array(q),C&&E.byteArray.fill(1,0,q);break;case Dn:E.byteArray=new Uint16Array(q),C&&E.byteArray.fill(15360,0,q);break;default:console.error("THREE.EXRLoader: unsupported type: ",O);break}let k=0;for(const J of g.channels)E.decodeChannels[J.name]!==void 0&&(E.channelByteOffsets[J.name]=k),k+=J.pixelType*2;if(E.totalBytes=k,E.outLineWidth=E.width*E.outputChannels,g.lineOrder==="INCREASING_Y"?E.scanOrder=J=>J:E.scanOrder=J=>E.height-1-J,E.outputChannels==4?(E.format=Ut,E.colorSpace=Tt):(E.format=bs,E.colorSpace=Vn),g.spec.singleTile){E.blockHeight=g.tiles.ySize,E.blockWidth=g.tiles.xSize;const J=Ai(g.tiles,E.width,E.height),$=Ii(J,E.width,g.tiles.xSize,g.tiles.roundingMode),a0=Ii(J,E.height,g.tiles.ySize,g.tiles.roundingMode);E.tileCount=$[0]*a0[0];for(let o0=0;o0<J;o0++)for(let c0=0;c0<a0[o0];c0++)for(let f0=0;f0<$[o0];f0++)v0(L,w);E.decode=O2.bind(E)}else{E.blockWidth=E.width;const J=Math.ceil(E.height/E.blockHeight);for(let $=0;$<J;$++)v0(L,w);E.decode=X1.bind(E)}return E}const Xi={value:0},Vi=new DataView(e),zs=new Uint8Array(e),Rn=E2(Vi,e,Xi),Bn=V1(Rn,Vi,zs,Xi,this.type);return Bn.decode(),{header:Rn,width:Bn.width,height:Bn.height,data:Bn.byteArray,format:Bn.format,colorSpace:Bn.colorSpace,type:this.type}}setDataType(e){return this.type=e,this}load(e,t,n,s){function r(a,o){a.colorSpace=o.colorSpace,a.minFilter=yt,a.magFilter=yt,a.generateMipmaps=!1,a.flipY=!1,t&&t(a,o)}return super.load(e,r,n,s)}}const gb=""+new URL("rapier_wasm3d_bg-DxsxPRy4.wasm",import.meta.url).href,wb=async(i={},e)=>{let t;if(e.startsWith("data:")){const n=e.replace(/^data:.*?base64,/,"");let s;if(typeof Buffer=="function"&&typeof Buffer.from=="function")s=Buffer.from(n,"base64");else if(typeof atob=="function"){const r=atob(n);s=new Uint8Array(r.length);for(let a=0;a<r.length;a++)s[a]=r.charCodeAt(a)}else throw new Error("Cannot decode base64-encoded data URL");t=await WebAssembly.instantiate(s,i)}else{const n=await fetch(e),s=n.headers.get("Content-Type")||"";if("instantiateStreaming"in WebAssembly&&s.startsWith("application/wasm"))t=await WebAssembly.instantiateStreaming(n,i);else{const r=await n.arrayBuffer();t=await WebAssembly.instantiate(r,i)}}return t.instance.exports};let b;function Tb(i){b=i}const ye=new Array(128).fill(void 0);ye.push(void 0,null,!0,!1);function Le(i){return ye[i]}let o2=ye.length;function _e(i){o2===ye.length&&ye.push(ye.length+1);const e=o2;return o2=ye[e],ye[e]=i,e}function i5(i,e){try{return i.apply(this,e)}catch(t){b.__wbindgen_export_0(_e(t))}}function Q0(i){return i==null}let ni=null;function pt(){return(ni===null||ni.buffer.detached===!0||ni.buffer.detached===void 0&&ni.buffer!==b.memory.buffer)&&(ni=new DataView(b.memory.buffer)),ni}function xb(i){i<132||(ye[i]=o2,o2=i)}function y2(i){const e=Le(i);return xb(i),e}const Sb=typeof TextDecoder>"u"?(0,module.require)("util").TextDecoder:TextDecoder;let e8=new Sb("utf-8",{ignoreBOM:!0,fatal:!0});e8.decode();let c3=null;function Pb(){return(c3===null||c3.byteLength===0)&&(c3=new Uint8Array(b.memory.buffer)),c3}function Hb(i,e){return i=i>>>0,e8.decode(Pb().subarray(i,i+e))}function V(i,e){if(!(i instanceof e))throw new Error(`expected instance of ${e.name}`)}let Xe=128;function je(i){if(Xe==1)throw new Error("out of js stack");return ye[--Xe]=i,Xe}let u3=null;function Lb(){return(u3===null||u3.byteLength===0)&&(u3=new Int32Array(b.memory.buffer)),u3}function Nb(i,e){return i=i>>>0,Lb().subarray(i/4,i/4+e)}let p3=null;function t8(){return(p3===null||p3.byteLength===0)&&(p3=new Float32Array(b.memory.buffer)),p3}function G6(i,e){return i=i>>>0,t8().subarray(i/4,i/4+e)}let f3=null;function n8(){return(f3===null||f3.byteLength===0)&&(f3=new Uint32Array(b.memory.buffer)),f3}function Rb(i,e){return i=i>>>0,n8().subarray(i/4,i/4+e)}let Et=0;function Ki(i,e){const t=e(i.length*4,4)>>>0;return n8().set(i,t/4),Et=i.length,t}function s1(i,e){const t=e(i.length*4,4)>>>0;return t8().set(i,t/4),Et=i.length,t}const xs=Object.freeze({LinX:0,0:"LinX",LinY:1,1:"LinY",LinZ:2,2:"LinZ",AngX:3,3:"AngX",AngY:4,4:"AngY",AngZ:5,5:"AngZ"}),ln=Object.freeze({Revolute:0,0:"Revolute",Fixed:1,1:"Fixed",Prismatic:2,2:"Prismatic",Rope:3,3:"Rope",Spring:4,4:"Spring",Spherical:5,5:"Spherical",Generic:6,6:"Generic"}),ut=Object.freeze({Ball:0,0:"Ball",Cuboid:1,1:"Cuboid",Capsule:2,2:"Capsule",Segment:3,3:"Segment",Polyline:4,4:"Polyline",Triangle:5,5:"Triangle",TriMesh:6,6:"TriMesh",HeightField:7,7:"HeightField",Compound:8,8:"Compound",ConvexPolyhedron:9,9:"ConvexPolyhedron",Cylinder:10,10:"Cylinder",Cone:11,11:"Cone",RoundCuboid:12,12:"RoundCuboid",RoundTriangle:13,13:"RoundTriangle",RoundCylinder:14,14:"RoundCylinder",RoundCone:15,15:"RoundCone",RoundConvexPolyhedron:16,16:"RoundConvexPolyhedron",HalfSpace:17,17:"HalfSpace",Voxels:18,18:"Voxels"}),Sr=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawbroadphase_free(i>>>0,1));class O1{static __wrap(e){e=e>>>0;const t=Object.create(O1.prototype);return t.__wbg_ptr=e,Sr.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Sr.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawbroadphase_free(e,0)}constructor(){const e=b.rawbroadphase_new();return this.__wbg_ptr=e>>>0,Sr.register(this,this.__wbg_ptr,this),this}}const U6=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawccdsolver_free(i>>>0,1));class t7{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,U6.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawccdsolver_free(e,0)}constructor(){const e=b.rawccdsolver_new();return this.__wbg_ptr=e>>>0,U6.register(this,this.__wbg_ptr,this),this}}const q6=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawcharactercollision_free(i>>>0,1));class i8{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,q6.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawcharactercollision_free(e,0)}constructor(){const e=b.rawcharactercollision_new();return this.__wbg_ptr=e>>>0,q6.register(this,this.__wbg_ptr,this),this}handle(){return b.rawcharactercollision_handle(this.__wbg_ptr)}translationDeltaApplied(){const e=b.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);return Y.__wrap(e)}translationDeltaRemaining(){const e=b.rawcharactercollision_translationDeltaRemaining(this.__wbg_ptr);return Y.__wrap(e)}toi(){return b.rawcharactercollision_toi(this.__wbg_ptr)}worldWitness1(){const e=b.rawcharactercollision_worldWitness1(this.__wbg_ptr);return Y.__wrap(e)}worldWitness2(){const e=b.rawcharactercollision_worldWitness2(this.__wbg_ptr);return Y.__wrap(e)}worldNormal1(){const e=b.rawcharactercollision_worldNormal1(this.__wbg_ptr);return Y.__wrap(e)}worldNormal2(){const e=b.rawcharactercollision_worldNormal2(this.__wbg_ptr);return Y.__wrap(e)}}const Pr=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawcolliderset_free(i>>>0,1));class Ze{static __wrap(e){e=e>>>0;const t=Object.create(Ze.prototype);return t.__wbg_ptr=e,Pr.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Pr.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawcolliderset_free(e,0)}coTranslation(e){const t=b.rawcolliderset_coTranslation(this.__wbg_ptr,e);return Y.__wrap(t)}coRotation(e){const t=b.rawcolliderset_coRotation(this.__wbg_ptr,e);return ce.__wrap(t)}coSetTranslation(e,t,n,s){b.rawcolliderset_coSetTranslation(this.__wbg_ptr,e,t,n,s)}coSetTranslationWrtParent(e,t,n,s){b.rawcolliderset_coSetTranslationWrtParent(this.__wbg_ptr,e,t,n,s)}coSetRotation(e,t,n,s,r){b.rawcolliderset_coSetRotation(this.__wbg_ptr,e,t,n,s,r)}coSetRotationWrtParent(e,t,n,s,r){b.rawcolliderset_coSetRotationWrtParent(this.__wbg_ptr,e,t,n,s,r)}coIsSensor(e){return b.rawcolliderset_coIsSensor(this.__wbg_ptr,e)!==0}coShapeType(e){return b.rawcolliderset_coShapeType(this.__wbg_ptr,e)}coHalfspaceNormal(e){const t=b.rawcolliderset_coHalfspaceNormal(this.__wbg_ptr,e);return t===0?void 0:Y.__wrap(t)}coHalfExtents(e){const t=b.rawcolliderset_coHalfExtents(this.__wbg_ptr,e);return t===0?void 0:Y.__wrap(t)}coSetHalfExtents(e,t){V(t,Y),b.rawcolliderset_coSetHalfExtents(this.__wbg_ptr,e,t.__wbg_ptr)}coRadius(e){const t=b.rawcolliderset_coRadius(this.__wbg_ptr,e);return t===4294967297?void 0:t}coSetRadius(e,t){b.rawcolliderset_coSetRadius(this.__wbg_ptr,e,t)}coHalfHeight(e){const t=b.rawcolliderset_coHalfHeight(this.__wbg_ptr,e);return t===4294967297?void 0:t}coSetHalfHeight(e,t){b.rawcolliderset_coSetHalfHeight(this.__wbg_ptr,e,t)}coRoundRadius(e){const t=b.rawcolliderset_coRoundRadius(this.__wbg_ptr,e);return t===4294967297?void 0:t}coSetRoundRadius(e,t){b.rawcolliderset_coSetRoundRadius(this.__wbg_ptr,e,t)}coVoxelData(e){try{const s=b.__wbindgen_add_to_stack_pointer(-16);b.rawcolliderset_coVoxelData(s,this.__wbg_ptr,e);var t=pt().getInt32(s+4*0,!0),n=pt().getInt32(s+4*1,!0);let r;return t!==0&&(r=Nb(t,n).slice(),b.__wbindgen_export_1(t,n*4,4)),r}finally{b.__wbindgen_add_to_stack_pointer(16)}}coVoxelSize(e){const t=b.rawcolliderset_coVoxelSize(this.__wbg_ptr,e);return t===0?void 0:Y.__wrap(t)}coSetVoxel(e,t,n,s,r){b.rawcolliderset_coSetVoxel(this.__wbg_ptr,e,t,n,s,r)}coPropagateVoxelChange(e,t,n,s,r,a,o,l){b.rawcolliderset_coPropagateVoxelChange(this.__wbg_ptr,e,t,n,s,r,a,o,l)}coCombineVoxelStates(e,t,n,s,r){b.rawcolliderset_coCombineVoxelStates(this.__wbg_ptr,e,t,n,s,r)}coVertices(e){try{const s=b.__wbindgen_add_to_stack_pointer(-16);b.rawcolliderset_coVertices(s,this.__wbg_ptr,e);var t=pt().getInt32(s+4*0,!0),n=pt().getInt32(s+4*1,!0);let r;return t!==0&&(r=G6(t,n).slice(),b.__wbindgen_export_1(t,n*4,4)),r}finally{b.__wbindgen_add_to_stack_pointer(16)}}coIndices(e){try{const s=b.__wbindgen_add_to_stack_pointer(-16);b.rawcolliderset_coIndices(s,this.__wbg_ptr,e);var t=pt().getInt32(s+4*0,!0),n=pt().getInt32(s+4*1,!0);let r;return t!==0&&(r=Rb(t,n).slice(),b.__wbindgen_export_1(t,n*4,4)),r}finally{b.__wbindgen_add_to_stack_pointer(16)}}coTriMeshFlags(e){const t=b.rawcolliderset_coTriMeshFlags(this.__wbg_ptr,e);return t===4294967297?void 0:t}coHeightFieldFlags(e){const t=b.rawcolliderset_coHeightFieldFlags(this.__wbg_ptr,e);return t===4294967297?void 0:t}coHeightfieldHeights(e){try{const s=b.__wbindgen_add_to_stack_pointer(-16);b.rawcolliderset_coHeightfieldHeights(s,this.__wbg_ptr,e);var t=pt().getInt32(s+4*0,!0),n=pt().getInt32(s+4*1,!0);let r;return t!==0&&(r=G6(t,n).slice(),b.__wbindgen_export_1(t,n*4,4)),r}finally{b.__wbindgen_add_to_stack_pointer(16)}}coHeightfieldScale(e){const t=b.rawcolliderset_coHeightfieldScale(this.__wbg_ptr,e);return t===0?void 0:Y.__wrap(t)}coHeightfieldNRows(e){const t=b.rawcolliderset_coHeightfieldNRows(this.__wbg_ptr,e);return t===4294967297?void 0:t}coHeightfieldNCols(e){const t=b.rawcolliderset_coHeightfieldNCols(this.__wbg_ptr,e);return t===4294967297?void 0:t}coParent(e){try{const s=b.__wbindgen_add_to_stack_pointer(-16);b.rawcolliderset_coParent(s,this.__wbg_ptr,e);var t=pt().getInt32(s+4*0,!0),n=pt().getFloat64(s+8*1,!0);return t===0?void 0:n}finally{b.__wbindgen_add_to_stack_pointer(16)}}coSetEnabled(e,t){b.rawcolliderset_coSetEnabled(this.__wbg_ptr,e,t)}coIsEnabled(e){return b.rawcolliderset_coIsEnabled(this.__wbg_ptr,e)!==0}coSetContactSkin(e,t){b.rawcolliderset_coSetContactSkin(this.__wbg_ptr,e,t)}coContactSkin(e){return b.rawcolliderset_coContactSkin(this.__wbg_ptr,e)}coFriction(e){return b.rawcolliderset_coFriction(this.__wbg_ptr,e)}coRestitution(e){return b.rawcolliderset_coRestitution(this.__wbg_ptr,e)}coDensity(e){return b.rawcolliderset_coDensity(this.__wbg_ptr,e)}coMass(e){return b.rawcolliderset_coMass(this.__wbg_ptr,e)}coVolume(e){return b.rawcolliderset_coVolume(this.__wbg_ptr,e)}coCollisionGroups(e){return b.rawcolliderset_coCollisionGroups(this.__wbg_ptr,e)>>>0}coSolverGroups(e){return b.rawcolliderset_coSolverGroups(this.__wbg_ptr,e)>>>0}coActiveHooks(e){return b.rawcolliderset_coActiveHooks(this.__wbg_ptr,e)>>>0}coActiveCollisionTypes(e){return b.rawcolliderset_coActiveCollisionTypes(this.__wbg_ptr,e)}coActiveEvents(e){return b.rawcolliderset_coActiveEvents(this.__wbg_ptr,e)>>>0}coContactForceEventThreshold(e){return b.rawcolliderset_coContactForceEventThreshold(this.__wbg_ptr,e)}coContainsPoint(e,t){return V(t,Y),b.rawcolliderset_coContainsPoint(this.__wbg_ptr,e,t.__wbg_ptr)!==0}coCastShape(e,t,n,s,r,a,o,l,d){V(t,Y),V(n,Y0),V(s,Y),V(r,ce),V(a,Y);const c=b.rawcolliderset_coCastShape(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r.__wbg_ptr,a.__wbg_ptr,o,l,d);return c===0?void 0:Ns.__wrap(c)}coCastCollider(e,t,n,s,r,a,o){V(t,Y),V(s,Y);const l=b.rawcolliderset_coCastCollider(this.__wbg_ptr,e,t.__wbg_ptr,n,s.__wbg_ptr,r,a,o);return l===0?void 0:Ss.__wrap(l)}coIntersectsShape(e,t,n,s){return V(t,Y0),V(n,Y),V(s,ce),b.rawcolliderset_coIntersectsShape(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr)!==0}coContactShape(e,t,n,s,r){V(t,Y0),V(n,Y),V(s,ce);const a=b.rawcolliderset_coContactShape(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r);return a===0?void 0:v2.__wrap(a)}coContactCollider(e,t,n){const s=b.rawcolliderset_coContactCollider(this.__wbg_ptr,e,t,n);return s===0?void 0:v2.__wrap(s)}coProjectPoint(e,t,n){V(t,Y);const s=b.rawcolliderset_coProjectPoint(this.__wbg_ptr,e,t.__wbg_ptr,n);return Ps.__wrap(s)}coIntersectsRay(e,t,n,s){return V(t,Y),V(n,Y),b.rawcolliderset_coIntersectsRay(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,s)!==0}coCastRay(e,t,n,s,r){return V(t,Y),V(n,Y),b.rawcolliderset_coCastRay(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,s,r)}coCastRayAndGetNormal(e,t,n,s,r){V(t,Y),V(n,Y);const a=b.rawcolliderset_coCastRayAndGetNormal(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,s,r);return a===0?void 0:Ls.__wrap(a)}coSetSensor(e,t){b.rawcolliderset_coSetSensor(this.__wbg_ptr,e,t)}coSetRestitution(e,t){b.rawcolliderset_coSetRestitution(this.__wbg_ptr,e,t)}coSetFriction(e,t){b.rawcolliderset_coSetFriction(this.__wbg_ptr,e,t)}coFrictionCombineRule(e){return b.rawcolliderset_coFrictionCombineRule(this.__wbg_ptr,e)>>>0}coSetFrictionCombineRule(e,t){b.rawcolliderset_coSetFrictionCombineRule(this.__wbg_ptr,e,t)}coRestitutionCombineRule(e){return b.rawcolliderset_coRestitutionCombineRule(this.__wbg_ptr,e)>>>0}coSetRestitutionCombineRule(e,t){b.rawcolliderset_coSetRestitutionCombineRule(this.__wbg_ptr,e,t)}coSetCollisionGroups(e,t){b.rawcolliderset_coSetCollisionGroups(this.__wbg_ptr,e,t)}coSetSolverGroups(e,t){b.rawcolliderset_coSetSolverGroups(this.__wbg_ptr,e,t)}coSetActiveHooks(e,t){b.rawcolliderset_coSetActiveHooks(this.__wbg_ptr,e,t)}coSetActiveEvents(e,t){b.rawcolliderset_coSetActiveEvents(this.__wbg_ptr,e,t)}coSetActiveCollisionTypes(e,t){b.rawcolliderset_coSetActiveCollisionTypes(this.__wbg_ptr,e,t)}coSetShape(e,t){V(t,Y0),b.rawcolliderset_coSetShape(this.__wbg_ptr,e,t.__wbg_ptr)}coSetContactForceEventThreshold(e,t){b.rawcolliderset_coSetContactForceEventThreshold(this.__wbg_ptr,e,t)}coSetDensity(e,t){b.rawcolliderset_coSetDensity(this.__wbg_ptr,e,t)}coSetMass(e,t){b.rawcolliderset_coSetMass(this.__wbg_ptr,e,t)}coSetMassProperties(e,t,n,s,r){V(n,Y),V(s,Y),V(r,ce),b.rawcolliderset_coSetMassProperties(this.__wbg_ptr,e,t,n.__wbg_ptr,s.__wbg_ptr,r.__wbg_ptr)}constructor(){const e=b.rawcolliderset_new();return this.__wbg_ptr=e>>>0,Pr.register(this,this.__wbg_ptr,this),this}len(){return b.rawcolliderset_len(this.__wbg_ptr)>>>0}contains(e){return b.rawcolliderset_contains(this.__wbg_ptr,e)!==0}createCollider(e,t,n,s,r,a,o,l,d,c,u,p,h,y,T,m,f,N,M,P,F,X,D,U,R){try{const K=b.__wbindgen_add_to_stack_pointer(-16);V(t,Y0),V(n,Y),V(s,ce),V(o,Y),V(l,Y),V(d,ce),V(R,Ye),b.rawcolliderset_createCollider(K,this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r,a,o.__wbg_ptr,l.__wbg_ptr,d.__wbg_ptr,c,u,p,h,y,T,m,f,N,M,P,F,X,D,U,R.__wbg_ptr);var H=pt().getInt32(K+4*0,!0),j=pt().getFloat64(K+8*1,!0);return H===0?void 0:j}finally{b.__wbindgen_add_to_stack_pointer(16)}}remove(e,t,n,s){V(t,Zn),V(n,Ye),b.rawcolliderset_remove(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,s)}isHandleValid(e){return b.rawcolliderset_contains(this.__wbg_ptr,e)!==0}forEachColliderHandle(e){try{b.rawcolliderset_forEachColliderHandle(this.__wbg_ptr,je(e))}finally{ye[Xe++]=void 0}}}const Z6=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawcollidershapecasthit_free(i>>>0,1));class Ss{static __wrap(e){e=e>>>0;const t=Object.create(Ss.prototype);return t.__wbg_ptr=e,Z6.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Z6.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawcollidershapecasthit_free(e,0)}colliderHandle(){return b.rawcharactercollision_handle(this.__wbg_ptr)}time_of_impact(){return b.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}witness1(){const e=b.rawcollidershapecasthit_witness1(this.__wbg_ptr);return Y.__wrap(e)}witness2(){const e=b.rawcollidershapecasthit_witness2(this.__wbg_ptr);return Y.__wrap(e)}normal1(){const e=b.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);return Y.__wrap(e)}normal2(){const e=b.rawcharactercollision_translationDeltaRemaining(this.__wbg_ptr);return Y.__wrap(e)}}const k6=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawcontactforceevent_free(i>>>0,1));class s5{static __wrap(e){e=e>>>0;const t=Object.create(s5.prototype);return t.__wbg_ptr=e,k6.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,k6.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawcontactforceevent_free(e,0)}collider1(){return b.rawcharactercollision_handle(this.__wbg_ptr)}collider2(){return b.rawcontactforceevent_collider2(this.__wbg_ptr)}total_force(){const e=b.rawcontactforceevent_total_force(this.__wbg_ptr);return Y.__wrap(e)}total_force_magnitude(){return b.rawcontactforceevent_total_force_magnitude(this.__wbg_ptr)}max_force_direction(){const e=b.rawcontactforceevent_max_force_direction(this.__wbg_ptr);return Y.__wrap(e)}max_force_magnitude(){return b.rawcontactforceevent_max_force_magnitude(this.__wbg_ptr)}}const J6=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawcontactmanifold_free(i>>>0,1));class r5{static __wrap(e){e=e>>>0;const t=Object.create(r5.prototype);return t.__wbg_ptr=e,J6.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,J6.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawcontactmanifold_free(e,0)}normal(){const e=b.rawcontactmanifold_normal(this.__wbg_ptr);return Y.__wrap(e)}local_n1(){const e=b.rawcontactmanifold_local_n1(this.__wbg_ptr);return Y.__wrap(e)}local_n2(){const e=b.rawcontactmanifold_local_n2(this.__wbg_ptr);return Y.__wrap(e)}subshape1(){return b.rawcontactmanifold_subshape1(this.__wbg_ptr)>>>0}subshape2(){return b.rawcontactmanifold_subshape2(this.__wbg_ptr)>>>0}num_contacts(){return b.rawcontactmanifold_num_contacts(this.__wbg_ptr)>>>0}contact_local_p1(e){const t=b.rawcontactmanifold_contact_local_p1(this.__wbg_ptr,e);return t===0?void 0:Y.__wrap(t)}contact_local_p2(e){const t=b.rawcontactmanifold_contact_local_p2(this.__wbg_ptr,e);return t===0?void 0:Y.__wrap(t)}contact_dist(e){return b.rawcontactmanifold_contact_dist(this.__wbg_ptr,e)}contact_fid1(e){return b.rawcontactmanifold_contact_fid1(this.__wbg_ptr,e)>>>0}contact_fid2(e){return b.rawcontactmanifold_contact_fid2(this.__wbg_ptr,e)>>>0}contact_impulse(e){return b.rawcontactmanifold_contact_impulse(this.__wbg_ptr,e)}contact_tangent_impulse_x(e){return b.rawcontactmanifold_contact_tangent_impulse_x(this.__wbg_ptr,e)}contact_tangent_impulse_y(e){return b.rawcontactmanifold_contact_tangent_impulse_y(this.__wbg_ptr,e)}num_solver_contacts(){return b.rawcontactmanifold_num_solver_contacts(this.__wbg_ptr)>>>0}solver_contact_point(e){const t=b.rawcontactmanifold_solver_contact_point(this.__wbg_ptr,e);return t===0?void 0:Y.__wrap(t)}solver_contact_dist(e){return b.rawcontactmanifold_solver_contact_dist(this.__wbg_ptr,e)}solver_contact_friction(e){return b.rawcontactmanifold_solver_contact_friction(this.__wbg_ptr,e)}solver_contact_restitution(e){return b.rawcontactmanifold_solver_contact_restitution(this.__wbg_ptr,e)}solver_contact_tangent_velocity(e){const t=b.rawcontactmanifold_solver_contact_tangent_velocity(this.__wbg_ptr,e);return Y.__wrap(t)}}const B6=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawcontactpair_free(i>>>0,1));class a5{static __wrap(e){e=e>>>0;const t=Object.create(a5.prototype);return t.__wbg_ptr=e,B6.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,B6.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawcontactpair_free(e,0)}collider1(){return b.rawcontactpair_collider1(this.__wbg_ptr)}collider2(){return b.rawcontactpair_collider2(this.__wbg_ptr)}numContactManifolds(){return b.rawcontactpair_numContactManifolds(this.__wbg_ptr)>>>0}contactManifold(e){const t=b.rawcontactpair_contactManifold(this.__wbg_ptr,e);return t===0?void 0:r5.__wrap(t)}}const K6=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawdebugrenderpipeline_free(i>>>0,1));class Mb{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,K6.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawdebugrenderpipeline_free(e,0)}constructor(){const e=b.rawdebugrenderpipeline_new();return this.__wbg_ptr=e>>>0,K6.register(this,this.__wbg_ptr,this),this}vertices(){const e=b.rawdebugrenderpipeline_vertices(this.__wbg_ptr);return y2(e)}colors(){const e=b.rawdebugrenderpipeline_colors(this.__wbg_ptr);return y2(e)}render(e,t,n,s,r,a,o){try{V(e,Ye),V(t,Ze),V(n,qn),V(s,kn),V(r,f1),b.rawdebugrenderpipeline_render(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r.__wbg_ptr,a,je(o))}finally{ye[Xe++]=void 0}}}const Q6=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawdeserializedworld_free(i>>>0,1));class o5{static __wrap(e){e=e>>>0;const t=Object.create(o5.prototype);return t.__wbg_ptr=e,Q6.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Q6.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawdeserializedworld_free(e,0)}takeGravity(){const e=b.rawdeserializedworld_takeGravity(this.__wbg_ptr);return e===0?void 0:Y.__wrap(e)}takeIntegrationParameters(){const e=b.rawdeserializedworld_takeIntegrationParameters(this.__wbg_ptr);return e===0?void 0:E1.__wrap(e)}takeIslandManager(){const e=b.rawdeserializedworld_takeIslandManager(this.__wbg_ptr);return e===0?void 0:Zn.__wrap(e)}takeBroadPhase(){const e=b.rawdeserializedworld_takeBroadPhase(this.__wbg_ptr);return e===0?void 0:O1.__wrap(e)}takeNarrowPhase(){const e=b.rawdeserializedworld_takeNarrowPhase(this.__wbg_ptr);return e===0?void 0:f1.__wrap(e)}takeBodies(){const e=b.rawdeserializedworld_takeBodies(this.__wbg_ptr);return e===0?void 0:Ye.__wrap(e)}takeColliders(){const e=b.rawdeserializedworld_takeColliders(this.__wbg_ptr);return e===0?void 0:Ze.__wrap(e)}takeImpulseJoints(){const e=b.rawdeserializedworld_takeImpulseJoints(this.__wbg_ptr);return e===0?void 0:qn.__wrap(e)}takeMultibodyJoints(){const e=b.rawdeserializedworld_takeMultibodyJoints(this.__wbg_ptr);return e===0?void 0:kn.__wrap(e)}}const _6=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawdynamicraycastvehiclecontroller_free(i>>>0,1));class Ob{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,_6.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawdynamicraycastvehiclecontroller_free(e,0)}constructor(e){const t=b.rawdynamicraycastvehiclecontroller_new(e);return this.__wbg_ptr=t>>>0,_6.register(this,this.__wbg_ptr,this),this}current_vehicle_speed(){return b.rawdynamicraycastvehiclecontroller_current_vehicle_speed(this.__wbg_ptr)}chassis(){return b.rawdynamicraycastvehiclecontroller_chassis(this.__wbg_ptr)}index_up_axis(){return b.rawdynamicraycastvehiclecontroller_index_up_axis(this.__wbg_ptr)>>>0}set_index_up_axis(e){b.rawdynamicraycastvehiclecontroller_set_index_up_axis(this.__wbg_ptr,e)}index_forward_axis(){return b.rawdynamicraycastvehiclecontroller_index_forward_axis(this.__wbg_ptr)>>>0}set_index_forward_axis(e){b.rawdynamicraycastvehiclecontroller_set_index_forward_axis(this.__wbg_ptr,e)}add_wheel(e,t,n,s,r){V(e,Y),V(t,Y),V(n,Y),b.rawdynamicraycastvehiclecontroller_add_wheel(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s,r)}num_wheels(){return b.rawdynamicraycastvehiclecontroller_num_wheels(this.__wbg_ptr)>>>0}update_vehicle(e,t,n,s,r,a,o){try{V(t,Ye),V(n,Ze),V(s,l5),b.rawdynamicraycastvehiclecontroller_update_vehicle(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r,Q0(a)?4294967297:a>>>0,je(o))}finally{ye[Xe++]=void 0}}wheel_chassis_connection_point_cs(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_chassis_connection_point_cs(this.__wbg_ptr,e);return t===0?void 0:Y.__wrap(t)}set_wheel_chassis_connection_point_cs(e,t){V(t,Y),b.rawdynamicraycastvehiclecontroller_set_wheel_chassis_connection_point_cs(this.__wbg_ptr,e,t.__wbg_ptr)}wheel_suspension_rest_length(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_suspension_rest_length(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_suspension_rest_length(e,t){b.rawdynamicraycastvehiclecontroller_set_wheel_suspension_rest_length(this.__wbg_ptr,e,t)}wheel_max_suspension_travel(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_max_suspension_travel(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_max_suspension_travel(e,t){b.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_travel(this.__wbg_ptr,e,t)}wheel_radius(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_radius(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_radius(e,t){b.rawdynamicraycastvehiclecontroller_set_wheel_radius(this.__wbg_ptr,e,t)}wheel_suspension_stiffness(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_suspension_stiffness(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_suspension_stiffness(e,t){b.rawdynamicraycastvehiclecontroller_set_wheel_suspension_stiffness(this.__wbg_ptr,e,t)}wheel_suspension_compression(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_suspension_compression(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_suspension_compression(e,t){b.rawdynamicraycastvehiclecontroller_set_wheel_suspension_compression(this.__wbg_ptr,e,t)}wheel_suspension_relaxation(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_suspension_relaxation(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_suspension_relaxation(e,t){b.rawdynamicraycastvehiclecontroller_set_wheel_suspension_relaxation(this.__wbg_ptr,e,t)}wheel_max_suspension_force(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_max_suspension_force(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_max_suspension_force(e,t){b.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_force(this.__wbg_ptr,e,t)}wheel_brake(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_brake(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_brake(e,t){b.rawdynamicraycastvehiclecontroller_set_wheel_brake(this.__wbg_ptr,e,t)}wheel_steering(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_steering(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_steering(e,t){b.rawdynamicraycastvehiclecontroller_set_wheel_steering(this.__wbg_ptr,e,t)}wheel_engine_force(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_engine_force(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_engine_force(e,t){b.rawdynamicraycastvehiclecontroller_set_wheel_engine_force(this.__wbg_ptr,e,t)}wheel_direction_cs(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_direction_cs(this.__wbg_ptr,e);return t===0?void 0:Y.__wrap(t)}set_wheel_direction_cs(e,t){V(t,Y),b.rawdynamicraycastvehiclecontroller_set_wheel_direction_cs(this.__wbg_ptr,e,t.__wbg_ptr)}wheel_axle_cs(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_axle_cs(this.__wbg_ptr,e);return t===0?void 0:Y.__wrap(t)}set_wheel_axle_cs(e,t){V(t,Y),b.rawdynamicraycastvehiclecontroller_set_wheel_axle_cs(this.__wbg_ptr,e,t.__wbg_ptr)}wheel_friction_slip(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_friction_slip(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_friction_slip(e,t){b.rawdynamicraycastvehiclecontroller_set_wheel_friction_slip(this.__wbg_ptr,e,t)}wheel_side_friction_stiffness(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_side_friction_stiffness(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_side_friction_stiffness(e,t){b.rawdynamicraycastvehiclecontroller_set_wheel_side_friction_stiffness(this.__wbg_ptr,e,t)}wheel_rotation(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_rotation(this.__wbg_ptr,e);return t===4294967297?void 0:t}wheel_forward_impulse(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_forward_impulse(this.__wbg_ptr,e);return t===4294967297?void 0:t}wheel_side_impulse(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_side_impulse(this.__wbg_ptr,e);return t===4294967297?void 0:t}wheel_suspension_force(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_suspension_force(this.__wbg_ptr,e);return t===4294967297?void 0:t}wheel_contact_normal_ws(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_contact_normal_ws(this.__wbg_ptr,e);return t===0?void 0:Y.__wrap(t)}wheel_contact_point_ws(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_contact_point_ws(this.__wbg_ptr,e);return t===0?void 0:Y.__wrap(t)}wheel_suspension_length(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_suspension_length(this.__wbg_ptr,e);return t===4294967297?void 0:t}wheel_hard_point_ws(e){const t=b.rawdynamicraycastvehiclecontroller_wheel_hard_point_ws(this.__wbg_ptr,e);return t===0?void 0:Y.__wrap(t)}wheel_is_in_contact(e){return b.rawdynamicraycastvehiclecontroller_wheel_is_in_contact(this.__wbg_ptr,e)!==0}wheel_ground_object(e){try{const s=b.__wbindgen_add_to_stack_pointer(-16);b.rawdynamicraycastvehiclecontroller_wheel_ground_object(s,this.__wbg_ptr,e);var t=pt().getInt32(s+4*0,!0),n=pt().getFloat64(s+8*1,!0);return t===0?void 0:n}finally{b.__wbindgen_add_to_stack_pointer(16)}}}const $6=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_raweventqueue_free(i>>>0,1));class Eb{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,$6.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_raweventqueue_free(e,0)}constructor(e){const t=b.raweventqueue_new(e);return this.__wbg_ptr=t>>>0,$6.register(this,this.__wbg_ptr,this),this}drainCollisionEvents(e){try{b.raweventqueue_drainCollisionEvents(this.__wbg_ptr,je(e))}finally{ye[Xe++]=void 0}}drainContactForceEvents(e){try{b.raweventqueue_drainContactForceEvents(this.__wbg_ptr,je(e))}finally{ye[Xe++]=void 0}}clear(){b.raweventqueue_clear(this.__wbg_ptr)}}const e9=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawgenericjoint_free(i>>>0,1));class mt{static __wrap(e){e=e>>>0;const t=Object.create(mt.prototype);return t.__wbg_ptr=e,e9.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e9.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawgenericjoint_free(e,0)}static generic(e,t,n,s){V(e,Y),V(t,Y),V(n,Y);const r=b.rawgenericjoint_generic(e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s);return r===0?void 0:mt.__wrap(r)}static spring(e,t,n,s,r){V(s,Y),V(r,Y);const a=b.rawgenericjoint_spring(e,t,n,s.__wbg_ptr,r.__wbg_ptr);return mt.__wrap(a)}static rope(e,t,n){V(t,Y),V(n,Y);const s=b.rawgenericjoint_rope(e,t.__wbg_ptr,n.__wbg_ptr);return mt.__wrap(s)}static spherical(e,t){V(e,Y),V(t,Y);const n=b.rawgenericjoint_spherical(e.__wbg_ptr,t.__wbg_ptr);return mt.__wrap(n)}static prismatic(e,t,n,s,r,a){V(e,Y),V(t,Y),V(n,Y);const o=b.rawgenericjoint_prismatic(e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s,r,a);return o===0?void 0:mt.__wrap(o)}static fixed(e,t,n,s){V(e,Y),V(t,ce),V(n,Y),V(s,ce);const r=b.rawgenericjoint_fixed(e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr);return mt.__wrap(r)}static revolute(e,t,n){V(e,Y),V(t,Y),V(n,Y);const s=b.rawgenericjoint_revolute(e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr);return s===0?void 0:mt.__wrap(s)}}const Hr=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawimpulsejointset_free(i>>>0,1));class qn{static __wrap(e){e=e>>>0;const t=Object.create(qn.prototype);return t.__wbg_ptr=e,Hr.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Hr.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawimpulsejointset_free(e,0)}jointType(e){return b.rawimpulsejointset_jointType(this.__wbg_ptr,e)}jointBodyHandle1(e){return b.rawimpulsejointset_jointBodyHandle1(this.__wbg_ptr,e)}jointBodyHandle2(e){return b.rawimpulsejointset_jointBodyHandle2(this.__wbg_ptr,e)}jointFrameX1(e){const t=b.rawimpulsejointset_jointFrameX1(this.__wbg_ptr,e);return ce.__wrap(t)}jointFrameX2(e){const t=b.rawimpulsejointset_jointFrameX2(this.__wbg_ptr,e);return ce.__wrap(t)}jointAnchor1(e){const t=b.rawimpulsejointset_jointAnchor1(this.__wbg_ptr,e);return Y.__wrap(t)}jointAnchor2(e){const t=b.rawimpulsejointset_jointAnchor2(this.__wbg_ptr,e);return Y.__wrap(t)}jointSetAnchor1(e,t){V(t,Y),b.rawimpulsejointset_jointSetAnchor1(this.__wbg_ptr,e,t.__wbg_ptr)}jointSetAnchor2(e,t){V(t,Y),b.rawimpulsejointset_jointSetAnchor2(this.__wbg_ptr,e,t.__wbg_ptr)}jointContactsEnabled(e){return b.rawimpulsejointset_jointContactsEnabled(this.__wbg_ptr,e)!==0}jointSetContactsEnabled(e,t){b.rawimpulsejointset_jointSetContactsEnabled(this.__wbg_ptr,e,t)}jointLimitsEnabled(e,t){return b.rawimpulsejointset_jointLimitsEnabled(this.__wbg_ptr,e,t)!==0}jointLimitsMin(e,t){return b.rawimpulsejointset_jointLimitsMin(this.__wbg_ptr,e,t)}jointLimitsMax(e,t){return b.rawimpulsejointset_jointLimitsMax(this.__wbg_ptr,e,t)}jointSetLimits(e,t,n,s){b.rawimpulsejointset_jointSetLimits(this.__wbg_ptr,e,t,n,s)}jointConfigureMotorModel(e,t,n){b.rawimpulsejointset_jointConfigureMotorModel(this.__wbg_ptr,e,t,n)}jointConfigureMotorVelocity(e,t,n,s){b.rawimpulsejointset_jointConfigureMotorVelocity(this.__wbg_ptr,e,t,n,s)}jointConfigureMotorPosition(e,t,n,s,r){b.rawimpulsejointset_jointConfigureMotorPosition(this.__wbg_ptr,e,t,n,s,r)}jointConfigureMotor(e,t,n,s,r,a){b.rawimpulsejointset_jointConfigureMotor(this.__wbg_ptr,e,t,n,s,r,a)}constructor(){const e=b.rawimpulsejointset_new();return this.__wbg_ptr=e>>>0,Hr.register(this,this.__wbg_ptr,this),this}createJoint(e,t,n,s){return V(e,mt),b.rawimpulsejointset_createJoint(this.__wbg_ptr,e.__wbg_ptr,t,n,s)}remove(e,t){b.rawimpulsejointset_remove(this.__wbg_ptr,e,t)}len(){return b.rawimpulsejointset_len(this.__wbg_ptr)>>>0}contains(e){return b.rawimpulsejointset_contains(this.__wbg_ptr,e)!==0}forEachJointHandle(e){try{b.rawimpulsejointset_forEachJointHandle(this.__wbg_ptr,je(e))}finally{ye[Xe++]=void 0}}forEachJointAttachedToRigidBody(e,t){try{b.rawimpulsejointset_forEachJointAttachedToRigidBody(this.__wbg_ptr,e,je(t))}finally{ye[Xe++]=void 0}}}const Lr=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawintegrationparameters_free(i>>>0,1));class E1{static __wrap(e){e=e>>>0;const t=Object.create(E1.prototype);return t.__wbg_ptr=e,Lr.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Lr.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawintegrationparameters_free(e,0)}constructor(){const e=b.rawintegrationparameters_new();return this.__wbg_ptr=e>>>0,Lr.register(this,this.__wbg_ptr,this),this}get dt(){return b.rawintegrationparameters_dt(this.__wbg_ptr)}get contact_erp(){return b.rawintegrationparameters_contact_erp(this.__wbg_ptr)}get normalizedAllowedLinearError(){return b.rawdynamicraycastvehiclecontroller_current_vehicle_speed(this.__wbg_ptr)}get normalizedPredictionDistance(){return b.rawcontactforceevent_max_force_magnitude(this.__wbg_ptr)}get numSolverIterations(){return b.rawintegrationparameters_numSolverIterations(this.__wbg_ptr)>>>0}get numAdditionalFrictionIterations(){return b.rawdynamicraycastvehiclecontroller_index_up_axis(this.__wbg_ptr)>>>0}get numInternalPgsIterations(){return b.rawdynamicraycastvehiclecontroller_index_forward_axis(this.__wbg_ptr)>>>0}get minIslandSize(){return b.rawintegrationparameters_minIslandSize(this.__wbg_ptr)>>>0}get maxCcdSubsteps(){return b.rawintegrationparameters_maxCcdSubsteps(this.__wbg_ptr)>>>0}get lengthUnit(){return b.rawintegrationparameters_lengthUnit(this.__wbg_ptr)}set dt(e){b.rawintegrationparameters_set_dt(this.__wbg_ptr,e)}set contact_natural_frequency(e){b.rawintegrationparameters_set_contact_natural_frequency(this.__wbg_ptr,e)}set normalizedAllowedLinearError(e){b.rawintegrationparameters_set_normalizedAllowedLinearError(this.__wbg_ptr,e)}set normalizedPredictionDistance(e){b.rawintegrationparameters_set_normalizedPredictionDistance(this.__wbg_ptr,e)}set numSolverIterations(e){b.rawintegrationparameters_set_numSolverIterations(this.__wbg_ptr,e)}set numAdditionalFrictionIterations(e){b.rawdynamicraycastvehiclecontroller_set_index_up_axis(this.__wbg_ptr,e)}set numInternalPgsIterations(e){b.rawdynamicraycastvehiclecontroller_set_index_forward_axis(this.__wbg_ptr,e)}set minIslandSize(e){b.rawintegrationparameters_set_minIslandSize(this.__wbg_ptr,e)}set maxCcdSubsteps(e){b.rawintegrationparameters_set_maxCcdSubsteps(this.__wbg_ptr,e)}set lengthUnit(e){b.rawintegrationparameters_set_lengthUnit(this.__wbg_ptr,e)}switchToStandardPgsSolver(){b.rawintegrationparameters_switchToStandardPgsSolver(this.__wbg_ptr)}switchToSmallStepsPgsSolver(){b.rawintegrationparameters_switchToSmallStepsPgsSolver(this.__wbg_ptr)}switchToSmallStepsPgsSolverWithoutWarmstart(){b.rawintegrationparameters_switchToSmallStepsPgsSolverWithoutWarmstart(this.__wbg_ptr)}}const Nr=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawislandmanager_free(i>>>0,1));class Zn{static __wrap(e){e=e>>>0;const t=Object.create(Zn.prototype);return t.__wbg_ptr=e,Nr.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Nr.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawislandmanager_free(e,0)}constructor(){const e=b.rawislandmanager_new();return this.__wbg_ptr=e>>>0,Nr.register(this,this.__wbg_ptr,this),this}forEachActiveRigidBodyHandle(e){try{b.rawislandmanager_forEachActiveRigidBodyHandle(this.__wbg_ptr,je(e))}finally{ye[Xe++]=void 0}}}const t9=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawkinematiccharactercontroller_free(i>>>0,1));class Cb{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,t9.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawkinematiccharactercontroller_free(e,0)}constructor(e){const t=b.rawkinematiccharactercontroller_new(e);return this.__wbg_ptr=t>>>0,t9.register(this,this.__wbg_ptr,this),this}up(){const e=b.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);return Y.__wrap(e)}setUp(e){V(e,Y),b.rawkinematiccharactercontroller_setUp(this.__wbg_ptr,e.__wbg_ptr)}normalNudgeFactor(){return b.rawkinematiccharactercontroller_normalNudgeFactor(this.__wbg_ptr)}setNormalNudgeFactor(e){b.rawkinematiccharactercontroller_setNormalNudgeFactor(this.__wbg_ptr,e)}offset(){return b.rawintegrationparameters_dt(this.__wbg_ptr)}setOffset(e){b.rawkinematiccharactercontroller_setOffset(this.__wbg_ptr,e)}slideEnabled(){return b.rawkinematiccharactercontroller_slideEnabled(this.__wbg_ptr)!==0}setSlideEnabled(e){b.rawkinematiccharactercontroller_setSlideEnabled(this.__wbg_ptr,e)}autostepMaxHeight(){const e=b.rawkinematiccharactercontroller_autostepMaxHeight(this.__wbg_ptr);return e===4294967297?void 0:e}autostepMinWidth(){const e=b.rawkinematiccharactercontroller_autostepMinWidth(this.__wbg_ptr);return e===4294967297?void 0:e}autostepIncludesDynamicBodies(){const e=b.rawkinematiccharactercontroller_autostepIncludesDynamicBodies(this.__wbg_ptr);return e===16777215?void 0:e!==0}autostepEnabled(){return b.rawkinematiccharactercontroller_autostepEnabled(this.__wbg_ptr)!==0}enableAutostep(e,t,n){b.rawkinematiccharactercontroller_enableAutostep(this.__wbg_ptr,e,t,n)}disableAutostep(){b.rawkinematiccharactercontroller_disableAutostep(this.__wbg_ptr)}maxSlopeClimbAngle(){return b.rawkinematiccharactercontroller_maxSlopeClimbAngle(this.__wbg_ptr)}setMaxSlopeClimbAngle(e){b.rawkinematiccharactercontroller_setMaxSlopeClimbAngle(this.__wbg_ptr,e)}minSlopeSlideAngle(){return b.rawkinematiccharactercontroller_minSlopeSlideAngle(this.__wbg_ptr)}setMinSlopeSlideAngle(e){b.rawkinematiccharactercontroller_setMinSlopeSlideAngle(this.__wbg_ptr,e)}snapToGroundDistance(){const e=b.rawkinematiccharactercontroller_snapToGroundDistance(this.__wbg_ptr);return e===4294967297?void 0:e}enableSnapToGround(e){b.rawkinematiccharactercontroller_enableSnapToGround(this.__wbg_ptr,e)}disableSnapToGround(){b.rawkinematiccharactercontroller_disableSnapToGround(this.__wbg_ptr)}snapToGroundEnabled(){return b.rawkinematiccharactercontroller_snapToGroundEnabled(this.__wbg_ptr)!==0}computeColliderMovement(e,t,n,s,r,a,o,l,d,c,u){try{V(t,Ye),V(n,Ze),V(s,l5),V(a,Y),b.rawkinematiccharactercontroller_computeColliderMovement(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r,a.__wbg_ptr,o,Q0(l)?4294967297:Math.fround(l),d,Q0(c)?4294967297:c>>>0,je(u))}finally{ye[Xe++]=void 0}}computedMovement(){const e=b.rawkinematiccharactercontroller_computedMovement(this.__wbg_ptr);return Y.__wrap(e)}computedGrounded(){return b.rawkinematiccharactercontroller_computedGrounded(this.__wbg_ptr)!==0}numComputedCollisions(){return b.rawkinematiccharactercontroller_numComputedCollisions(this.__wbg_ptr)>>>0}computedCollision(e,t){return V(t,i8),b.rawkinematiccharactercontroller_computedCollision(this.__wbg_ptr,e,t.__wbg_ptr)!==0}}const Rr=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawmultibodyjointset_free(i>>>0,1));class kn{static __wrap(e){e=e>>>0;const t=Object.create(kn.prototype);return t.__wbg_ptr=e,Rr.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Rr.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawmultibodyjointset_free(e,0)}jointType(e){return b.rawmultibodyjointset_jointType(this.__wbg_ptr,e)}jointFrameX1(e){const t=b.rawmultibodyjointset_jointFrameX1(this.__wbg_ptr,e);return ce.__wrap(t)}jointFrameX2(e){const t=b.rawmultibodyjointset_jointFrameX2(this.__wbg_ptr,e);return ce.__wrap(t)}jointAnchor1(e){const t=b.rawmultibodyjointset_jointAnchor1(this.__wbg_ptr,e);return Y.__wrap(t)}jointAnchor2(e){const t=b.rawmultibodyjointset_jointAnchor2(this.__wbg_ptr,e);return Y.__wrap(t)}jointContactsEnabled(e){return b.rawmultibodyjointset_jointContactsEnabled(this.__wbg_ptr,e)!==0}jointSetContactsEnabled(e,t){b.rawmultibodyjointset_jointSetContactsEnabled(this.__wbg_ptr,e,t)}jointLimitsEnabled(e,t){return b.rawmultibodyjointset_jointLimitsEnabled(this.__wbg_ptr,e,t)!==0}jointLimitsMin(e,t){return b.rawmultibodyjointset_jointLimitsMin(this.__wbg_ptr,e,t)}jointLimitsMax(e,t){return b.rawmultibodyjointset_jointLimitsMax(this.__wbg_ptr,e,t)}constructor(){const e=b.rawmultibodyjointset_new();return this.__wbg_ptr=e>>>0,Rr.register(this,this.__wbg_ptr,this),this}createJoint(e,t,n,s){return V(e,mt),b.rawmultibodyjointset_createJoint(this.__wbg_ptr,e.__wbg_ptr,t,n,s)}remove(e,t){b.rawmultibodyjointset_remove(this.__wbg_ptr,e,t)}contains(e){return b.rawmultibodyjointset_contains(this.__wbg_ptr,e)!==0}forEachJointHandle(e){try{b.rawmultibodyjointset_forEachJointHandle(this.__wbg_ptr,je(e))}finally{ye[Xe++]=void 0}}forEachJointAttachedToRigidBody(e,t){try{b.rawmultibodyjointset_forEachJointAttachedToRigidBody(this.__wbg_ptr,e,je(t))}finally{ye[Xe++]=void 0}}}const Mr=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawnarrowphase_free(i>>>0,1));class f1{static __wrap(e){e=e>>>0;const t=Object.create(f1.prototype);return t.__wbg_ptr=e,Mr.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Mr.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawnarrowphase_free(e,0)}constructor(){const e=b.rawnarrowphase_new();return this.__wbg_ptr=e>>>0,Mr.register(this,this.__wbg_ptr,this),this}contact_pairs_with(e,t){b.rawnarrowphase_contact_pairs_with(this.__wbg_ptr,e,_e(t))}contact_pair(e,t){const n=b.rawnarrowphase_contact_pair(this.__wbg_ptr,e,t);return n===0?void 0:a5.__wrap(n)}intersection_pairs_with(e,t){b.rawnarrowphase_intersection_pairs_with(this.__wbg_ptr,e,_e(t))}intersection_pair(e,t){return b.rawnarrowphase_intersection_pair(this.__wbg_ptr,e,t)!==0}}const n9=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawphysicspipeline_free(i>>>0,1));class zb{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,n9.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawphysicspipeline_free(e,0)}constructor(){const e=b.rawphysicspipeline_new();return this.__wbg_ptr=e>>>0,n9.register(this,this.__wbg_ptr,this),this}step(e,t,n,s,r,a,o,l,d,c){V(e,Y),V(t,E1),V(n,Zn),V(s,O1),V(r,f1),V(a,Ye),V(o,Ze),V(l,qn),V(d,kn),V(c,t7),b.rawphysicspipeline_step(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r.__wbg_ptr,a.__wbg_ptr,o.__wbg_ptr,l.__wbg_ptr,d.__wbg_ptr,c.__wbg_ptr)}stepWithEvents(e,t,n,s,r,a,o,l,d,c,u,p,h,y){V(e,Y),V(t,E1),V(n,Zn),V(s,O1),V(r,f1),V(a,Ye),V(o,Ze),V(l,qn),V(d,kn),V(c,t7),V(u,Eb),b.rawphysicspipeline_stepWithEvents(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r.__wbg_ptr,a.__wbg_ptr,o.__wbg_ptr,l.__wbg_ptr,d.__wbg_ptr,c.__wbg_ptr,u.__wbg_ptr,_e(p),_e(h),_e(y))}}const i9=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawpidcontroller_free(i>>>0,1));class Ab{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,i9.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawpidcontroller_free(e,0)}constructor(e,t,n,s){const r=b.rawpidcontroller_new(e,t,n,s);return this.__wbg_ptr=r>>>0,i9.register(this,this.__wbg_ptr,this),this}set_kp(e,t){b.rawpidcontroller_set_kp(this.__wbg_ptr,e,t)}set_ki(e,t){b.rawpidcontroller_set_ki(this.__wbg_ptr,e,t)}set_kd(e,t){b.rawpidcontroller_set_kd(this.__wbg_ptr,e,t)}set_axes_mask(e){b.rawpidcontroller_set_axes_mask(this.__wbg_ptr,e)}reset_integrals(){b.rawpidcontroller_reset_integrals(this.__wbg_ptr)}apply_linear_correction(e,t,n,s,r){V(t,Ye),V(s,Y),V(r,Y),b.rawpidcontroller_apply_linear_correction(this.__wbg_ptr,e,t.__wbg_ptr,n,s.__wbg_ptr,r.__wbg_ptr)}apply_angular_correction(e,t,n,s,r){V(t,Ye),V(s,ce),V(r,Y),b.rawpidcontroller_apply_angular_correction(this.__wbg_ptr,e,t.__wbg_ptr,n,s.__wbg_ptr,r.__wbg_ptr)}linear_correction(e,t,n,s,r){V(t,Ye),V(s,Y),V(r,Y);const a=b.rawpidcontroller_linear_correction(this.__wbg_ptr,e,t.__wbg_ptr,n,s.__wbg_ptr,r.__wbg_ptr);return Y.__wrap(a)}angular_correction(e,t,n,s,r){V(t,Ye),V(s,ce),V(r,Y);const a=b.rawpidcontroller_angular_correction(this.__wbg_ptr,e,t.__wbg_ptr,n,s.__wbg_ptr,r.__wbg_ptr);return Y.__wrap(a)}}const s9=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawpointcolliderprojection_free(i>>>0,1));class q3{static __wrap(e){e=e>>>0;const t=Object.create(q3.prototype);return t.__wbg_ptr=e,s9.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,s9.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawpointcolliderprojection_free(e,0)}colliderHandle(){return b.rawpointcolliderprojection_colliderHandle(this.__wbg_ptr)}point(){const e=b.rawpointcolliderprojection_point(this.__wbg_ptr);return Y.__wrap(e)}isInside(){return b.rawpointcolliderprojection_isInside(this.__wbg_ptr)!==0}featureType(){return b.rawpointcolliderprojection_featureType(this.__wbg_ptr)}featureId(){const e=b.rawpointcolliderprojection_featureId(this.__wbg_ptr);return e===4294967297?void 0:e}}const r9=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawpointprojection_free(i>>>0,1));class Ps{static __wrap(e){e=e>>>0;const t=Object.create(Ps.prototype);return t.__wbg_ptr=e,r9.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,r9.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawpointprojection_free(e,0)}point(){const e=b.rawpointprojection_point(this.__wbg_ptr);return Y.__wrap(e)}isInside(){return b.rawpointprojection_isInside(this.__wbg_ptr)!==0}}const a9=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawquerypipeline_free(i>>>0,1));class l5{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,a9.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawquerypipeline_free(e,0)}constructor(){const e=b.rawquerypipeline_new();return this.__wbg_ptr=e>>>0,a9.register(this,this.__wbg_ptr,this),this}update(e){V(e,Ze),b.rawquerypipeline_update(this.__wbg_ptr,e.__wbg_ptr)}castRay(e,t,n,s,r,a,o,l,d,c,u){try{V(e,Ye),V(t,Ze),V(n,Y),V(s,Y);const p=b.rawquerypipeline_castRay(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r,a,o,Q0(l)?4294967297:l>>>0,!Q0(d),Q0(d)?0:d,!Q0(c),Q0(c)?0:c,je(u));return p===0?void 0:d5.__wrap(p)}finally{ye[Xe++]=void 0}}castRayAndGetNormal(e,t,n,s,r,a,o,l,d,c,u){try{V(e,Ye),V(t,Ze),V(n,Y),V(s,Y);const p=b.rawquerypipeline_castRayAndGetNormal(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r,a,o,Q0(l)?4294967297:l>>>0,!Q0(d),Q0(d)?0:d,!Q0(c),Q0(c)?0:c,je(u));return p===0?void 0:Hs.__wrap(p)}finally{ye[Xe++]=void 0}}intersectionsWithRay(e,t,n,s,r,a,o,l,d,c,u,p){try{V(e,Ye),V(t,Ze),V(n,Y),V(s,Y),b.rawquerypipeline_intersectionsWithRay(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r,a,je(o),l,Q0(d)?4294967297:d>>>0,!Q0(c),Q0(c)?0:c,!Q0(u),Q0(u)?0:u,je(p))}finally{ye[Xe++]=void 0,ye[Xe++]=void 0}}intersectionWithShape(e,t,n,s,r,a,o,l,d,c){try{const h=b.__wbindgen_add_to_stack_pointer(-16);V(e,Ye),V(t,Ze),V(n,Y),V(s,ce),V(r,Y0),b.rawquerypipeline_intersectionWithShape(h,this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r.__wbg_ptr,a,Q0(o)?4294967297:o>>>0,!Q0(l),Q0(l)?0:l,!Q0(d),Q0(d)?0:d,je(c));var u=pt().getInt32(h+4*0,!0),p=pt().getFloat64(h+8*1,!0);return u===0?void 0:p}finally{b.__wbindgen_add_to_stack_pointer(16),ye[Xe++]=void 0}}projectPoint(e,t,n,s,r,a,o,l,d){try{V(e,Ye),V(t,Ze),V(n,Y);const c=b.rawquerypipeline_projectPoint(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s,r,Q0(a)?4294967297:a>>>0,!Q0(o),Q0(o)?0:o,!Q0(l),Q0(l)?0:l,je(d));return c===0?void 0:q3.__wrap(c)}finally{ye[Xe++]=void 0}}projectPointAndGetFeature(e,t,n,s,r,a,o,l){try{V(e,Ye),V(t,Ze),V(n,Y);const d=b.rawquerypipeline_projectPointAndGetFeature(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s,Q0(r)?4294967297:r>>>0,!Q0(a),Q0(a)?0:a,!Q0(o),Q0(o)?0:o,je(l));return d===0?void 0:q3.__wrap(d)}finally{ye[Xe++]=void 0}}intersectionsWithPoint(e,t,n,s,r,a,o,l,d){try{V(e,Ye),V(t,Ze),V(n,Y),b.rawquerypipeline_intersectionsWithPoint(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,je(s),r,Q0(a)?4294967297:a>>>0,!Q0(o),Q0(o)?0:o,!Q0(l),Q0(l)?0:l,je(d))}finally{ye[Xe++]=void 0,ye[Xe++]=void 0}}castShape(e,t,n,s,r,a,o,l,d,c,u,p,h,y){try{V(e,Ye),V(t,Ze),V(n,Y),V(s,ce),V(r,Y),V(a,Y0);const T=b.rawquerypipeline_castShape(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r.__wbg_ptr,a.__wbg_ptr,o,l,d,c,Q0(u)?4294967297:u>>>0,!Q0(p),Q0(p)?0:p,!Q0(h),Q0(h)?0:h,je(y));return T===0?void 0:Ss.__wrap(T)}finally{ye[Xe++]=void 0}}intersectionsWithShape(e,t,n,s,r,a,o,l,d,c,u){try{V(e,Ye),V(t,Ze),V(n,Y),V(s,ce),V(r,Y0),b.rawquerypipeline_intersectionsWithShape(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r.__wbg_ptr,je(a),o,Q0(l)?4294967297:l>>>0,!Q0(d),Q0(d)?0:d,!Q0(c),Q0(c)?0:c,je(u))}finally{ye[Xe++]=void 0,ye[Xe++]=void 0}}collidersWithAabbIntersectingAabb(e,t,n){try{V(e,Y),V(t,Y),b.rawquerypipeline_collidersWithAabbIntersectingAabb(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,je(n))}finally{ye[Xe++]=void 0}}}const o9=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawraycolliderhit_free(i>>>0,1));class d5{static __wrap(e){e=e>>>0;const t=Object.create(d5.prototype);return t.__wbg_ptr=e,o9.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,o9.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawraycolliderhit_free(e,0)}colliderHandle(){return b.rawcharactercollision_handle(this.__wbg_ptr)}timeOfImpact(){return b.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}}const l9=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawraycolliderintersection_free(i>>>0,1));class Hs{static __wrap(e){e=e>>>0;const t=Object.create(Hs.prototype);return t.__wbg_ptr=e,l9.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,l9.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawraycolliderintersection_free(e,0)}colliderHandle(){return b.rawpointcolliderprojection_colliderHandle(this.__wbg_ptr)}normal(){const e=b.rawcollidershapecasthit_witness1(this.__wbg_ptr);return Y.__wrap(e)}time_of_impact(){return b.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}featureType(){return b.rawpointcolliderprojection_featureType(this.__wbg_ptr)}featureId(){const e=b.rawpointcolliderprojection_featureId(this.__wbg_ptr);return e===4294967297?void 0:e}}const d9=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawrayintersection_free(i>>>0,1));class Ls{static __wrap(e){e=e>>>0;const t=Object.create(Ls.prototype);return t.__wbg_ptr=e,d9.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,d9.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawrayintersection_free(e,0)}normal(){const e=b.rawcollidershapecasthit_witness1(this.__wbg_ptr);return Y.__wrap(e)}time_of_impact(){return b.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}featureType(){return b.rawpointcolliderprojection_featureType(this.__wbg_ptr)}featureId(){const e=b.rawpointcolliderprojection_featureId(this.__wbg_ptr);return e===4294967297?void 0:e}}const Or=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawrigidbodyset_free(i>>>0,1));class Ye{static __wrap(e){e=e>>>0;const t=Object.create(Ye.prototype);return t.__wbg_ptr=e,Or.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Or.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawrigidbodyset_free(e,0)}rbTranslation(e){const t=b.rawrigidbodyset_rbTranslation(this.__wbg_ptr,e);return Y.__wrap(t)}rbRotation(e){const t=b.rawrigidbodyset_rbRotation(this.__wbg_ptr,e);return ce.__wrap(t)}rbSleep(e){b.rawrigidbodyset_rbSleep(this.__wbg_ptr,e)}rbIsSleeping(e){return b.rawrigidbodyset_rbIsSleeping(this.__wbg_ptr,e)!==0}rbIsMoving(e){return b.rawrigidbodyset_rbIsMoving(this.__wbg_ptr,e)!==0}rbNextTranslation(e){const t=b.rawrigidbodyset_rbNextTranslation(this.__wbg_ptr,e);return Y.__wrap(t)}rbNextRotation(e){const t=b.rawrigidbodyset_rbNextRotation(this.__wbg_ptr,e);return ce.__wrap(t)}rbSetTranslation(e,t,n,s,r){b.rawrigidbodyset_rbSetTranslation(this.__wbg_ptr,e,t,n,s,r)}rbSetRotation(e,t,n,s,r,a){b.rawrigidbodyset_rbSetRotation(this.__wbg_ptr,e,t,n,s,r,a)}rbSetLinvel(e,t,n){V(t,Y),b.rawrigidbodyset_rbSetLinvel(this.__wbg_ptr,e,t.__wbg_ptr,n)}rbSetAngvel(e,t,n){V(t,Y),b.rawrigidbodyset_rbSetAngvel(this.__wbg_ptr,e,t.__wbg_ptr,n)}rbSetNextKinematicTranslation(e,t,n,s){b.rawrigidbodyset_rbSetNextKinematicTranslation(this.__wbg_ptr,e,t,n,s)}rbSetNextKinematicRotation(e,t,n,s,r){b.rawrigidbodyset_rbSetNextKinematicRotation(this.__wbg_ptr,e,t,n,s,r)}rbRecomputeMassPropertiesFromColliders(e,t){V(t,Ze),b.rawrigidbodyset_rbRecomputeMassPropertiesFromColliders(this.__wbg_ptr,e,t.__wbg_ptr)}rbSetAdditionalMass(e,t,n){b.rawrigidbodyset_rbSetAdditionalMass(this.__wbg_ptr,e,t,n)}rbSetAdditionalMassProperties(e,t,n,s,r,a){V(n,Y),V(s,Y),V(r,ce),b.rawrigidbodyset_rbSetAdditionalMassProperties(this.__wbg_ptr,e,t,n.__wbg_ptr,s.__wbg_ptr,r.__wbg_ptr,a)}rbLinvel(e){const t=b.rawrigidbodyset_rbLinvel(this.__wbg_ptr,e);return Y.__wrap(t)}rbAngvel(e){const t=b.rawrigidbodyset_rbAngvel(this.__wbg_ptr,e);return Y.__wrap(t)}rbVelocityAtPoint(e,t){V(t,Y);const n=b.rawrigidbodyset_rbVelocityAtPoint(this.__wbg_ptr,e,t.__wbg_ptr);return Y.__wrap(n)}rbLockTranslations(e,t,n){b.rawrigidbodyset_rbLockTranslations(this.__wbg_ptr,e,t,n)}rbSetEnabledTranslations(e,t,n,s,r){b.rawrigidbodyset_rbSetEnabledTranslations(this.__wbg_ptr,e,t,n,s,r)}rbLockRotations(e,t,n){b.rawrigidbodyset_rbLockRotations(this.__wbg_ptr,e,t,n)}rbSetEnabledRotations(e,t,n,s,r){b.rawrigidbodyset_rbSetEnabledRotations(this.__wbg_ptr,e,t,n,s,r)}rbDominanceGroup(e){return b.rawrigidbodyset_rbDominanceGroup(this.__wbg_ptr,e)}rbSetDominanceGroup(e,t){b.rawrigidbodyset_rbSetDominanceGroup(this.__wbg_ptr,e,t)}rbEnableCcd(e,t){b.rawrigidbodyset_rbEnableCcd(this.__wbg_ptr,e,t)}rbSetSoftCcdPrediction(e,t){b.rawrigidbodyset_rbSetSoftCcdPrediction(this.__wbg_ptr,e,t)}rbMass(e){return b.rawrigidbodyset_rbMass(this.__wbg_ptr,e)}rbInvMass(e){return b.rawrigidbodyset_rbInvMass(this.__wbg_ptr,e)}rbEffectiveInvMass(e){const t=b.rawrigidbodyset_rbEffectiveInvMass(this.__wbg_ptr,e);return Y.__wrap(t)}rbLocalCom(e){const t=b.rawrigidbodyset_rbLocalCom(this.__wbg_ptr,e);return Y.__wrap(t)}rbWorldCom(e){const t=b.rawrigidbodyset_rbWorldCom(this.__wbg_ptr,e);return Y.__wrap(t)}rbInvPrincipalInertiaSqrt(e){const t=b.rawrigidbodyset_rbInvPrincipalInertiaSqrt(this.__wbg_ptr,e);return Y.__wrap(t)}rbPrincipalInertiaLocalFrame(e){const t=b.rawrigidbodyset_rbPrincipalInertiaLocalFrame(this.__wbg_ptr,e);return ce.__wrap(t)}rbPrincipalInertia(e){const t=b.rawrigidbodyset_rbPrincipalInertia(this.__wbg_ptr,e);return Y.__wrap(t)}rbEffectiveWorldInvInertiaSqrt(e){const t=b.rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt(this.__wbg_ptr,e);return Z3.__wrap(t)}rbEffectiveAngularInertia(e){const t=b.rawrigidbodyset_rbEffectiveAngularInertia(this.__wbg_ptr,e);return Z3.__wrap(t)}rbWakeUp(e){b.rawrigidbodyset_rbWakeUp(this.__wbg_ptr,e)}rbIsCcdEnabled(e){return b.rawrigidbodyset_rbIsCcdEnabled(this.__wbg_ptr,e)!==0}rbSoftCcdPrediction(e){return b.rawrigidbodyset_rbSoftCcdPrediction(this.__wbg_ptr,e)}rbNumColliders(e){return b.rawrigidbodyset_rbNumColliders(this.__wbg_ptr,e)>>>0}rbCollider(e,t){return b.rawrigidbodyset_rbCollider(this.__wbg_ptr,e,t)}rbBodyType(e){return b.rawrigidbodyset_rbBodyType(this.__wbg_ptr,e)}rbSetBodyType(e,t,n){b.rawrigidbodyset_rbSetBodyType(this.__wbg_ptr,e,t,n)}rbIsFixed(e){return b.rawrigidbodyset_rbIsFixed(this.__wbg_ptr,e)!==0}rbIsKinematic(e){return b.rawrigidbodyset_rbIsKinematic(this.__wbg_ptr,e)!==0}rbIsDynamic(e){return b.rawrigidbodyset_rbIsDynamic(this.__wbg_ptr,e)!==0}rbLinearDamping(e){return b.rawrigidbodyset_rbLinearDamping(this.__wbg_ptr,e)}rbAngularDamping(e){return b.rawrigidbodyset_rbAngularDamping(this.__wbg_ptr,e)}rbSetLinearDamping(e,t){b.rawrigidbodyset_rbSetLinearDamping(this.__wbg_ptr,e,t)}rbSetAngularDamping(e,t){b.rawrigidbodyset_rbSetAngularDamping(this.__wbg_ptr,e,t)}rbSetEnabled(e,t){b.rawrigidbodyset_rbSetEnabled(this.__wbg_ptr,e,t)}rbIsEnabled(e){return b.rawrigidbodyset_rbIsEnabled(this.__wbg_ptr,e)!==0}rbGravityScale(e){return b.rawrigidbodyset_rbGravityScale(this.__wbg_ptr,e)}rbSetGravityScale(e,t,n){b.rawrigidbodyset_rbSetGravityScale(this.__wbg_ptr,e,t,n)}rbResetForces(e,t){b.rawrigidbodyset_rbResetForces(this.__wbg_ptr,e,t)}rbResetTorques(e,t){b.rawrigidbodyset_rbResetTorques(this.__wbg_ptr,e,t)}rbAddForce(e,t,n){V(t,Y),b.rawrigidbodyset_rbAddForce(this.__wbg_ptr,e,t.__wbg_ptr,n)}rbApplyImpulse(e,t,n){V(t,Y),b.rawrigidbodyset_rbApplyImpulse(this.__wbg_ptr,e,t.__wbg_ptr,n)}rbAddTorque(e,t,n){V(t,Y),b.rawrigidbodyset_rbAddTorque(this.__wbg_ptr,e,t.__wbg_ptr,n)}rbApplyTorqueImpulse(e,t,n){V(t,Y),b.rawrigidbodyset_rbApplyTorqueImpulse(this.__wbg_ptr,e,t.__wbg_ptr,n)}rbAddForceAtPoint(e,t,n,s){V(t,Y),V(n,Y),b.rawrigidbodyset_rbAddForceAtPoint(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,s)}rbApplyImpulseAtPoint(e,t,n,s){V(t,Y),V(n,Y),b.rawrigidbodyset_rbApplyImpulseAtPoint(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,s)}rbAdditionalSolverIterations(e){return b.rawrigidbodyset_rbAdditionalSolverIterations(this.__wbg_ptr,e)>>>0}rbSetAdditionalSolverIterations(e,t){b.rawrigidbodyset_rbSetAdditionalSolverIterations(this.__wbg_ptr,e,t)}rbUserData(e){return b.rawrigidbodyset_rbUserData(this.__wbg_ptr,e)>>>0}rbSetUserData(e,t){b.rawrigidbodyset_rbSetUserData(this.__wbg_ptr,e,t)}rbUserForce(e){const t=b.rawrigidbodyset_rbUserForce(this.__wbg_ptr,e);return Y.__wrap(t)}rbUserTorque(e){const t=b.rawrigidbodyset_rbUserTorque(this.__wbg_ptr,e);return Y.__wrap(t)}constructor(){const e=b.rawrigidbodyset_new();return this.__wbg_ptr=e>>>0,Or.register(this,this.__wbg_ptr,this),this}createRigidBody(e,t,n,s,r,a,o,l,d,c,u,p,h,y,T,m,f,N,M,P,F,X,D,U,R,H){return V(t,Y),V(n,ce),V(o,Y),V(l,Y),V(d,Y),V(c,Y),V(u,ce),b.rawrigidbodyset_createRigidBody(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,s,r,a,o.__wbg_ptr,l.__wbg_ptr,d.__wbg_ptr,c.__wbg_ptr,u.__wbg_ptr,p,h,y,T,m,f,N,M,P,F,X,D,U,R,H)}remove(e,t,n,s,r){V(t,Zn),V(n,Ze),V(s,qn),V(r,kn),b.rawrigidbodyset_remove(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r.__wbg_ptr)}len(){return b.rawcolliderset_len(this.__wbg_ptr)>>>0}contains(e){return b.rawrigidbodyset_contains(this.__wbg_ptr,e)!==0}forEachRigidBodyHandle(e){try{b.rawrigidbodyset_forEachRigidBodyHandle(this.__wbg_ptr,je(e))}finally{ye[Xe++]=void 0}}propagateModifiedBodyPositionsToColliders(e){V(e,Ze),b.rawrigidbodyset_propagateModifiedBodyPositionsToColliders(this.__wbg_ptr,e.__wbg_ptr)}}const Er=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawrotation_free(i>>>0,1));class ce{static __wrap(e){e=e>>>0;const t=Object.create(ce.prototype);return t.__wbg_ptr=e,Er.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Er.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawrotation_free(e,0)}constructor(e,t,n,s){const r=b.rawrotation_new(e,t,n,s);return this.__wbg_ptr=r>>>0,Er.register(this,this.__wbg_ptr,this),this}static identity(){const e=b.rawrotation_identity();return ce.__wrap(e)}get x(){return b.rawrotation_x(this.__wbg_ptr)}get y(){return b.rawintegrationparameters_dt(this.__wbg_ptr)}get z(){return b.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}get w(){return b.rawrotation_w(this.__wbg_ptr)}}const c9=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawsdpmatrix3_free(i>>>0,1));class Z3{static __wrap(e){e=e>>>0;const t=Object.create(Z3.prototype);return t.__wbg_ptr=e,c9.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,c9.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawsdpmatrix3_free(e,0)}elements(){const e=b.rawsdpmatrix3_elements(this.__wbg_ptr);return y2(e)}}const u9=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawserializationpipeline_free(i>>>0,1));class Ib{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,u9.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawserializationpipeline_free(e,0)}constructor(){const e=b.rawserializationpipeline_new();return this.__wbg_ptr=e>>>0,u9.register(this,this.__wbg_ptr,this),this}serializeAll(e,t,n,s,r,a,o,l,d){V(e,Y),V(t,E1),V(n,Zn),V(s,O1),V(r,f1),V(a,Ye),V(o,Ze),V(l,qn),V(d,kn);const c=b.rawserializationpipeline_serializeAll(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r.__wbg_ptr,a.__wbg_ptr,o.__wbg_ptr,l.__wbg_ptr,d.__wbg_ptr);return y2(c)}deserializeAll(e){const t=b.rawserializationpipeline_deserializeAll(this.__wbg_ptr,_e(e));return t===0?void 0:o5.__wrap(t)}}const p9=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawshape_free(i>>>0,1));class Y0{static __wrap(e){e=e>>>0;const t=Object.create(Y0.prototype);return t.__wbg_ptr=e,p9.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,p9.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawshape_free(e,0)}static cuboid(e,t,n){const s=b.rawshape_cuboid(e,t,n);return Y0.__wrap(s)}static roundCuboid(e,t,n,s){const r=b.rawshape_roundCuboid(e,t,n,s);return Y0.__wrap(r)}static ball(e){const t=b.rawshape_ball(e);return Y0.__wrap(t)}static halfspace(e){V(e,Y);const t=b.rawshape_halfspace(e.__wbg_ptr);return Y0.__wrap(t)}static capsule(e,t){const n=b.rawshape_capsule(e,t);return Y0.__wrap(n)}static cylinder(e,t){const n=b.rawshape_cylinder(e,t);return Y0.__wrap(n)}static roundCylinder(e,t,n){const s=b.rawshape_roundCylinder(e,t,n);return Y0.__wrap(s)}static cone(e,t){const n=b.rawshape_cone(e,t);return Y0.__wrap(n)}static roundCone(e,t,n){const s=b.rawshape_roundCone(e,t,n);return Y0.__wrap(s)}static voxels(e,t){V(e,Y);const n=Ki(t,b.__wbindgen_export_2),s=Et,r=b.rawshape_voxels(e.__wbg_ptr,n,s);return Y0.__wrap(r)}static voxelsFromPoints(e,t){V(e,Y);const n=s1(t,b.__wbindgen_export_2),s=Et,r=b.rawshape_voxelsFromPoints(e.__wbg_ptr,n,s);return Y0.__wrap(r)}static polyline(e,t){const n=s1(e,b.__wbindgen_export_2),s=Et,r=Ki(t,b.__wbindgen_export_2),a=Et,o=b.rawshape_polyline(n,s,r,a);return Y0.__wrap(o)}static trimesh(e,t,n){const s=s1(e,b.__wbindgen_export_2),r=Et,a=Ki(t,b.__wbindgen_export_2),o=Et,l=b.rawshape_trimesh(s,r,a,o,n);return l===0?void 0:Y0.__wrap(l)}static heightfield(e,t,n,s,r){const a=s1(n,b.__wbindgen_export_2),o=Et;V(s,Y);const l=b.rawshape_heightfield(e,t,a,o,s.__wbg_ptr,r);return Y0.__wrap(l)}static segment(e,t){V(e,Y),V(t,Y);const n=b.rawshape_segment(e.__wbg_ptr,t.__wbg_ptr);return Y0.__wrap(n)}static triangle(e,t,n){V(e,Y),V(t,Y),V(n,Y);const s=b.rawshape_triangle(e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr);return Y0.__wrap(s)}static roundTriangle(e,t,n,s){V(e,Y),V(t,Y),V(n,Y);const r=b.rawshape_roundTriangle(e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s);return Y0.__wrap(r)}static convexHull(e){const t=s1(e,b.__wbindgen_export_2),n=Et,s=b.rawshape_convexHull(t,n);return s===0?void 0:Y0.__wrap(s)}static roundConvexHull(e,t){const n=s1(e,b.__wbindgen_export_2),s=Et,r=b.rawshape_roundConvexHull(n,s,t);return r===0?void 0:Y0.__wrap(r)}static convexMesh(e,t){const n=s1(e,b.__wbindgen_export_2),s=Et,r=Ki(t,b.__wbindgen_export_2),a=Et,o=b.rawshape_convexMesh(n,s,r,a);return o===0?void 0:Y0.__wrap(o)}static roundConvexMesh(e,t,n){const s=s1(e,b.__wbindgen_export_2),r=Et,a=Ki(t,b.__wbindgen_export_2),o=Et,l=b.rawshape_roundConvexMesh(s,r,a,o,n);return l===0?void 0:Y0.__wrap(l)}castShape(e,t,n,s,r,a,o,l,d,c){V(e,Y),V(t,ce),V(n,Y),V(s,Y0),V(r,Y),V(a,ce),V(o,Y);const u=b.rawshape_castShape(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r.__wbg_ptr,a.__wbg_ptr,o.__wbg_ptr,l,d,c);return u===0?void 0:Ns.__wrap(u)}intersectsShape(e,t,n,s,r){return V(e,Y),V(t,ce),V(n,Y0),V(s,Y),V(r,ce),b.rawshape_intersectsShape(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r.__wbg_ptr)!==0}contactShape(e,t,n,s,r,a){V(e,Y),V(t,ce),V(n,Y0),V(s,Y),V(r,ce);const o=b.rawshape_contactShape(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r.__wbg_ptr,a);return o===0?void 0:v2.__wrap(o)}containsPoint(e,t,n){return V(e,Y),V(t,ce),V(n,Y),b.rawshape_containsPoint(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr)!==0}projectPoint(e,t,n,s){V(e,Y),V(t,ce),V(n,Y);const r=b.rawshape_projectPoint(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s);return Ps.__wrap(r)}intersectsRay(e,t,n,s,r){return V(e,Y),V(t,ce),V(n,Y),V(s,Y),b.rawshape_intersectsRay(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r)!==0}castRay(e,t,n,s,r,a){return V(e,Y),V(t,ce),V(n,Y),V(s,Y),b.rawshape_castRay(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r,a)}castRayAndGetNormal(e,t,n,s,r,a){V(e,Y),V(t,ce),V(n,Y),V(s,Y);const o=b.rawshape_castRayAndGetNormal(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,r,a);return o===0?void 0:Ls.__wrap(o)}}const f9=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawshapecasthit_free(i>>>0,1));class Ns{static __wrap(e){e=e>>>0;const t=Object.create(Ns.prototype);return t.__wbg_ptr=e,f9.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,f9.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawshapecasthit_free(e,0)}time_of_impact(){return b.rawrotation_x(this.__wbg_ptr)}witness1(){const e=b.rawshapecasthit_witness1(this.__wbg_ptr);return Y.__wrap(e)}witness2(){const e=b.rawcontactforceevent_total_force(this.__wbg_ptr);return Y.__wrap(e)}normal1(){const e=b.rawshapecasthit_normal1(this.__wbg_ptr);return Y.__wrap(e)}normal2(){const e=b.rawshapecasthit_normal2(this.__wbg_ptr);return Y.__wrap(e)}}const h9=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawshapecontact_free(i>>>0,1));class v2{static __wrap(e){e=e>>>0;const t=Object.create(v2.prototype);return t.__wbg_ptr=e,h9.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,h9.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawshapecontact_free(e,0)}distance(){return b.rawkinematiccharactercontroller_maxSlopeClimbAngle(this.__wbg_ptr)}point1(){const e=b.rawpointprojection_point(this.__wbg_ptr);return Y.__wrap(e)}point2(){const e=b.rawcollidershapecasthit_witness1(this.__wbg_ptr);return Y.__wrap(e)}normal1(){const e=b.rawcollidershapecasthit_witness2(this.__wbg_ptr);return Y.__wrap(e)}normal2(){const e=b.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);return Y.__wrap(e)}}const Cr=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(i=>b.__wbg_rawvector_free(i>>>0,1));class Y{static __wrap(e){e=e>>>0;const t=Object.create(Y.prototype);return t.__wbg_ptr=e,Cr.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Cr.unregister(this),e}free(){const e=this.__destroy_into_raw();b.__wbg_rawvector_free(e,0)}static zero(){const e=b.rawvector_zero();return Y.__wrap(e)}constructor(e,t,n){const s=b.rawvector_new(e,t,n);return this.__wbg_ptr=s>>>0,Cr.register(this,this.__wbg_ptr,this),this}get x(){return b.rawrotation_x(this.__wbg_ptr)}set x(e){b.rawvector_set_x(this.__wbg_ptr,e)}get y(){return b.rawintegrationparameters_dt(this.__wbg_ptr)}set y(e){b.rawintegrationparameters_set_dt(this.__wbg_ptr,e)}get z(){return b.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}set z(e){b.rawvector_set_z(this.__wbg_ptr,e)}xyz(){const e=b.rawvector_xyz(this.__wbg_ptr);return Y.__wrap(e)}yxz(){const e=b.rawvector_yxz(this.__wbg_ptr);return Y.__wrap(e)}zxy(){const e=b.rawvector_zxy(this.__wbg_ptr);return Y.__wrap(e)}xzy(){const e=b.rawvector_xzy(this.__wbg_ptr);return Y.__wrap(e)}yzx(){const e=b.rawvector_yzx(this.__wbg_ptr);return Y.__wrap(e)}zyx(){const e=b.rawvector_zyx(this.__wbg_ptr);return Y.__wrap(e)}}function Xb(i,e,t,n){const s=Le(i).bind(Le(e),Le(t),Le(n));return _e(s)}function Vb(i){const e=Le(i).buffer;return _e(e)}function Fb(){return i5(function(i,e,t){const n=Le(i).call(Le(e),Le(t));return _e(n)},arguments)}function Db(){return i5(function(i,e,t,n){const s=Le(i).call(Le(e),Le(t),Le(n));return _e(s)},arguments)}function Wb(){return i5(function(i,e,t,n,s){const r=Le(i).call(Le(e),Le(t),Le(n),Le(s));return _e(r)},arguments)}function jb(i){return Le(i).length}function Yb(i){return Le(i).length}function Gb(i){const e=new Uint8Array(Le(i));return _e(e)}function Ub(i,e,t){const n=new Uint8Array(Le(i),e>>>0,t>>>0);return _e(n)}function qb(i,e,t){const n=new Float32Array(Le(i),e>>>0,t>>>0);return _e(n)}function Zb(i){const e=new Float32Array(i>>>0);return _e(e)}function kb(i){const e=s5.__wrap(i);return _e(e)}function Jb(i){const e=Hs.__wrap(i);return _e(e)}function Bb(i,e,t){Le(i).set(Le(e),t>>>0)}function Kb(i,e,t){Le(i).set(Le(e),t>>>0)}function Qb(i){const e=Le(i);return typeof e=="boolean"?e?1:0:2}function _b(i){return typeof Le(i)=="function"}function $b(){const i=b.memory;return _e(i)}function ey(i,e){const t=Le(e),n=typeof t=="number"?t:void 0;pt().setFloat64(i+8*1,Q0(n)?0:n,!0),pt().setInt32(i+4*0,!Q0(n),!0)}function ty(i){return _e(i)}function ny(i){y2(i)}function iy(i,e){throw new Error(Hb(i,e))}URL=globalThis.URL;const v=await wb({"./rapier_wasm3d_bg.js":{__wbindgen_number_new:ty,__wbindgen_boolean_get:Qb,__wbindgen_object_drop_ref:ny,__wbindgen_number_get:ey,__wbindgen_is_function:_b,__wbg_rawraycolliderintersection_new:Jb,__wbg_rawcontactforceevent_new:kb,__wbg_call_7cccdd69e0791ae2:Fb,__wbg_call_833bed5770ea2041:Db,__wbg_call_b8adc8b1d0a0d8eb:Wb,__wbg_bind_c8359b1cba058168:Xb,__wbg_buffer_609cc3eee51ed158:Vb,__wbg_newwithbyteoffsetandlength_d97e637ebe145a9a:Ub,__wbg_new_a12002a7f91c75be:Gb,__wbg_set_65595bdd868b3009:Kb,__wbg_length_a446193dc22c12f8:Yb,__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354:qb,__wbg_set_10bad9bee0e9c58b:Bb,__wbg_length_3b4f022188ae8db6:jb,__wbg_newwithlength_5a5efe313cfd59f1:Zb,__wbindgen_throw:iy,__wbindgen_memory:$b}},gb),sy=v.memory,ry=v.version,ay=v.__wbg_rawkinematiccharactercontroller_free,oy=v.rawkinematiccharactercontroller_new,ly=v.rawkinematiccharactercontroller_setUp,dy=v.rawkinematiccharactercontroller_normalNudgeFactor,cy=v.rawkinematiccharactercontroller_setNormalNudgeFactor,uy=v.rawkinematiccharactercontroller_setOffset,py=v.rawkinematiccharactercontroller_slideEnabled,fy=v.rawkinematiccharactercontroller_setSlideEnabled,hy=v.rawkinematiccharactercontroller_autostepMaxHeight,my=v.rawkinematiccharactercontroller_autostepMinWidth,by=v.rawkinematiccharactercontroller_autostepIncludesDynamicBodies,yy=v.rawkinematiccharactercontroller_autostepEnabled,vy=v.rawkinematiccharactercontroller_enableAutostep,gy=v.rawkinematiccharactercontroller_disableAutostep,wy=v.rawkinematiccharactercontroller_maxSlopeClimbAngle,Ty=v.rawkinematiccharactercontroller_setMaxSlopeClimbAngle,xy=v.rawkinematiccharactercontroller_minSlopeSlideAngle,Sy=v.rawkinematiccharactercontroller_setMinSlopeSlideAngle,Py=v.rawkinematiccharactercontroller_snapToGroundDistance,Hy=v.rawkinematiccharactercontroller_enableSnapToGround,Ly=v.rawkinematiccharactercontroller_disableSnapToGround,Ny=v.rawkinematiccharactercontroller_snapToGroundEnabled,Ry=v.rawkinematiccharactercontroller_computeColliderMovement,My=v.rawkinematiccharactercontroller_computedMovement,Oy=v.rawkinematiccharactercontroller_computedGrounded,Ey=v.rawkinematiccharactercontroller_numComputedCollisions,Cy=v.rawkinematiccharactercontroller_computedCollision,zy=v.__wbg_rawcharactercollision_free,Ay=v.rawcharactercollision_new,Iy=v.rawcharactercollision_handle,Xy=v.rawcharactercollision_translationDeltaApplied,Vy=v.rawcharactercollision_translationDeltaRemaining,Fy=v.rawcharactercollision_toi,Dy=v.rawcharactercollision_worldWitness1,Wy=v.rawcharactercollision_worldWitness2,jy=v.rawcharactercollision_worldNormal1,Yy=v.rawcharactercollision_worldNormal2,Gy=v.__wbg_rawpidcontroller_free,Uy=v.rawpidcontroller_new,qy=v.rawpidcontroller_set_kp,Zy=v.rawpidcontroller_set_ki,ky=v.rawpidcontroller_set_kd,Jy=v.rawpidcontroller_set_axes_mask,By=v.rawpidcontroller_reset_integrals,Ky=v.rawpidcontroller_apply_linear_correction,Qy=v.rawpidcontroller_apply_angular_correction,_y=v.rawpidcontroller_linear_correction,$y=v.rawpidcontroller_angular_correction,ev=v.__wbg_rawdynamicraycastvehiclecontroller_free,tv=v.rawdynamicraycastvehiclecontroller_new,nv=v.rawdynamicraycastvehiclecontroller_current_vehicle_speed,iv=v.rawdynamicraycastvehiclecontroller_chassis,sv=v.rawdynamicraycastvehiclecontroller_index_up_axis,rv=v.rawdynamicraycastvehiclecontroller_set_index_up_axis,av=v.rawdynamicraycastvehiclecontroller_index_forward_axis,ov=v.rawdynamicraycastvehiclecontroller_set_index_forward_axis,lv=v.rawdynamicraycastvehiclecontroller_add_wheel,dv=v.rawdynamicraycastvehiclecontroller_num_wheels,cv=v.rawdynamicraycastvehiclecontroller_update_vehicle,uv=v.rawdynamicraycastvehiclecontroller_wheel_chassis_connection_point_cs,pv=v.rawdynamicraycastvehiclecontroller_set_wheel_chassis_connection_point_cs,fv=v.rawdynamicraycastvehiclecontroller_wheel_suspension_rest_length,hv=v.rawdynamicraycastvehiclecontroller_set_wheel_suspension_rest_length,mv=v.rawdynamicraycastvehiclecontroller_wheel_max_suspension_travel,bv=v.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_travel,yv=v.rawdynamicraycastvehiclecontroller_wheel_radius,vv=v.rawdynamicraycastvehiclecontroller_set_wheel_radius,gv=v.rawdynamicraycastvehiclecontroller_wheel_suspension_stiffness,wv=v.rawdynamicraycastvehiclecontroller_set_wheel_suspension_stiffness,Tv=v.rawdynamicraycastvehiclecontroller_wheel_suspension_compression,xv=v.rawdynamicraycastvehiclecontroller_set_wheel_suspension_compression,Sv=v.rawdynamicraycastvehiclecontroller_wheel_suspension_relaxation,Pv=v.rawdynamicraycastvehiclecontroller_set_wheel_suspension_relaxation,Hv=v.rawdynamicraycastvehiclecontroller_wheel_max_suspension_force,Lv=v.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_force,Nv=v.rawdynamicraycastvehiclecontroller_wheel_brake,Rv=v.rawdynamicraycastvehiclecontroller_set_wheel_brake,Mv=v.rawdynamicraycastvehiclecontroller_wheel_steering,Ov=v.rawdynamicraycastvehiclecontroller_set_wheel_steering,Ev=v.rawdynamicraycastvehiclecontroller_wheel_engine_force,Cv=v.rawdynamicraycastvehiclecontroller_set_wheel_engine_force,zv=v.rawdynamicraycastvehiclecontroller_wheel_direction_cs,Av=v.rawdynamicraycastvehiclecontroller_set_wheel_direction_cs,Iv=v.rawdynamicraycastvehiclecontroller_wheel_axle_cs,Xv=v.rawdynamicraycastvehiclecontroller_set_wheel_axle_cs,Vv=v.rawdynamicraycastvehiclecontroller_wheel_friction_slip,Fv=v.rawdynamicraycastvehiclecontroller_set_wheel_friction_slip,Dv=v.rawdynamicraycastvehiclecontroller_wheel_side_friction_stiffness,Wv=v.rawdynamicraycastvehiclecontroller_set_wheel_side_friction_stiffness,jv=v.rawdynamicraycastvehiclecontroller_wheel_rotation,Yv=v.rawdynamicraycastvehiclecontroller_wheel_forward_impulse,Gv=v.rawdynamicraycastvehiclecontroller_wheel_side_impulse,Uv=v.rawdynamicraycastvehiclecontroller_wheel_suspension_force,qv=v.rawdynamicraycastvehiclecontroller_wheel_contact_normal_ws,Zv=v.rawdynamicraycastvehiclecontroller_wheel_contact_point_ws,kv=v.rawdynamicraycastvehiclecontroller_wheel_suspension_length,Jv=v.rawdynamicraycastvehiclecontroller_wheel_hard_point_ws,Bv=v.rawdynamicraycastvehiclecontroller_wheel_is_in_contact,Kv=v.rawdynamicraycastvehiclecontroller_wheel_ground_object,Qv=v.__wbg_rawccdsolver_free,_v=v.rawccdsolver_new,$v=v.rawimpulsejointset_jointType,eg=v.rawimpulsejointset_jointBodyHandle1,tg=v.rawimpulsejointset_jointBodyHandle2,ng=v.rawimpulsejointset_jointFrameX1,ig=v.rawimpulsejointset_jointFrameX2,sg=v.rawimpulsejointset_jointAnchor1,rg=v.rawimpulsejointset_jointAnchor2,ag=v.rawimpulsejointset_jointSetAnchor1,og=v.rawimpulsejointset_jointSetAnchor2,lg=v.rawimpulsejointset_jointContactsEnabled,dg=v.rawimpulsejointset_jointSetContactsEnabled,cg=v.rawimpulsejointset_jointLimitsEnabled,ug=v.rawimpulsejointset_jointLimitsMin,pg=v.rawimpulsejointset_jointLimitsMax,fg=v.rawimpulsejointset_jointSetLimits,hg=v.rawimpulsejointset_jointConfigureMotorModel,mg=v.rawimpulsejointset_jointConfigureMotorVelocity,bg=v.rawimpulsejointset_jointConfigureMotorPosition,yg=v.rawimpulsejointset_jointConfigureMotor,vg=v.__wbg_rawimpulsejointset_free,gg=v.rawimpulsejointset_new,wg=v.rawimpulsejointset_createJoint,Tg=v.rawimpulsejointset_remove,xg=v.rawimpulsejointset_len,Sg=v.rawimpulsejointset_contains,Pg=v.rawimpulsejointset_forEachJointHandle,Hg=v.rawimpulsejointset_forEachJointAttachedToRigidBody,Lg=v.__wbg_rawintegrationparameters_free,Ng=v.rawintegrationparameters_new,Rg=v.rawintegrationparameters_dt,Mg=v.rawintegrationparameters_contact_erp,Og=v.rawintegrationparameters_numSolverIterations,Eg=v.rawintegrationparameters_minIslandSize,Cg=v.rawintegrationparameters_maxCcdSubsteps,zg=v.rawintegrationparameters_lengthUnit,Ag=v.rawintegrationparameters_set_dt,Ig=v.rawintegrationparameters_set_contact_natural_frequency,Xg=v.rawintegrationparameters_set_normalizedAllowedLinearError,Vg=v.rawintegrationparameters_set_normalizedPredictionDistance,Fg=v.rawintegrationparameters_set_numSolverIterations,Dg=v.rawintegrationparameters_set_minIslandSize,Wg=v.rawintegrationparameters_set_maxCcdSubsteps,jg=v.rawintegrationparameters_set_lengthUnit,Yg=v.rawintegrationparameters_switchToStandardPgsSolver,Gg=v.rawintegrationparameters_switchToSmallStepsPgsSolver,Ug=v.rawintegrationparameters_switchToSmallStepsPgsSolverWithoutWarmstart,qg=v.__wbg_rawislandmanager_free,Zg=v.rawislandmanager_new,kg=v.rawislandmanager_forEachActiveRigidBodyHandle,Jg=v.__wbg_rawgenericjoint_free,Bg=v.rawgenericjoint_generic,Kg=v.rawgenericjoint_spring,Qg=v.rawgenericjoint_rope,_g=v.rawgenericjoint_spherical,$g=v.rawgenericjoint_prismatic,ew=v.rawgenericjoint_fixed,tw=v.rawgenericjoint_revolute,nw=v.rawmultibodyjointset_jointType,iw=v.rawmultibodyjointset_jointFrameX1,sw=v.rawmultibodyjointset_jointFrameX2,rw=v.rawmultibodyjointset_jointAnchor1,aw=v.rawmultibodyjointset_jointAnchor2,ow=v.rawmultibodyjointset_jointContactsEnabled,lw=v.rawmultibodyjointset_jointSetContactsEnabled,dw=v.rawmultibodyjointset_jointLimitsEnabled,cw=v.rawmultibodyjointset_jointLimitsMin,uw=v.rawmultibodyjointset_jointLimitsMax,pw=v.__wbg_rawmultibodyjointset_free,fw=v.rawmultibodyjointset_new,hw=v.rawmultibodyjointset_createJoint,mw=v.rawmultibodyjointset_remove,bw=v.rawmultibodyjointset_contains,yw=v.rawmultibodyjointset_forEachJointHandle,vw=v.rawmultibodyjointset_forEachJointAttachedToRigidBody,gw=v.rawrigidbodyset_rbTranslation,ww=v.rawrigidbodyset_rbRotation,Tw=v.rawrigidbodyset_rbSleep,xw=v.rawrigidbodyset_rbIsSleeping,Sw=v.rawrigidbodyset_rbIsMoving,Pw=v.rawrigidbodyset_rbNextTranslation,Hw=v.rawrigidbodyset_rbNextRotation,Lw=v.rawrigidbodyset_rbSetTranslation,Nw=v.rawrigidbodyset_rbSetRotation,Rw=v.rawrigidbodyset_rbSetLinvel,Mw=v.rawrigidbodyset_rbSetAngvel,Ow=v.rawrigidbodyset_rbSetNextKinematicTranslation,Ew=v.rawrigidbodyset_rbSetNextKinematicRotation,Cw=v.rawrigidbodyset_rbRecomputeMassPropertiesFromColliders,zw=v.rawrigidbodyset_rbSetAdditionalMass,Aw=v.rawrigidbodyset_rbSetAdditionalMassProperties,Iw=v.rawrigidbodyset_rbLinvel,Xw=v.rawrigidbodyset_rbAngvel,Vw=v.rawrigidbodyset_rbVelocityAtPoint,Fw=v.rawrigidbodyset_rbLockTranslations,Dw=v.rawrigidbodyset_rbSetEnabledTranslations,Ww=v.rawrigidbodyset_rbLockRotations,jw=v.rawrigidbodyset_rbSetEnabledRotations,Yw=v.rawrigidbodyset_rbDominanceGroup,Gw=v.rawrigidbodyset_rbSetDominanceGroup,Uw=v.rawrigidbodyset_rbEnableCcd,qw=v.rawrigidbodyset_rbSetSoftCcdPrediction,Zw=v.rawrigidbodyset_rbMass,kw=v.rawrigidbodyset_rbInvMass,Jw=v.rawrigidbodyset_rbEffectiveInvMass,Bw=v.rawrigidbodyset_rbLocalCom,Kw=v.rawrigidbodyset_rbWorldCom,Qw=v.rawrigidbodyset_rbInvPrincipalInertiaSqrt,_w=v.rawrigidbodyset_rbPrincipalInertiaLocalFrame,$w=v.rawrigidbodyset_rbPrincipalInertia,eT=v.rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt,tT=v.rawrigidbodyset_rbEffectiveAngularInertia,nT=v.rawrigidbodyset_rbWakeUp,iT=v.rawrigidbodyset_rbIsCcdEnabled,sT=v.rawrigidbodyset_rbSoftCcdPrediction,rT=v.rawrigidbodyset_rbNumColliders,aT=v.rawrigidbodyset_rbCollider,oT=v.rawrigidbodyset_rbBodyType,lT=v.rawrigidbodyset_rbSetBodyType,dT=v.rawrigidbodyset_rbIsFixed,cT=v.rawrigidbodyset_rbIsKinematic,uT=v.rawrigidbodyset_rbIsDynamic,pT=v.rawrigidbodyset_rbLinearDamping,fT=v.rawrigidbodyset_rbAngularDamping,hT=v.rawrigidbodyset_rbSetLinearDamping,mT=v.rawrigidbodyset_rbSetAngularDamping,bT=v.rawrigidbodyset_rbSetEnabled,yT=v.rawrigidbodyset_rbIsEnabled,vT=v.rawrigidbodyset_rbGravityScale,gT=v.rawrigidbodyset_rbSetGravityScale,wT=v.rawrigidbodyset_rbResetForces,TT=v.rawrigidbodyset_rbResetTorques,xT=v.rawrigidbodyset_rbAddForce,ST=v.rawrigidbodyset_rbApplyImpulse,PT=v.rawrigidbodyset_rbAddTorque,HT=v.rawrigidbodyset_rbApplyTorqueImpulse,LT=v.rawrigidbodyset_rbAddForceAtPoint,NT=v.rawrigidbodyset_rbApplyImpulseAtPoint,RT=v.rawrigidbodyset_rbAdditionalSolverIterations,MT=v.rawrigidbodyset_rbSetAdditionalSolverIterations,OT=v.rawrigidbodyset_rbUserData,ET=v.rawrigidbodyset_rbSetUserData,CT=v.rawrigidbodyset_rbUserForce,zT=v.rawrigidbodyset_rbUserTorque,AT=v.__wbg_rawrigidbodyset_free,IT=v.rawrigidbodyset_new,XT=v.rawrigidbodyset_createRigidBody,VT=v.rawrigidbodyset_remove,FT=v.rawrigidbodyset_contains,DT=v.rawrigidbodyset_forEachRigidBodyHandle,WT=v.rawrigidbodyset_propagateModifiedBodyPositionsToColliders,jT=v.__wbg_rawbroadphase_free,YT=v.rawbroadphase_new,GT=v.rawcolliderset_coTranslation,UT=v.rawcolliderset_coRotation,qT=v.rawcolliderset_coSetTranslation,ZT=v.rawcolliderset_coSetTranslationWrtParent,kT=v.rawcolliderset_coSetRotation,JT=v.rawcolliderset_coSetRotationWrtParent,BT=v.rawcolliderset_coIsSensor,KT=v.rawcolliderset_coShapeType,QT=v.rawcolliderset_coHalfspaceNormal,_T=v.rawcolliderset_coHalfExtents,$T=v.rawcolliderset_coSetHalfExtents,ex=v.rawcolliderset_coRadius,tx=v.rawcolliderset_coSetRadius,nx=v.rawcolliderset_coHalfHeight,ix=v.rawcolliderset_coSetHalfHeight,sx=v.rawcolliderset_coRoundRadius,rx=v.rawcolliderset_coSetRoundRadius,ax=v.rawcolliderset_coVoxelData,ox=v.rawcolliderset_coVoxelSize,lx=v.rawcolliderset_coSetVoxel,dx=v.rawcolliderset_coPropagateVoxelChange,cx=v.rawcolliderset_coCombineVoxelStates,ux=v.rawcolliderset_coVertices,px=v.rawcolliderset_coIndices,fx=v.rawcolliderset_coTriMeshFlags,hx=v.rawcolliderset_coHeightFieldFlags,mx=v.rawcolliderset_coHeightfieldHeights,bx=v.rawcolliderset_coHeightfieldScale,yx=v.rawcolliderset_coHeightfieldNRows,vx=v.rawcolliderset_coHeightfieldNCols,gx=v.rawcolliderset_coParent,wx=v.rawcolliderset_coSetEnabled,Tx=v.rawcolliderset_coIsEnabled,xx=v.rawcolliderset_coSetContactSkin,Sx=v.rawcolliderset_coContactSkin,Px=v.rawcolliderset_coFriction,Hx=v.rawcolliderset_coRestitution,Lx=v.rawcolliderset_coDensity,Nx=v.rawcolliderset_coMass,Rx=v.rawcolliderset_coVolume,Mx=v.rawcolliderset_coCollisionGroups,Ox=v.rawcolliderset_coSolverGroups,Ex=v.rawcolliderset_coActiveHooks,Cx=v.rawcolliderset_coActiveCollisionTypes,zx=v.rawcolliderset_coActiveEvents,Ax=v.rawcolliderset_coContactForceEventThreshold,Ix=v.rawcolliderset_coContainsPoint,Xx=v.rawcolliderset_coCastShape,Vx=v.rawcolliderset_coCastCollider,Fx=v.rawcolliderset_coIntersectsShape,Dx=v.rawcolliderset_coContactShape,Wx=v.rawcolliderset_coContactCollider,jx=v.rawcolliderset_coProjectPoint,Yx=v.rawcolliderset_coIntersectsRay,Gx=v.rawcolliderset_coCastRay,Ux=v.rawcolliderset_coCastRayAndGetNormal,qx=v.rawcolliderset_coSetSensor,Zx=v.rawcolliderset_coSetRestitution,kx=v.rawcolliderset_coSetFriction,Jx=v.rawcolliderset_coFrictionCombineRule,Bx=v.rawcolliderset_coSetFrictionCombineRule,Kx=v.rawcolliderset_coRestitutionCombineRule,Qx=v.rawcolliderset_coSetRestitutionCombineRule,_x=v.rawcolliderset_coSetCollisionGroups,$x=v.rawcolliderset_coSetSolverGroups,eS=v.rawcolliderset_coSetActiveHooks,tS=v.rawcolliderset_coSetActiveEvents,nS=v.rawcolliderset_coSetActiveCollisionTypes,iS=v.rawcolliderset_coSetShape,sS=v.rawcolliderset_coSetContactForceEventThreshold,rS=v.rawcolliderset_coSetDensity,aS=v.rawcolliderset_coSetMass,oS=v.rawcolliderset_coSetMassProperties,lS=v.__wbg_rawcolliderset_free,dS=v.rawcolliderset_new,cS=v.rawcolliderset_len,uS=v.rawcolliderset_contains,pS=v.rawcolliderset_createCollider,fS=v.rawcolliderset_remove,hS=v.rawcolliderset_forEachColliderHandle,mS=v.__wbg_rawshapecontact_free,bS=v.__wbg_rawnarrowphase_free,yS=v.rawnarrowphase_new,vS=v.rawnarrowphase_contact_pairs_with,gS=v.rawnarrowphase_contact_pair,wS=v.rawnarrowphase_intersection_pairs_with,TS=v.rawnarrowphase_intersection_pair,xS=v.__wbg_rawcontactmanifold_free,SS=v.rawcontactpair_collider1,PS=v.rawcontactpair_collider2,HS=v.rawcontactpair_numContactManifolds,LS=v.rawcontactpair_contactManifold,NS=v.rawcontactmanifold_normal,RS=v.rawcontactmanifold_local_n1,MS=v.rawcontactmanifold_local_n2,OS=v.rawcontactmanifold_subshape1,ES=v.rawcontactmanifold_subshape2,CS=v.rawcontactmanifold_num_contacts,zS=v.rawcontactmanifold_contact_local_p1,AS=v.rawcontactmanifold_contact_local_p2,IS=v.rawcontactmanifold_contact_dist,XS=v.rawcontactmanifold_contact_fid1,VS=v.rawcontactmanifold_contact_fid2,FS=v.rawcontactmanifold_contact_impulse,DS=v.rawcontactmanifold_contact_tangent_impulse_x,WS=v.rawcontactmanifold_contact_tangent_impulse_y,jS=v.rawcontactmanifold_num_solver_contacts,YS=v.rawcontactmanifold_solver_contact_point,GS=v.rawcontactmanifold_solver_contact_dist,US=v.rawcontactmanifold_solver_contact_friction,qS=v.rawcontactmanifold_solver_contact_restitution,ZS=v.rawcontactmanifold_solver_contact_tangent_velocity,kS=v.__wbg_rawpointprojection_free,JS=v.rawpointprojection_point,BS=v.rawpointprojection_isInside,KS=v.__wbg_rawpointcolliderprojection_free,QS=v.rawpointcolliderprojection_colliderHandle,_S=v.rawpointcolliderprojection_point,$S=v.rawpointcolliderprojection_isInside,eP=v.rawpointcolliderprojection_featureType,tP=v.rawpointcolliderprojection_featureId,nP=v.__wbg_rawrayintersection_free,iP=v.__wbg_rawraycolliderhit_free,sP=v.__wbg_rawshape_free,rP=v.rawshape_cuboid,aP=v.rawshape_roundCuboid,oP=v.rawshape_ball,lP=v.rawshape_halfspace,dP=v.rawshape_capsule,cP=v.rawshape_cylinder,uP=v.rawshape_roundCylinder,pP=v.rawshape_cone,fP=v.rawshape_roundCone,hP=v.rawshape_voxels,mP=v.rawshape_voxelsFromPoints,bP=v.rawshape_polyline,yP=v.rawshape_trimesh,vP=v.rawshape_heightfield,gP=v.rawshape_segment,wP=v.rawshape_triangle,TP=v.rawshape_roundTriangle,xP=v.rawshape_convexHull,SP=v.rawshape_roundConvexHull,PP=v.rawshape_convexMesh,HP=v.rawshape_roundConvexMesh,LP=v.rawshape_castShape,NP=v.rawshape_intersectsShape,RP=v.rawshape_contactShape,MP=v.rawshape_containsPoint,OP=v.rawshape_projectPoint,EP=v.rawshape_intersectsRay,CP=v.rawshape_castRay,zP=v.rawshape_castRayAndGetNormal,AP=v.__wbg_rawshapecasthit_free,IP=v.rawshapecasthit_witness1,XP=v.rawshapecasthit_normal1,VP=v.rawshapecasthit_normal2,FP=v.__wbg_rawcollidershapecasthit_free,DP=v.rawcollidershapecasthit_time_of_impact,WP=v.rawcollidershapecasthit_witness1,jP=v.rawcollidershapecasthit_witness2,YP=v.rawrotation_new,GP=v.rawrotation_identity,UP=v.rawrotation_x,qP=v.rawrotation_w,ZP=v.rawvector_zero,kP=v.rawvector_new,JP=v.rawvector_set_x,BP=v.rawvector_set_z,KP=v.rawvector_xyz,QP=v.rawvector_yxz,_P=v.rawvector_zxy,$P=v.rawvector_xzy,eH=v.rawvector_yzx,tH=v.rawvector_zyx,nH=v.rawsdpmatrix3_elements,iH=v.__wbg_rawdebugrenderpipeline_free,sH=v.rawdebugrenderpipeline_new,rH=v.rawdebugrenderpipeline_vertices,aH=v.rawdebugrenderpipeline_colors,oH=v.rawdebugrenderpipeline_render,lH=v.__wbg_raweventqueue_free,dH=v.__wbg_rawcontactforceevent_free,cH=v.rawcontactforceevent_collider2,uH=v.rawcontactforceevent_total_force,pH=v.rawcontactforceevent_total_force_magnitude,fH=v.rawcontactforceevent_max_force_direction,hH=v.rawcontactforceevent_max_force_magnitude,mH=v.raweventqueue_new,bH=v.raweventqueue_drainCollisionEvents,yH=v.raweventqueue_drainContactForceEvents,vH=v.raweventqueue_clear,gH=v.__wbg_rawphysicspipeline_free,wH=v.rawphysicspipeline_new,TH=v.rawphysicspipeline_step,xH=v.rawphysicspipeline_stepWithEvents,SH=v.rawquerypipeline_new,PH=v.rawquerypipeline_update,HH=v.rawquerypipeline_castRay,LH=v.rawquerypipeline_castRayAndGetNormal,NH=v.rawquerypipeline_intersectionsWithRay,RH=v.rawquerypipeline_intersectionWithShape,MH=v.rawquerypipeline_projectPoint,OH=v.rawquerypipeline_projectPointAndGetFeature,EH=v.rawquerypipeline_intersectionsWithPoint,CH=v.rawquerypipeline_castShape,zH=v.rawquerypipeline_intersectionsWithShape,AH=v.rawquerypipeline_collidersWithAabbIntersectingAabb,IH=v.__wbg_rawdeserializedworld_free,XH=v.rawdeserializedworld_takeGravity,VH=v.rawdeserializedworld_takeIntegrationParameters,FH=v.rawdeserializedworld_takeIslandManager,DH=v.rawdeserializedworld_takeBroadPhase,WH=v.rawdeserializedworld_takeNarrowPhase,jH=v.rawdeserializedworld_takeBodies,YH=v.rawdeserializedworld_takeColliders,GH=v.rawdeserializedworld_takeImpulseJoints,UH=v.rawdeserializedworld_takeMultibodyJoints,qH=v.__wbg_rawserializationpipeline_free,ZH=v.rawserializationpipeline_new,kH=v.rawserializationpipeline_serializeAll,JH=v.rawserializationpipeline_deserializeAll,BH=v.rawcolliderset_isHandleValid,KH=v.rawkinematiccharactercontroller_offset,QH=v.rawintegrationparameters_normalizedAllowedLinearError,_H=v.rawintegrationparameters_numAdditionalFrictionIterations,$H=v.rawintegrationparameters_numInternalPgsIterations,eL=v.rawrigidbodyset_len,tL=v.rawshapecontact_distance,nL=v.rawrayintersection_featureType,iL=v.rawraycolliderintersection_colliderHandle,sL=v.rawrayintersection_time_of_impact,rL=v.rawraycolliderintersection_featureType,aL=v.rawraycolliderhit_colliderHandle,oL=v.rawraycolliderintersection_time_of_impact,lL=v.rawcollidershapecasthit_colliderHandle,dL=v.rawraycolliderhit_timeOfImpact,cL=v.rawshapecasthit_time_of_impact,uL=v.rawrotation_y,pL=v.rawrotation_z,fL=v.rawvector_x,hL=v.rawvector_y,mL=v.rawvector_z,bL=v.rawcontactforceevent_collider1,yL=v.rawintegrationparameters_normalizedPredictionDistance,vL=v.reserve_memory,gL=v.__wbg_rawquerypipeline_free,wL=v.rawrayintersection_featureId,TL=v.rawraycolliderintersection_featureId,xL=v.rawkinematiccharactercontroller_up,SL=v.rawshapecontact_normal2,PL=v.rawshapecontact_point1,HL=v.rawshapecontact_point2,LL=v.rawrayintersection_normal,NL=v.rawraycolliderintersection_normal,RL=v.rawshapecontact_normal1,ML=v.rawcollidershapecasthit_normal1,OL=v.rawcollidershapecasthit_normal2,EL=v.rawshapecasthit_witness2,CL=v.rawintegrationparameters_set_numAdditionalFrictionIterations,zL=v.rawintegrationparameters_set_numInternalPgsIterations,AL=v.rawvector_set_y,IL=v.__wbg_rawcontactpair_free,XL=v.__wbg_rawrotation_free,VL=v.__wbg_rawsdpmatrix3_free,FL=v.__wbg_rawvector_free,DL=v.__wbg_rawraycolliderintersection_free,WL=v.__wbindgen_export_0,jL=v.__wbindgen_add_to_stack_pointer,YL=v.__wbindgen_export_1,GL=v.__wbindgen_export_2,UL=Object.freeze(Object.defineProperty({__proto__:null,__wbg_rawbroadphase_free:jT,__wbg_rawccdsolver_free:Qv,__wbg_rawcharactercollision_free:zy,__wbg_rawcolliderset_free:lS,__wbg_rawcollidershapecasthit_free:FP,__wbg_rawcontactforceevent_free:dH,__wbg_rawcontactmanifold_free:xS,__wbg_rawcontactpair_free:IL,__wbg_rawdebugrenderpipeline_free:iH,__wbg_rawdeserializedworld_free:IH,__wbg_rawdynamicraycastvehiclecontroller_free:ev,__wbg_raweventqueue_free:lH,__wbg_rawgenericjoint_free:Jg,__wbg_rawimpulsejointset_free:vg,__wbg_rawintegrationparameters_free:Lg,__wbg_rawislandmanager_free:qg,__wbg_rawkinematiccharactercontroller_free:ay,__wbg_rawmultibodyjointset_free:pw,__wbg_rawnarrowphase_free:bS,__wbg_rawphysicspipeline_free:gH,__wbg_rawpidcontroller_free:Gy,__wbg_rawpointcolliderprojection_free:KS,__wbg_rawpointprojection_free:kS,__wbg_rawquerypipeline_free:gL,__wbg_rawraycolliderhit_free:iP,__wbg_rawraycolliderintersection_free:DL,__wbg_rawrayintersection_free:nP,__wbg_rawrigidbodyset_free:AT,__wbg_rawrotation_free:XL,__wbg_rawsdpmatrix3_free:VL,__wbg_rawserializationpipeline_free:qH,__wbg_rawshape_free:sP,__wbg_rawshapecasthit_free:AP,__wbg_rawshapecontact_free:mS,__wbg_rawvector_free:FL,__wbindgen_add_to_stack_pointer:jL,__wbindgen_export_0:WL,__wbindgen_export_1:YL,__wbindgen_export_2:GL,memory:sy,rawbroadphase_new:YT,rawccdsolver_new:_v,rawcharactercollision_handle:Iy,rawcharactercollision_new:Ay,rawcharactercollision_toi:Fy,rawcharactercollision_translationDeltaApplied:Xy,rawcharactercollision_translationDeltaRemaining:Vy,rawcharactercollision_worldNormal1:jy,rawcharactercollision_worldNormal2:Yy,rawcharactercollision_worldWitness1:Dy,rawcharactercollision_worldWitness2:Wy,rawcolliderset_coActiveCollisionTypes:Cx,rawcolliderset_coActiveEvents:zx,rawcolliderset_coActiveHooks:Ex,rawcolliderset_coCastCollider:Vx,rawcolliderset_coCastRay:Gx,rawcolliderset_coCastRayAndGetNormal:Ux,rawcolliderset_coCastShape:Xx,rawcolliderset_coCollisionGroups:Mx,rawcolliderset_coCombineVoxelStates:cx,rawcolliderset_coContactCollider:Wx,rawcolliderset_coContactForceEventThreshold:Ax,rawcolliderset_coContactShape:Dx,rawcolliderset_coContactSkin:Sx,rawcolliderset_coContainsPoint:Ix,rawcolliderset_coDensity:Lx,rawcolliderset_coFriction:Px,rawcolliderset_coFrictionCombineRule:Jx,rawcolliderset_coHalfExtents:_T,rawcolliderset_coHalfHeight:nx,rawcolliderset_coHalfspaceNormal:QT,rawcolliderset_coHeightFieldFlags:hx,rawcolliderset_coHeightfieldHeights:mx,rawcolliderset_coHeightfieldNCols:vx,rawcolliderset_coHeightfieldNRows:yx,rawcolliderset_coHeightfieldScale:bx,rawcolliderset_coIndices:px,rawcolliderset_coIntersectsRay:Yx,rawcolliderset_coIntersectsShape:Fx,rawcolliderset_coIsEnabled:Tx,rawcolliderset_coIsSensor:BT,rawcolliderset_coMass:Nx,rawcolliderset_coParent:gx,rawcolliderset_coProjectPoint:jx,rawcolliderset_coPropagateVoxelChange:dx,rawcolliderset_coRadius:ex,rawcolliderset_coRestitution:Hx,rawcolliderset_coRestitutionCombineRule:Kx,rawcolliderset_coRotation:UT,rawcolliderset_coRoundRadius:sx,rawcolliderset_coSetActiveCollisionTypes:nS,rawcolliderset_coSetActiveEvents:tS,rawcolliderset_coSetActiveHooks:eS,rawcolliderset_coSetCollisionGroups:_x,rawcolliderset_coSetContactForceEventThreshold:sS,rawcolliderset_coSetContactSkin:xx,rawcolliderset_coSetDensity:rS,rawcolliderset_coSetEnabled:wx,rawcolliderset_coSetFriction:kx,rawcolliderset_coSetFrictionCombineRule:Bx,rawcolliderset_coSetHalfExtents:$T,rawcolliderset_coSetHalfHeight:ix,rawcolliderset_coSetMass:aS,rawcolliderset_coSetMassProperties:oS,rawcolliderset_coSetRadius:tx,rawcolliderset_coSetRestitution:Zx,rawcolliderset_coSetRestitutionCombineRule:Qx,rawcolliderset_coSetRotation:kT,rawcolliderset_coSetRotationWrtParent:JT,rawcolliderset_coSetRoundRadius:rx,rawcolliderset_coSetSensor:qx,rawcolliderset_coSetShape:iS,rawcolliderset_coSetSolverGroups:$x,rawcolliderset_coSetTranslation:qT,rawcolliderset_coSetTranslationWrtParent:ZT,rawcolliderset_coSetVoxel:lx,rawcolliderset_coShapeType:KT,rawcolliderset_coSolverGroups:Ox,rawcolliderset_coTranslation:GT,rawcolliderset_coTriMeshFlags:fx,rawcolliderset_coVertices:ux,rawcolliderset_coVolume:Rx,rawcolliderset_coVoxelData:ax,rawcolliderset_coVoxelSize:ox,rawcolliderset_contains:uS,rawcolliderset_createCollider:pS,rawcolliderset_forEachColliderHandle:hS,rawcolliderset_isHandleValid:BH,rawcolliderset_len:cS,rawcolliderset_new:dS,rawcolliderset_remove:fS,rawcollidershapecasthit_colliderHandle:lL,rawcollidershapecasthit_normal1:ML,rawcollidershapecasthit_normal2:OL,rawcollidershapecasthit_time_of_impact:DP,rawcollidershapecasthit_witness1:WP,rawcollidershapecasthit_witness2:jP,rawcontactforceevent_collider1:bL,rawcontactforceevent_collider2:cH,rawcontactforceevent_max_force_direction:fH,rawcontactforceevent_max_force_magnitude:hH,rawcontactforceevent_total_force:uH,rawcontactforceevent_total_force_magnitude:pH,rawcontactmanifold_contact_dist:IS,rawcontactmanifold_contact_fid1:XS,rawcontactmanifold_contact_fid2:VS,rawcontactmanifold_contact_impulse:FS,rawcontactmanifold_contact_local_p1:zS,rawcontactmanifold_contact_local_p2:AS,rawcontactmanifold_contact_tangent_impulse_x:DS,rawcontactmanifold_contact_tangent_impulse_y:WS,rawcontactmanifold_local_n1:RS,rawcontactmanifold_local_n2:MS,rawcontactmanifold_normal:NS,rawcontactmanifold_num_contacts:CS,rawcontactmanifold_num_solver_contacts:jS,rawcontactmanifold_solver_contact_dist:GS,rawcontactmanifold_solver_contact_friction:US,rawcontactmanifold_solver_contact_point:YS,rawcontactmanifold_solver_contact_restitution:qS,rawcontactmanifold_solver_contact_tangent_velocity:ZS,rawcontactmanifold_subshape1:OS,rawcontactmanifold_subshape2:ES,rawcontactpair_collider1:SS,rawcontactpair_collider2:PS,rawcontactpair_contactManifold:LS,rawcontactpair_numContactManifolds:HS,rawdebugrenderpipeline_colors:aH,rawdebugrenderpipeline_new:sH,rawdebugrenderpipeline_render:oH,rawdebugrenderpipeline_vertices:rH,rawdeserializedworld_takeBodies:jH,rawdeserializedworld_takeBroadPhase:DH,rawdeserializedworld_takeColliders:YH,rawdeserializedworld_takeGravity:XH,rawdeserializedworld_takeImpulseJoints:GH,rawdeserializedworld_takeIntegrationParameters:VH,rawdeserializedworld_takeIslandManager:FH,rawdeserializedworld_takeMultibodyJoints:UH,rawdeserializedworld_takeNarrowPhase:WH,rawdynamicraycastvehiclecontroller_add_wheel:lv,rawdynamicraycastvehiclecontroller_chassis:iv,rawdynamicraycastvehiclecontroller_current_vehicle_speed:nv,rawdynamicraycastvehiclecontroller_index_forward_axis:av,rawdynamicraycastvehiclecontroller_index_up_axis:sv,rawdynamicraycastvehiclecontroller_new:tv,rawdynamicraycastvehiclecontroller_num_wheels:dv,rawdynamicraycastvehiclecontroller_set_index_forward_axis:ov,rawdynamicraycastvehiclecontroller_set_index_up_axis:rv,rawdynamicraycastvehiclecontroller_set_wheel_axle_cs:Xv,rawdynamicraycastvehiclecontroller_set_wheel_brake:Rv,rawdynamicraycastvehiclecontroller_set_wheel_chassis_connection_point_cs:pv,rawdynamicraycastvehiclecontroller_set_wheel_direction_cs:Av,rawdynamicraycastvehiclecontroller_set_wheel_engine_force:Cv,rawdynamicraycastvehiclecontroller_set_wheel_friction_slip:Fv,rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_force:Lv,rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_travel:bv,rawdynamicraycastvehiclecontroller_set_wheel_radius:vv,rawdynamicraycastvehiclecontroller_set_wheel_side_friction_stiffness:Wv,rawdynamicraycastvehiclecontroller_set_wheel_steering:Ov,rawdynamicraycastvehiclecontroller_set_wheel_suspension_compression:xv,rawdynamicraycastvehiclecontroller_set_wheel_suspension_relaxation:Pv,rawdynamicraycastvehiclecontroller_set_wheel_suspension_rest_length:hv,rawdynamicraycastvehiclecontroller_set_wheel_suspension_stiffness:wv,rawdynamicraycastvehiclecontroller_update_vehicle:cv,rawdynamicraycastvehiclecontroller_wheel_axle_cs:Iv,rawdynamicraycastvehiclecontroller_wheel_brake:Nv,rawdynamicraycastvehiclecontroller_wheel_chassis_connection_point_cs:uv,rawdynamicraycastvehiclecontroller_wheel_contact_normal_ws:qv,rawdynamicraycastvehiclecontroller_wheel_contact_point_ws:Zv,rawdynamicraycastvehiclecontroller_wheel_direction_cs:zv,rawdynamicraycastvehiclecontroller_wheel_engine_force:Ev,rawdynamicraycastvehiclecontroller_wheel_forward_impulse:Yv,rawdynamicraycastvehiclecontroller_wheel_friction_slip:Vv,rawdynamicraycastvehiclecontroller_wheel_ground_object:Kv,rawdynamicraycastvehiclecontroller_wheel_hard_point_ws:Jv,rawdynamicraycastvehiclecontroller_wheel_is_in_contact:Bv,rawdynamicraycastvehiclecontroller_wheel_max_suspension_force:Hv,rawdynamicraycastvehiclecontroller_wheel_max_suspension_travel:mv,rawdynamicraycastvehiclecontroller_wheel_radius:yv,rawdynamicraycastvehiclecontroller_wheel_rotation:jv,rawdynamicraycastvehiclecontroller_wheel_side_friction_stiffness:Dv,rawdynamicraycastvehiclecontroller_wheel_side_impulse:Gv,rawdynamicraycastvehiclecontroller_wheel_steering:Mv,rawdynamicraycastvehiclecontroller_wheel_suspension_compression:Tv,rawdynamicraycastvehiclecontroller_wheel_suspension_force:Uv,rawdynamicraycastvehiclecontroller_wheel_suspension_length:kv,rawdynamicraycastvehiclecontroller_wheel_suspension_relaxation:Sv,rawdynamicraycastvehiclecontroller_wheel_suspension_rest_length:fv,rawdynamicraycastvehiclecontroller_wheel_suspension_stiffness:gv,raweventqueue_clear:vH,raweventqueue_drainCollisionEvents:bH,raweventqueue_drainContactForceEvents:yH,raweventqueue_new:mH,rawgenericjoint_fixed:ew,rawgenericjoint_generic:Bg,rawgenericjoint_prismatic:$g,rawgenericjoint_revolute:tw,rawgenericjoint_rope:Qg,rawgenericjoint_spherical:_g,rawgenericjoint_spring:Kg,rawimpulsejointset_contains:Sg,rawimpulsejointset_createJoint:wg,rawimpulsejointset_forEachJointAttachedToRigidBody:Hg,rawimpulsejointset_forEachJointHandle:Pg,rawimpulsejointset_jointAnchor1:sg,rawimpulsejointset_jointAnchor2:rg,rawimpulsejointset_jointBodyHandle1:eg,rawimpulsejointset_jointBodyHandle2:tg,rawimpulsejointset_jointConfigureMotor:yg,rawimpulsejointset_jointConfigureMotorModel:hg,rawimpulsejointset_jointConfigureMotorPosition:bg,rawimpulsejointset_jointConfigureMotorVelocity:mg,rawimpulsejointset_jointContactsEnabled:lg,rawimpulsejointset_jointFrameX1:ng,rawimpulsejointset_jointFrameX2:ig,rawimpulsejointset_jointLimitsEnabled:cg,rawimpulsejointset_jointLimitsMax:pg,rawimpulsejointset_jointLimitsMin:ug,rawimpulsejointset_jointSetAnchor1:ag,rawimpulsejointset_jointSetAnchor2:og,rawimpulsejointset_jointSetContactsEnabled:dg,rawimpulsejointset_jointSetLimits:fg,rawimpulsejointset_jointType:$v,rawimpulsejointset_len:xg,rawimpulsejointset_new:gg,rawimpulsejointset_remove:Tg,rawintegrationparameters_contact_erp:Mg,rawintegrationparameters_dt:Rg,rawintegrationparameters_lengthUnit:zg,rawintegrationparameters_maxCcdSubsteps:Cg,rawintegrationparameters_minIslandSize:Eg,rawintegrationparameters_new:Ng,rawintegrationparameters_normalizedAllowedLinearError:QH,rawintegrationparameters_normalizedPredictionDistance:yL,rawintegrationparameters_numAdditionalFrictionIterations:_H,rawintegrationparameters_numInternalPgsIterations:$H,rawintegrationparameters_numSolverIterations:Og,rawintegrationparameters_set_contact_natural_frequency:Ig,rawintegrationparameters_set_dt:Ag,rawintegrationparameters_set_lengthUnit:jg,rawintegrationparameters_set_maxCcdSubsteps:Wg,rawintegrationparameters_set_minIslandSize:Dg,rawintegrationparameters_set_normalizedAllowedLinearError:Xg,rawintegrationparameters_set_normalizedPredictionDistance:Vg,rawintegrationparameters_set_numAdditionalFrictionIterations:CL,rawintegrationparameters_set_numInternalPgsIterations:zL,rawintegrationparameters_set_numSolverIterations:Fg,rawintegrationparameters_switchToSmallStepsPgsSolver:Gg,rawintegrationparameters_switchToSmallStepsPgsSolverWithoutWarmstart:Ug,rawintegrationparameters_switchToStandardPgsSolver:Yg,rawislandmanager_forEachActiveRigidBodyHandle:kg,rawislandmanager_new:Zg,rawkinematiccharactercontroller_autostepEnabled:yy,rawkinematiccharactercontroller_autostepIncludesDynamicBodies:by,rawkinematiccharactercontroller_autostepMaxHeight:hy,rawkinematiccharactercontroller_autostepMinWidth:my,rawkinematiccharactercontroller_computeColliderMovement:Ry,rawkinematiccharactercontroller_computedCollision:Cy,rawkinematiccharactercontroller_computedGrounded:Oy,rawkinematiccharactercontroller_computedMovement:My,rawkinematiccharactercontroller_disableAutostep:gy,rawkinematiccharactercontroller_disableSnapToGround:Ly,rawkinematiccharactercontroller_enableAutostep:vy,rawkinematiccharactercontroller_enableSnapToGround:Hy,rawkinematiccharactercontroller_maxSlopeClimbAngle:wy,rawkinematiccharactercontroller_minSlopeSlideAngle:xy,rawkinematiccharactercontroller_new:oy,rawkinematiccharactercontroller_normalNudgeFactor:dy,rawkinematiccharactercontroller_numComputedCollisions:Ey,rawkinematiccharactercontroller_offset:KH,rawkinematiccharactercontroller_setMaxSlopeClimbAngle:Ty,rawkinematiccharactercontroller_setMinSlopeSlideAngle:Sy,rawkinematiccharactercontroller_setNormalNudgeFactor:cy,rawkinematiccharactercontroller_setOffset:uy,rawkinematiccharactercontroller_setSlideEnabled:fy,rawkinematiccharactercontroller_setUp:ly,rawkinematiccharactercontroller_slideEnabled:py,rawkinematiccharactercontroller_snapToGroundDistance:Py,rawkinematiccharactercontroller_snapToGroundEnabled:Ny,rawkinematiccharactercontroller_up:xL,rawmultibodyjointset_contains:bw,rawmultibodyjointset_createJoint:hw,rawmultibodyjointset_forEachJointAttachedToRigidBody:vw,rawmultibodyjointset_forEachJointHandle:yw,rawmultibodyjointset_jointAnchor1:rw,rawmultibodyjointset_jointAnchor2:aw,rawmultibodyjointset_jointContactsEnabled:ow,rawmultibodyjointset_jointFrameX1:iw,rawmultibodyjointset_jointFrameX2:sw,rawmultibodyjointset_jointLimitsEnabled:dw,rawmultibodyjointset_jointLimitsMax:uw,rawmultibodyjointset_jointLimitsMin:cw,rawmultibodyjointset_jointSetContactsEnabled:lw,rawmultibodyjointset_jointType:nw,rawmultibodyjointset_new:fw,rawmultibodyjointset_remove:mw,rawnarrowphase_contact_pair:gS,rawnarrowphase_contact_pairs_with:vS,rawnarrowphase_intersection_pair:TS,rawnarrowphase_intersection_pairs_with:wS,rawnarrowphase_new:yS,rawphysicspipeline_new:wH,rawphysicspipeline_step:TH,rawphysicspipeline_stepWithEvents:xH,rawpidcontroller_angular_correction:$y,rawpidcontroller_apply_angular_correction:Qy,rawpidcontroller_apply_linear_correction:Ky,rawpidcontroller_linear_correction:_y,rawpidcontroller_new:Uy,rawpidcontroller_reset_integrals:By,rawpidcontroller_set_axes_mask:Jy,rawpidcontroller_set_kd:ky,rawpidcontroller_set_ki:Zy,rawpidcontroller_set_kp:qy,rawpointcolliderprojection_colliderHandle:QS,rawpointcolliderprojection_featureId:tP,rawpointcolliderprojection_featureType:eP,rawpointcolliderprojection_isInside:$S,rawpointcolliderprojection_point:_S,rawpointprojection_isInside:BS,rawpointprojection_point:JS,rawquerypipeline_castRay:HH,rawquerypipeline_castRayAndGetNormal:LH,rawquerypipeline_castShape:CH,rawquerypipeline_collidersWithAabbIntersectingAabb:AH,rawquerypipeline_intersectionWithShape:RH,rawquerypipeline_intersectionsWithPoint:EH,rawquerypipeline_intersectionsWithRay:NH,rawquerypipeline_intersectionsWithShape:zH,rawquerypipeline_new:SH,rawquerypipeline_projectPoint:MH,rawquerypipeline_projectPointAndGetFeature:OH,rawquerypipeline_update:PH,rawraycolliderhit_colliderHandle:aL,rawraycolliderhit_timeOfImpact:dL,rawraycolliderintersection_colliderHandle:iL,rawraycolliderintersection_featureId:TL,rawraycolliderintersection_featureType:rL,rawraycolliderintersection_normal:NL,rawraycolliderintersection_time_of_impact:oL,rawrayintersection_featureId:wL,rawrayintersection_featureType:nL,rawrayintersection_normal:LL,rawrayintersection_time_of_impact:sL,rawrigidbodyset_contains:FT,rawrigidbodyset_createRigidBody:XT,rawrigidbodyset_forEachRigidBodyHandle:DT,rawrigidbodyset_len:eL,rawrigidbodyset_new:IT,rawrigidbodyset_propagateModifiedBodyPositionsToColliders:WT,rawrigidbodyset_rbAddForce:xT,rawrigidbodyset_rbAddForceAtPoint:LT,rawrigidbodyset_rbAddTorque:PT,rawrigidbodyset_rbAdditionalSolverIterations:RT,rawrigidbodyset_rbAngularDamping:fT,rawrigidbodyset_rbAngvel:Xw,rawrigidbodyset_rbApplyImpulse:ST,rawrigidbodyset_rbApplyImpulseAtPoint:NT,rawrigidbodyset_rbApplyTorqueImpulse:HT,rawrigidbodyset_rbBodyType:oT,rawrigidbodyset_rbCollider:aT,rawrigidbodyset_rbDominanceGroup:Yw,rawrigidbodyset_rbEffectiveAngularInertia:tT,rawrigidbodyset_rbEffectiveInvMass:Jw,rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt:eT,rawrigidbodyset_rbEnableCcd:Uw,rawrigidbodyset_rbGravityScale:vT,rawrigidbodyset_rbInvMass:kw,rawrigidbodyset_rbInvPrincipalInertiaSqrt:Qw,rawrigidbodyset_rbIsCcdEnabled:iT,rawrigidbodyset_rbIsDynamic:uT,rawrigidbodyset_rbIsEnabled:yT,rawrigidbodyset_rbIsFixed:dT,rawrigidbodyset_rbIsKinematic:cT,rawrigidbodyset_rbIsMoving:Sw,rawrigidbodyset_rbIsSleeping:xw,rawrigidbodyset_rbLinearDamping:pT,rawrigidbodyset_rbLinvel:Iw,rawrigidbodyset_rbLocalCom:Bw,rawrigidbodyset_rbLockRotations:Ww,rawrigidbodyset_rbLockTranslations:Fw,rawrigidbodyset_rbMass:Zw,rawrigidbodyset_rbNextRotation:Hw,rawrigidbodyset_rbNextTranslation:Pw,rawrigidbodyset_rbNumColliders:rT,rawrigidbodyset_rbPrincipalInertia:$w,rawrigidbodyset_rbPrincipalInertiaLocalFrame:_w,rawrigidbodyset_rbRecomputeMassPropertiesFromColliders:Cw,rawrigidbodyset_rbResetForces:wT,rawrigidbodyset_rbResetTorques:TT,rawrigidbodyset_rbRotation:ww,rawrigidbodyset_rbSetAdditionalMass:zw,rawrigidbodyset_rbSetAdditionalMassProperties:Aw,rawrigidbodyset_rbSetAdditionalSolverIterations:MT,rawrigidbodyset_rbSetAngularDamping:mT,rawrigidbodyset_rbSetAngvel:Mw,rawrigidbodyset_rbSetBodyType:lT,rawrigidbodyset_rbSetDominanceGroup:Gw,rawrigidbodyset_rbSetEnabled:bT,rawrigidbodyset_rbSetEnabledRotations:jw,rawrigidbodyset_rbSetEnabledTranslations:Dw,rawrigidbodyset_rbSetGravityScale:gT,rawrigidbodyset_rbSetLinearDamping:hT,rawrigidbodyset_rbSetLinvel:Rw,rawrigidbodyset_rbSetNextKinematicRotation:Ew,rawrigidbodyset_rbSetNextKinematicTranslation:Ow,rawrigidbodyset_rbSetRotation:Nw,rawrigidbodyset_rbSetSoftCcdPrediction:qw,rawrigidbodyset_rbSetTranslation:Lw,rawrigidbodyset_rbSetUserData:ET,rawrigidbodyset_rbSleep:Tw,rawrigidbodyset_rbSoftCcdPrediction:sT,rawrigidbodyset_rbTranslation:gw,rawrigidbodyset_rbUserData:OT,rawrigidbodyset_rbUserForce:CT,rawrigidbodyset_rbUserTorque:zT,rawrigidbodyset_rbVelocityAtPoint:Vw,rawrigidbodyset_rbWakeUp:nT,rawrigidbodyset_rbWorldCom:Kw,rawrigidbodyset_remove:VT,rawrotation_identity:GP,rawrotation_new:YP,rawrotation_w:qP,rawrotation_x:UP,rawrotation_y:uL,rawrotation_z:pL,rawsdpmatrix3_elements:nH,rawserializationpipeline_deserializeAll:JH,rawserializationpipeline_new:ZH,rawserializationpipeline_serializeAll:kH,rawshape_ball:oP,rawshape_capsule:dP,rawshape_castRay:CP,rawshape_castRayAndGetNormal:zP,rawshape_castShape:LP,rawshape_cone:pP,rawshape_contactShape:RP,rawshape_containsPoint:MP,rawshape_convexHull:xP,rawshape_convexMesh:PP,rawshape_cuboid:rP,rawshape_cylinder:cP,rawshape_halfspace:lP,rawshape_heightfield:vP,rawshape_intersectsRay:EP,rawshape_intersectsShape:NP,rawshape_polyline:bP,rawshape_projectPoint:OP,rawshape_roundCone:fP,rawshape_roundConvexHull:SP,rawshape_roundConvexMesh:HP,rawshape_roundCuboid:aP,rawshape_roundCylinder:uP,rawshape_roundTriangle:TP,rawshape_segment:gP,rawshape_triangle:wP,rawshape_trimesh:yP,rawshape_voxels:hP,rawshape_voxelsFromPoints:mP,rawshapecasthit_normal1:XP,rawshapecasthit_normal2:VP,rawshapecasthit_time_of_impact:cL,rawshapecasthit_witness1:IP,rawshapecasthit_witness2:EL,rawshapecontact_distance:tL,rawshapecontact_normal1:RL,rawshapecontact_normal2:SL,rawshapecontact_point1:PL,rawshapecontact_point2:HL,rawvector_new:kP,rawvector_set_x:JP,rawvector_set_y:AL,rawvector_set_z:BP,rawvector_x:fL,rawvector_xyz:KP,rawvector_xzy:$P,rawvector_y:hL,rawvector_yxz:QP,rawvector_yzx:eH,rawvector_z:mL,rawvector_zero:ZP,rawvector_zxy:_P,rawvector_zyx:tH,reserve_memory:vL,version:ry},Symbol.toStringTag,{value:"Module"}));Tb(UL);class qL{constructor(e,t,n){this.x=e,this.y=t,this.z=n}}class Z{static new(e,t,n){return new qL(e,t,n)}static intoRaw(e){return new Y(e.x,e.y,e.z)}static zeros(){return Z.new(0,0,0)}static fromRaw(e){if(!e)return null;let t=Z.new(e.x,e.y,e.z);return e.free(),t}static copy(e,t){e.x=t.x,e.y=t.y,e.z=t.z}}class m9{constructor(e,t,n,s){this.x=e,this.y=t,this.z=n,this.w=s}}class ae{static identity(){return new m9(0,0,0,1)}static fromRaw(e){if(!e)return null;let t=new m9(e.x,e.y,e.z,e.w);return e.free(),t}static intoRaw(e){return new ce(e.x,e.y,e.z,e.w)}static copy(e,t){e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w}}class ZL{get m11(){return this.elements[0]}get m12(){return this.elements[1]}get m21(){return this.m12}get m13(){return this.elements[2]}get m31(){return this.m13}get m22(){return this.elements[3]}get m23(){return this.elements[4]}get m32(){return this.m23}get m33(){return this.elements[5]}constructor(e){this.elements=e}}class b9{static fromRaw(e){const t=new ZL(e.elements());return e.free(),t}}var yn;(function(i){i[i.Dynamic=0]="Dynamic",i[i.Fixed=1]="Fixed",i[i.KinematicPositionBased=2]="KinematicPositionBased",i[i.KinematicVelocityBased=3]="KinematicVelocityBased"})(yn||(yn={}));class y9{constructor(e,t,n){this.rawSet=e,this.colliderSet=t,this.handle=n}finalizeDeserialization(e){this.colliderSet=e}isValid(){return this.rawSet.contains(this.handle)}lockTranslations(e,t){return this.rawSet.rbLockTranslations(this.handle,e,t)}lockRotations(e,t){return this.rawSet.rbLockRotations(this.handle,e,t)}setEnabledTranslations(e,t,n,s){return this.rawSet.rbSetEnabledTranslations(this.handle,e,t,n,s)}restrictTranslations(e,t,n,s){this.setEnabledTranslations(e,t,n,s)}setEnabledRotations(e,t,n,s){return this.rawSet.rbSetEnabledRotations(this.handle,e,t,n,s)}restrictRotations(e,t,n,s){this.setEnabledRotations(e,t,n,s)}dominanceGroup(){return this.rawSet.rbDominanceGroup(this.handle)}setDominanceGroup(e){this.rawSet.rbSetDominanceGroup(this.handle,e)}additionalSolverIterations(){return this.rawSet.rbAdditionalSolverIterations(this.handle)}setAdditionalSolverIterations(e){this.rawSet.rbSetAdditionalSolverIterations(this.handle,e)}enableCcd(e){this.rawSet.rbEnableCcd(this.handle,e)}setSoftCcdPrediction(e){this.rawSet.rbSetSoftCcdPrediction(this.handle,e)}softCcdPrediction(){return this.rawSet.rbSoftCcdPrediction(this.handle)}translation(){let e=this.rawSet.rbTranslation(this.handle);return Z.fromRaw(e)}rotation(){let e=this.rawSet.rbRotation(this.handle);return ae.fromRaw(e)}nextTranslation(){let e=this.rawSet.rbNextTranslation(this.handle);return Z.fromRaw(e)}nextRotation(){let e=this.rawSet.rbNextRotation(this.handle);return ae.fromRaw(e)}setTranslation(e,t){this.rawSet.rbSetTranslation(this.handle,e.x,e.y,e.z,t)}setLinvel(e,t){let n=Z.intoRaw(e);this.rawSet.rbSetLinvel(this.handle,n,t),n.free()}gravityScale(){return this.rawSet.rbGravityScale(this.handle)}setGravityScale(e,t){this.rawSet.rbSetGravityScale(this.handle,e,t)}setRotation(e,t){this.rawSet.rbSetRotation(this.handle,e.x,e.y,e.z,e.w,t)}setAngvel(e,t){let n=Z.intoRaw(e);this.rawSet.rbSetAngvel(this.handle,n,t),n.free()}setNextKinematicTranslation(e){this.rawSet.rbSetNextKinematicTranslation(this.handle,e.x,e.y,e.z)}setNextKinematicRotation(e){this.rawSet.rbSetNextKinematicRotation(this.handle,e.x,e.y,e.z,e.w)}linvel(){return Z.fromRaw(this.rawSet.rbLinvel(this.handle))}velocityAtPoint(e){const t=Z.intoRaw(e);let n=Z.fromRaw(this.rawSet.rbVelocityAtPoint(this.handle,t));return t.free(),n}angvel(){return Z.fromRaw(this.rawSet.rbAngvel(this.handle))}mass(){return this.rawSet.rbMass(this.handle)}effectiveInvMass(){return Z.fromRaw(this.rawSet.rbEffectiveInvMass(this.handle))}invMass(){return this.rawSet.rbInvMass(this.handle)}localCom(){return Z.fromRaw(this.rawSet.rbLocalCom(this.handle))}worldCom(){return Z.fromRaw(this.rawSet.rbWorldCom(this.handle))}invPrincipalInertiaSqrt(){return Z.fromRaw(this.rawSet.rbInvPrincipalInertiaSqrt(this.handle))}principalInertia(){return Z.fromRaw(this.rawSet.rbPrincipalInertia(this.handle))}principalInertiaLocalFrame(){return ae.fromRaw(this.rawSet.rbPrincipalInertiaLocalFrame(this.handle))}effectiveWorldInvInertiaSqrt(){return b9.fromRaw(this.rawSet.rbEffectiveWorldInvInertiaSqrt(this.handle))}effectiveAngularInertia(){return b9.fromRaw(this.rawSet.rbEffectiveAngularInertia(this.handle))}sleep(){this.rawSet.rbSleep(this.handle)}wakeUp(){this.rawSet.rbWakeUp(this.handle)}isCcdEnabled(){return this.rawSet.rbIsCcdEnabled(this.handle)}numColliders(){return this.rawSet.rbNumColliders(this.handle)}collider(e){return this.colliderSet.get(this.rawSet.rbCollider(this.handle,e))}setEnabled(e){this.rawSet.rbSetEnabled(this.handle,e)}isEnabled(){return this.rawSet.rbIsEnabled(this.handle)}bodyType(){return this.rawSet.rbBodyType(this.handle)}setBodyType(e,t){return this.rawSet.rbSetBodyType(this.handle,e,t)}isSleeping(){return this.rawSet.rbIsSleeping(this.handle)}isMoving(){return this.rawSet.rbIsMoving(this.handle)}isFixed(){return this.rawSet.rbIsFixed(this.handle)}isKinematic(){return this.rawSet.rbIsKinematic(this.handle)}isDynamic(){return this.rawSet.rbIsDynamic(this.handle)}linearDamping(){return this.rawSet.rbLinearDamping(this.handle)}angularDamping(){return this.rawSet.rbAngularDamping(this.handle)}setLinearDamping(e){this.rawSet.rbSetLinearDamping(this.handle,e)}recomputeMassPropertiesFromColliders(){this.rawSet.rbRecomputeMassPropertiesFromColliders(this.handle,this.colliderSet.raw)}setAdditionalMass(e,t){this.rawSet.rbSetAdditionalMass(this.handle,e,t)}setAdditionalMassProperties(e,t,n,s,r){let a=Z.intoRaw(t),o=Z.intoRaw(n),l=ae.intoRaw(s);this.rawSet.rbSetAdditionalMassProperties(this.handle,e,a,o,l,r),a.free(),o.free(),l.free()}setAngularDamping(e){this.rawSet.rbSetAngularDamping(this.handle,e)}resetForces(e){this.rawSet.rbResetForces(this.handle,e)}resetTorques(e){this.rawSet.rbResetTorques(this.handle,e)}addForce(e,t){const n=Z.intoRaw(e);this.rawSet.rbAddForce(this.handle,n,t),n.free()}applyImpulse(e,t){const n=Z.intoRaw(e);this.rawSet.rbApplyImpulse(this.handle,n,t),n.free()}addTorque(e,t){const n=Z.intoRaw(e);this.rawSet.rbAddTorque(this.handle,n,t),n.free()}applyTorqueImpulse(e,t){const n=Z.intoRaw(e);this.rawSet.rbApplyTorqueImpulse(this.handle,n,t),n.free()}addForceAtPoint(e,t,n){const s=Z.intoRaw(e),r=Z.intoRaw(t);this.rawSet.rbAddForceAtPoint(this.handle,s,r,n),s.free(),r.free()}applyImpulseAtPoint(e,t,n){const s=Z.intoRaw(e),r=Z.intoRaw(t);this.rawSet.rbApplyImpulseAtPoint(this.handle,s,r,n),s.free(),r.free()}userForce(){return Z.fromRaw(this.rawSet.rbUserForce(this.handle))}userTorque(){return Z.fromRaw(this.rawSet.rbUserTorque(this.handle))}}class Kt{constructor(e){this.enabled=!0,this.status=e,this.translation=Z.zeros(),this.rotation=ae.identity(),this.gravityScale=1,this.linvel=Z.zeros(),this.mass=0,this.massOnly=!1,this.centerOfMass=Z.zeros(),this.translationsEnabledX=!0,this.translationsEnabledY=!0,this.angvel=Z.zeros(),this.principalAngularInertia=Z.zeros(),this.angularInertiaLocalFrame=ae.identity(),this.translationsEnabledZ=!0,this.rotationsEnabledX=!0,this.rotationsEnabledY=!0,this.rotationsEnabledZ=!0,this.linearDamping=0,this.angularDamping=0,this.canSleep=!0,this.sleeping=!1,this.ccdEnabled=!1,this.softCcdPrediction=0,this.dominanceGroup=0,this.additionalSolverIterations=0}static dynamic(){return new Kt(yn.Dynamic)}static kinematicPositionBased(){return new Kt(yn.KinematicPositionBased)}static kinematicVelocityBased(){return new Kt(yn.KinematicVelocityBased)}static fixed(){return new Kt(yn.Fixed)}static newDynamic(){return new Kt(yn.Dynamic)}static newKinematicPositionBased(){return new Kt(yn.KinematicPositionBased)}static newKinematicVelocityBased(){return new Kt(yn.KinematicVelocityBased)}static newStatic(){return new Kt(yn.Fixed)}setDominanceGroup(e){return this.dominanceGroup=e,this}setAdditionalSolverIterations(e){return this.additionalSolverIterations=e,this}setEnabled(e){return this.enabled=e,this}setTranslation(e,t,n){if(typeof e!="number"||typeof t!="number"||typeof n!="number")throw TypeError("The translation components must be numbers.");return this.translation={x:e,y:t,z:n},this}setRotation(e){return ae.copy(this.rotation,e),this}setGravityScale(e){return this.gravityScale=e,this}setAdditionalMass(e){return this.mass=e,this.massOnly=!0,this}setLinvel(e,t,n){if(typeof e!="number"||typeof t!="number"||typeof n!="number")throw TypeError("The linvel components must be numbers.");return this.linvel={x:e,y:t,z:n},this}setAngvel(e){return Z.copy(this.angvel,e),this}setAdditionalMassProperties(e,t,n,s){return this.mass=e,Z.copy(this.centerOfMass,t),Z.copy(this.principalAngularInertia,n),ae.copy(this.angularInertiaLocalFrame,s),this.massOnly=!1,this}enabledTranslations(e,t,n){return this.translationsEnabledX=e,this.translationsEnabledY=t,this.translationsEnabledZ=n,this}restrictTranslations(e,t,n){return this.enabledTranslations(e,t,n)}lockTranslations(){return this.enabledTranslations(!1,!1,!1)}enabledRotations(e,t,n){return this.rotationsEnabledX=e,this.rotationsEnabledY=t,this.rotationsEnabledZ=n,this}restrictRotations(e,t,n){return this.enabledRotations(e,t,n)}lockRotations(){return this.restrictRotations(!1,!1,!1)}setLinearDamping(e){return this.linearDamping=e,this}setAngularDamping(e){return this.angularDamping=e,this}setCanSleep(e){return this.canSleep=e,this}setSleeping(e){return this.sleeping=e,this}setCcdEnabled(e){return this.ccdEnabled=e,this}setSoftCcdPrediction(e){return this.softCcdPrediction=e,this}setUserData(e){return this.userData=e,this}}class Rs{constructor(){this.fconv=new Float64Array(1),this.uconv=new Uint32Array(this.fconv.buffer),this.data=new Array,this.size=0}set(e,t){let n=this.index(e);for(;this.data.length<=n;)this.data.push(null);this.data[n]==null&&(this.size+=1),this.data[n]=t}len(){return this.size}delete(e){let t=this.index(e);t<this.data.length&&(this.data[t]!=null&&(this.size-=1),this.data[t]=null)}clear(){this.data=new Array}get(e){let t=this.index(e);return t<this.data.length?this.data[t]:null}forEach(e){for(const t of this.data)t!=null&&e(t)}getAll(){return this.data.filter(e=>e!=null)}index(e){return this.fconv[0]=e,this.uconv[0]}}class kL{free(){this.raw&&this.raw.free(),this.raw=void 0,this.map&&this.map.clear(),this.map=void 0}constructor(e){this.raw=e||new Ye,this.map=new Rs,e&&e.forEachRigidBodyHandle(t=>{this.map.set(t,new y9(e,null,t))})}finalizeDeserialization(e){this.map.forEach(t=>t.finalizeDeserialization(e))}createRigidBody(e,t){let n=Z.intoRaw(t.translation),s=ae.intoRaw(t.rotation),r=Z.intoRaw(t.linvel),a=Z.intoRaw(t.centerOfMass),o=Z.intoRaw(t.angvel),l=Z.intoRaw(t.principalAngularInertia),d=ae.intoRaw(t.angularInertiaLocalFrame),c=this.raw.createRigidBody(t.enabled,n,s,t.gravityScale,t.mass,t.massOnly,a,r,o,l,d,t.translationsEnabledX,t.translationsEnabledY,t.translationsEnabledZ,t.rotationsEnabledX,t.rotationsEnabledY,t.rotationsEnabledZ,t.linearDamping,t.angularDamping,t.status,t.canSleep,t.sleeping,t.softCcdPrediction,t.ccdEnabled,t.dominanceGroup,t.additionalSolverIterations);n.free(),s.free(),r.free(),a.free(),o.free(),l.free(),d.free();const u=new y9(this.raw,e,c);return u.userData=t.userData,this.map.set(c,u),u}remove(e,t,n,s,r){for(let a=0;a<this.raw.rbNumColliders(e);a+=1)n.unmap(this.raw.rbCollider(e,a));s.forEachJointHandleAttachedToRigidBody(e,a=>s.unmap(a)),r.forEachJointHandleAttachedToRigidBody(e,a=>r.unmap(a)),this.raw.remove(e,t.raw,n.raw,s.raw,r.raw),this.map.delete(e)}len(){return this.map.len()}contains(e){return this.get(e)!=null}get(e){return this.map.get(e)}forEach(e){this.map.forEach(e)}forEachActiveRigidBody(e,t){e.forEachActiveRigidBodyHandle(n=>{t(this.get(n))})}getAll(){return this.map.getAll()}}class JL{constructor(e){this.raw=e||new E1}free(){this.raw&&this.raw.free(),this.raw=void 0}get dt(){return this.raw.dt}get contact_erp(){return this.raw.contact_erp}get lengthUnit(){return this.raw.lengthUnit}get normalizedAllowedLinearError(){return this.raw.normalizedAllowedLinearError}get normalizedPredictionDistance(){return this.raw.normalizedPredictionDistance}get numSolverIterations(){return this.raw.numSolverIterations}get numAdditionalFrictionIterations(){return this.raw.numAdditionalFrictionIterations}get numInternalPgsIterations(){return this.raw.numInternalPgsIterations}get minIslandSize(){return this.raw.minIslandSize}get maxCcdSubsteps(){return this.raw.maxCcdSubsteps}set dt(e){this.raw.dt=e}set contact_natural_frequency(e){this.raw.contact_natural_frequency=e}set lengthUnit(e){this.raw.lengthUnit=e}set normalizedAllowedLinearError(e){this.raw.normalizedAllowedLinearError=e}set normalizedPredictionDistance(e){this.raw.normalizedPredictionDistance=e}set numSolverIterations(e){this.raw.numSolverIterations=e}set numAdditionalFrictionIterations(e){this.raw.numAdditionalFrictionIterations=e}set numInternalPgsIterations(e){this.raw.numInternalPgsIterations=e}set minIslandSize(e){this.raw.minIslandSize=e}set maxCcdSubsteps(e){this.raw.maxCcdSubsteps=e}switchToStandardPgsSolver(){this.raw.switchToStandardPgsSolver()}switchToSmallStepsPgsSolver(){this.raw.switchToSmallStepsPgsSolver()}switchToSmallStepsPgsSolverWithoutWarmstart(){this.raw.switchToSmallStepsPgsSolverWithoutWarmstart()}}var Pt;(function(i){i[i.Revolute=0]="Revolute",i[i.Fixed=1]="Fixed",i[i.Prismatic=2]="Prismatic",i[i.Rope=3]="Rope",i[i.Spring=4]="Spring",i[i.Spherical=5]="Spherical",i[i.Generic=6]="Generic"})(Pt||(Pt={}));var v9;(function(i){i[i.AccelerationBased=0]="AccelerationBased",i[i.ForceBased=1]="ForceBased"})(v9||(v9={}));var g9;(function(i){i[i.LinX=1]="LinX",i[i.LinY=2]="LinY",i[i.LinZ=4]="LinZ",i[i.AngX=8]="AngX",i[i.AngY=16]="AngY",i[i.AngZ=32]="AngZ"})(g9||(g9={}));class Sn{constructor(e,t,n){this.rawSet=e,this.bodySet=t,this.handle=n}static newTyped(e,t,n){switch(e.jointType(n)){case ln.Revolute:return new $L(e,t,n);case ln.Prismatic:return new _L(e,t,n);case ln.Fixed:return new BL(e,t,n);case ln.Spring:return new QL(e,t,n);case ln.Rope:return new KL(e,t,n);case ln.Spherical:return new tN(e,t,n);case ln.Generic:return new eN(e,t,n);default:return new Sn(e,t,n)}}finalizeDeserialization(e){this.bodySet=e}isValid(){return this.rawSet.contains(this.handle)}body1(){return this.bodySet.get(this.rawSet.jointBodyHandle1(this.handle))}body2(){return this.bodySet.get(this.rawSet.jointBodyHandle2(this.handle))}type(){return this.rawSet.jointType(this.handle)}frameX1(){return ae.fromRaw(this.rawSet.jointFrameX1(this.handle))}frameX2(){return ae.fromRaw(this.rawSet.jointFrameX2(this.handle))}anchor1(){return Z.fromRaw(this.rawSet.jointAnchor1(this.handle))}anchor2(){return Z.fromRaw(this.rawSet.jointAnchor2(this.handle))}setAnchor1(e){const t=Z.intoRaw(e);this.rawSet.jointSetAnchor1(this.handle,t),t.free()}setAnchor2(e){const t=Z.intoRaw(e);this.rawSet.jointSetAnchor2(this.handle,t),t.free()}setContactsEnabled(e){this.rawSet.jointSetContactsEnabled(this.handle,e)}contactsEnabled(){return this.rawSet.jointContactsEnabled(this.handle)}}class s8 extends Sn{limitsEnabled(){return this.rawSet.jointLimitsEnabled(this.handle,this.rawAxis())}limitsMin(){return this.rawSet.jointLimitsMin(this.handle,this.rawAxis())}limitsMax(){return this.rawSet.jointLimitsMax(this.handle,this.rawAxis())}setLimits(e,t){this.rawSet.jointSetLimits(this.handle,this.rawAxis(),e,t)}configureMotorModel(e){this.rawSet.jointConfigureMotorModel(this.handle,this.rawAxis(),e)}configureMotorVelocity(e,t){this.rawSet.jointConfigureMotorVelocity(this.handle,this.rawAxis(),e,t)}configureMotorPosition(e,t,n){this.rawSet.jointConfigureMotorPosition(this.handle,this.rawAxis(),e,t,n)}configureMotor(e,t,n,s){this.rawSet.jointConfigureMotor(this.handle,this.rawAxis(),e,t,n,s)}}class BL extends Sn{}class KL extends Sn{}class QL extends Sn{}class _L extends s8{rawAxis(){return xs.LinX}}class $L extends s8{rawAxis(){return xs.AngX}}class eN extends Sn{}class tN extends Sn{}class dn{constructor(){}static fixed(e,t,n,s){let r=new dn;return r.anchor1=e,r.anchor2=n,r.frame1=t,r.frame2=s,r.jointType=Pt.Fixed,r}static spring(e,t,n,s,r){let a=new dn;return a.anchor1=s,a.anchor2=r,a.length=e,a.stiffness=t,a.damping=n,a.jointType=Pt.Spring,a}static rope(e,t,n){let s=new dn;return s.anchor1=t,s.anchor2=n,s.length=e,s.jointType=Pt.Rope,s}static generic(e,t,n,s){let r=new dn;return r.anchor1=e,r.anchor2=t,r.axis=n,r.axesMask=s,r.jointType=Pt.Generic,r}static spherical(e,t){let n=new dn;return n.anchor1=e,n.anchor2=t,n.jointType=Pt.Spherical,n}static prismatic(e,t,n){let s=new dn;return s.anchor1=e,s.anchor2=t,s.axis=n,s.jointType=Pt.Prismatic,s}static revolute(e,t,n){let s=new dn;return s.anchor1=e,s.anchor2=t,s.axis=n,s.jointType=Pt.Revolute,s}intoRaw(){let e=Z.intoRaw(this.anchor1),t=Z.intoRaw(this.anchor2),n,s,r=!1,a=0,o=0;switch(this.jointType){case Pt.Fixed:let l=ae.intoRaw(this.frame1),d=ae.intoRaw(this.frame2);s=mt.fixed(e,l,t,d),l.free(),d.free();break;case Pt.Spring:s=mt.spring(this.length,this.stiffness,this.damping,e,t);break;case Pt.Rope:s=mt.rope(this.length,e,t);break;case Pt.Prismatic:n=Z.intoRaw(this.axis),this.limitsEnabled&&(r=!0,a=this.limits[0],o=this.limits[1]),s=mt.prismatic(e,t,n,r,a,o),n.free();break;case Pt.Generic:n=Z.intoRaw(this.axis);let c=this.axesMask;s=mt.generic(e,t,n,c);break;case Pt.Spherical:s=mt.spherical(e,t);break;case Pt.Revolute:n=Z.intoRaw(this.axis),s=mt.revolute(e,t,n),n.free();break}return e.free(),t.free(),s}}class nN{free(){this.raw&&this.raw.free(),this.raw=void 0,this.map&&this.map.clear(),this.map=void 0}constructor(e){this.raw=e||new qn,this.map=new Rs,e&&e.forEachJointHandle(t=>{this.map.set(t,Sn.newTyped(e,null,t))})}finalizeDeserialization(e){this.map.forEach(t=>t.finalizeDeserialization(e))}createJoint(e,t,n,s,r){const a=t.intoRaw(),o=this.raw.createJoint(a,n,s,r);a.free();let l=Sn.newTyped(this.raw,e,o);return this.map.set(o,l),l}remove(e,t){this.raw.remove(e,t),this.unmap(e)}forEachJointHandleAttachedToRigidBody(e,t){this.raw.forEachJointAttachedToRigidBody(e,t)}unmap(e){this.map.delete(e)}len(){return this.map.len()}contains(e){return this.get(e)!=null}get(e){return this.map.get(e)}forEach(e){this.map.forEach(e)}getAll(){return this.map.getAll()}}class C1{constructor(e,t){this.rawSet=e,this.handle=t}static newTyped(e,t){switch(e.jointType(t)){case ln.Revolute:return new rN(e,t);case ln.Prismatic:return new sN(e,t);case ln.Fixed:return new iN(e,t);case ln.Spherical:return new aN(e,t);default:return new C1(e,t)}}isValid(){return this.rawSet.contains(this.handle)}setContactsEnabled(e){this.rawSet.jointSetContactsEnabled(this.handle,e)}contactsEnabled(){return this.rawSet.jointContactsEnabled(this.handle)}}class r8 extends C1{}class iN extends C1{}class sN extends r8{rawAxis(){return xs.LinX}}class rN extends r8{rawAxis(){return xs.AngX}}class aN extends C1{}class oN{free(){this.raw&&this.raw.free(),this.raw=void 0,this.map&&this.map.clear(),this.map=void 0}constructor(e){this.raw=e||new kn,this.map=new Rs,e&&e.forEachJointHandle(t=>{this.map.set(t,C1.newTyped(this.raw,t))})}createJoint(e,t,n,s){const r=e.intoRaw(),a=this.raw.createJoint(r,t,n,s);r.free();let o=C1.newTyped(this.raw,a);return this.map.set(a,o),o}remove(e,t){this.raw.remove(e,t),this.map.delete(e)}unmap(e){this.map.delete(e)}len(){return this.map.len()}contains(e){return this.get(e)!=null}get(e){return this.map.get(e)}forEach(e){this.map.forEach(e)}forEachJointHandleAttachedToRigidBody(e,t){this.raw.forEachJointAttachedToRigidBody(e,t)}getAll(){return this.map.getAll()}}var k3;(function(i){i[i.Average=0]="Average",i[i.Min=1]="Min",i[i.Multiply=2]="Multiply",i[i.Max=3]="Max"})(k3||(k3={}));class lN{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(e){this.raw=e||new t7}}class dN{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(e){this.raw=e||new Zn}forEachActiveRigidBodyHandle(e){this.raw.forEachActiveRigidBodyHandle(e)}}class cN{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(e){this.raw=e||new O1}}class uN{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(e){this.raw=e||new f1,this.tempManifold=new pN(null)}contactPairsWith(e,t){this.raw.contact_pairs_with(e,t)}intersectionPairsWith(e,t){this.raw.intersection_pairs_with(e,t)}contactPair(e,t,n){const s=this.raw.contact_pair(e,t);if(s){const r=s.collider1()!=e;let a;for(a=0;a<s.numContactManifolds();++a)this.tempManifold.raw=s.contactManifold(a),this.tempManifold.raw&&n(this.tempManifold,r),this.tempManifold.free();s.free()}}intersectionPair(e,t){return this.raw.intersection_pair(e,t)}}class pN{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(e){this.raw=e}normal(){return Z.fromRaw(this.raw.normal())}localNormal1(){return Z.fromRaw(this.raw.local_n1())}localNormal2(){return Z.fromRaw(this.raw.local_n2())}subshape1(){return this.raw.subshape1()}subshape2(){return this.raw.subshape2()}numContacts(){return this.raw.num_contacts()}localContactPoint1(e){return Z.fromRaw(this.raw.contact_local_p1(e))}localContactPoint2(e){return Z.fromRaw(this.raw.contact_local_p2(e))}contactDist(e){return this.raw.contact_dist(e)}contactFid1(e){return this.raw.contact_fid1(e)}contactFid2(e){return this.raw.contact_fid2(e)}contactImpulse(e){return this.raw.contact_impulse(e)}contactTangentImpulseX(e){return this.raw.contact_tangent_impulse_x(e)}contactTangentImpulseY(e){return this.raw.contact_tangent_impulse_y(e)}numSolverContacts(){return this.raw.num_solver_contacts()}solverContactPoint(e){return Z.fromRaw(this.raw.solver_contact_point(e))}solverContactDist(e){return this.raw.solver_contact_dist(e)}solverContactFriction(e){return this.raw.solver_contact_friction(e)}solverContactRestitution(e){return this.raw.solver_contact_restitution(e)}solverContactTangentVelocity(e){return Z.fromRaw(this.raw.solver_contact_tangent_velocity(e))}}class g2{constructor(e,t,n,s,r){this.distance=e,this.point1=t,this.point2=n,this.normal1=s,this.normal2=r}static fromRaw(e){if(!e)return null;const t=new g2(e.distance(),Z.fromRaw(e.point1()),Z.fromRaw(e.point2()),Z.fromRaw(e.normal1()),Z.fromRaw(e.normal2()));return e.free(),t}}var w2;(function(i){i[i.Vertex=0]="Vertex",i[i.Edge=1]="Edge",i[i.Face=2]="Face",i[i.Unknown=3]="Unknown"})(w2||(w2={}));class Ms{constructor(e,t){this.point=e,this.isInside=t}static fromRaw(e){if(!e)return null;const t=new Ms(Z.fromRaw(e.point()),e.isInside());return e.free(),t}}class J3{constructor(e,t,n,s,r){this.featureType=w2.Unknown,this.featureId=void 0,this.collider=e,this.point=t,this.isInside=n,r!==void 0&&(this.featureId=r),s!==void 0&&(this.featureType=s)}static fromRaw(e,t){if(!t)return null;const n=new J3(e.get(t.colliderHandle()),Z.fromRaw(t.point()),t.isInside(),t.featureType(),t.featureId());return t.free(),n}}class Os{constructor(e,t,n,s){this.featureType=w2.Unknown,this.featureId=void 0,this.timeOfImpact=e,this.normal=t,s!==void 0&&(this.featureId=s),n!==void 0&&(this.featureType=n)}static fromRaw(e){if(!e)return null;const t=new Os(e.time_of_impact(),Z.fromRaw(e.normal()),e.featureType(),e.featureId());return e.free(),t}}class B3{constructor(e,t,n,s,r){this.featureType=w2.Unknown,this.featureId=void 0,this.collider=e,this.timeOfImpact=t,this.normal=n,r!==void 0&&(this.featureId=r),s!==void 0&&(this.featureType=s)}static fromRaw(e,t){if(!t)return null;const n=new B3(e.get(t.colliderHandle()),t.time_of_impact(),Z.fromRaw(t.normal()),t.featureType(),t.featureId());return t.free(),n}}class c5{constructor(e,t){this.collider=e,this.timeOfImpact=t}static fromRaw(e,t){if(!t)return null;const n=new c5(e.get(t.colliderHandle()),t.timeOfImpact());return t.free(),n}}class N2{constructor(e,t,n,s,r){this.time_of_impact=e,this.witness1=t,this.witness2=n,this.normal1=s,this.normal2=r}static fromRaw(e,t){if(!t)return null;const n=new N2(t.time_of_impact(),Z.fromRaw(t.witness1()),Z.fromRaw(t.witness2()),Z.fromRaw(t.normal1()),Z.fromRaw(t.normal2()));return t.free(),n}}class Es extends N2{constructor(e,t,n,s,r,a){super(t,n,s,r,a),this.collider=e}static fromRaw(e,t){if(!t)return null;const n=new Es(e.get(t.colliderHandle()),t.time_of_impact(),Z.fromRaw(t.witness1()),Z.fromRaw(t.witness2()),Z.fromRaw(t.normal1()),Z.fromRaw(t.normal2()));return t.free(),n}}class ot{static fromRaw(e,t){const n=e.coShapeType(t);let s,r,a,o,l,d,c;switch(n){case ut.Ball:return new a8(e.coRadius(t));case ut.Cuboid:return s=e.coHalfExtents(t),new o8(s.x,s.y,s.z);case ut.RoundCuboid:return s=e.coHalfExtents(t),r=e.coRoundRadius(t),new l8(s.x,s.y,s.z,r);case ut.Capsule:return l=e.coHalfHeight(t),d=e.coRadius(t),new d8(l,d);case ut.Segment:return a=e.coVertices(t),new c8(Z.new(a[0],a[1],a[2]),Z.new(a[3],a[4],a[5]));case ut.Polyline:return a=e.coVertices(t),o=e.coIndices(t),new f8(a,o);case ut.Triangle:return a=e.coVertices(t),new u8(Z.new(a[0],a[1],a[2]),Z.new(a[3],a[4],a[5]),Z.new(a[6],a[7],a[8]));case ut.RoundTriangle:return a=e.coVertices(t),r=e.coRoundRadius(t),new p8(Z.new(a[0],a[1],a[2]),Z.new(a[3],a[4],a[5]),Z.new(a[6],a[7],a[8]),r);case ut.HalfSpace:return c=Z.fromRaw(e.coHalfspaceNormal(t)),new fN(c);case ut.Voxels:const u=e.coVoxelData(t),p=e.coVoxelSize(t);return new h8(u,p);case ut.TriMesh:a=e.coVertices(t),o=e.coIndices(t);const h=e.coTriMeshFlags(t);return new m8(a,o,h);case ut.HeightField:const y=e.coHeightfieldScale(t),T=e.coHeightfieldHeights(t),m=e.coHeightfieldNRows(t),f=e.coHeightfieldNCols(t),N=e.coHeightFieldFlags(t);return new b8(m,f,T,y,N);case ut.ConvexPolyhedron:return a=e.coVertices(t),o=e.coIndices(t),new n7(a,o);case ut.RoundConvexPolyhedron:return a=e.coVertices(t),o=e.coIndices(t),r=e.coRoundRadius(t),new i7(a,o,r);case ut.Cylinder:return l=e.coHalfHeight(t),d=e.coRadius(t),new y8(l,d);case ut.RoundCylinder:return l=e.coHalfHeight(t),d=e.coRadius(t),r=e.coRoundRadius(t),new v8(l,d,r);case ut.Cone:return l=e.coHalfHeight(t),d=e.coRadius(t),new g8(l,d);case ut.RoundCone:return l=e.coHalfHeight(t),d=e.coRadius(t),r=e.coRoundRadius(t),new w8(l,d,r);default:throw new Error("unknown shape type: "+n)}}castShape(e,t,n,s,r,a,o,l,d,c){let u=Z.intoRaw(e),p=ae.intoRaw(t),h=Z.intoRaw(n),y=Z.intoRaw(r),T=ae.intoRaw(a),m=Z.intoRaw(o),f=this.intoRaw(),N=s.intoRaw(),M=N2.fromRaw(null,f.castShape(u,p,h,N,y,T,m,l,d,c));return u.free(),p.free(),h.free(),y.free(),T.free(),m.free(),f.free(),N.free(),M}intersectsShape(e,t,n,s,r){let a=Z.intoRaw(e),o=ae.intoRaw(t),l=Z.intoRaw(s),d=ae.intoRaw(r),c=this.intoRaw(),u=n.intoRaw(),p=c.intersectsShape(a,o,u,l,d);return a.free(),o.free(),l.free(),d.free(),c.free(),u.free(),p}contactShape(e,t,n,s,r,a){let o=Z.intoRaw(e),l=ae.intoRaw(t),d=Z.intoRaw(s),c=ae.intoRaw(r),u=this.intoRaw(),p=n.intoRaw(),h=g2.fromRaw(u.contactShape(o,l,p,d,c,a));return o.free(),l.free(),d.free(),c.free(),u.free(),p.free(),h}containsPoint(e,t,n){let s=Z.intoRaw(e),r=ae.intoRaw(t),a=Z.intoRaw(n),o=this.intoRaw(),l=o.containsPoint(s,r,a);return s.free(),r.free(),a.free(),o.free(),l}projectPoint(e,t,n,s){let r=Z.intoRaw(e),a=ae.intoRaw(t),o=Z.intoRaw(n),l=this.intoRaw(),d=Ms.fromRaw(l.projectPoint(r,a,o,s));return r.free(),a.free(),o.free(),l.free(),d}intersectsRay(e,t,n,s){let r=Z.intoRaw(t),a=ae.intoRaw(n),o=Z.intoRaw(e.origin),l=Z.intoRaw(e.dir),d=this.intoRaw(),c=d.intersectsRay(r,a,o,l,s);return r.free(),a.free(),o.free(),l.free(),d.free(),c}castRay(e,t,n,s,r){let a=Z.intoRaw(t),o=ae.intoRaw(n),l=Z.intoRaw(e.origin),d=Z.intoRaw(e.dir),c=this.intoRaw(),u=c.castRay(a,o,l,d,s,r);return a.free(),o.free(),l.free(),d.free(),c.free(),u}castRayAndGetNormal(e,t,n,s,r){let a=Z.intoRaw(t),o=ae.intoRaw(n),l=Z.intoRaw(e.origin),d=Z.intoRaw(e.dir),c=this.intoRaw(),u=Os.fromRaw(c.castRayAndGetNormal(a,o,l,d,s,r));return a.free(),o.free(),l.free(),d.free(),c.free(),u}}var $e;(function(i){i[i.Ball=0]="Ball",i[i.Cuboid=1]="Cuboid",i[i.Capsule=2]="Capsule",i[i.Segment=3]="Segment",i[i.Polyline=4]="Polyline",i[i.Triangle=5]="Triangle",i[i.TriMesh=6]="TriMesh",i[i.HeightField=7]="HeightField",i[i.ConvexPolyhedron=9]="ConvexPolyhedron",i[i.Cylinder=10]="Cylinder",i[i.Cone=11]="Cone",i[i.RoundCuboid=12]="RoundCuboid",i[i.RoundTriangle=13]="RoundTriangle",i[i.RoundCylinder=14]="RoundCylinder",i[i.RoundCone=15]="RoundCone",i[i.RoundConvexPolyhedron=16]="RoundConvexPolyhedron",i[i.HalfSpace=17]="HalfSpace",i[i.Voxels=18]="Voxels"})($e||($e={}));var w9;(function(i){i[i.FIX_INTERNAL_EDGES=1]="FIX_INTERNAL_EDGES"})(w9||(w9={}));var K3;(function(i){i[i.DELETE_BAD_TOPOLOGY_TRIANGLES=4]="DELETE_BAD_TOPOLOGY_TRIANGLES",i[i.ORIENTED=8]="ORIENTED",i[i.MERGE_DUPLICATE_VERTICES=16]="MERGE_DUPLICATE_VERTICES",i[i.DELETE_DEGENERATE_TRIANGLES=32]="DELETE_DEGENERATE_TRIANGLES",i[i.DELETE_DUPLICATE_TRIANGLES=64]="DELETE_DUPLICATE_TRIANGLES",i[i.FIX_INTERNAL_EDGES=144]="FIX_INTERNAL_EDGES"})(K3||(K3={}));class a8 extends ot{constructor(e){super(),this.type=$e.Ball,this.radius=e}intoRaw(){return Y0.ball(this.radius)}}class fN extends ot{constructor(e){super(),this.type=$e.HalfSpace,this.normal=e}intoRaw(){let e=Z.intoRaw(this.normal),t=Y0.halfspace(e);return e.free(),t}}class o8 extends ot{constructor(e,t,n){super(),this.type=$e.Cuboid,this.halfExtents=Z.new(e,t,n)}intoRaw(){return Y0.cuboid(this.halfExtents.x,this.halfExtents.y,this.halfExtents.z)}}class l8 extends ot{constructor(e,t,n,s){super(),this.type=$e.RoundCuboid,this.halfExtents=Z.new(e,t,n),this.borderRadius=s}intoRaw(){return Y0.roundCuboid(this.halfExtents.x,this.halfExtents.y,this.halfExtents.z,this.borderRadius)}}class d8 extends ot{constructor(e,t){super(),this.type=$e.Capsule,this.halfHeight=e,this.radius=t}intoRaw(){return Y0.capsule(this.halfHeight,this.radius)}}class c8 extends ot{constructor(e,t){super(),this.type=$e.Segment,this.a=e,this.b=t}intoRaw(){let e=Z.intoRaw(this.a),t=Z.intoRaw(this.b),n=Y0.segment(e,t);return e.free(),t.free(),n}}class u8 extends ot{constructor(e,t,n){super(),this.type=$e.Triangle,this.a=e,this.b=t,this.c=n}intoRaw(){let e=Z.intoRaw(this.a),t=Z.intoRaw(this.b),n=Z.intoRaw(this.c),s=Y0.triangle(e,t,n);return e.free(),t.free(),n.free(),s}}class p8 extends ot{constructor(e,t,n,s){super(),this.type=$e.RoundTriangle,this.a=e,this.b=t,this.c=n,this.borderRadius=s}intoRaw(){let e=Z.intoRaw(this.a),t=Z.intoRaw(this.b),n=Z.intoRaw(this.c),s=Y0.roundTriangle(e,t,n,this.borderRadius);return e.free(),t.free(),n.free(),s}}class f8 extends ot{constructor(e,t){super(),this.type=$e.Polyline,this.vertices=e,this.indices=t??new Uint32Array(0)}intoRaw(){return Y0.polyline(this.vertices,this.indices)}}class h8 extends ot{constructor(e,t){super(),this.type=$e.Voxels,this.data=e,this.voxelSize=t}intoRaw(){let e=Z.intoRaw(this.voxelSize),t;return this.data instanceof Int32Array?t=Y0.voxels(e,this.data):t=Y0.voxelsFromPoints(e,this.data),e.free(),t}}class m8 extends ot{constructor(e,t,n){super(),this.type=$e.TriMesh,this.vertices=e,this.indices=t,this.flags=n}intoRaw(){return Y0.trimesh(this.vertices,this.indices,this.flags)}}class n7 extends ot{constructor(e,t){super(),this.type=$e.ConvexPolyhedron,this.vertices=e,this.indices=t}intoRaw(){return this.indices?Y0.convexMesh(this.vertices,this.indices):Y0.convexHull(this.vertices)}}class i7 extends ot{constructor(e,t,n){super(),this.type=$e.RoundConvexPolyhedron,this.vertices=e,this.indices=t,this.borderRadius=n}intoRaw(){return this.indices?Y0.roundConvexMesh(this.vertices,this.indices,this.borderRadius):Y0.roundConvexHull(this.vertices,this.borderRadius)}}class b8 extends ot{constructor(e,t,n,s,r){super(),this.type=$e.HeightField,this.nrows=e,this.ncols=t,this.heights=n,this.scale=s,this.flags=r}intoRaw(){let e=Z.intoRaw(this.scale),t=Y0.heightfield(this.nrows,this.ncols,this.heights,e,this.flags);return e.free(),t}}class y8 extends ot{constructor(e,t){super(),this.type=$e.Cylinder,this.halfHeight=e,this.radius=t}intoRaw(){return Y0.cylinder(this.halfHeight,this.radius)}}class v8 extends ot{constructor(e,t,n){super(),this.type=$e.RoundCylinder,this.borderRadius=n,this.halfHeight=e,this.radius=t}intoRaw(){return Y0.roundCylinder(this.halfHeight,this.radius,this.borderRadius)}}class g8 extends ot{constructor(e,t){super(),this.type=$e.Cone,this.halfHeight=e,this.radius=t}intoRaw(){return Y0.cone(this.halfHeight,this.radius)}}class w8 extends ot{constructor(e,t,n){super(),this.type=$e.RoundCone,this.halfHeight=e,this.radius=t,this.borderRadius=n}intoRaw(){return Y0.roundCone(this.halfHeight,this.radius,this.borderRadius)}}class hN{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(e){this.raw=e||new zb}step(e,t,n,s,r,a,o,l,d,c,u,p){let h=Z.intoRaw(e);u?this.raw.stepWithEvents(h,t.raw,n.raw,s.raw,r.raw,a.raw,o.raw,l.raw,d.raw,c.raw,u.raw,p,p?p.filterContactPair:null,p?p.filterIntersectionPair:null):this.raw.step(h,t.raw,n.raw,s.raw,r.raw,a.raw,o.raw,l.raw,d.raw,c.raw),h.free()}}var T9;(function(i){i[i.EXCLUDE_FIXED=1]="EXCLUDE_FIXED",i[i.EXCLUDE_KINEMATIC=2]="EXCLUDE_KINEMATIC",i[i.EXCLUDE_DYNAMIC=4]="EXCLUDE_DYNAMIC",i[i.EXCLUDE_SENSORS=8]="EXCLUDE_SENSORS",i[i.EXCLUDE_SOLIDS=16]="EXCLUDE_SOLIDS",i[i.ONLY_DYNAMIC=3]="ONLY_DYNAMIC",i[i.ONLY_KINEMATIC=5]="ONLY_KINEMATIC",i[i.ONLY_FIXED=6]="ONLY_FIXED"})(T9||(T9={}));class mN{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(e){this.raw=e||new l5}update(e){this.raw.update(e.raw)}castRay(e,t,n,s,r,a,o,l,d,c){let u=Z.intoRaw(n.origin),p=Z.intoRaw(n.dir),h=c5.fromRaw(t,this.raw.castRay(e.raw,t.raw,u,p,s,r,a,o,l,d,c));return u.free(),p.free(),h}castRayAndGetNormal(e,t,n,s,r,a,o,l,d,c){let u=Z.intoRaw(n.origin),p=Z.intoRaw(n.dir),h=B3.fromRaw(t,this.raw.castRayAndGetNormal(e.raw,t.raw,u,p,s,r,a,o,l,d,c));return u.free(),p.free(),h}intersectionsWithRay(e,t,n,s,r,a,o,l,d,c,u){let p=Z.intoRaw(n.origin),h=Z.intoRaw(n.dir),y=T=>a(B3.fromRaw(t,T));this.raw.intersectionsWithRay(e.raw,t.raw,p,h,s,r,y,o,l,d,c,u),p.free(),h.free()}intersectionWithShape(e,t,n,s,r,a,o,l,d,c){let u=Z.intoRaw(n),p=ae.intoRaw(s),h=r.intoRaw(),y=this.raw.intersectionWithShape(e.raw,t.raw,u,p,h,a,o,l,d,c);return u.free(),p.free(),h.free(),y}projectPoint(e,t,n,s,r,a,o,l,d){let c=Z.intoRaw(n),u=J3.fromRaw(t,this.raw.projectPoint(e.raw,t.raw,c,s,r,a,o,l,d));return c.free(),u}projectPointAndGetFeature(e,t,n,s,r,a,o,l){let d=Z.intoRaw(n),c=J3.fromRaw(t,this.raw.projectPointAndGetFeature(e.raw,t.raw,d,s,r,a,o,l));return d.free(),c}intersectionsWithPoint(e,t,n,s,r,a,o,l,d){let c=Z.intoRaw(n);this.raw.intersectionsWithPoint(e.raw,t.raw,c,s,r,a,o,l,d),c.free()}castShape(e,t,n,s,r,a,o,l,d,c,u,p,h,y){let T=Z.intoRaw(n),m=ae.intoRaw(s),f=Z.intoRaw(r),N=a.intoRaw(),M=Es.fromRaw(t,this.raw.castShape(e.raw,t.raw,T,m,f,N,o,l,d,c,u,p,h,y));return T.free(),m.free(),f.free(),N.free(),M}intersectionsWithShape(e,t,n,s,r,a,o,l,d,c,u){let p=Z.intoRaw(n),h=ae.intoRaw(s),y=r.intoRaw();this.raw.intersectionsWithShape(e.raw,t.raw,p,h,y,a,o,l,d,c,u),p.free(),h.free(),y.free()}collidersWithAabbIntersectingAabb(e,t,n){let s=Z.intoRaw(e),r=Z.intoRaw(t);this.raw.collidersWithAabbIntersectingAabb(s,r,n),s.free(),r.free()}}class x9{free(){this.raw&&this.raw.free(),this.raw=void 0}constructor(e){this.raw=e||new Ib}serializeAll(e,t,n,s,r,a,o,l,d){let c=Z.intoRaw(e);const u=this.raw.serializeAll(c,t.raw,n.raw,s.raw,r.raw,a.raw,o.raw,l.raw,d.raw);return c.free(),u}deserializeAll(e){return T2.fromRaw(this.raw.deserializeAll(e))}}class bN{constructor(e,t){this.vertices=e,this.colors=t}}class yN{free(){this.raw&&this.raw.free(),this.raw=void 0,this.vertices=void 0,this.colors=void 0}constructor(e){this.raw=e||new Mb}render(e,t,n,s,r,a,o){this.raw.render(e.raw,t.raw,n.raw,s.raw,r.raw,a,t.castClosure(o)),this.vertices=this.raw.vertices(),this.colors=this.raw.colors()}}class vN{}class gN{constructor(e,t,n,s,r){this.params=t,this.bodies=n,this.colliders=s,this.queries=r,this.raw=new Cb(e),this.rawCharacterCollision=new i8,this._applyImpulsesToDynamicBodies=!1,this._characterMass=null}free(){this.raw&&(this.raw.free(),this.rawCharacterCollision.free()),this.raw=void 0,this.rawCharacterCollision=void 0}up(){return this.raw.up()}setUp(e){let t=Z.intoRaw(e);return this.raw.setUp(t)}applyImpulsesToDynamicBodies(){return this._applyImpulsesToDynamicBodies}setApplyImpulsesToDynamicBodies(e){this._applyImpulsesToDynamicBodies=e}characterMass(){return this._characterMass}setCharacterMass(e){this._characterMass=e}offset(){return this.raw.offset()}setOffset(e){this.raw.setOffset(e)}normalNudgeFactor(){return this.raw.normalNudgeFactor()}setNormalNudgeFactor(e){this.raw.setNormalNudgeFactor(e)}slideEnabled(){return this.raw.slideEnabled()}setSlideEnabled(e){this.raw.setSlideEnabled(e)}autostepMaxHeight(){return this.raw.autostepMaxHeight()}autostepMinWidth(){return this.raw.autostepMinWidth()}autostepIncludesDynamicBodies(){return this.raw.autostepIncludesDynamicBodies()}autostepEnabled(){return this.raw.autostepEnabled()}enableAutostep(e,t,n){this.raw.enableAutostep(e,t,n)}disableAutostep(){return this.raw.disableAutostep()}maxSlopeClimbAngle(){return this.raw.maxSlopeClimbAngle()}setMaxSlopeClimbAngle(e){this.raw.setMaxSlopeClimbAngle(e)}minSlopeSlideAngle(){return this.raw.minSlopeSlideAngle()}setMinSlopeSlideAngle(e){this.raw.setMinSlopeSlideAngle(e)}snapToGroundDistance(){return this.raw.snapToGroundDistance()}enableSnapToGround(e){this.raw.enableSnapToGround(e)}disableSnapToGround(){this.raw.disableSnapToGround()}snapToGroundEnabled(){return this.raw.snapToGroundEnabled()}computeColliderMovement(e,t,n,s,r){let a=Z.intoRaw(t);this.raw.computeColliderMovement(this.params.dt,this.bodies.raw,this.colliders.raw,this.queries.raw,e.handle,a,this._applyImpulsesToDynamicBodies,this._characterMass,n,s,this.colliders.castClosure(r)),a.free()}computedMovement(){return Z.fromRaw(this.raw.computedMovement())}computedGrounded(){return this.raw.computedGrounded()}numComputedCollisions(){return this.raw.numComputedCollisions()}computedCollision(e,t){if(this.raw.computedCollision(e,this.rawCharacterCollision)){let n=this.rawCharacterCollision;return t=t??new vN,t.translationDeltaApplied=Z.fromRaw(n.translationDeltaApplied()),t.translationDeltaRemaining=Z.fromRaw(n.translationDeltaRemaining()),t.toi=n.toi(),t.witness1=Z.fromRaw(n.worldWitness1()),t.witness2=Z.fromRaw(n.worldWitness2()),t.normal1=Z.fromRaw(n.worldNormal1()),t.normal2=Z.fromRaw(n.worldNormal2()),t.collider=this.colliders.get(n.handle()),t}else return null}}var S9;(function(i){i[i.None=0]="None",i[i.LinX=1]="LinX",i[i.LinY=2]="LinY",i[i.LinZ=4]="LinZ",i[i.AngX=8]="AngX",i[i.AngY=16]="AngY",i[i.AngZ=32]="AngZ",i[i.AllLin=7]="AllLin",i[i.AllAng=56]="AllAng",i[i.All=63]="All"})(S9||(S9={}));class wN{constructor(e,t,n,s,r,a){this.params=e,this.bodies=t,this.raw=new Ab(n,s,r,a)}free(){this.raw&&this.raw.free(),this.raw=void 0}setKp(e,t){this.raw.set_kp(e,t)}setKi(e,t){this.raw.set_kp(e,t)}setKd(e,t){this.raw.set_kp(e,t)}setAxes(e){this.raw.set_axes_mask(e)}resetIntegrals(){this.raw.reset_integrals()}applyLinearCorrection(e,t,n){let s=Z.intoRaw(t),r=Z.intoRaw(n);this.raw.apply_linear_correction(this.params.dt,this.bodies.raw,e.handle,s,r),s.free(),r.free()}applyAngularCorrection(e,t,n){let s=ae.intoRaw(t),r=Z.intoRaw(n);this.raw.apply_angular_correction(this.params.dt,this.bodies.raw,e.handle,s,r),s.free(),r.free()}linearCorrection(e,t,n){let s=Z.intoRaw(t),r=Z.intoRaw(n),a=this.raw.linear_correction(this.params.dt,this.bodies.raw,e.handle,s,r);return s.free(),r.free(),Z.fromRaw(a)}angularCorrection(e,t,n){let s=ae.intoRaw(t),r=Z.intoRaw(n),a=this.raw.angular_correction(this.params.dt,this.bodies.raw,e.handle,s,r);return s.free(),r.free(),Z.fromRaw(a)}}class TN{constructor(e,t,n,s){this.raw=new Ob(e.handle),this.bodies=t,this.colliders=n,this.queries=s,this._chassis=e}free(){this.raw&&this.raw.free(),this.raw=void 0}updateVehicle(e,t,n,s){this.raw.update_vehicle(e,this.bodies.raw,this.colliders.raw,this.queries.raw,t,n,this.colliders.castClosure(s))}currentVehicleSpeed(){return this.raw.current_vehicle_speed()}chassis(){return this._chassis}get indexUpAxis(){return this.raw.index_up_axis()}set indexUpAxis(e){this.raw.set_index_up_axis(e)}get indexForwardAxis(){return this.raw.index_forward_axis()}set setIndexForwardAxis(e){this.raw.set_index_forward_axis(e)}addWheel(e,t,n,s,r){let a=Z.intoRaw(e),o=Z.intoRaw(t),l=Z.intoRaw(n);this.raw.add_wheel(a,o,l,s,r),a.free(),o.free(),l.free()}numWheels(){return this.raw.num_wheels()}wheelChassisConnectionPointCs(e){return Z.fromRaw(this.raw.wheel_chassis_connection_point_cs(e))}setWheelChassisConnectionPointCs(e,t){let n=Z.intoRaw(t);this.raw.set_wheel_chassis_connection_point_cs(e,n),n.free()}wheelSuspensionRestLength(e){return this.raw.wheel_suspension_rest_length(e)}setWheelSuspensionRestLength(e,t){this.raw.set_wheel_suspension_rest_length(e,t)}wheelMaxSuspensionTravel(e){return this.raw.wheel_max_suspension_travel(e)}setWheelMaxSuspensionTravel(e,t){this.raw.set_wheel_max_suspension_travel(e,t)}wheelRadius(e){return this.raw.wheel_radius(e)}setWheelRadius(e,t){this.raw.set_wheel_radius(e,t)}wheelSuspensionStiffness(e){return this.raw.wheel_suspension_stiffness(e)}setWheelSuspensionStiffness(e,t){this.raw.set_wheel_suspension_stiffness(e,t)}wheelSuspensionCompression(e){return this.raw.wheel_suspension_compression(e)}setWheelSuspensionCompression(e,t){this.raw.set_wheel_suspension_compression(e,t)}wheelSuspensionRelaxation(e){return this.raw.wheel_suspension_relaxation(e)}setWheelSuspensionRelaxation(e,t){this.raw.set_wheel_suspension_relaxation(e,t)}wheelMaxSuspensionForce(e){return this.raw.wheel_max_suspension_force(e)}setWheelMaxSuspensionForce(e,t){this.raw.set_wheel_max_suspension_force(e,t)}wheelBrake(e){return this.raw.wheel_brake(e)}setWheelBrake(e,t){this.raw.set_wheel_brake(e,t)}wheelSteering(e){return this.raw.wheel_steering(e)}setWheelSteering(e,t){this.raw.set_wheel_steering(e,t)}wheelEngineForce(e){return this.raw.wheel_engine_force(e)}setWheelEngineForce(e,t){this.raw.set_wheel_engine_force(e,t)}wheelDirectionCs(e){return Z.fromRaw(this.raw.wheel_direction_cs(e))}setWheelDirectionCs(e,t){let n=Z.intoRaw(t);this.raw.set_wheel_direction_cs(e,n),n.free()}wheelAxleCs(e){return Z.fromRaw(this.raw.wheel_axle_cs(e))}setWheelAxleCs(e,t){let n=Z.intoRaw(t);this.raw.set_wheel_axle_cs(e,n),n.free()}wheelFrictionSlip(e){return this.raw.wheel_friction_slip(e)}setWheelFrictionSlip(e,t){this.raw.set_wheel_friction_slip(e,t)}wheelSideFrictionStiffness(e){return this.raw.wheel_side_friction_stiffness(e)}setWheelSideFrictionStiffness(e,t){this.raw.set_wheel_side_friction_stiffness(e,t)}wheelRotation(e){return this.raw.wheel_rotation(e)}wheelForwardImpulse(e){return this.raw.wheel_forward_impulse(e)}wheelSideImpulse(e){return this.raw.wheel_side_impulse(e)}wheelSuspensionForce(e){return this.raw.wheel_suspension_force(e)}wheelContactNormal(e){return Z.fromRaw(this.raw.wheel_contact_normal_ws(e))}wheelContactPoint(e){return Z.fromRaw(this.raw.wheel_contact_point_ws(e))}wheelSuspensionLength(e){return this.raw.wheel_suspension_length(e)}wheelHardPoint(e){return Z.fromRaw(this.raw.wheel_hard_point_ws(e))}wheelIsInContact(e){return this.raw.wheel_is_in_contact(e)}wheelGroundObject(e){return this.colliders.get(this.raw.wheel_ground_object(e))}}class T2{free(){this.integrationParameters.free(),this.islands.free(),this.broadPhase.free(),this.narrowPhase.free(),this.bodies.free(),this.colliders.free(),this.impulseJoints.free(),this.multibodyJoints.free(),this.ccdSolver.free(),this.queryPipeline.free(),this.physicsPipeline.free(),this.serializationPipeline.free(),this.debugRenderPipeline.free(),this.characterControllers.forEach(e=>e.free()),this.pidControllers.forEach(e=>e.free()),this.vehicleControllers.forEach(e=>e.free()),this.integrationParameters=void 0,this.islands=void 0,this.broadPhase=void 0,this.narrowPhase=void 0,this.bodies=void 0,this.colliders=void 0,this.ccdSolver=void 0,this.impulseJoints=void 0,this.multibodyJoints=void 0,this.queryPipeline=void 0,this.physicsPipeline=void 0,this.serializationPipeline=void 0,this.debugRenderPipeline=void 0,this.characterControllers=void 0,this.pidControllers=void 0,this.vehicleControllers=void 0}constructor(e,t,n,s,r,a,o,l,d,c,u,p,h,y){this.gravity=e,this.integrationParameters=new JL(t),this.islands=new dN(n),this.broadPhase=new cN(s),this.narrowPhase=new uN(r),this.bodies=new kL(a),this.colliders=new xN(o),this.impulseJoints=new nN(l),this.multibodyJoints=new oN(d),this.ccdSolver=new lN(c),this.queryPipeline=new mN(u),this.physicsPipeline=new hN(p),this.serializationPipeline=new x9(h),this.debugRenderPipeline=new yN(y),this.characterControllers=new Set,this.pidControllers=new Set,this.vehicleControllers=new Set,this.impulseJoints.finalizeDeserialization(this.bodies),this.bodies.finalizeDeserialization(this.colliders),this.colliders.finalizeDeserialization(this.bodies)}static fromRaw(e){return e?new T2(Z.fromRaw(e.takeGravity()),e.takeIntegrationParameters(),e.takeIslandManager(),e.takeBroadPhase(),e.takeNarrowPhase(),e.takeBodies(),e.takeColliders(),e.takeImpulseJoints(),e.takeMultibodyJoints()):null}takeSnapshot(){return this.serializationPipeline.serializeAll(this.gravity,this.integrationParameters,this.islands,this.broadPhase,this.narrowPhase,this.bodies,this.colliders,this.impulseJoints,this.multibodyJoints)}static restoreSnapshot(e){return new x9().deserializeAll(e)}debugRender(e,t){return this.debugRenderPipeline.render(this.bodies,this.colliders,this.impulseJoints,this.multibodyJoints,this.narrowPhase,e,t),new bN(this.debugRenderPipeline.vertices,this.debugRenderPipeline.colors)}step(e,t){this.physicsPipeline.step(this.gravity,this.integrationParameters,this.islands,this.broadPhase,this.narrowPhase,this.bodies,this.colliders,this.impulseJoints,this.multibodyJoints,this.ccdSolver,e,t),this.queryPipeline.update(this.colliders)}propagateModifiedBodyPositionsToColliders(){this.bodies.raw.propagateModifiedBodyPositionsToColliders(this.colliders.raw)}updateSceneQueries(){this.propagateModifiedBodyPositionsToColliders(),this.queryPipeline.update(this.colliders)}get timestep(){return this.integrationParameters.dt}set timestep(e){this.integrationParameters.dt=e}get lengthUnit(){return this.integrationParameters.lengthUnit}set lengthUnit(e){this.integrationParameters.lengthUnit=e}get numSolverIterations(){return this.integrationParameters.numSolverIterations}set numSolverIterations(e){this.integrationParameters.numSolverIterations=e}get numAdditionalFrictionIterations(){return this.integrationParameters.numAdditionalFrictionIterations}set numAdditionalFrictionIterations(e){this.integrationParameters.numAdditionalFrictionIterations=e}get numInternalPgsIterations(){return this.integrationParameters.numInternalPgsIterations}set numInternalPgsIterations(e){this.integrationParameters.numInternalPgsIterations=e}switchToStandardPgsSolver(){this.integrationParameters.switchToStandardPgsSolver()}switchToSmallStepsPgsSolver(){this.integrationParameters.switchToSmallStepsPgsSolver()}switchToSmallStepsPgsSolverWithoutWarmstart(){this.integrationParameters.switchToSmallStepsPgsSolverWithoutWarmstart()}createRigidBody(e){return this.bodies.createRigidBody(this.colliders,e)}createCharacterController(e){let t=new gN(e,this.integrationParameters,this.bodies,this.colliders,this.queryPipeline);return this.characterControllers.add(t),t}removeCharacterController(e){this.characterControllers.delete(e),e.free()}createPidController(e,t,n,s){let r=new wN(this.integrationParameters,this.bodies,e,t,n,s);return this.pidControllers.add(r),r}removePidController(e){this.pidControllers.delete(e),e.free()}createVehicleController(e){let t=new TN(e,this.bodies,this.colliders,this.queryPipeline);return this.vehicleControllers.add(t),t}removeVehicleController(e){this.vehicleControllers.delete(e),e.free()}createCollider(e,t){let n=t?t.handle:void 0;return this.colliders.createCollider(this.bodies,e,n)}createImpulseJoint(e,t,n,s){return this.impulseJoints.createJoint(this.bodies,e,t.handle,n.handle,s)}createMultibodyJoint(e,t,n,s){return this.multibodyJoints.createJoint(e,t.handle,n.handle,s)}getRigidBody(e){return this.bodies.get(e)}getCollider(e){return this.colliders.get(e)}getImpulseJoint(e){return this.impulseJoints.get(e)}getMultibodyJoint(e){return this.multibodyJoints.get(e)}removeRigidBody(e){this.bodies&&this.bodies.remove(e.handle,this.islands,this.colliders,this.impulseJoints,this.multibodyJoints)}removeCollider(e,t){this.colliders&&this.colliders.remove(e.handle,this.islands,this.bodies,t)}removeImpulseJoint(e,t){this.impulseJoints&&this.impulseJoints.remove(e.handle,t)}removeMultibodyJoint(e,t){this.impulseJoints&&this.multibodyJoints.remove(e.handle,t)}forEachCollider(e){this.colliders.forEach(e)}forEachRigidBody(e){this.bodies.forEach(e)}forEachActiveRigidBody(e){this.bodies.forEachActiveRigidBody(this.islands,e)}castRay(e,t,n,s,r,a,o,l){return this.queryPipeline.castRay(this.bodies,this.colliders,e,t,n,s,r,a?a.handle:null,o?o.handle:null,this.colliders.castClosure(l))}castRayAndGetNormal(e,t,n,s,r,a,o,l){return this.queryPipeline.castRayAndGetNormal(this.bodies,this.colliders,e,t,n,s,r,a?a.handle:null,o?o.handle:null,this.colliders.castClosure(l))}intersectionsWithRay(e,t,n,s,r,a,o,l,d){this.queryPipeline.intersectionsWithRay(this.bodies,this.colliders,e,t,n,s,r,a,o?o.handle:null,l?l.handle:null,this.colliders.castClosure(d))}intersectionWithShape(e,t,n,s,r,a,o,l){let d=this.queryPipeline.intersectionWithShape(this.bodies,this.colliders,e,t,n,s,r,a?a.handle:null,o?o.handle:null,this.colliders.castClosure(l));return d!=null?this.colliders.get(d):null}projectPoint(e,t,n,s,r,a,o){return this.queryPipeline.projectPoint(this.bodies,this.colliders,e,t,n,s,r?r.handle:null,a?a.handle:null,this.colliders.castClosure(o))}projectPointAndGetFeature(e,t,n,s,r,a){return this.queryPipeline.projectPointAndGetFeature(this.bodies,this.colliders,e,t,n,s?s.handle:null,r?r.handle:null,this.colliders.castClosure(a))}intersectionsWithPoint(e,t,n,s,r,a,o){this.queryPipeline.intersectionsWithPoint(this.bodies,this.colliders,e,this.colliders.castClosure(t),n,s,r?r.handle:null,a?a.handle:null,this.colliders.castClosure(o))}castShape(e,t,n,s,r,a,o,l,d,c,u,p){return this.queryPipeline.castShape(this.bodies,this.colliders,e,t,n,s,r,a,o,l,d,c?c.handle:null,u?u.handle:null,this.colliders.castClosure(p))}intersectionsWithShape(e,t,n,s,r,a,o,l,d){this.queryPipeline.intersectionsWithShape(this.bodies,this.colliders,e,t,n,this.colliders.castClosure(s),r,a,o?o.handle:null,l?l.handle:null,this.colliders.castClosure(d))}collidersWithAabbIntersectingAabb(e,t,n){this.queryPipeline.collidersWithAabbIntersectingAabb(e,t,this.colliders.castClosure(n))}contactPairsWith(e,t){this.narrowPhase.contactPairsWith(e.handle,this.colliders.castClosure(t))}intersectionPairsWith(e,t){this.narrowPhase.intersectionPairsWith(e.handle,this.colliders.castClosure(t))}contactPair(e,t,n){this.narrowPhase.contactPair(e.handle,t.handle,n)}intersectionPair(e,t){return this.narrowPhase.intersectionPair(e.handle,t.handle)}}var s7;(function(i){i[i.NONE=0]="NONE",i[i.COLLISION_EVENTS=1]="COLLISION_EVENTS",i[i.CONTACT_FORCE_EVENTS=2]="CONTACT_FORCE_EVENTS"})(s7||(s7={}));var r7;(function(i){i[i.NONE=0]="NONE",i[i.FILTER_CONTACT_PAIRS=1]="FILTER_CONTACT_PAIRS",i[i.FILTER_INTERSECTION_PAIRS=2]="FILTER_INTERSECTION_PAIRS"})(r7||(r7={}));var P9;(function(i){i[i.EMPTY=0]="EMPTY",i[i.COMPUTE_IMPULSE=1]="COMPUTE_IMPULSE"})(P9||(P9={}));var a7;(function(i){i[i.DYNAMIC_DYNAMIC=1]="DYNAMIC_DYNAMIC",i[i.DYNAMIC_KINEMATIC=12]="DYNAMIC_KINEMATIC",i[i.DYNAMIC_FIXED=2]="DYNAMIC_FIXED",i[i.KINEMATIC_KINEMATIC=52224]="KINEMATIC_KINEMATIC",i[i.KINEMATIC_FIXED=8704]="KINEMATIC_FIXED",i[i.FIXED_FIXED=32]="FIXED_FIXED",i[i.DEFAULT=15]="DEFAULT",i[i.ALL=60943]="ALL"})(a7||(a7={}));class H9{constructor(e,t,n,s){this.colliderSet=e,this.handle=t,this._parent=n,this._shape=s}finalizeDeserialization(e){this.handle!=null&&(this._parent=e.get(this.colliderSet.raw.coParent(this.handle)))}ensureShapeIsCached(){this._shape||(this._shape=ot.fromRaw(this.colliderSet.raw,this.handle))}get shape(){return this.ensureShapeIsCached(),this._shape}clearShapeCache(){this._shape=null}isValid(){return this.colliderSet.raw.contains(this.handle)}translation(){return Z.fromRaw(this.colliderSet.raw.coTranslation(this.handle))}rotation(){return ae.fromRaw(this.colliderSet.raw.coRotation(this.handle))}isSensor(){return this.colliderSet.raw.coIsSensor(this.handle)}setSensor(e){this.colliderSet.raw.coSetSensor(this.handle,e)}setShape(e){let t=e.intoRaw();this.colliderSet.raw.coSetShape(this.handle,t),t.free(),this._shape=e}setEnabled(e){this.colliderSet.raw.coSetEnabled(this.handle,e)}isEnabled(){return this.colliderSet.raw.coIsEnabled(this.handle)}setRestitution(e){this.colliderSet.raw.coSetRestitution(this.handle,e)}setFriction(e){this.colliderSet.raw.coSetFriction(this.handle,e)}frictionCombineRule(){return this.colliderSet.raw.coFrictionCombineRule(this.handle)}setFrictionCombineRule(e){this.colliderSet.raw.coSetFrictionCombineRule(this.handle,e)}restitutionCombineRule(){return this.colliderSet.raw.coRestitutionCombineRule(this.handle)}setRestitutionCombineRule(e){this.colliderSet.raw.coSetRestitutionCombineRule(this.handle,e)}setCollisionGroups(e){this.colliderSet.raw.coSetCollisionGroups(this.handle,e)}setSolverGroups(e){this.colliderSet.raw.coSetSolverGroups(this.handle,e)}contactSkin(){return this.colliderSet.raw.coContactSkin(this.handle)}setContactSkin(e){return this.colliderSet.raw.coSetContactSkin(this.handle,e)}activeHooks(){return this.colliderSet.raw.coActiveHooks(this.handle)}setActiveHooks(e){this.colliderSet.raw.coSetActiveHooks(this.handle,e)}activeEvents(){return this.colliderSet.raw.coActiveEvents(this.handle)}setActiveEvents(e){this.colliderSet.raw.coSetActiveEvents(this.handle,e)}activeCollisionTypes(){return this.colliderSet.raw.coActiveCollisionTypes(this.handle)}setContactForceEventThreshold(e){return this.colliderSet.raw.coSetContactForceEventThreshold(this.handle,e)}contactForceEventThreshold(){return this.colliderSet.raw.coContactForceEventThreshold(this.handle)}setActiveCollisionTypes(e){this.colliderSet.raw.coSetActiveCollisionTypes(this.handle,e)}setDensity(e){this.colliderSet.raw.coSetDensity(this.handle,e)}setMass(e){this.colliderSet.raw.coSetMass(this.handle,e)}setMassProperties(e,t,n,s){let r=Z.intoRaw(t),a=Z.intoRaw(n),o=ae.intoRaw(s);this.colliderSet.raw.coSetMassProperties(this.handle,e,r,a,o),r.free(),a.free(),o.free()}setTranslation(e){this.colliderSet.raw.coSetTranslation(this.handle,e.x,e.y,e.z)}setTranslationWrtParent(e){this.colliderSet.raw.coSetTranslationWrtParent(this.handle,e.x,e.y,e.z)}setRotation(e){this.colliderSet.raw.coSetRotation(this.handle,e.x,e.y,e.z,e.w)}setRotationWrtParent(e){this.colliderSet.raw.coSetRotationWrtParent(this.handle,e.x,e.y,e.z,e.w)}shapeType(){return this.colliderSet.raw.coShapeType(this.handle)}halfExtents(){return Z.fromRaw(this.colliderSet.raw.coHalfExtents(this.handle))}setHalfExtents(e){const t=Z.intoRaw(e);this.colliderSet.raw.coSetHalfExtents(this.handle,t)}radius(){return this.colliderSet.raw.coRadius(this.handle)}setRadius(e){this.colliderSet.raw.coSetRadius(this.handle,e)}roundRadius(){return this.colliderSet.raw.coRoundRadius(this.handle)}setRoundRadius(e){this.colliderSet.raw.coSetRoundRadius(this.handle,e)}halfHeight(){return this.colliderSet.raw.coHalfHeight(this.handle)}setHalfHeight(e){this.colliderSet.raw.coSetHalfHeight(this.handle,e)}setVoxel(e,t,n,s){this.colliderSet.raw.coSetVoxel(this.handle,e,t,n,s),this._shape=null}propagateVoxelChange(e,t,n,s,r,a,o){this.colliderSet.raw.coPropagateVoxelChange(this.handle,e.handle,t,n,s,r,a,o),this._shape=null}combineVoxelStates(e,t,n,s){this.colliderSet.raw.coCombineVoxelStates(this.handle,e.handle,t,n,s),this._shape=null}vertices(){return this.colliderSet.raw.coVertices(this.handle)}indices(){return this.colliderSet.raw.coIndices(this.handle)}heightfieldHeights(){return this.colliderSet.raw.coHeightfieldHeights(this.handle)}heightfieldScale(){let e=this.colliderSet.raw.coHeightfieldScale(this.handle);return Z.fromRaw(e)}heightfieldNRows(){return this.colliderSet.raw.coHeightfieldNRows(this.handle)}heightfieldNCols(){return this.colliderSet.raw.coHeightfieldNCols(this.handle)}parent(){return this._parent}friction(){return this.colliderSet.raw.coFriction(this.handle)}restitution(){return this.colliderSet.raw.coRestitution(this.handle)}density(){return this.colliderSet.raw.coDensity(this.handle)}mass(){return this.colliderSet.raw.coMass(this.handle)}volume(){return this.colliderSet.raw.coVolume(this.handle)}collisionGroups(){return this.colliderSet.raw.coCollisionGroups(this.handle)}solverGroups(){return this.colliderSet.raw.coSolverGroups(this.handle)}containsPoint(e){let t=Z.intoRaw(e),n=this.colliderSet.raw.coContainsPoint(this.handle,t);return t.free(),n}projectPoint(e,t){let n=Z.intoRaw(e),s=Ms.fromRaw(this.colliderSet.raw.coProjectPoint(this.handle,n,t));return n.free(),s}intersectsRay(e,t){let n=Z.intoRaw(e.origin),s=Z.intoRaw(e.dir),r=this.colliderSet.raw.coIntersectsRay(this.handle,n,s,t);return n.free(),s.free(),r}castShape(e,t,n,s,r,a,o,l){let d=Z.intoRaw(e),c=Z.intoRaw(n),u=ae.intoRaw(s),p=Z.intoRaw(r),h=t.intoRaw(),y=N2.fromRaw(this.colliderSet,this.colliderSet.raw.coCastShape(this.handle,d,h,c,u,p,a,o,l));return d.free(),c.free(),u.free(),p.free(),h.free(),y}castCollider(e,t,n,s,r,a){let o=Z.intoRaw(e),l=Z.intoRaw(n),d=Es.fromRaw(this.colliderSet,this.colliderSet.raw.coCastCollider(this.handle,o,t.handle,l,s,r,a));return o.free(),l.free(),d}intersectsShape(e,t,n){let s=Z.intoRaw(t),r=ae.intoRaw(n),a=e.intoRaw(),o=this.colliderSet.raw.coIntersectsShape(this.handle,a,s,r);return s.free(),r.free(),a.free(),o}contactShape(e,t,n,s){let r=Z.intoRaw(t),a=ae.intoRaw(n),o=e.intoRaw(),l=g2.fromRaw(this.colliderSet.raw.coContactShape(this.handle,o,r,a,s));return r.free(),a.free(),o.free(),l}contactCollider(e,t){return g2.fromRaw(this.colliderSet.raw.coContactCollider(this.handle,e.handle,t))}castRay(e,t,n){let s=Z.intoRaw(e.origin),r=Z.intoRaw(e.dir),a=this.colliderSet.raw.coCastRay(this.handle,s,r,t,n);return s.free(),r.free(),a}castRayAndGetNormal(e,t,n){let s=Z.intoRaw(e.origin),r=Z.intoRaw(e.dir),a=Os.fromRaw(this.colliderSet.raw.coCastRayAndGetNormal(this.handle,s,r,t,n));return s.free(),r.free(),a}}var pi;(function(i){i[i.Density=0]="Density",i[i.Mass=1]="Mass",i[i.MassProps=2]="MassProps"})(pi||(pi={}));class Ue{constructor(e){this.enabled=!0,this.shape=e,this.massPropsMode=pi.Density,this.density=1,this.friction=.5,this.restitution=0,this.rotation=ae.identity(),this.translation=Z.zeros(),this.isSensor=!1,this.collisionGroups=4294967295,this.solverGroups=4294967295,this.frictionCombineRule=k3.Average,this.restitutionCombineRule=k3.Average,this.activeCollisionTypes=a7.DEFAULT,this.activeEvents=s7.NONE,this.activeHooks=r7.NONE,this.mass=0,this.centerOfMass=Z.zeros(),this.contactForceEventThreshold=0,this.contactSkin=0,this.principalAngularInertia=Z.zeros(),this.angularInertiaLocalFrame=ae.identity()}static ball(e){const t=new a8(e);return new Ue(t)}static capsule(e,t){const n=new d8(e,t);return new Ue(n)}static segment(e,t){const n=new c8(e,t);return new Ue(n)}static triangle(e,t,n){const s=new u8(e,t,n);return new Ue(s)}static roundTriangle(e,t,n,s){const r=new p8(e,t,n,s);return new Ue(r)}static polyline(e,t){const n=new f8(e,t);return new Ue(n)}static voxels(e,t){const n=new h8(e,t);return new Ue(n)}static trimesh(e,t,n){const s=new m8(e,t,n);return new Ue(s)}static cuboid(e,t,n){const s=new o8(e,t,n);return new Ue(s)}static roundCuboid(e,t,n,s){const r=new l8(e,t,n,s);return new Ue(r)}static heightfield(e,t,n,s,r){const a=new b8(e,t,n,s,r);return new Ue(a)}static cylinder(e,t){const n=new y8(e,t);return new Ue(n)}static roundCylinder(e,t,n){const s=new v8(e,t,n);return new Ue(s)}static cone(e,t){const n=new g8(e,t);return new Ue(n)}static roundCone(e,t,n){const s=new w8(e,t,n);return new Ue(s)}static convexHull(e){const t=new n7(e,null);return new Ue(t)}static convexMesh(e,t){const n=new n7(e,t);return new Ue(n)}static roundConvexHull(e,t){const n=new i7(e,null,t);return new Ue(n)}static roundConvexMesh(e,t,n){const s=new i7(e,t,n);return new Ue(s)}setTranslation(e,t,n){if(typeof e!="number"||typeof t!="number"||typeof n!="number")throw TypeError("The translation components must be numbers.");return this.translation={x:e,y:t,z:n},this}setRotation(e){return ae.copy(this.rotation,e),this}setSensor(e){return this.isSensor=e,this}setEnabled(e){return this.enabled=e,this}setContactSkin(e){return this.contactSkin=e,this}setDensity(e){return this.massPropsMode=pi.Density,this.density=e,this}setMass(e){return this.massPropsMode=pi.Mass,this.mass=e,this}setMassProperties(e,t,n,s){return this.massPropsMode=pi.MassProps,this.mass=e,Z.copy(this.centerOfMass,t),Z.copy(this.principalAngularInertia,n),ae.copy(this.angularInertiaLocalFrame,s),this}setRestitution(e){return this.restitution=e,this}setFriction(e){return this.friction=e,this}setFrictionCombineRule(e){return this.frictionCombineRule=e,this}setRestitutionCombineRule(e){return this.restitutionCombineRule=e,this}setCollisionGroups(e){return this.collisionGroups=e,this}setSolverGroups(e){return this.solverGroups=e,this}setActiveHooks(e){return this.activeHooks=e,this}setActiveEvents(e){return this.activeEvents=e,this}setActiveCollisionTypes(e){return this.activeCollisionTypes=e,this}setContactForceEventThreshold(e){return this.contactForceEventThreshold=e,this}}class xN{free(){this.raw&&this.raw.free(),this.raw=void 0,this.map&&this.map.clear(),this.map=void 0}constructor(e){this.raw=e||new Ze,this.map=new Rs,e&&e.forEachColliderHandle(t=>{this.map.set(t,new H9(this,t,null))})}castClosure(e){return t=>{if(e)return e(this.get(t))}}finalizeDeserialization(e){this.map.forEach(t=>t.finalizeDeserialization(e))}createCollider(e,t,n){let s=n!=null&&n!=null;if(s&&isNaN(n))throw Error("Cannot create a collider with a parent rigid-body handle that is not a number.");let r=t.shape.intoRaw(),a=Z.intoRaw(t.translation),o=ae.intoRaw(t.rotation),l=Z.intoRaw(t.centerOfMass),d=Z.intoRaw(t.principalAngularInertia),c=ae.intoRaw(t.angularInertiaLocalFrame),u=this.raw.createCollider(t.enabled,r,a,o,t.massPropsMode,t.mass,l,d,c,t.density,t.friction,t.restitution,t.frictionCombineRule,t.restitutionCombineRule,t.isSensor,t.collisionGroups,t.solverGroups,t.activeCollisionTypes,t.activeHooks,t.activeEvents,t.contactForceEventThreshold,t.contactSkin,s,s?n:0,e.raw);r.free(),a.free(),o.free(),l.free(),d.free(),c.free();let p=s?e.get(n):null,h=new H9(this,u,p,t.shape);return this.map.set(u,h),h}remove(e,t,n,s){this.raw.remove(e,t.raw,n.raw,s),this.unmap(e)}unmap(e){this.map.delete(e)}get(e){return this.map.get(e)}len(){return this.map.len()}contains(e){return this.get(e)!=null}forEach(e){this.map.forEach(e)}getAll(){return this.map.getAll()}}const SN=2236962,PN=2,HN=1,LN=3,L9=1/60,NN=!0,RN="high-performance",MN=bn,ON=new S(0,-9.81,0),EN="assets/sunset.exr",CN=.35,zN=1,AN=16777215,IN=.5,XN=16777215,VN=1.5,FN=[-1,2.5,1],DN=!0,WN=-.001,jN=.5,YN=50,GN=-5,UN=5,qN=5,ZN=-5,N9=1024;class T8{static TIMESTEP=L9;constructor({containerElement:e,camera:t}){this.#e=e,this.#o=t,this.#r.integrationParameters.numSolverIterations=PN,this.#r.integrationParameters.numAdditionalFrictionIterations=HN,this.#r.integrationParameters.numInternalPgsIterations=LN,this.#r.timestep=L9,this.#t.add(new ic(AN,IN));const n=new D4(XN,VN);n.shadow.mapSize.set(N9,N9),n.position.set(...FN),n.castShadow=DN,n.shadow.bias=WN,n.shadow.camera.near=jN,n.shadow.camera.far=YN,n.shadow.camera.left=GN,n.shadow.camera.right=UN,n.shadow.camera.top=qN,n.shadow.camera.bottom=ZN,this.#t.add(n),e.appendChild(this.#a.domElement)}#e;#t=new G5;#n=new G5;#a=new em({antialias:NN,powerPreference:RN});#r=new T2(ON);#o=null;async initialize(e,t,n){const s=new Ka(this.#a);s.compileEquirectangularShader(),this.#t.environment=await new Promise((r,a)=>new vb().load(EN,o=>r(s.fromEquirectangular(o).texture),void 0,a)),this.#t.background=new te(SN),this.#t.environmentIntensity=CN,this.#a.toneMapping=c4,this.#a.toneMappingExposure=zN,this.#a.outputColorSpace=bt,this.#a.setSize(e,t),this.#a.setPixelRatio(n),this.#a.shadowMap.enabled=!0,this.#a.shadowMap.type=MN,this.#e.appendChild(this.#a.domElement)}createFixedBody(){const e=Kt.fixed();return this.#r.createRigidBody(e)}createKinematicBody(){const e=Kt.kinematicPositionBased();return this.#r.createRigidBody(e)}createDynamicBody(){const e=Kt.dynamic();return this.#r.createRigidBody(e)}createCuboidCollider({width:e,height:t,depth:n,userData:s,position:r,rotation:a,sensor:o,friction:l,restitution:d,density:c},u=this.createFixedBody()){const p=Ue.cuboid(e/2,t/2,n/2);r!==void 0&&p.setTranslation(...r),a!==void 0&&p.setRotation(new ee().setFromEuler(new Ne(...a))),o!==void 0&&p.setSensor(o);const h=this.#r.createCollider(p,u);return l!==void 0&&h.setFriction(l),d!==void 0&&h.setRestitution(d),c!==void 0&&h.setDensity(c),s!==void 0&&(h.userData=s),h}createCuboidColliderFromBoundingBox({mesh:e,height:t,userData:n,rotation:s,sensor:r},a){e.geometry.computeBoundingBox();const o=e.geometry.boundingBox;e.matrixWorld.decompose(e.position,e.quaternion,e.scale);const d=o.max.x-o.min.x,c=o.max.z-o.min.z,u=o.min.x,p=o.min.y,h=o.min.z;return this.createCuboidCollider({width:d,height:t,depth:c,rotation:s,sensor:r,position:[u+d/2,p-t/2,h+c/2],userData:n},a)}createTrimeshCollider({vertices:e,indices:t,userData:n,position:s,rotation:r,sensor:a,friction:o,restitution:l,density:d},c=this.createFixedBody()){const u=Ue.trimesh(e,t,K3.ORIENTED|K3.FIX_INTERNAL_EDGES);s!==void 0&&u.setTranslation(...s),r!==void 0&&u.setRotation(new ee().setFromEuler(new Ne(...r))),a!==void 0&&u.setSensor(a);const p=this.#r.createCollider(u,c);return o!==void 0&&p.setFriction(o),l!==void 0&&p.setRestitution(l),d!==void 0&&p.setDensity(d),n!==void 0&&(p.userData=n),p}createCylinderCollider({radius:e,height:t,userData:n,position:s,rotation:r,sensor:a,friction:o,restitution:l,density:d},c=this.createFixedBody()){const u=Ue.cylinder(t/2,e);s!==void 0&&u.setTranslation(...s),r!==void 0&&u.setRotation(new ee().setFromEuler(new Ne(...r))),a!==void 0&&u.setSensor(a);const p=this.#r.createCollider(u,c);return o!==void 0&&p.setFriction(o),l!==void 0&&p.setRestitution(l),d!==void 0&&p.setDensity(d),n!==void 0&&(p.userData=n),p}createConvexHullCollider({vertices:e,indices:t,userData:n,position:s,rotation:r,sensor:a,friction:o,restitution:l,density:d},c=this.createFixedBody()){const u=Ue.convexHull(e,t);s!==void 0&&u.setTranslation(...s),r!==void 0&&u.setRotation(new ee().setFromEuler(new Ne(...r))),a!==void 0&&u.setSensor(a);const p=this.#r.createCollider(u,c);return o!==void 0&&p.setFriction(o),l!==void 0&&p.setRestitution(l),d!==void 0&&p.setDensity(d),n!==void 0&&(p.userData=n),p}connectBodiesWithSphericalJoint({body1:e,body2:t,anchor1:n,anchor2:s}){const r=dn.spherical(n,s);return this.#r.createImpulseJoint(r,e,t)}connectBodiesWithRevoluteJoint({body1:e,body2:t,anchor1:n,anchor2:s,axis:r}){const a=dn.revolute(n,s,r);return this.#r.createImpulseJoint(a,e,t)}connectBodiesWithFixedJoint({body1:e,body2:t,anchor1:n,anchor2:s,frame1:r,frame2:a}){const o=dn.fixed(n,r,s,a);return this.#r.createImpulseJoint(o,e,t)}addObject(e){e.traverse(t=>{t.isMesh&&(t.castShadow=!0,t.receiveShadow=!0)}),this.#t.add(e)}render(){this.#a.render(this.#t,this.#o)}step(){this.#r.step()}resize(e,t,n){this.#a.setSize(e,t),this.#a.setPixelRatio(n),this.#o.isPerspectiveCamera&&(this.#o.aspect=e/t,this.#o.updateProjectionMatrix())}set timestep(e){this.#r.timestep=e}get timestep(){return this.#r.timestep}get triangles(){return this.#a.info.render.triangles}get children(){return this.#t.children}forEachCollision(e){this.#r.forEachCollider(t=>this.#r.intersectionPairsWith(t,n=>{t.userData.objectType!==void 0&&n.userData.objectType!==void 0&&e(t.userData,n.userData)}))}forEachCollider(e){this.#r.forEachCollider(t=>{t.isEnabled()&&e(t)})}loadModel(e){return new xm().loadAsync(e)}async save(){return{world:await kN(this.#r.takeSnapshot())}}async load(e){this.#r=T2.restoreSnapshot(await JN(e.world))}get worldBodies(){return this.#r.bodies}get worldColliders(){return this.#r.colliders}get worldJoints(){return this.#r.impulseJoints}get camera(){return this.#o}get containerElement(){return this.#e}get css3DScene(){return this.#n}removeWorldBody(e){this.#r.removeRigidBody(e)}removeWorldCollider(e){this.#r.removeCollider(e)}}async function kN(i){const e=new Blob([i]).stream(),t=new CompressionStream("gzip"),n=await new Response(e.pipeThrough(t)).blob();return await new Promise((r,a)=>{const o=new FileReader;o.onloadend=()=>r(o.result.split(",")[1]),o.onerror=()=>a(o.error),o.readAsDataURL(n)})}async function JN(i){const t=(await(await fetch(`data:application/gzip;base64,${i}`)).blob()).stream().pipeThrough(new DecompressionStream("gzip")),n=await new Response(t).arrayBuffer();return new Uint8Array(n)}const BN=[0,.535,-.3725],rn=[0,.6425,-.3],h3=.6,R9=.7,KN=.9,Qi=.7,M9=.0065,m3=.1,_i=0,$i=0,QN=.1,O9=-.31,zr=.4525,Ar=.005,E9=.05,r1=.075,_N=6,e2=7,$N=0,eR=0,C9=.75,z9=0,tR="#555";class nR{constructor({scene:e}){this.#e=e}#e;initialize(){const e=new _t(h3,Qi,M9),t=new Oi({transparent:!0,opacity:QN}),n=new Be(e,t);n.position.set(...rn),this.#e.addObject(n);const s=this.#e.createFixedBody();this.#e.createCuboidCollider({width:R9,height:KN,depth:m3,friction:_i,restitution:$i,position:BN},s),this.#e.createCuboidCollider({width:h3,height:Qi,depth:M9,friction:_i,restitution:$i,position:rn},s),this.#e.createCuboidCollider({width:.05,height:Qi,depth:m3,friction:_i,restitution:$i,position:[rn[0]-h3/2-.025,rn[1],rn[2]]},s),this.#e.createCuboidCollider({width:.05,height:Qi,depth:m3,friction:_i,restitution:$i,position:[rn[0]+h3/2+.025,rn[1],rn[2]]},s),this.#e.createCuboidCollider({width:R9,height:.05,depth:m3,friction:_i,restitution:$i,position:[rn[0],rn[1]+Qi/2+.025,rn[2]]},s),iR({scene:this.#e,wallBody:s})}}function iR({scene:i,wallBody:e}){const n=-e2*r1/2+r1/2;for(let r=0;r<e2;r++)s(n-r1/2,zr-r1,r,-1,Ar/2,C9,z9);for(let r=0;r<e2;r++)s(n-.075/2,zr-r1/2,r,-1,Ar/2,C9,z9);for(let r=0;r<_N;r++)for(let a=0;a<(r%2===0?e2:e2-1);a++)s(n,zr,a,r,Ar,$N,eR);function s(r,a,o,l,d,c,u){const p=r+o*r1+(l%2===0?0:r1/2),h=a+l*r1,y=new vs(d,d,E9,8),T=new Oi({color:tR}),m=new Be(y,T);m.position.set(p,h,O9),m.rotation.set(Math.PI/2,Math.PI/4,0),i.addObject(m),i.createCuboidCollider({width:d/8,height:E9,depth:d/8,friction:c,restitution:u,position:[p,h,O9],rotation:[Math.PI/2,Math.PI/4,0]},e)}}const Q3=3,o7=new S(0,0,0),A9=new S(1,1,1),sR=-.005,I9=10,rR=50,l7=35,Ir=1,aR=16755200,oR=.03,lR=.1,dR=.00725,cR="./assets/buttons.glb",_3=3,oi=[{color:16777215,background:16711680}],x2=oi.length;class wt{static MAX_INSTANCES=Q3;static TYPES=_3;static COLORS=x2;static#e;static#t;static#n=[];static#a=[];static async initialize({scene:e}){const{materials:t,geometries:n}=await uR({scene:e});this.#e=pR({scene:e,interactiveObjects:this.#a,materials:t,geometries:n,onClick:({color:s,type:r,instanceId:a})=>{const o=this.#t[s][r].find(l=>l.index===a);o.isPressing||(o.isPressing=!0),o.enabled&&this.onPress(o)}}),this.#t=[],fR({scene:e,instances:this.#t,bulbLights:this.#n})}static update(){const e=new B0,t=new S,n=new ee,s=new S;this.#a.forEach(r=>{const{color:a,type:o}=r.userData,l=this.#t[a][o];for(const d of l){if(d.isPressing)if(d.framePressStart===-1)d.framePressStart=0,r.getMatrixAt(d.index,e),e.decompose(t,n,s);else{const c=this.#n[a][o][d.index];if(d.framePressStart++,d.framePressStart<I9){const u=new S(0,sR,0),p=d.framePressStart/I9,h=u.multiplyScalar(p);h.applyQuaternion(d.initialRotation);const y=d.initialPosition.clone().add(h);d.buttonPosition.copy(y),d.enabled&&(c.intensity=p*l7)}else c.intensity=Ir,d.isPressing=!1,d.framePressStart=-1,d.buttonPosition.copy(d.initialPosition)}if(d.isBlinking){if(d.frameBlinkStart===-1)d.frameBlinkStart=0;else if(d.frameBlinkStart++,d.frameBlinkStart>=rR){const c=this.#n[a][o][d.index];d.frameBlinkStart=0,d.blinkingOn=!d.blinkingOn,d.blinkingOn?c.intensity=l7:c.intensity=Ir}!d.blinkingOn&&!d.enabled&&(d.isBlinking=!1,d.frameBlinkStart=void 0)}}});for(let r=0;r<x2;r++)for(let a=0;a<_3;a++){for(const o of this.#t[r][a])o.used&&bR({instance:o,meshes:this.#e[r][a]});this.#e[r][a].forEach(o=>o.instanceMatrix.needsUpdate=!0)}}static load(e){e.forEach((t,n)=>{t.forEach((s,r)=>{s.forEach((a,o)=>{const l=this.#t[n][r][o];l.used=!0,l.enabled=a.enabled,l.isPressing=a.isPressing,l.isBlinking=a.isBlinking,l.frameBlinkStart=a.frameBlinkStart,l.blinkingOn=a.blinkingOn,l.framePressStart=a.framePressStart,l.buttonPosition.fromArray(a.position)})})})}static save(){return this.#t.map(e=>e.map(t=>t.map(n=>({enabled:n.enabled,isPressing:n.isPressing,isBlinking:n.isBlinking,frameBlinkStart:n.frameBlinkStart,blinkingOn:n.blinkingOn,framePressStart:n.framePressStart,position:n.buttonPosition.toArray()}))))}static addButton({type:e,color:t,position:n,rotation:s}){const r=this.#t[t][e].find(o=>!o.used);r.used=!0,r.enabled=!0;const a=this.#n[t][e][r.index];return a.visible=!0,a.intensity=Ir,mR({instance:r,position:n,rotation:s,bulbLight:a}),r}static enable({type:e,color:t,index:n},s){const r=this.#t[t][e].find(a=>a.index===n);r.enabled=s}static blink({type:e,color:t,index:n},s){const r=this.#t[t][e].find(a=>a.index===n);r.isBlinking=s}static get interactiveObjects(){return this.#a}}async function uR({scene:i}){const t=(await i.loadModel(cR)).scene.children,n=[],s=[];for(let r=0;r<x2;r++){const a=t[0],o=a.children[1].material.clone();o.color.setHex(oi[r].color);const l=a.children[2].material.clone();l.color.setHex(oi[r].background);const d=t[2],c=d.children[0].material.clone();c.color.setHex(oi[r].color);const u=d.children[1].material.clone();u.color.setHex(oi[r].background);const p=t[1],h=p.children[1].material.clone();h.color.setHex(oi[r].background),n.push([[a.children[0].material,o,l],[d.children[0].material,c,u],[p.children[0].material,h]]),s.push([[a.children[0].geometry,a.children[1].geometry,a.children[2].geometry],[d.children[0].geometry,d.children[1].geometry,d.children[2].geometry],[p.children[0].geometry,p.children[1].geometry]])}return{materials:n,geometries:s}}function pR({scene:i,materials:e,geometries:t,interactiveObjects:n,onClick:s}){const r=[];for(let a=0;a<x2;a++){const o=[];for(let l=0;l<_3;l++){const d=[];for(let c=0;c<e[a][l].length;c++){const u=new A1(t[a][l][c],e[a][l][c],Q3);for(let p=0;p<Q3;p++)u.setMatrixAt(p,o7);u.active=c>0,u.userData={color:a,type:l,onClick:p=>s({color:a,type:l,instanceId:p})},i.addObject(u),d.push(u),n.push(u)}o.push(d)}r.push(o)}return r}function fR({scene:i,instances:e,bulbLights:t}){for(let n=0;n<x2;n++){e[n]=[],t[n]=[];for(let s=0;s<_3;s++){e[n][s]=[],t[n][s]=[];for(let r=e[n][s].length;r<Q3;r++){hR({type:s,color:n,instances:e});const a=new F4(aR,l7,oR,lR);a.castShadow=!1,t[n][s][r]=a,a.visible=!1,i.addObject(a)}}}}function hR({type:i,color:e,instances:t}){const s={index:t[e][i].length,type:i,color:e,position:new S,buttonPosition:new S,rotation:new ee,initialPosition:new S,initialRotation:new ee,matrix:new B0,used:!1,enabled:!1,isPressing:!1,isBlinking:!1,frameBlinkStart:-1,blinkingOn:!1,framePressStart:-1};return t[e][i].push(s),s}function mR({instance:i,position:e,rotation:t,bulbLight:n}){i.position.fromArray([e.x,e.y,e.z]),i.rotation.setFromEuler(new Ne(t.x,t.y,t.z)),i.initialPosition.fromArray([e.x,e.y,e.z]),i.initialRotation.setFromEuler(new Ne(t.x,t.y,t.z)),i.buttonPosition.fromArray([e.x,e.y,e.z]),n.position.fromArray([e.x,e.y+dR,e.z]),n.rotation.set(t.x,t.y,t.z)}function bR({instance:i,meshes:e}){i.matrix.compose(i.position,i.rotation,i.used?A9:o7),e[0].setMatrixAt(i.index,i.matrix),i.matrix.compose(i.buttonPosition,i.rotation,i.used?A9:o7);for(let t=1;t<e.length;t++)e[t].setMatrixAt(i.index,i.matrix)}const ii=[0,.16125,1.25],Xr=[2*Math.PI+Math.PI/10,0,0],X9=[-.2,0,.2],V9=[-.4,.4];class yR{#e=[];#t;#n;#a;#r;#o;constructor({onPressDropButton:e,onPressActionButton:t,onPressStartButton:n}){this.#a=e,this.#r=t,this.#o=n}async initialize(){for(let e=0;e<X9.length;e++)this.#e[e]=wt.addButton({type:0,color:0,position:new S(X9[e],ii[1],ii[2]),rotation:new S().fromArray(Xr)}),wt.enable(this.#e[e],!1);this.#n=wt.addButton({type:2,color:0,position:new S(V9[0],ii[1],ii[2]),rotation:new S().fromArray(Xr)}),wt.enable(this.#n,!1),this.#t=wt.addButton({type:1,color:0,position:new S(V9[1],ii[1],ii[2]),rotation:new S().fromArray(Xr)}),wt.onPress=e=>{if(e===this.#t)this.#o();else if(this.#e.includes(e)){const t=this.#e.indexOf(e);this.#a(t)}else e===this.#n&&this.#r()},wt.blink(this.#t,!0)}update(){}setDropButtonsOn(){for(const e of this.#e)wt.on(e)}disableStartButton(){wt.enable(this.#t,!1);for(const e of this.#e)wt.enable(e,!0)}enableActionButton(){wt.enable(this.#n,!0)}disableActionButton(){wt.enable(this.#n,!1)}get interactiveObjects(){return wt.interactiveObjects}}const F9=Math.PI/60,vR=.1,x8=.001,gR=1e-4,D9=.003,wR=.3,TR="./assets/pusher.glb",xR="door",SR="platform",PR="delivery-position",HR=5460902,S2=0,d7=1.5,S8=10,Lt={MOVING:Symbol.for("pusher-moving"),PREPARING_DELIVERY:Symbol.for("pusher-preparing-delivery"),OPENING_DOOR:Symbol.for("pusher-opening-door"),DELIVERING_BONUS:Symbol.for("pusher-delivering-bonus"),CLOSING_DOOR:Symbol.for("pusher-closing-door")},cn={IDLE:Symbol.for("pusher-lights-idle"),ACTIVATING:Symbol.for("pusher-lights-activating"),ROTATING:Symbol.for("pusher-lights-rotating"),DELIVERING:Symbol.for("pusher-lights-delivering")};class LR{constructor({scene:e,depositBonus:t}){this.#e=e,this.#o=t}#e;#t;#n;#a;#r;#o;#u;#i=new S;#s=new S;#d={state:Lt.MOVING,nextState:null,rewards:[],phase:0,platform:{},door:{position:0},lights:{state:cn.IDLE,nextState:null,frameLastRefresh:-1,headIndex:0,bulbs:[]}};async initialize(){const{parts:e,deliveryPosition:t,lightBulbsMaterials:n}=await ER({scene:this.#e});this.#t=e,this.#r=t,this.#u=n,CR({scene:this.#e,parts:e}),zR({lightBulbsMaterials:this.#u,lights:this.#d.lights}),this.#n=e.get(xR),this.#a=e.get(SR),e.forEach(({body:s,meshes:r})=>{r.forEach(({data:a})=>this.#e.addObject(a)),s.setEnabled(!0)})}update(){if(NR({pusher:this.#d}),RR({pusher:this.#d}),this.#d.state===Lt.DELIVERING_BONUS){const e=this.#d.rewards.shift();this.#o({reward:e,position:this.#r})}this.#i.setZ(Math.sin(this.#d.phase)*vR),this.#s.setZ(this.#d.door.position),this.#a.body.setNextKinematicTranslation(this.#i),this.#n.body.setNextKinematicTranslation(this.#i.sub(this.#s)),this.#t.forEach(({meshes:e,body:t})=>{e.forEach(({data:n})=>{n.position.copy(t.translation()),n.quaternion.copy(t.rotation())})}),this.#d.lights.state!==cn.IDLE&&this.#d.lights.bulbs.forEach((e,t)=>{this.#u[t].emissiveIntensity=e.intensity}),this.#d.nextState&&(this.#d.state=this.#d.nextState),this.#d.lights.nextState&&(this.#d.lights.state=this.#d.lights.nextState)}deliverBonus(e){this.#d.rewards.push(e),this.#d.state===Lt.MOVING&&(this.#d.state=Lt.PREPARING_DELIVERY)}get phase(){return this.#d.phase}save(){return{state:this.#d.state.description,nextState:this.#d.nextState?this.#d.nextState.description:null,phase:this.#d.phase,rewards:[...this.#d.rewards],platformBodyHandle:this.#a.body.handle,doorBodyHandle:this.#n.body.handle,door:{position:this.#d.door.position},lights:{state:this.#d.lights.state.description,nextState:this.#d.lights.nextState?this.#d.lights.nextState.description:null,frameLastRefresh:this.#d.lights.frameLastRefresh,headIndex:this.#d.lights.headIndex,bulbs:this.#d.lights.bulbs.map(e=>({intensity:e.intensity}))}}}load(e){this.#d.state=Symbol.for(e.state),this.#d.nextState=e.nextState?Symbol.for(e.nextState):null,this.#d.rewards=e.rewards,this.#d.phase=e.phase,this.#a.body=this.#e.worldBodies.get(e.platformBodyHandle),this.#n.body=this.#e.worldBodies.get(e.doorBodyHandle),this.#d.door.position=e.door.position,this.#d.lights.state=Symbol.for(e.lights.state),this.#d.lights.nextState=e.lights.nextState?Symbol.for(e.lights.nextState):null,this.#d.lights.frameLastRefresh=e.lights.frameLastRefresh,this.#d.lights.headIndex=e.lights.headIndex,this.#d.lights.bulbs=e.lights.bulbs.map(t=>({intensity:t.intensity}))}}function NR({pusher:i}){switch(i.nextState=null,i.state){case Lt.MOVING:i.phase=(i.phase+F9)%(Math.PI*2);break;case Lt.PREPARING_DELIVERY:i.phase=(i.phase+F9)%(Math.PI*2),i.lights.state===cn.IDLE&&(i.lights.state=cn.ACTIVATING),i.phase>Math.PI*1.5&&i.phase<Math.PI*1.5+x8&&(i.nextState=Lt.OPENING_DOOR);break;case Lt.OPENING_DOOR:i.door.position=i.door.position+D9,i.door.position>wR&&(i.nextState=Lt.DELIVERING_BONUS);break;case Lt.DELIVERING_BONUS:i.nextState=Lt.CLOSING_DOOR;break;case Lt.CLOSING_DOOR:i.door.position>gR?i.door.position=i.door.position-D9:(i.door.position=0,i.rewards.length>1?i.nextState=Lt.PREPARING_DELIVERY:i.nextState=Lt.MOVING);break}}function RR({pusher:i}){switch(i.lights.nextState=null,i.lights.state){case cn.IDLE:break;case cn.ACTIVATING:i.lights.frameLastRefresh=0,i.lights.nextState=cn.ROTATING;break;case cn.ROTATING:MR(i),i.state===Lt.DELIVERING_BONUS&&(i.lights.nextState=cn.DELIVERING);break;case cn.DELIVERING:OR(i),i.state===Lt.MOVING&&i.phase<Math.PI&&i.phase>.5*Math.PI-x8&&(i.lights.bulbs.forEach(e=>{e.intensity=S2}),i.lights.headIndex=0,i.lights.frameLastRefresh=-1,i.lights.nextState=cn.IDLE);break}}function MR(i){i.lights.frameLastRefresh++,i.lights.frameLastRefresh>S8&&(i.lights.frameLastRefresh=0,i.lights.bulbs.forEach((e,t)=>{e.intensity=t>=i.lights.headIndex*9&&t<(i.lights.headIndex+1)*9?d7:S2}),i.lights.headIndex=(i.lights.headIndex+2)%3)}function OR(i){if(i.lights.frameLastRefresh++,i.lights.frameLastRefresh>S8){const e=i.lights.bulbs[0].intensity;i.lights.frameLastRefresh=0,i.lights.bulbs.forEach(t=>{t.intensity=e==d7?S2:d7})}}async function ER({scene:i}){const t=(await i.loadModel(TR)).scene,n=new Map,s=new S,r=[];return t.traverse(a=>{if(a.isMesh){const{material:o}=a,l=o.userData,d=l.name;if(l.collider){const c=b3(n,d);c.kinematic=c.kinematic||l.kinematic,c.meshes.push({friction:l.friction,restitution:l.restitution,kinematic:l.kinematic,cuboid:l.cuboid,rotation:l.rotation?new S().fromArray(l.rotation):void 0,size:l.size?new S().fromArray(l.size):void 0,data:a})}l.light?(r[a.material.userData.index]=a.material,b3(n,d).meshes.push({data:a})):b3(n,d).meshes.push({data:a})}else a.userData.collider?b3(n,a.userData.name).colliders.push({friction:a.userData.friction,restitution:a.userData.restitution,kinematic:a.userData.kinematic,position:a.position,rotation:new S().fromArray(a.userData.rotation),size:new S().fromArray(a.userData.size)}):a.name===PR&&s.copy(a.position)}),{parts:n,lightBulbsMaterials:r,deliveryPosition:s}}function b3(i,e){let t;return i.has(e)?t=i.get(e):(t={meshes:[],colliders:[]},i.set(e,t)),t}function CR({scene:i,parts:e}){let t=0;e.forEach(n=>{const{meshes:s,kinematic:r,colliders:a}=n,o=n.body=r?i.createKinematicBody():i.createFixedBody();o.setEnabled(!1),s.forEach(({data:l,friction:d,restitution:c,cuboid:u})=>{if(u){const p=l.geometry.boundingBox,h=new S().addVectors(p.min,p.max).multiplyScalar(.5).toArray(),y=new S(p.max.x-p.min.x,p.max.y-p.min.y,p.max.z-p.min.z);i.createCuboidCollider({position:h,width:y.x,height:y.y,depth:y.z,friction:d,restitution:c},o).setCollisionGroups(1<<t%16<<16|1<<t%16),t++}}),a.forEach(({friction:l,restitution:d,position:c,rotation:u,size:p})=>{i.createCuboidCollider({position:c,width:p.x,height:p.y,depth:p.z,rotation:u,friction:l,restitution:d},o).setCollisionGroups(1<<t%16<<16|1<<t%16),t++})})}function zR({lightBulbsMaterials:i,lights:e}){i.forEach((t,n)=>{t.emissive.setHex(HR),t.emissiveIntensity=S2,e.bulbs[n]={intensity:S2}})}const $3="coin",es=1280,X3=.03,u5=.007,W9=.025,j9=.001,AR=[-.1125,0,.1125],Y9=[0,.9,-.32+u5/2],IR=[0,0,0],XR=[0,0,0,1],VR=new S(0,0,0),FR=new S(0,0,0),P8=new S(0,0,0),DR=new S(1,1,1),WR=new Ne(Math.PI/2,0,0),jR=.1,YR=1,GR=.5,UR=.5,qR=0,ZR="./assets/coin.glb",kR=8,JR=.001,BR=new Ne(0,0,0,"XYZ"),si=Math.PI/4,KR=10,QR=6,c7=Math.PI/360,_R=2,$R=5;let u7=.2,p7=1;class Ae{static TYPE=$3;static MAX_INSTANCES=es;static RADIUS=X3;static DEPTH=u5;static#e;static#t=[];static#n=[];static#a=[];static#r=0;static#o;static async initialize({scene:e,onSpawnedCoin:t}){this.#e=e,this.#o=t;const{materials:n,geometries:s}=await eM({scene:e});this.#t=tM({scene:e,materials:n,geometries:s}),this.#n=[],nM({scene:e,instances:this.#n})}static getCoin({index:e}){return this.#n[e]}static update(){if(this.#a.length&&(this.#r++,this.#r>=kR)){const{slot:e}=this.#a.shift(),t=this.#n.find(n=>!n.used);t.used=!0,y3({instance:t,slot:e}),t.body.setEnabled(!0),this.#o(t),this.#r=0}for(const e of this.#n)if(e.used){const t=e.body.linvel();e.linearSpeed=t.x*t.x+t.y*t.y+t.z*t.z;const n=e.body.isSleeping();if(e.angularVelocityHistory.length>KR&&e.angularVelocityHistory.shift(),e.pendingImpulse&&e.body.mass()>0)e.body.applyImpulse(e.pendingImpulse,!0),e.pendingImpulse=null;else if(n)e.sleepCandidateFrames=0;else if(!n){const s=e.body.angvel();e.angularVelocityHistory.push([s.x,s.z]);const r=Math.abs(s.x),a=Math.abs(s.z);e.linearSpeed&&e.linearSpeed<JR&&r<c7&&a<c7&&sM(e)&&rM(e.angularVelocityHistory)?(e.sleepCandidateFrames++,e.sleepCandidateFrames>$R&&(e.body.sleep(),e.sleepCandidateFrames=0)):e.sleepCandidateFrames=0}Vr({instance:e,meshes:this.#t})}}static dropCoin({slot:e}){this.#a.push({slot:e})}static dropCoins({count:e}){let t;for(let n=0;n<e;n++){let s;do s=Math.floor(Math.random()*3);while(s===t);t=s,this.#a.push({slot:s})}}static depositCoin({position:e,rotation:t=new S(0,0,0),impulse:n}){const s=this.#n.find(r=>!r.used);return s.used=!0,y3({instance:s,position:e,rotation:t}),s.body.setEnabled(!0),n&&(s.pendingImpulse=n.clone()),s}static depositCoins({position:e,count:t}){e.x=-.3;for(let n=0;n<t;n++){const s=this.#n.find(a=>!a.used);s.used=!0,e.x+=X3*2,e.x>.3&&(e.x=-.3,e.z-=X3*2);const r=new S(0,0,0);y3({instance:s,position:e,rotation:r}),s.body.setEnabled(!0)}}static recycle(e){e.used=!1,e.linearSpeed=0,e.angularVelocityHistory=[],e.sleepCandidateFrames=0,e.body.setEnabled(!1),y3({instance:e,hidden:!0}),Vr({instance:e,meshes:this.#t,forceRefresh:!0})}static get dynamicBodies(){return this.#n.filter(e=>e.used).map(e=>({object:e,objects:this,body:e.body}))}static get usedCoins(){return this.#n.filter(e=>e.used).length}static save(){return this.#n.map(e=>({position:e.position.toArray(),rotation:e.rotation.toArray(),used:e.used,bodyHandle:this.#n[e.index].body.handle,linearSpeed:e.linearSpeed,angularVelocityHistory:e.angularVelocityHistory,sleepCandidateFrames:e.sleepCandidateFrames,pendingImpulse:e.pendingImpulse?e.pendingImpulse.toArray():null}))}static load(e){e.forEach((t,n)=>{const s=this.#e.worldBodies.get(t.bodyHandle);this.#n[n]={...this.#n[n],position:new S().fromArray(t.position),rotation:new ee().fromArray(t.rotation),used:t.used,body:s,linearSpeed:t.linearSpeed,angularVelocityHistory:t.angularVelocityHistory,sleepCandidateFrames:t.sleepCandidateFrames,pendingImpulse:t.pendingImpulse?new S().fromArray(t.pendingImpulse):null};for(let r=0;r<s.numColliders();r++){const a=s.collider(r);a.userData={objectType:$3,index:n}}Vr({instance:this.#n[n],meshes:this.#t,forceRefresh:!0})})}static enableCcd(e,t){e&&e.body&&e.body.enableCcd(t)}static get friction(){return u7}static set friction(e){u7=e,this.#n.forEach(t=>{t.body.collider(0).setFriction(e)})}static get density(){return p7}static set density(e){p7=e,this.#n.forEach(t=>{t.body.collider(0).setDensity(e)})}}async function eM({scene:i}){const e=await i.loadModel(ZR);e.scene.traverse(o=>{o.isMesh&&(o.castShadow=!0,o.receiveShadow=!0)});const t=e.scene.children[0],n=t.children[0].material,s=t.children[1].material,r=t.children[0].geometry,a=t.children[1].geometry;return s.metalness=.35,n.metalness=.2,{materials:[n,s],geometries:[r,a]}}function tM({scene:i,materials:e,geometries:t}){const n=[];for(let s=0;s<e.length;s++){const r=new A1(t[s],e[s],es);for(let a=0;a<es;a++)r.setMatrixAt(a,P8);r.castShadow=!0,r.receiveShadow=!0,i.addObject(r),n.push(r)}return n}function nM({scene:i,instances:e}){for(let t=e.length;t<es;t++)iM({scene:i,instances:e})}function iM({scene:i,instances:e}){const t=i.createDynamicBody();t.setEnabled(!1),t.setSoftCcdPrediction(jR),t.setAngularDamping(GR),t.setLinearDamping(UR),t.setAdditionalSolverIterations(YR);const n=e.length;i.createCylinderCollider({userData:{objectType:$3,index:n},radius:X3,height:u5,friction:u7,restitution:qR,density:p7},t);const s={objectType:$3,index:n,position:new S,rotation:new ee,body:t,matrix:new B0,used:!1,pendingImpulse:null,angularVelocityHistory:[],sleepCandidateFrames:0};return e.push(s),s}function y3({instance:i,hidden:e,position:t,rotation:n,slot:s=1}){if(e)i.position.fromArray(IR),i.rotation.fromArray(XR),i.body.setLinvel(VR,!1),i.body.setAngvel(FR,!1);else{if(t)i.position.copy(t);else{const r=Math.random();i.position.fromArray([AR[s]+(r<.5?-W9:W9)*Math.random()+(r<.5?-j9:j9),Y9[1],Y9[2]])}if(n)i.rotation.setFromEuler(new Ne(n.x,n.y,n.z));else{const r=WR.clone();r.x+=Math.random()<=.5?Math.PI:0,i.rotation.setFromEuler(r)}}i.body.setTranslation(i.position),i.body.setRotation(i.rotation)}function Vr({instance:i,meshes:e,forceRefresh:t}){i.position.copy(i.body.translation()),i.rotation.copy(i.body.rotation()),i.matrix.compose(i.position,i.rotation,i.used?DR:P8),(i.used||t)&&e.forEach(n=>{n.setMatrixAt(i.index,i.matrix),n.instanceMatrix.needsUpdate=!0})}function sM(i){const e=BR.setFromQuaternion(i.rotation);return(Math.abs(e.x)<si||Math.abs(e.x-Math.PI)<si||Math.abs(e.x+Math.PI)<si)&&(Math.abs(e.z)<si||Math.abs(e.z-Math.PI)<si||Math.abs(e.z+Math.PI)<si)}function rM(i){return i.length>QR&&(G9(0,i)||G9(1,i))}function G9(i,e){let t=Math.sign(e[0][i]),n=0,s=e[0][i],r=e[0][i];for(let a=1;a<e.length;a++){const o=e[a][i],l=Math.sign(o);l!==0&&l!==t&&(n++,t=l),o<s&&(s=o),o>r&&(r=o)}return n>=_R&&r-s<c7}const ts="token",ns=16,aM=.0375,oM=.0075,Fr=[0,.5,.55],is=.6,U9=.1,lM=[0,0,0],dM=[0,0,0,1],cM=new S(0,0,0),uM=new S(0,0,0),H8=new S(0,0,0),pM=new S(1,1,1),Dr=new Ne(0,0,0),fM=.1,hM=0,mM=0,bM=0,yM=.3,vM=.2,gM=.5,wM="./assets/token.glb",f7=[{color:255,background:16777215},{color:32768,background:16777215},{color:0,background:16777215},{color:16711935,background:16777215},{color:16711680,background:16777215},{color:16777215,background:16777215}],N1=f7.length;class Jt{static TYPE=ts;static MAX_INSTANCES=ns;static TYPES=N1;static#e;static#t;static#n;static async initialize({scene:e}){this.#e=e;const{materials:t,geometries:n}=await TM({scene:e});this.#t=xM({scene:e,materials:t,geometries:n}),this.#n=[],SM({scene:e,instances:this.#n})}static getToken({type:e,index:t}){return this.#n[e][t]}static update(){for(let e=0;e<N1;e++){for(const t of this.#n[e])t.used&&Wr({instance:t,meshes:this.#t[e]});this.#t[e].forEach(t=>t.instanceMatrix.needsUpdate=!0)}}static dropToken({type:e}){const t=this.#n[e].find(n=>!n.used);t.used=!0,v3({instance:t}),t.body.setEnabled(!0)}static depositTokens({position:e,count:t}){for(let n=0;n<t;n++){const s=this.#n[Math.floor(Math.random()*(N1-1))].find(a=>!a.used);s.used=!0,e.x=Math.random()*is-is/2;const r=new S(0,0,0);v3({instance:s,position:e,rotation:r}),s.body.setEnabled(!0)}}static depositToken({position:e,rotation:t}){const n=this.#n[Math.floor(Math.random()*(N1-1))].find(s=>!s.used);return n.used=!0,v3({instance:n,position:e,rotation:t}),n.body.setEnabled(!0),n}static recycle(e){e.used=!1,e.body.setEnabled(!1),v3({instance:e,hidden:!0}),Wr({instance:e,meshes:this.#t[e.type]})}static get dynamicBodies(){const e=[];for(let t=0;t<N1;t++)for(const n of this.#n[t])n.used&&e.push({object:n,objects:this,body:n.body});return e}static save(){return this.#n.map(e=>e.map(t=>({position:t.position.toArray(),rotation:t.rotation.toArray(),used:t.used,bodyHandle:this.#n[t.type][t.index].body.handle})))}static load(e){e.forEach((t,n)=>{t.forEach((s,r)=>{const a=this.#e.worldBodies.get(s.bodyHandle),o=this.#n[n][r];this.#n[n][r]={...o,position:new S().fromArray(s.position),rotation:new ee().fromArray(s.rotation),used:s.used,body:a};for(let l=0;l<a.numColliders();l++){const d=a.collider(l);d.userData={objectType:ts,type:n,index:r}}Wr({instance:this.#n[n][r],meshes:this.#t[n]})})})}}async function TM({scene:i}){const t=(await i.loadModel(wM)).scene.children,n=[],s=[];for(let r=0;r<t.length;r++){const a=t[r],o=a.children[0].material.clone();o.color.setHex(f7[r].color);const l=a.children[1].material.clone();l.color.setHex(f7[r].background),n.push([o,l]),s.push([a.children[0].geometry,a.children[1].geometry])}return{materials:n,geometries:s}}function xM({scene:i,materials:e,geometries:t}){const n=[];for(let s=0;s<N1;s++){const r=[];for(let a=0;a<e[s].length;a++){const o=new A1(t[s][a],e[s][a],ns);for(let l=0;l<ns;l++)o.setMatrixAt(l,H8);i.addObject(o),r.push(o)}n.push(r)}return n}function SM({scene:i,instances:e}){for(let t=0;t<N1;t++){e[t]=[];for(let n=e[t].length;n<ns;n++)PM({scene:i,type:t,instances:e})}}function PM({scene:i,type:e,instances:t}){const n=i.createDynamicBody();n.setEnabled(!1),n.setSoftCcdPrediction(fM),n.setAngularDamping(mM),n.setLinearDamping(bM),n.setAdditionalSolverIterations(hM);const s=t[e].length;i.createCylinderCollider({userData:{objectType:ts,type:e,index:s},radius:aM,height:oM,friction:yM,restitution:vM,density:gM},n);const r={objectType:ts,index:s,type:e,position:new S,rotation:new ee,body:n,matrix:new B0,used:!1};return t[e].push(r),r}function v3({instance:i,hidden:e,position:t,rotation:n}){e?(i.position.fromArray(lM),i.rotation.fromArray(dM),i.body.setLinvel(cM,!1),i.body.setAngvel(uM,!1)):(t?i.position.copy(t):i.position.fromArray([Fr[0]+Math.random()*is-is/2,Fr[1],Fr[2]+Math.random()*U9-U9/2]),n?i.rotation.setFromEuler(new Ne(n.x,n.y,n.z)):i.rotation.setFromEuler(new Ne(Dr.x+Math.random()*Math.PI*2,Dr.y+Math.random()*Math.PI*2,Dr.z+Math.random()*Math.PI*2))),i.body.setTranslation(i.position),i.body.setRotation(i.rotation)}function Wr({instance:i,meshes:e}){i.position.copy(i.body.translation()),i.rotation.copy(i.body.rotation()),i.matrix.compose(i.position,i.rotation,i.used?pM:H8),e.forEach(t=>t.setMatrixAt(i.index,i.matrix))}const ss="card",rs=8,HM=.11,LM=.175,NM=.005,jr=[0,.6,.5],as=.2,q9=.2,RM=[0,0,0],MM=[0,0,0,1],OM=new S(0,0,0),EM=new S(0,0,0),L8=new S(0,0,0),CM=new S(1,1,1),Yr=new Ne(0,0,0),zM=.1,AM=0,IM=0,XM=0,VM=.1,FM=.1,DM=.8,WM="./assets/card.glb",h7=[{color:16777215,background:12775},{color:16777215,background:47106},{color:16777215,background:16761095},{color:16777215,background:12189716},{color:16777215,background:5505255},{color:16777215,background:15155712},{color:0,background:16777215}],fi=h7.length;class an{static TYPE=ss;static MAX_INSTANCES=rs;static TYPES=fi;static#e;static#t;static#n;static async initialize({scene:e}){this.#e=e;const{materials:t,geometries:n}=await jM({scene:e});this.#t=YM({scene:e,materials:t,geometries:n}),this.#n=[],GM({scene:e,instances:this.#n})}static getCard({type:e,index:t}){return this.#n[e][t]}static update(){for(let e=0;e<fi;e++){for(const t of this.#n[e])t.used&&Ur({instance:t,meshes:this.#t[e]});this.#t[e].forEach(t=>t.instanceMatrix.needsUpdate=!0)}}static dropCard({type:e}){const t=this.#n[e].find(n=>!n.used);t.used=!0,Gr({instance:t}),t.body.setEnabled(!0)}static depositCards({position:e,count:t}){for(let n=0;n<t;n++){const s=this.#n[Math.floor(Math.random()*(fi-1))].find(a=>!a.used);s.used=!0,e.x=Math.random()*as-as/2;const r=new S(0,0,0);Gr({instance:s,position:e,rotation:r}),s.body.setEnabled(!0)}}static recycle(e){e.used=!1,e.body.setEnabled(!1),Gr({instance:e,hidden:!0}),Ur({instance:e,meshes:this.#t[e.type]})}static get dynamicBodies(){const e=[];for(let t=0;t<fi;t++)for(const n of this.#n[t])n.used&&e.push({object:n,objects:this,body:n.body});return e}static save(){return this.#n.map(e=>e.map(t=>({position:t.position.toArray(),rotation:t.rotation.toArray(),used:t.used,bodyHandle:this.#n[t.type][t.index].body.handle})))}static load(e){e.forEach((t,n)=>{t.forEach((s,r)=>{const a=this.#e.worldBodies.get(s.bodyHandle),o=this.#n[n][r];this.#n[n][r]={...o,position:new S().fromArray(s.position),rotation:new ee().fromArray(s.rotation),used:s.used,body:a};for(let l=0;l<a.numColliders();l++){const d=a.collider(l);d.userData={objectType:ss,type:n,index:r}}Ur({instance:this.#n[n][r],meshes:this.#t[n]})})})}}async function jM({scene:i}){const t=(await i.loadModel(WM)).scene.children,n=[],s=[];for(let r=0;r<t.length;r++){const a=t[r],o=a.children[0].material.clone();o.color.setHex(h7[r].color);const l=a.children[1].material.clone();l.color.setHex(h7[r].background),n.push([o,l]),s.push([a.children[0].geometry,a.children[1].geometry])}return{materials:n,geometries:s}}function YM({scene:i,materials:e,geometries:t}){const n=[];for(let s=0;s<fi;s++){const r=[];for(let a=0;a<e[s].length;a++){const o=new A1(t[s][a],e[s][a],rs);for(let l=0;l<rs;l++)o.setMatrixAt(l,L8);i.addObject(o),r.push(o)}n.push(r)}return n}function GM({scene:i,instances:e}){for(let t=0;t<fi;t++){e[t]=[];for(let n=e[t].length;n<rs;n++)UM({scene:i,type:t,instances:e})}}function UM({scene:i,type:e,instances:t}){const n=i.createDynamicBody();n.setEnabled(!1),n.setSoftCcdPrediction(zM),n.setAngularDamping(IM),n.setLinearDamping(XM),n.setAdditionalSolverIterations(AM);const s=t[e].length;i.createCuboidCollider({userData:{objectType:ss,type:e,index:s},width:LM,height:NM,depth:HM,friction:VM,restitution:FM,density:DM},n);const r={objectType:ss,index:s,type:e,position:new S,rotation:new ee,body:n,matrix:new B0,used:!1};return t[e].push(r),r}function Gr({instance:i,hidden:e,position:t,rotation:n}){e?(i.position.fromArray(RM),i.rotation.fromArray(MM),i.body.setLinvel(OM,!1),i.body.setAngvel(EM,!1)):(t?i.position.copy(t):i.position.fromArray([jr[0]+Math.random()*as-as/2,jr[1],jr[2]+Math.random()*q9-q9/2]),n?i.rotation.setFromEuler(new Ne(n.x,n.y,n.z)):i.rotation.setFromEuler(new Ne(Yr.x+Math.random()*Math.PI*2,Yr.y+Math.random()*Math.PI*2,Yr.z+Math.random()*Math.PI*2))),i.body.setTranslation(i.position),i.body.setRotation(i.rotation)}function Ur({instance:i,meshes:e}){i.position.copy(i.body.translation()),i.rotation.copy(i.body.rotation()),i.matrix.compose(i.position,i.rotation,i.used?CM:L8),e.forEach(t=>t.setMatrixAt(i.index,i.matrix))}const os="ingot",ls=8,qr=[0,.6,.5],ds=.2,Z9=.2,qM=[0,0,0],ZM=[0,0,0,1],kM=new S(0,0,0),JM=new S(0,0,0),N8=new S(0,0,0),BM=new S(1,1,1),Zr=new Ne(0,0,0),KM=.1,QM=0,_M=0,$M=0,eO=.05,tO=0,nO=2,iO="./assets/ingot.glb";class Xn{static TYPE=os;static MAX_INSTANCES=ls;static#e;static#t;static#n;static async initialize({scene:e}){this.#e=e;const{materials:t,geometries:n}=await sO({scene:e});this.#t=aO({scene:e,materials:t,geometries:n}),this.#n=[];const s=rO(this.#t[0].geometry);oO({scene:e,instances:this.#n,colliderData:s})}static getIngot({index:e}){return this.#n[e]}static update(){for(const e of this.#n)e.used&&Jr({instance:e,meshes:this.#t});this.#t.forEach(e=>e.instanceMatrix.needsUpdate=!0)}static dropIngot(){const e=this.#n.find(t=>!t.used);e.used=!0,kr({instance:e}),e.body.setEnabled(!0)}static depositIngots({position:e,count:t}){for(let n=0;n<t;n++){const s=this.#n.find(a=>!a.used);s.used=!0,e.x=Math.random()*ds-ds/2;const r=new S(0,0,0);kr({instance:s,position:e,rotation:r}),s.body.setEnabled(!0)}}static recycle(e){e.used=!1,e.body.setEnabled(!1),kr({instance:e,hidden:!0}),Jr({instance:e,meshes:this.#t})}static get dynamicBodies(){const e=[];for(const t of this.#n)t.used&&e.push({object:t,objects:this,body:t.body});return e}static save(){return this.#n.map(e=>({position:e.position.toArray(),rotation:e.rotation.toArray(),used:e.used,bodyHandle:this.#n[e.index].body.handle}))}static load(e){e.forEach((t,n)=>{const s=this.#e.worldBodies.get(t.bodyHandle),r=this.#n[n];this.#n[n]={...r,position:new S().fromArray(t.position),rotation:new ee().fromArray(t.rotation),used:t.used,body:s};for(let a=0;a<s.numColliders();a++){const o=s.collider(a);o.userData={objectType:os,index:n}}Jr({instance:this.#n[n],meshes:this.#t})})}}async function sO({scene:i}){const t=(await i.loadModel(iO)).scene.children[0].children,n=t[0].material,s=t[1].material;return{materials:[n,s],geometries:[t[0].geometry,t[1].geometry]}}function rO(i){const e=i.attributes.position,t=[],n=[],s=i.index;for(let r=0;r<e.count;r++)t.push(e.getX(r),e.getY(r),e.getZ(r));for(let r=0;r<s.count;r++)n.push(s.getX(r));return{vertices:t,indices:n}}function aO({scene:i,materials:e,geometries:t}){const n=[];for(let s=0;s<e.length;s++){const r=new A1(t[s],e[s],ls);for(let a=0;a<ls;a++)r.setMatrixAt(a,N8);i.addObject(r),n.push(r)}return n}function oO({scene:i,instances:e,colliderData:t}){for(let n=e.length;n<ls;n++)lO({scene:i,instances:e,colliderData:t})}function lO({scene:i,instances:e,colliderData:{vertices:t,indices:n}}){const s=i.createDynamicBody();s.setEnabled(!1),s.setSoftCcdPrediction(KM),s.setAngularDamping(_M),s.setLinearDamping($M),s.setAdditionalSolverIterations(QM);const r=e.length;i.createConvexHullCollider({userData:{objectType:os,index:r},vertices:t,indices:n,friction:eO,restitution:tO,density:nO},s);const a={objectType:os,index:r,position:new S,rotation:new ee,body:s,matrix:new B0,used:!1};return e.push(a),a}function kr({instance:i,hidden:e,position:t,rotation:n}){e?(i.position.fromArray(qM),i.rotation.fromArray(ZM),i.body.setLinvel(kM,!1),i.body.setAngvel(JM,!1)):(t?i.position.copy(t):i.position.fromArray([qr[0]+Math.random()*ds-ds/2,qr[1],qr[2]+Math.random()*Z9-Z9/2]),n?i.rotation.setFromEuler(new Ne(n.x,n.y,n.z)):i.rotation.setFromEuler(new Ne(Zr.x+Math.random()*Math.PI*2,Zr.y+Math.random()*Math.PI*2,Zr.z+Math.random()*Math.PI*2))),i.body.setTranslation(i.position),i.body.setRotation(i.rotation)}function Jr({instance:i,meshes:e}){i.position.copy(i.body.translation()),i.rotation.copy(i.body.rotation()),i.matrix.compose(i.position,i.rotation,i.used?BM:N8),e.forEach(t=>t.setMatrixAt(i.index,i.matrix))}const p5=24,dO=.04,cO=.055,uO=.002,pO=[0,0,0],fO=[0,0,0,1],R8=new S(0,0,0);new S(1,1,1);const hO="./assets/digit.glb",cs=11,l2=[{color:16777215,background:0},{color:0,background:16777215},{color:65280,background:0}],P2=l2.length;class it{static MAX_INSTANCES=p5;static TYPES=cs;static COLORS=P2;static WIDTH=dO;static HEIGHT=cO;static DEPTH=uO;static#e;static#t;static async initialize({scene:e}){const{materials:t,geometries:n}=await mO({scene:e});this.#e=bO({scene:e,materials:t,geometries:n}),this.#t=[],yO({instances:this.#t})}static update(){for(let e=0;e<P2;e++)for(let t=0;t<cs;t++){for(const n of this.#t[e][t])n.used&&J9({instance:n,meshes:this.#e[e][t]});this.#e[e][t].forEach(n=>n.instanceMatrix.needsUpdate=!0)}}static addDigit({type:e,color:t,position:n,rotation:s,scale:r}){const a=this.#t[t][e].find(o=>!o.used);return a.used=!0,a.initialPosition=n,a.initialRotation=s,a.initialScale=r,k9({instance:a,position:n,rotation:s,scale:r}),a}static setVisible(e,t){k9({instance:e,hidden:!t,position:e.initialPosition,rotation:e.initialRotation,scale:e.initialScale}),J9({instance:e,meshes:this.#e[e.color][e.type]})}static getBackgroundColor(e){return l2[e].background}}async function mO({scene:i}){const t=(await i.loadModel(hO)).scene.children,n=[],s=[];for(let r=0;r<P2;r++){const a=[],o=[];for(let c=0;c<t.length-1;c++){const u=t[c],p=u.children[0].material.clone();p.color.setHex(l2[r].color);const h=u.children[1].material.clone();h.color.setHex(l2[r].background),a.push([p,h]),o.push([u.children[0].geometry,u.children[1].geometry])}const l=t[t.length-1],d=l.material.clone();d.color.setHex(l2[r].background),a.push([d]),o.push([l.geometry]),n.push(a),s.push(o)}return{materials:n,geometries:s}}function bO({scene:i,materials:e,geometries:t}){const n=[];for(let s=0;s<P2;s++){const r=[];for(let a=0;a<cs;a++){const o=[];for(let l=0;l<e[s][a].length;l++){const d=new A1(t[s][a][l],e[s][a][l],p5);i.addObject(d),o.push(d)}r.push(o)}n.push(r)}return n}function yO({instances:i}){for(let e=0;e<P2;e++){i[e]=[];for(let t=0;t<cs;t++){i[e][t]=[];for(let n=i[e][t].length;n<p5;n++)vO({type:t,color:e,instances:i})}}}function vO({type:i,color:e,instances:t}){const s={index:t[e][i].length,type:i,color:e,position:new S,rotation:new ee,scale:new S(1,1,1),matrix:new B0,used:!1};return t[e][i].push(s),s}function k9({instance:i,hidden:e,position:t,rotation:n,scale:s}){e?(i.position.fromArray(pO),i.rotation.fromArray(fO),i.scale.fromArray(R8)):(i.position.fromArray([t.x,t.y,t.z]),i.rotation.setFromEuler(new Ne(n.x,n.y,n.z)),i.scale.fromArray([s.x,s.y,s.z]))}function J9({instance:i,meshes:e}){i.matrix.compose(i.position,i.rotation,i.used?i.scale:R8),e.forEach(t=>t.setMatrixAt(i.index,i.matrix))}class gO{constructor({scene:e}){this.#e=e,this.#t=new WeakMap}#e;#t;initialize(){}update(){const e=new WeakMap;this.#e.forEachCollision((t,n)=>{if(t.onIntersect!==void 0||n.onIntersect!==void 0){B9(e,t,n),B9(e,n,t);let s=!1;this.#t.has(t)&&this.#t.get(t).has(n)&&(s=!0),!s&&t.onIntersect!==void 0&&t.onIntersect(n)}}),this.#t=e}}function B9(i,e,t){i.has(e)||i.set(e,new WeakSet),i.get(e).add(t)}const wO=10,kt=.015,TO=10;class g3{constructor({scene:e,position:t,rotation:n,scale:s,digitsCount:r,color:a}){this.#e=e,this.#t=r,this.#n=a,this.#a=t,this.#r=n,this.#o=s||[1,1,1]}#e;#t;#n;#a;#r;#o;#u=[];#i=0;async initialize(){for(let e=0;e<this.#t;e++){this.#u[e]=[];for(let t=0;t<TO;t++){const n=this.#a[0]+e*it.WIDTH*this.#o[0],s=this.#a[1],r=this.#a[2];this.#u[e][t]=it.addDigit({type:t,color:this.#n,position:new S(n,s,r),rotation:new S(Math.PI/2+this.#r[0],this.#r[1],this.#r[2]),scale:new S(this.#o[0],this.#o[2],this.#o[1])})}}this.#s()}#s(){const e=new d1,t=this.#t*it.WIDTH,n=new Oi({color:it.getBackgroundColor(this.#n),roughness:.5,metalness:0}),s=new Be(new _t((t+2*kt)*this.#o[0],kt*this.#o[1],it.DEPTH*this.#o[2]),n);s.position.set((t/2-it.WIDTH/2)*this.#o[0],(it.HEIGHT/2+kt/2)*this.#o[1],0);const r=new Be(new _t((t+2*kt)*this.#o[0],kt*this.#o[1],it.DEPTH*this.#o[2]),n);r.position.set((t/2-it.WIDTH/2)*this.#o[0],(-.055/2-kt/2)*this.#o[1],0);const a=new Be(new _t(kt*this.#o[0],(it.HEIGHT+2*kt)*this.#o[1],it.DEPTH*this.#o[2]),n);a.position.set((-kt/2-it.WIDTH/2)*this.#o[0],0,0);const o=new Be(new _t(kt*this.#o[0],(it.HEIGHT+2*kt)*this.#o[1],it.DEPTH*this.#o[2]),n);o.position.set((t+kt/2-it.WIDTH/2)*this.#o[0],0,0),e.add(s),e.add(r),e.add(a),e.add(o),this.#e.addObject(e),e.position.fromArray(this.#a),e.rotation.fromArray([this.#r[0],this.#r[1],this.#r[2]])}set(e){const t=String(Math.max(0,e)).padStart(this.#t,"0").split("");for(let n=0;n<this.#t;n++)for(let s=0;s<10;s++){const r=this.#u[n][s];it.setVisible(r,s==t[n])}}update(){this.#i++,this.#i>wO&&(it.update(),this.#i=0)}}const xO=8,SO=0,PO=[-.35,1.115,-.33],HO=[0,0,0],LO=4,NO=0,RO=[.79,1.115,-.33],MO=[0,0,0],OO=6,EO=0,CO=[.15,1.115,-.33],zO=[0,0,0],AO=4,IO=0,XO=[-.8275,.22,.77],VO=[0,0,0],FO=[.7,.7,1];class DO{constructor({scene:e,cabinet:t,state:n}){this.#e=e,this.#t=t,this.#n=n}#e;#t;#n;#a;#r;#o;#u;async initialize(){this.#a=new g3({scene:this.#e,position:PO,rotation:HO,digitsCount:xO,color:SO}),await this.#a.initialize(),this.#r=new g3({scene:this.#e,position:CO,rotation:zO,digitsCount:OO,color:EO}),await this.#r.initialize(),this.#o=new g3({scene:this.#e,position:RO,rotation:MO,digitsCount:LO,color:NO}),await this.#o.initialize(),this.#u=new g3({scene:this.#e,position:XO,rotation:VO,scale:FO,digitsCount:AO,color:IO}),await this.#u.initialize()}update(){this.#a.set(this.#n.score),this.#r.set(this.#n.points),this.#o.set(this.#n.coins),this.#u.set(this.#t.coinsInPlay),this.#a.update(),this.#o.update(),this.#u.update(),this.#r.update()}}const M8=15198183,WO=16777215,O8=.1,jO=.25,YO=16777215,E8=0,GO=.25,us=5,UO=6,Br=[0,.335,-.27],qO=.6,ZO=.01,K9=.04,kO=-.22,Q9=.22,JO=.075,BO=1/5,KO=5,QO=5,_9="sensor-gate",_O="./assets/sensor-gate.glb",Je={OFF:Symbol.for("sensor-gate-off"),ACTIVATING:Symbol.for("sensor-gate-activating"),FLASHING_ON:Symbol.for("sensor-gate-flashing-on"),FLASHING_OFF:Symbol.for("sensor-gate-flashing-off"),LOCKED_ON:Symbol.for("sensor-gate-locked-on")},st={IDLE:Symbol.for("sensor-letter-idle"),ACTIVATING:Symbol.for("sensor-letter-activating"),FLASHING_ON:Symbol.for("sensor-letter-flashing-on"),FLASHING_OFF:Symbol.for("sensor-letter-flashing-off"),AWAITING_BONUS_DELIVERY:Symbol.for("sensor-letter-awaiting-bonus-delivery"),AWAITING_BONUS_DELIVERED:Symbol.for("sensor-letter-awaiting-bonus-delivered")};class $O{constructor({scene:e,onBonusWon:t,onCoinFallen:n}){this.#e=e,this.#t=t,this.#n=n}#e;#t;#n;#a;#r;#o={state:st.IDLE,nextState:null,frameFlashStart:-1,flashCount:0,letters:[{state:Je.OFF,nextState:null,frameFlashStart:-1,flashCount:0},{state:Je.OFF,nextState:null,frameFlashStart:-1,flashCount:0},{state:Je.OFF,nextState:null,frameFlashStart:-1,flashCount:0},{state:Je.OFF,nextState:null,frameFlashStart:-1,flashCount:0},{state:Je.OFF,nextState:null,frameFlashStart:-1,flashCount:0},{state:Je.OFF,nextState:null,frameFlashStart:-1,flashCount:0}]};async initialize(){this.#a=await nE({scene:this.#e}),this.#r=this.#e.createCuboidCollider({width:qO,height:ZO,depth:K9,position:[Br[0],Br[1],Br[2]-K9],sensor:!0,userData:{objectType:_9,onIntersect:e=>$9({userData:e,sensor:this.#o,onCoinFallen:this.#n})}})}update(){this.#o.letters.forEach(e=>tE({letter:e})),this.#o.state===st.IDLE&&this.#o.letters.every(e=>e.state===Je.LOCKED_ON)&&(this.#o.state=st.ACTIVATING),eE({sensor:this.#o}),this.#o.state===st.AWAITING_BONUS_DELIVERED&&(this.#o.letters.forEach(e=>e.state=Je.OFF),this.#t()),this.#o.letters.forEach((e,t)=>{const n=this.#a[t];e.state===Je.FLASHING_ON||this.#o.state===st.FLASHING_ON||this.#o.state===st.AWAITING_BONUS_DELIVERY||this.#o.state===st.IDLE&&e.state===Je.LOCKED_ON?(n.color.setHex(WO),n.opacity=jO,n.emissiveIntensity=GO):(n.color.setHex(M8),n.opacity=O8,n.emissiveIntensity=E8)}),this.#o.nextState&&(this.#o.state=this.#o.nextState),this.#o.letters.forEach(e=>{e.nextState&&(e.state=e.nextState)})}save(){return{colliderHandle:this.#r.handle,sensor:{state:this.#o.state.description,nextState:this.#o.nextState?this.#o.nextState.description:null,frameFlashStart:this.#o.frameFlashStart,flashCount:this.#o.flashCount,letters:this.#o.letters.map(e=>({state:e.state.description,nextState:e.nextState?e.nextState.description:null,frameFlashStart:e.frameFlashStart,flashCount:e.flashCount}))}}}load(e){this.#r=this.#e.worldColliders.get(e.colliderHandle),this.#r.userData={objectType:_9,onIntersect:t=>$9({sensor:this.#o,userData:t,onCoinFallen:this.#n})},this.#o.state=Symbol.for(e.sensor.state),this.#o.nextState=e.sensor.nextState?Symbol.for(e.sensor.nextState):null,this.#o.frameFlashStart=e.sensor.frameFlashStart,this.#o.flashCount=e.sensor.flashCount,this.#o.letters.forEach((t,n)=>{t.state=Symbol.for(e.sensor.letters[n].state),t.nextState=e.sensor.letters[n].nextState?Symbol.for(e.sensor.letters[n].nextState):null,t.frameFlashStart=e.sensor.letters[n].frameFlashStart,t.flashCount=e.sensor.letters[n].flashCount})}}function $9({sensor:i,userData:e,onCoinFallen:t}){if(e.objectType===Ae.TYPE){const n=Ae.getCoin(e);if(n){t(n);const s=n.position.x;if(s>kO&&s<Q9){const r=Math.floor((s+Q9)/JO),a=i.letters[r];i.state===st.IDLE&&a.state===Je.OFF&&(a.state=Je.ACTIVATING)}}}}function eE({sensor:i}){switch(i.nextState=null,i.state){case st.ACTIVATING:i.frameFlashStart=0,i.nextState=st.FLASHING_ON;break;case st.FLASHING_ON:i.frameFlashStart++,i.frameFlashStart>us&&(i.frameFlashStart=0,i.flashCount<KO?i.nextState=st.FLASHING_OFF:i.nextState=st.AWAITING_BONUS_DELIVERY);break;case st.FLASHING_OFF:i.frameFlashStart++,i.frameFlashStart>us&&(i.frameFlashStart=0,i.flashCount++,i.nextState=st.FLASHING_ON);break;case st.AWAITING_BONUS_DELIVERY:i.flashCount=0,i.frameFlashStart=-1,i.nextState=st.AWAITING_BONUS_DELIVERED;break;case st.AWAITING_BONUS_DELIVERED:i.nextState=st.IDLE;break}}function tE({letter:i}){switch(i.nextState=null,i.state){case Je.OFF:break;case Je.ACTIVATING:Math.random()<BO?(i.nextState=Je.FLASHING_ON,i.frameFlashStart=0):i.nextState=Je.OFF;break;case Je.FLASHING_ON:i.frameFlashStart++,i.frameFlashStart>us&&(i.frameFlashStart=0,i.flashCount<QO?i.nextState=Je.FLASHING_OFF:i.nextState=Je.LOCKED_ON);break;case Je.FLASHING_OFF:i.frameFlashStart++,i.frameFlashStart>us&&(i.frameFlashStart=0,i.flashCount++,i.nextState=Je.FLASHING_ON);break;case Je.LOCKED_ON:i.flashCount=0,i.frameFlashStart=-1;break}}async function nE({scene:i}){const t=(await i.loadModel(_O)).scene.children[0],n=[];for(let s=0;s<UO;s++){const r=t.children[s].material;r.color.setHex(M8),r.transparent=!0,r.opacity=O8,r.emissiveIntensity=E8,r.emissive.setHex(YO),t.children[s].material=r,n.push(r)}return i.addObject(t),n}const w3=8,eo=Math.PI/20,iE=Math.PI/10,sE=Math.PI/90,rE=Math.PI/60,aE=10,to=3,oE=100,lE="./assets/reels-box.glb",f5=.2,dE=1,cE=16502858,uE=16502858,Cs=0,pE=1.5,fE=5,hE=10,ft={IDLE:Symbol.for("reels-box-idle"),ACTIVATING:Symbol.for("reels-box-activating"),SPINNING_REELS:Symbol.for("reels-box-spinning-reels"),STOPPING:Symbol.for("reels-box-stopping"),PREPARING_BONUS_DELIVERY:Symbol.for("reels-box-preparing-bonus-delivery"),DELIVERING_BONUS:Symbol.for("reels-box-delivering-bonus")},Ft={IDLE:Symbol.for("reel-idle"),STARTING:Symbol.for("reel-starting"),ACCELERATING:Symbol.for("reel-accelerating"),SPINNING:Symbol.for("reel-spinning"),DECELERATING:Symbol.for("reel-decelerating")},Ht={IDLE:Symbol.for("reels-box-lights-idle"),ACTIVATING:Symbol.for("reels-box-lights-activating"),STARTING_ROTATING:Symbol.for("reels-box-lights-starting-rotating"),ROTATING:Symbol.for("reels-box-lights-rotating"),STARTING_BLINKING:Symbol.for("reels-box-lights-starting-blinking"),BLINKING:Symbol.for("reels-box-lights-blinking"),STOPPING_BLINKING:Symbol.for("reels-box-lights-stopping-blinking")};class mE{constructor({scene:e,onBonusWon:t}){this.#e=e,this.#a=t}#e;#t;#n;#a;#r={state:ft.IDLE,nextState:null,pendingSpins:0,frameActive:-1,reels:[{state:Ft.IDLE,nextState:null,index:0,rotation:0,previousRotation:0,currentSpeed:0,targetIndex:-1,targetRotation:-1},{state:Ft.IDLE,nextState:null,index:0,rotation:0,previousRotation:0,currentSpeed:0,targetIndex:-1,targetRotation:-1},{state:Ft.IDLE,nextState:null,index:0,rotation:0,previousRotation:0,currentSpeed:0,targetIndex:-1,targetRotation:-1}],lights:{state:Ht.IDLE,nextState:null,headIndex:0,frameLastRefresh:-1,bulbs:[]}};async initialize(){const e=this.#e,{reelsMeshes:t,lightBulbsMaterials:n}=await gE({scene:e});this.#n=t,this.#t=n,wE({lightBulbsMaterials:n,lights:this.#r.lights})}update(){const e=this.#r,{state:t,reels:n,lights:s}=e;t!==ft.IDLE&&(bE({reelsBox:e}),vE({reelsBox:e}),n.forEach(r=>yE({reel:r})),n.forEach((r,a)=>this.#n[a].rotation.x=r.rotation),t===ft.DELIVERING_BONUS&&this.#a(n.map(r=>r.index))),s.state!==Ht.IDLE&&s.bulbs.forEach((r,a)=>{this.#t[a].emissiveIntensity=r.intensity,this.#t[a].opacity=r.opacity}),e.nextState&&(e.state=e.nextState),n.forEach(r=>{r.nextState&&(r.state=r.nextState)}),s.nextState&&(s.state=s.nextState)}spinReels(){this.#r.state===ft.IDLE?this.#r.state=ft.ACTIVATING:this.#r.pendingSpins++}save(){return{state:this.#r.state.description,nextState:this.#r.nextState?this.#r.nextState.description:null,pendingSpins:this.#r.pendingSpins,frameActive:this.#r.frameActive,reels:this.#r.reels.map(e=>({state:e.state.description,nextState:e.nextState?e.nextState.description:null,index:e.index,rotation:e.rotation,previousRotation:e.previousRotation,currentSpeed:e.currentSpeed,targetIndex:e.targetIndex,targetRotation:e.targetRotation})),lights:{state:this.#r.lights.state.description,headIndex:this.#r.lights.headIndex,frameLastRefresh:this.#r.lights.frameLastRefresh,bulbs:this.#r.lights.bulbs.map(e=>({intensity:e.intensity}))}}}load(e){this.#r.state=Symbol.for(e.state),this.#r.nextState=e.nextState?Symbol.for(e.nextState):null,this.#r.pendingSpins=e.pendingSpins,this.#r.frameActive=e.frameActive,this.#r.reels.forEach((t,n)=>{t.state=Symbol.for(e.reels[n].state),t.nextState=e.reels[n].nextState?Symbol.for(e.reels[n].nextState):null,t.index=e.reels[n].index,t.rotation=e.reels[n].rotation,t.targetIndex=e.reels[n].targetIndex,t.targetRotation=e.reels[n].targetRotation,t.previousRotation=e.reels[n].previousRotation,t.currentSpeed=e.reels[n].currentSpeed,this.#n[n].rotation.x=t.rotation}),this.#r.lights.state=Symbol.for(e.lights.state),this.#r.lights.headIndex=e.lights.headIndex,this.#r.lights.frameLastRefresh=e.lights.frameLastRefresh,this.#r.lights.bulbs.forEach((t,n)=>{t.intensity=e.lights.bulbs[n].intensity})}}function bE({reelsBox:i}){switch(i.nextState=null,i.state){case ft.ACTIVATING:i.reels.forEach(e=>e.state=Ft.STARTING),i.nextState=ft.SPINNING_REELS,i.lights.state=Ht.ACTIVATING;break;case ft.SPINNING_REELS:i.reels.every(e=>e.state===Ft.IDLE)&&(i.frameActive=0,i.nextState=ft.STOPPING);break;case ft.STOPPING:i.frameActive++,i.frameActive>oE&&(i.frameActive=0,i.nextState=ft.PREPARING_BONUS_DELIVERY);break;case ft.PREPARING_BONUS_DELIVERY:i.nextState=ft.DELIVERING_BONUS;break;case ft.DELIVERING_BONUS:i.pendingSpins>0?(i.pendingSpins--,i.nextState=ft.ACTIVATING):i.nextState=ft.IDLE;break}}function yE({reel:i}){switch(i.nextState=null,i.state){case Ft.IDLE:break;case Ft.STARTING:i.targetIndex=Math.floor(Math.random()*w3);const e=Math.floor(Math.random()*(aE-to+1))+to,t=i.targetIndex-i.index+(i.targetIndex<=i.index?w3:0);i.targetRotation=i.rotation+e*Math.PI*2+t*(Math.PI*2/w3),i.previousRotation=i.rotation,i.currentSpeed=0,i.nextState=Ft.ACCELERATING;break;case Ft.ACCELERATING:i.currentSpeed<iE&&(i.currentSpeed+=sE),(i.rotation-i.previousRotation>Math.PI||i.targetRotation-i.rotation<0)&&(i.nextState=Ft.SPINNING),i.rotation+=i.currentSpeed;break;case Ft.SPINNING:i.targetRotation-i.rotation<Math.PI&&(i.nextState=Ft.DECELERATING),i.rotation+=i.currentSpeed;break;case Ft.DECELERATING:i.currentSpeed>eo?i.currentSpeed-=rE:i.currentSpeed=eo,i.targetRotation-i.rotation<0?(i.index=i.targetIndex,i.rotation=i.index*(Math.PI*2/w3),i.previousRotation=i.rotation,i.targetIndex=-1,i.targetRotation=-1,i.currentSpeed=0,i.nextState=Ft.IDLE):i.rotation+=i.currentSpeed;break}}function vE({reelsBox:i}){switch(i.lights.nextState=null,i.lights.state){case Ht.IDLE:break;case Ht.ACTIVATING:i.lights.nextState=Ht.STARTING_ROTATING;break;case Ht.STARTING_ROTATING:i.lights.frameLastRefresh=0,i.lights.nextState=Ht.ROTATING;break;case Ht.ROTATING:i.lights.frameLastRefresh++,i.lights.frameLastRefresh>hE&&(i.lights.headIndex=(i.lights.headIndex+1)%3,i.lights.bulbs.forEach((e,t)=>{T3(e,t%3===i.lights.headIndex||(t+1)%3===i.lights.headIndex)}),i.lights.frameLastRefresh=0),i.state===ft.STOPPING&&(i.lights.nextState=Ht.STARTING_BLINKING);break;case Ht.STARTING_BLINKING:i.lights.bulbs.forEach((e,t)=>T3(e,t%2===0)),i.lights.headIndex=0,i.lights.frameLastRefresh=0,i.lights.nextState=Ht.BLINKING;break;case Ht.BLINKING:i.lights.frameLastRefresh++,i.lights.frameLastRefresh>fE&&(i.lights.bulbs.forEach(e=>T3(e,e.intensity===Cs)),i.lights.frameLastRefresh=0),i.state===ft.PREPARING_BONUS_DELIVERY&&(i.lights.nextState=Ht.STOPPING_BLINKING);break;case Ht.STOPPING_BLINKING:i.lights.bulbs.forEach(e=>T3(e,!1)),i.lights.frameLastRefresh=-1,i.lights.nextState=Ht.IDLE;break}}async function gE({scene:i}){const e=[],t=[],n=await i.loadModel(lE);return n.scene.traverse(s=>{s.isMesh&&(s.userData.reel?e[s.userData.index]=s:s.material.userData.light&&(t[s.material.userData.index]=s.material=new A4({color:cE,emissive:uE,emissiveIntensity:Cs,opacity:f5,transparent:!0})))}),i.addObject(n.scene),{reelsMeshes:e,lightBulbsMaterials:t}}function wE({lightBulbsMaterials:i,lights:e}){i.forEach((t,n)=>{e.bulbs[n]={intensity:Cs,opacity:f5,frameLastRefresh:-1}})}function T3(i,e){e?(i.intensity=pE,i.opacity=dE):(i.intensity=Cs,i.opacity=f5)}const TE="./assets/excavator.glb",xE=new S(0,1,0),SE="beacon-light-bulb",PE="beacon-light-mirror",m7="rotating-platform",HE="drop-position",LE="beacon-light-position",NE="joint-rotating-platform",RE="joint-arm-rotating-platform",ME="joint-arms",OE="joint-jaws",EE="joint-jaw-1",CE="joint-jaw-2",zE="joint-jaw-3",AE="joint-jaw-4",Se=5e4,ze=2e4,IE=.1,XE=Math.PI/3,VE=.2,FE=1.5,DE=16760737,WE=.5,jE=.1,Kr=0,YE=10,GE=.3,UE=1,no=.06,qE=65537,se={IDLE:Symbol.for("excavator-idle"),ACTIVATING:Symbol.for("excavator-activating"),OPENING_JAWS:Symbol.for("excavator-opening-jaws"),MOVING_DOWN:Symbol.for("excavator-moving-down"),CLOSING_JAWS:Symbol.for("excavator-closing-jaws"),PICKING:Symbol.for("excavator-picking"),MOVING_UP:Symbol.for("excavator-moving-up"),MOVING_TO_DROP_ZONE:Symbol.for("excavator-moving-to-drop-zone"),EXTENDING_ARMS:Symbol.for("excavator-extending-arms"),DROPPING:Symbol.for("excavator-dropping"),CLOSING_JAWS_AFTER_DROPPING:Symbol.for("excavator-closing-jaws-after-dropping"),RETRACTING_ARMS:Symbol.for("excavator-retracting-arms"),MOVING_TO_BASE:Symbol.for("excavator-moving-to-base"),PREPARING_IDLE:Symbol.for("excavator-preparing-idle")};class ZE{#e;#t;#n;#a;#r;#o;#u;#i;#s;#d={state:se.IDLE,pendingPicks:0,beaconLightAngle:0};constructor({scene:e,onPick:t,canActivate:n,onGetObject:s,onRecycleObject:r}){this.#e=e,this.#t=n,this.#n=t,this.#r=s,this.#a=r}async initialize(){const e=this.#e,{parts:t,joints:n,dropPosition:s,beaconLightPosition:r}=await JE({scene:e});this.#o=s,this.#i=r;const{trapSensor:a}=BE({scene:e,parts:t,joints:n,trapSensor:this.#s,onRecycleObject:o=>{this.#r(o)&&this.#a(o)}});this.#s=a,t.forEach(({body:o,meshes:l})=>{l.forEach(({data:d})=>this.#e.addObject(d)),o.setEnabled(!0)}),t.get(m7).body.setEnabledRotations(!1,!1,!1),Object.assign(this.#d,{parts:t,joints:n}),this.#l.joint.configureMotor(0,1,Se,ze),this.#b.joint.configureMotor(0,3.7,Se,ze),this.#g.joint.configureMotor(0,0,1,0),this.#u=new V4(DE,Kr,VE,XE,WE,jE),this.#u.position.copy(this.#i),this.#e.addObject(this.#u),this.#e.addObject(this.#u.target)}update(){kE({excavator:this.#d,joints:{platformJoint:this.#f,platformArmJoint:this.#l,armsJoint:this.#b,jaw1Joint:this.#m,jaw2Joint:this.#h,jaw3Joint:this.#y,jaw4Joint:this.#v},canActivate:()=>this.#t(this)});const{state:e,parts:t}=this.#d,n=this.#x.meshes[0].data.material;if(e!==se.IDLE){e===se.PICKING&&this.#n(this.#o),e===se.MOVING_TO_DROP_ZONE&&this.#p.body.setEnabledRotations(!1,!0,!1),e===se.EXTENDING_ARMS&&this.#p.body.setEnabledRotations(!1,!1,!1),e===se.MOVING_TO_BASE&&this.#p.body.setEnabledRotations(!1,!0,!1),e===se.CLOSING_JAWS_AFTER_DROPPING&&this.#p.body.setEnabledRotations(!1,!1,!1),n.emissiveIntensity=YE,n.opacity=UE,this.#u.intensity=FE;const s=new ee().setFromAxisAngle(xE,this.#d.beaconLightAngle);this.#S.body.setNextKinematicTranslation(new S(0,0,0).sub(this.#i).applyQuaternion(s).add(this.#i)),this.#S.body.setNextKinematicRotation(s),this.#u.target.position.set(this.#u.position.x+Math.sin(this.#d.beaconLightAngle),this.#u.position.y,this.#u.position.z+Math.cos(this.#d.beaconLightAngle))}else n.emissiveIntensity=Kr,n.opacity=GE,this.#u.intensity=Kr;t.forEach(({meshes:s,body:r})=>s.forEach(({data:a})=>{a.position.copy(r.translation()),a.quaternion.copy(r.rotation())})),this.#d.nextState&&(this.#d.state=this.#d.nextState)}save(){const e={},t={};return this.#d.joints.forEach((n,s)=>{e[s]={jointHandle:n.joint.handle}}),this.#d.parts.forEach((n,s)=>{const{body:r}=n;t[s]={bodyHandle:r.handle}}),{state:this.#d.state.description,nextState:this.#d.nextState?this.#d.nextState.description:null,pendingPicks:this.#d.pendingPicks,beaconLightAngle:this.#d.beaconLightAngle,joints:e,parts:t,trapSensorHandle:this.#s.handle}}load(e){this.#d.parts.forEach(t=>{t.meshes.forEach(({data:n})=>{n.traverse(s=>{if(s.isMesh){const r=s.material.userData,a=s.material.name;if(r.sensor){const o=e.trapSensorHandle,l=this.#e.worldColliders.get(o);l.userData={objectType:a,onIntersect:this.#a},this.#s=l}}})})}),this.#d.state=Symbol.for(e.state),this.#d.nextState=e.nextState?Symbol.for(e.nextState):null,this.#d.pendingPicks=e.pendingPicks,this.#d.beaconLightAngle=e.beaconLightAngle,this.#d.joints.forEach((t,n)=>{const s=e.joints[n];s&&(t.joint=this.#e.worldJoints.get(s.jointHandle),t.params.body1=t.joint.body1(),t.params.body2=t.joint.body2())}),this.#d.parts.forEach((t,n)=>{const s=e.parts[n];s&&(t.body=this.#e.worldBodies.get(s.bodyHandle))})}get active(){return this.#d.state!==se.IDLE&&this.#d.state!==se.ACTIVATING}pick(){this.#d.state===se.IDLE?this.#d.state=se.ACTIVATING:this.#d.pendingPicks++}get joints(){const e=[];return this.#d.joints.forEach(t=>{const{joint:n,params:s}=t;e.push({joint:n,jointData:s})}),e}get#f(){return this.#d.joints.get(NE)}get#l(){return this.#d.joints.get(RE)}get#b(){return this.#d.joints.get(ME)}get#g(){return this.#d.joints.get(OE)}get#m(){return this.#d.joints.get(EE)}get#h(){return this.#d.joints.get(CE)}get#y(){return this.#d.joints.get(zE)}get#v(){return this.#d.joints.get(AE)}get#p(){return this.#d.parts.get(m7)}get#x(){return this.#d.parts.get(SE)}get#S(){return this.#d.parts.get(PE)}}function kE({excavator:i,joints:e,canActivate:t}){i.nextState=null;const{platformJoint:n,platformArmJoint:s,armsJoint:r,jaw1Joint:a,jaw2Joint:o,jaw3Joint:l,jaw4Joint:d}=e;switch(i.state){case se.IDLE:break;case se.ACTIVATING:t()&&(a.joint.configureMotor(-.5,-2.5,Se,ze),o.joint.configureMotor(.5,2.5,Se,ze),l.joint.configureMotor(-.5,-2.5,Se,ze),d.joint.configureMotor(.5,2.5,Se,ze),i.nextState=se.OPENING_JAWS);break;case se.OPENING_JAWS:We(a)<-.5&&We(o)>.5&&We(l)<-.5&&We(d)>.5&&(s.joint.configureMotor(-.7,1,Se,ze),r.joint.configureMotor(.5,3,Se,ze),i.nextState=se.MOVING_DOWN);break;case se.MOVING_DOWN:We(s)<-.7&&We(r)>.5&&(a.joint.configureMotor(0,2.5,Se,ze),o.joint.configureMotor(0,-2.5,Se,ze),l.joint.configureMotor(0,2.5,Se,ze),d.joint.configureMotor(0,-2.5,Se,ze),i.nextState=se.CLOSING_JAWS);break;case se.CLOSING_JAWS:We(a)>-.01&&We(o)<.01&&We(l)>-.01&&We(d)<.01&&(i.nextState=se.PICKING);break;case se.PICKING:s.joint.configureMotor(.5,1,Se,ze),r.joint.configureMotor(-.2,4,Se,ze),i.nextState=se.MOVING_UP;break;case se.MOVING_UP:We(s)>.5&&(n.joint.configureMotor(-2,-3,Se,Se),i.nextState=se.MOVING_TO_DROP_ZONE);break;case se.MOVING_TO_DROP_ZONE:We(n)<-2&&(s.joint.configureMotor(-.3,1,Se,ze),r.joint.configureMotor(.9,8,Se,ze),i.nextState=se.EXTENDING_ARMS);break;case se.EXTENDING_ARMS:We(r)>.8&&(a.joint.configureMotor(-.5,-2.5,Se,ze),o.joint.configureMotor(.5,2.5,Se,ze),l.joint.configureMotor(-.5,-2.5,Se,ze),d.joint.configureMotor(.5,2.5,Se,ze),i.nextState=se.DROPPING);break;case se.DROPPING:We(a)<-.5&&We(o)>.5&&We(l)<-.5&&We(d)>.5&&(s.joint.configureMotor(.5,.7,Se,ze),r.joint.configureMotor(-.3,3.45,Se,ze),i.nextState=se.RETRACTING_ARMS);break;case se.RETRACTING_ARMS:We(s)>.4&&We(r)<.5&&(n.joint.configureMotor(0,-.7,Se,Se),i.nextState=se.MOVING_TO_BASE);break;case se.MOVING_TO_BASE:We(n)>-.01&&(s.joint.configureMotor(0,1,Se,ze),r.joint.configureMotor(0,3.7,Se,ze),i.nextState=se.CLOSING_JAWS_AFTER_DROPPING);break;case se.CLOSING_JAWS_AFTER_DROPPING:We(s)<.1&&We(r)>-.1&&(i.pendingPicks>0?(i.pendingPicks--,i.nextState=se.ACTIVATING):i.beaconLightAngle>0&&i.beaconLightAngle<no&&(i.beaconLightAngle=0,a.joint.configureMotor(0,2.5,Se,ze),o.joint.configureMotor(0,-2.5,Se,ze),l.joint.configureMotor(0,2.5,Se,ze),d.joint.configureMotor(0,-2.5,Se,ze),i.nextState=se.PREPARING_IDLE));break;case se.PREPARING_IDLE:We(a)>-.01&&We(o)<.01&&We(l)>-.01&&We(d)<.01&&(i.pendingPicks>0?(i.pendingPicks--,i.nextState=se.ACTIVATING):i.nextState=se.IDLE);break}i.state!==se.IDLE&&i.state!==se.PREPARING_IDLE&&(i.beaconLightAngle=(i.beaconLightAngle+no)%(2*Math.PI))}function We(i){const e=i.params.axis,t=new ee().copy(i.params.body1.rotation()),n=new ee().copy(i.params.body2.rotation()),s=t.invert().multiply(n),r=e.clone().normalize();return 2*Math.atan2(r.x*s.x+r.y*s.y+r.z*s.z,s.w)}async function JE({scene:i}){const t=(await i.loadModel(TE)).scene,n=new Map,s=new Map,r=new S,a=new S;return t.traverse(o=>{if(o.isMesh){const{material:l,geometry:d}=o,c=l.userData,u=c.name;if(c.collider||c.sensor){const p=d.index,h=d.attributes.position,y=[],T=[];for(let f=0;f<h.count;f++)y.push(h.getX(f),h.getY(f),h.getZ(f));for(let f=0;f<p.count;f++)T.push(p.getX(f));const m=io(n,u);m.sensor=c.sensor,m.friction=c.friction,m.restitution=c.restitution,m.fixed=c.fixed,m.kinematic=c.kinematic,m.contactSkin=c.contactSkin,m.meshes.push({data:o,vertices:y,indices:T})}else{const p=o.userData.name,h=io(n,p);h.meshes.push({data:o}),h.light=c.light}}else if(o.userData.joint){const{userData:l,position:d}=o;s.set(o.name,{position:d,axis:l.axis===void 0?void 0:new S().fromArray(l.axis),pair:[l["name-1"],l["name-2"]],limits:l.limits})}else o.name==HE?r.copy(o.position):o.name===LE&&a.copy(o.position)}),{parts:n,joints:s,dropPosition:r,beaconLightPosition:a}}function io(i,e){let t;return i.has(e)?t=i.get(e):(t={meshes:[]},i.set(e,t)),t}function BE({scene:i,parts:e,joints:t,onRecycleObject:n}){let s,r=0;e.forEach((o,l)=>{const{meshes:d,sensor:c,friction:u,restitution:p,fixed:h,kinematic:y,light:T,contactSkin:m}=o,f=o.body=h?i.createFixedBody():y?i.createKinematicBody():i.createDynamicBody();f.setEnabled(!1);const N=[],M=[];let P=0;if(d.forEach(F=>{T||(c?s=i.createCuboidColliderFromBoundingBox({mesh:F.data,height:IE,userData:{objectType:l,onIntersect:n},sensor:c},f):F.vertices&&(N.push(...F.vertices),M.push(...F.indices.map(X=>X+P)),P+=Math.max(...F.indices)+1))}),N.length>0){const F=i.createTrimeshCollider({vertices:N,indices:M,friction:u,restitution:p},f);F.setContactSkin(m),h?F.setCollisionGroups(qE):(F.setCollisionGroups(1<<r%16<<16|1<<r%16),r++)}});const a=e.get(m7);return a.body.setEnabledRotations(!1,!0,!1),a.body.setEnabledTranslations(!1,!1,!1),t.forEach(o=>{const{position:l,axis:d,pair:c,limits:u}=o;if(o.params={body1:e.get(c[0]).body,body2:e.get(c[1]).body,anchor1:l,anchor2:l,axis:d},d===void 0){const p=new ee;Object.assign(o.params,{frame1:p,frame2:p}),o.joint=i.connectBodiesWithFixedJoint(o.params)}else Object.assign(o.params,{axis:d}),o.joint=i.connectBodiesWithRevoluteJoint(o.params),o.joint.setLimits(...u)}),{trapSensor:s}}const KE="./assets/tower.glb",QE="stand",_E="turret",$E="init-position",b7=.1,C8=0,eC=Math.PI/7,so=.002,ro=.02,ao=10,tC=5e-5,nC=new S(0,0,-1),iC=new S(0,1,0),sC=65537,rC=65280,aC=0,oC=2,Nt={IDLE:Symbol.for("tower-idle"),ACTIVATING:Symbol.for("tower-activating"),SHOOTING_COINS:Symbol.for("tower-shooting-coins"),SHOOTING_COIN:Symbol.for("tower-shooting-coin"),MOVING_DOWN:Symbol.for("tower-moving-down")};class oo{#e;#t;#n;#a;#r;#o;#u;#i=new S;#s;#d=new S;#f;#l={state:Nt.IDLE,pendingShots:0,parts:null,position:C8,oscillationCount:0,phase:0,frameLastShot:-1,lightOn:!1};constructor({scene:e,canActivate:t,onShootCoin:n,offsetX:s=0,oscillationDirection:r=-1}){this.#e=e,this.#r=t,this.#o=n,this.#n=s,this.#a=r}async initialize(){const e=this.#e,{parts:t,initPosition:n,lightMaterial:s}=await dC({scene:e,offsetX:this.#n});cC({scene:e,parts:t}),this.#t=n,this.#f=s,t.forEach(({meshes:r})=>r.forEach(({data:a})=>this.#e.addObject(a))),Object.assign(this.#l,{parts:t}),this.#u=this.#l.parts.get(_E),this.#s=this.#l.parts.get(QE)}update(){lC({tower:this.#l,canActivate:()=>this.#r(this)});const{state:e,parts:t,phase:n,position:s,lightOn:r}=this.#l;if(e!==Nt.IDLE){const a=new ee().setFromAxisAngle(iC,Math.sin(n)*eC*this.#a);if(e===Nt.SHOOTING_COIN){const o=this.#t.clone().setY(this.#t.y+b7),l=nC.clone().applyQuaternion(a).normalize().multiplyScalar(tC);this.#o({position:o,impulse:l})}this.#u.body.setNextKinematicTranslation(this.#i.set(0,0,0).sub(this.#t).applyQuaternion(a).add(this.#t).setY(s)),this.#u.body.setNextKinematicRotation(a),this.#s.body.setNextKinematicTranslation(this.#d.setY(s)),this.#f.emissiveIntensity=r?oC:aC,t.forEach(({meshes:o,body:l})=>o.forEach(({data:d})=>{d.position.copy(l.translation()),d.quaternion.copy(l.rotation())})),this.#l.nextState&&(this.#l.state=this.#l.nextState)}}shootCoins(){this.#l.state===Nt.IDLE?this.#l.state=Nt.ACTIVATING:this.#l.pendingShots++}save(){const e={};return this.#l.parts.forEach(({body:t},n)=>{e[n]={bodyHandle:t.handle}}),{state:this.#l.state.description,nextState:this.#l.nextState?this.#l.nextState.description:null,parts:e,position:this.#l.position,oscillationCount:this.#l.oscillationCount,pendingShots:this.#l.pendingShots,phase:this.#l.phase,frameLastShot:this.#l.frameLastShot,lightOn:this.#l.lightOn}}load(e){this.#l.state=Symbol.for(e.state),this.#l.nextState=e.nextState?Symbol.for(e.nextState):null,this.#l.oscillationCount=e.oscillationCount,this.#l.pendingShots=e.pendingShots,this.#l.phase=e.phase,this.#l.frameLastShot=e.frameLastShot,this.#l.lightOn=e.lightOn,this.#l.position=e.position,this.#l.parts.forEach((t,n)=>{const s=e.parts[n];s&&(t.body=this.#e.worldBodies.get(s.bodyHandle))})}get active(){return this.#l.state!==Nt.IDLE&&this.#l.state!==Nt.ACTIVATING}}function lC({tower:i,canActivate:e}){switch(i.nextState=null,i.state){case Nt.ACTIVATING:e()&&(i.phase=0,i.position<b7?i.position+=so:(i.frameLastShot=0,i.position=b7,i.nextState=Nt.SHOOTING_COINS));break;case Nt.SHOOTING_COINS:i.oscillationCount<1?(i.phase+=ro,i.oscillationCount=Math.floor(i.phase/(2*Math.PI)),i.frameLastShot++,i.frameLastShot>ao/5&&(i.lightOn=!1),i.frameLastShot>ao&&(i.nextState=Nt.SHOOTING_COIN)):i.pendingShots?(i.pendingShots--,i.phase+=ro,i.oscillationCount=0):(i.phase=0,i.oscillationCount=0,i.nextState=Nt.MOVING_DOWN);break;case Nt.SHOOTING_COIN:i.frameLastShot=0,i.lightOn=!0,i.nextState=Nt.SHOOTING_COINS;break;case Nt.MOVING_DOWN:i.position>0?i.position-=so:(i.position=C8,i.frameLastShot=-1,i.nextState=Nt.IDLE);break}}async function dC({scene:i,offsetX:e}){const n=(await i.loadModel(KE)).scene,s=new Map,r=new S;let a;return n.traverse(o=>{if(o.isMesh){const{material:l,geometry:d}=o;for(let u=0;u<d.index.count;u++){const p=d.attributes.position;p.setX(u,p.getX(u)+e)}const c=l.userData;if(c.collider){const u=c.name,p=d.index,h=d.attributes.position,y=[],T=[];for(let f=0;f<h.count;f++)y.push(h.getX(f),h.getY(f),h.getZ(f));for(let f=0;f<p.count;f++)T.push(p.getX(f));const m=lo(s,u);m.friction=c.friction,m.restitution=c.restitution,m.fixed=c.fixed,m.meshes.push({data:o,vertices:y,indices:T})}else{const u=o.userData.name;lo(s,u).meshes.push({data:o})}c.light&&(a=o.material,a.emissive.setHex(rC))}else if(o.name==$E){const l=o.position;l.x+=e,r.copy(o.position)}}),{parts:s,lightMaterial:a,initPosition:r}}function lo(i,e){let t;return i.has(e)?t=i.get(e):(t={meshes:[]},i.set(e,t)),t}function cC({scene:i,parts:e}){let t=0;e.forEach((n,s)=>{const{meshes:r,friction:a,restitution:o,fixed:l}=n,d=n.body=l?i.createFixedBody():i.createKinematicBody(),c=[],u=[];let p=0;r.forEach(y=>{y.vertices&&(c.push(...y.vertices),u.push(...y.indices.map(T=>T+p)),p+=Math.max(...y.indices)+1)});const h=i.createTrimeshCollider({vertices:c,indices:u,friction:a,restitution:o},d);l?h.setCollisionGroups(sC):(h.setCollisionGroups(1<<t%16<<16|1<<t%16),t++)})}const uC=.02,co=.01,uo=.003,po=.13,pC="./assets/coin-roller.glb",fC="launcher",hC="trap-door",mC="doors",z8="trap",bC="init-position",yC=["slot-3","slot-2","slot-1"],vC=3e-5,gC=new S(0,0,-1).multiplyScalar(vC),wC=.09,TC=new S(Math.PI/2,0,Math.PI/2),A8=0,xC=.25-A8,SC=0,PC=.03,HC=16777215,LC=16711935,I8=0,NC=1,RC=2,X8=30,MC=8,OC=65537,pe={IDLE:Symbol.for("coin-roller-idle"),ACTIVATING:Symbol.for("coin-roller-activating"),INITIALIZING:Symbol.for("coin-roller-initializing"),INITIALIZING_COIN:Symbol.for("coin-roller-initializing-coin"),OPENING_DOORS:Symbol.for("coin-roller-opening-doors"),MOVING_LAUNCHER:Symbol.for("coin-roller-moving-launcher"),TRIGGERING_COIN:Symbol.for("coin-roller-triggering-coin"),DELIVERING_COIN:Symbol.for("coin-roller-delivering-coin"),MOVING_COIN:Symbol.for("coin-roller-moving-coin"),OPENING_TRAP:Symbol.for("coin-roller-opening-trap"),CLOSING_TRAP:Symbol.for("coin-roller-closing-trap"),MOVING_LAUNCHER_TO_BASE:Symbol.for("coin-roller-moving-launcher-to-base"),CLOSING_DOORS:Symbol.for("coin-roller-closing-doors")};class EC{#e;#t;#n;#a;#r;#o;#u=new Map;#i=[];#s=new S;#d=new S;#f=new S;#l={state:pe.IDLE,nextState:null,pendingShots:0,launcherPhase:0,trapPosition:0,doorsPosition:0,lights:[],lightsHeadIndex:-1,lightsDirection:1,lightsRefreshes:-1};constructor({scene:e,onInitializeCoin:t,onRecycleCoin:n,onBonusWon:s,onGetCoin:r}){this.#e=e,this.#t=t,this.#n=(a,o)=>{const{state:l,coin:d}=this.#l;if(d&&a.objectType===d.objectType&&a.index===d.index&&l===pe.MOVING_COIN){const c=yC.indexOf(o);n(d),this.#l.coin=null,s(c)}},this.#a=()=>{n(this.#l.coin),this.#l.coin=null},this.#r=r}async initialize(){const e=this.#e,{parts:t,lightsMaterials:n,initPosition:s}=await AC({scene:e,sensorColliders:this.#u});this.#o=s,this.#i=n,IC({scene:e,parts:t,sensorColliders:this.#u,onBonusWon:this.#n,onCoinLost:this.#a}),XC({lightsMaterials:n,lights:this.#l.lights}),t.forEach(({body:r,meshes:a})=>{a.forEach(({data:o})=>this.#e.addObject(o)),r.setEnabled(!0)}),Object.assign(this.#l,{parts:t}),this.#l.launcher=this.#l.parts.get(fC),this.#l.launcher.body.setEnabledRotations(!1,!1,!1),this.#l.launcher.body.setEnabledTranslations(!1,!1,!1),this.#l.trap=this.#l.parts.get(hC),this.#l.doors=this.#l.parts.get(mC)}update(){CC({coinRoller:this.#l}),zC({coinRoller:this.#l});const{parts:e,state:t,launcher:n,trap:s,coin:r,doors:a,lights:o}=this.#l;t!==pe.IDLE&&(this.#s.setX(-Math.cos(this.#l.launcherPhase)*po+po),this.#d.z=this.#l.trapPosition,this.#f.x=this.#l.doorsPosition,n.body.setNextKinematicTranslation(this.#s),s.body.setNextKinematicTranslation(this.#d),a.body.setNextKinematicTranslation(this.#f),t===pe.INITIALIZING&&(this.#l.coin=this.#t({position:this.#o,rotation:TC}),this.#l.coin.body.setEnabledTranslations(!1,!0,!0)),t===pe.MOVING_LAUNCHER&&(r.body.setEnabledTranslations(!0,!0,!0),r.body.setEnabledRotations(!1,!1,!1),r.body.sleep(),r.body.setNextKinematicTranslation(this.#s)),t===pe.DELIVERING_COIN&&(r.body.setEnabledRotations(!0,!0,!0),r.body.applyImpulse(gC)),o.forEach((l,d)=>{const c=this.#i[d];l.on?c.emissiveIntensity=Math.max(I8,NC*(1-l.refreshes/X8)):c.emissiveIntensity=0}),e.forEach(({meshes:l,body:d})=>{l.forEach(({data:c})=>{c.position.copy(d.translation()),c.quaternion.copy(d.rotation())})}),this.#l.nextState&&(this.#l.state=this.#l.nextState))}shootCoin(){this.#l.state===pe.IDLE?this.#l.state=pe.ACTIVATING:this.#l.pendingShots++}triggerCoin(){this.#l.state===pe.MOVING_LAUNCHER&&(this.#l.state=pe.TRIGGERING_COIN)}save(){const e={};return this.#u.forEach((t,n)=>e[n]=t.handle),{state:this.#l.state.description,nextState:this.#l.nextState?this.#l.nextState.description:null,sensorCollidersHandles:e,coinIndex:this.#l.coin?this.#l.coin.index:null,launcherBodyHandle:this.#l.launcher.body.handle,trapBodyHandle:this.#l.trap.body.handle,doorsBodyHandle:this.#l.doors.body.handle,launcherPhase:this.#l.launcherPhase,trapPosition:this.#l.trapPosition,doorsPosition:this.#l.doorsPosition,pendingShots:this.#l.pendingShots,lights:this.#l.lights.map(t=>({on:t.on,refreshes:t.refreshes})),lightsHeadIndex:this.#l.lightsHeadIndex,lightsDirection:this.#l.lightsDirection,lightsRefreshes:this.#l.lightsRefreshes}}load(e){this.#l.parts.forEach((t,n)=>{t.meshes.forEach(({data:s})=>{s.traverse(r=>{if(r.isMesh){const a=r.material.userData,o=n;if(a.sensor){const l=e.sensorCollidersHandles[n],d=this.#e.worldColliders.get(l);d.userData={objectType:o,onIntersect:c=>{n===z8?this.#a():this.#n(c,o)}},this.#u.set(o,d)}}})})}),this.#l.state=Symbol.for(e.state),this.#l.nextState=e.nextState?Symbol.for(e.nextState):null,this.#l.launcherPhase=e.launcherPhase,this.#l.pendingShots=e.pendingShots,this.#l.launcher.body=this.#e.worldBodies.get(e.launcherBodyHandle),this.#l.trap.body=this.#e.worldBodies.get(e.trapBodyHandle),this.#l.doors.body=this.#e.worldBodies.get(e.doorsBodyHandle),this.#l.trapPosition=e.trapPosition,this.#l.doorsPosition=e.doorsPosition,e.coinIndex&&(this.#l.coin=this.#r({index:e.coinIndex})),this.#l.lights=e.lights.map(t=>({on:t.on,refreshes:t.refreshes})),this.#l.lightsHeadIndex=e.lightsHeadIndex,this.#l.lightsDirection=e.lightsDirection,this.#l.lightsRefreshes=e.lightsRefreshes}}function CC({coinRoller:i}){switch(i.nextState=null,i.state){case pe.IDLE:break;case pe.ACTIVATING:i.lightsRefreshes=0,i.lightsHeadIndex=0,i.nextState=pe.OPENING_DOORS;break;case pe.OPENING_DOORS:i.doorsPosition+=uo,i.doorsPosition>PC&&(i.nextState=pe.INITIALIZING);break;case pe.INITIALIZING:i.nextState=pe.INITIALIZING_COIN;break;case pe.INITIALIZING_COIN:i.coin.position.z<wC&&(i.nextState=pe.MOVING_LAUNCHER);break;case pe.MOVING_LAUNCHER:x1({coinRoller:i});break;case pe.TRIGGERING_COIN:x1({coinRoller:i}),i.nextState=pe.DELIVERING_COIN;break;case pe.DELIVERING_COIN:x1({coinRoller:i}),i.nextState=pe.MOVING_COIN;break;case pe.MOVING_COIN:x1({coinRoller:i}),i.coin&&i.coin.linearSpeed<1e-4?i.nextState=pe.OPENING_TRAP:i.coin||(i.nextState=pe.MOVING_LAUNCHER_TO_BASE);break;case pe.OPENING_TRAP:i.launcherPhase>.05&&x1({coinRoller:i}),i.trapPosition+=co,i.trapPosition>xC&&(i.nextState=pe.CLOSING_TRAP);break;case pe.CLOSING_TRAP:i.launcherPhase>.05&&x1({coinRoller:i}),i.trapPosition-=co,i.trapPosition<A8&&(i.trapPosition=0,i.nextState=pe.MOVING_LAUNCHER_TO_BASE);break;case pe.MOVING_LAUNCHER_TO_BASE:i.launcherPhase>.05?x1({coinRoller:i}):(i.launcherPhase=0,i.pendingShots?(i.pendingShots--,i.nextState=pe.ACTIVATING):i.nextState=pe.CLOSING_DOORS);break;case pe.CLOSING_DOORS:i.doorsPosition-=uo,i.doorsPosition<SC&&(i.doorsPosition=0,i.lightsRefreshes=-1,i.lightsHeadIndex=-1,i.lightsDirection=1,i.nextState=pe.IDLE);break}}function zC({coinRoller:i}){const{lights:e,lightsHeadIndex:t,lightsDirection:n}=i,s=e.length,r=MC;i.state===pe.IDLE||i.state===pe.CLOSING_DOORS?e.forEach(a=>{a.on=!1,a.refreshes=-1}):i.lightsRefreshes!==-1&&(i.lightsRefreshes++,i.lightsRefreshes>RC&&(i.lightsRefreshes=0,i.lightsHeadIndex+=n,i.lightsHeadIndex>s?(i.lightsDirection=-1,i.lightsHeadIndex=s-1):i.lightsHeadIndex<0&&(i.lightsDirection=1,i.lightsHeadIndex=0)),e.forEach((a,o)=>{const l=n>0?t-r:t,d=n>0?t:t+r;o>=l&&o<=d?(a.on=!0,a.refreshes=0):a.refreshes>-1&&a.refreshes<X8?a.refreshes++:(a.on=!1,a.refreshes=-1)}))}function x1({coinRoller:i}){i.launcherPhase=(i.launcherPhase+uC)%(Math.PI*2)}async function AC({scene:i}){const t=(await i.loadModel(pC)).scene,n=new Map,s=[],r=new S;return t.traverse(a=>{if(a.isMesh){const{material:o,geometry:l}=a,d=o.userData;if(d.collider||d.sensor){const c=d.name,u=l.index,p=l.attributes.position,h=[],y=[];for(let m=0;m<p.count;m++)h.push(p.getX(m),p.getY(m),p.getZ(m));for(let m=0;m<u.count;m++)y.push(u.getX(m));const T=fo(n,c);T.sensor=d.sensor,T.friction=d.friction,T.restitution=d.restitution,T.kinematic=d.kinematic,T.meshes.push({data:a,vertices:h,indices:y})}else{const c=a.userData.name;fo(n,c).meshes.push({data:a}),a.material.userData.light&&(s[a.material.userData.index]=a.material=new A4({color:HC,emissive:LC,emissiveIntensity:I8}))}}else a.name==bC&&r.copy(a.position)}),{parts:n,lightsMaterials:s,initPosition:r}}function fo(i,e){let t;return i.has(e)?t=i.get(e):(t={meshes:[]},i.set(e,t)),t}function IC({scene:i,parts:e,sensorColliders:t,onBonusWon:n,onCoinLost:s}){let r=0;e.forEach((a,o)=>{const{meshes:l,friction:d,restitution:c,sensor:u,kinematic:p}=a;let h;p?(h=a.body=i.createKinematicBody(),a.position=0):h=a.body=i.createFixedBody(),h.setEnabled(!1);const y=[],T=[];let m=0;if(l.forEach(f=>{f.vertices&&(y.push(...f.vertices),T.push(...f.indices.map(N=>N+m)),m+=Math.max(...f.indices)+1)}),y.length>0){const f=i.createTrimeshCollider({vertices:y,indices:T,friction:d,restitution:c,sensor:u,userData:{objectType:o,onIntersect:N=>{o===z8?s():n(N,o)}}},h);p?(f.setCollisionGroups(1<<r%16<<16|1<<r%16),r++):f.setCollisionGroups(OC),h.setSoftCcdPrediction(.01),u&&t.set(o,f)}})}function XC({lightsMaterials:i,lights:e}){i.forEach((t,n)=>{e[n]={on:!1,refreshes:-1}})}const VC="./assets/stacker.glb",FC="drop-position",DC="pivot-position",WC="arm-protection-lid-pivot-position",jC=new S(0,0,0),YC=.006,GC=new S(1,0,0),UC=new S(0,1,0),x3=.02,ho=5e-4,Qr=5e-4,mo=.003,bo=.001,_r=Math.PI/18,yo=Math.PI/9,vo=.1,go=4,wo=.135,qC=new S(0,0,1e-5),y7=0,li=.08,To=.15,v7=0,xo=-.025,$r=6,P1=0,V3=0,V8=0,So=.005,Po=-.03,F8=0,Ho=-.01,g7=0,Lo=.15,No=.225,S3=Math.PI*2,w7=0,Ro=-Math.PI/3,D8=0,ea=1,ZC=7,ta=5,kC=80,JC="base",BC="support",KC="arm",QC="arm-protection",_C="arm-protection-lid",$C="arm-door",ps=0,t2=5,ez=16711935,tz=35,nz=10,m0={IDLE:Symbol.for("stacker-idle"),ACTIVATING:Symbol.for("stacker-activating"),RAISING_STACKER_TO_CLEANUP_POSITION:Symbol.for("stacker-raising-stacker-to-cleanup-position"),RAISING_BASE_TO_CLEANUP_POSITION:Symbol.for("stacker-raising-base-to-cleanup-position"),CLOSING_ARM_DOOR:Symbol.for("stacker-closing-arm-door"),RAISING_ARM_PROTECTION_LID:Symbol.for("stacker-raising-arm-protection-lid"),LOWERING_ARM_PROTECTION_LID:Symbol.for("stacker-lowering-arm-protection-lid"),LOWERING_SUPPORT_TO_READY_POSITION:Symbol.for("stacker-lowering-support-to-ready-position"),LOWERING_BASE_TO_READY_POSITION:Symbol.for("stacker-lowering-base-to-ready-position"),CLEANING_UP_BASE_LEFT:Symbol.for("stacker-cleaning-up-base-left"),CLEANING_UP_BASE_RIGHT:Symbol.for("stacker-cleaning-up-base-right"),RAISING_STACKER:Symbol.for("stacker-raising-stacker"),OPENING_ARM_DOOR:Symbol.for("stacker-opening-arm-door"),MOVING_ARM_TO_CIRCUMFERENCE_POSITION:Symbol.for("stacker-moving-arm-to-circumference-position"),INITIALIZING_COIN:Symbol.for("stacker-initializing-coin"),PUSHING_COIN:Symbol.for("stacker-pushing-coin"),ROTATING_BASE:Symbol.for("stacker-rotating-base"),MOVING_ARM_TO_CENTER_POSITION:Symbol.for("stacker-moving-arm-to-center-position"),LOWERING_BASE:Symbol.for("stacker-lowering-base"),MOVING_ARM_BACK_TO_CIRCUMFERENCE_POSITION:Symbol.for("stacker-retracting-arm"),FINISHING_LEVEL:Symbol.for("stacker-finishing-level"),MOVING_ARM_TO_INITIAL_POSITION:Symbol.for("stacker-moving-arm-to-initial-position"),ALIGNING_COINS:Symbol.for("stacker-aligning-coins"),LOWERING_STACKER:Symbol.for("stacker-lowering-stacker"),RESETTING_BASE_ROTATION:Symbol.for("stacker-resetting-base-rotation"),PREPARING_IDLE:Symbol.for("stacker-preparing-idle")},Xt={IDLE:Symbol.for("stacker-lights-idle"),ACTIVATING:Symbol.for("stacker-lights-activating"),BLINKING:Symbol.for("stacker-lights-blinking"),ROTATING:Symbol.for("stacker-lights-rotating"),DELIVERING:Symbol.for("stacker-lights-delivering"),PREPARING_IDLE:Symbol.for("stacker-lights-preparing-idle")};class iz{#e;#t;#n;#a;#r;#o;#u;#i={parts:null,level:D8,coin:null,coins:[],nextState:null,stacks:-1,levels:-1,pendingDeliveries:[],state:m0.IDLE,position:g7,supportPosition:F8,basePosition:V8,armPosition:y7,armDoorPosition:v7,armProtectionLidAngle:w7,rotations:V3,rotationDirection:1,baseAngle:P1,lights:{state:Xt.IDLE,frameLastRefresh:-1,bulbs:[],nextState:null}};constructor({scene:e,canActivate:t,onInitializeCoin:n}){this.#e=e,this.#n=t,this.#a=n}async initialize(){const e=this.#e,{parts:t,dropPosition:n,pivotPosition:s,armProtectionLidPivotPosition:r,lightBulbsMaterials:a}=await az({scene:e});this.#r=n,this.#o=s,this.#u=r,this.#t=a,oz({scene:e,parts:t}),lz({lightBulbsMaterials:a,lights:this.#i.lights}),t.forEach(({body:o,meshes:l})=>{l.forEach(({data:d})=>this.#e.addObject(d)),o.setEnabled(!0)}),Object.assign(this.#i,{parts:t})}update(){sz({stacker:this.#i,canActivate:()=>this.#n(this)}),rz({stacker:this.#i});const{parts:e,state:t,lights:n}=this.#i;if(t!==m0.IDLE){const s=e.get(JC),r=e.get(BC),a=e.get(KC),o=e.get(QC),l=e.get(_C),d=e.get($C);if(t===m0.RAISING_STACKER_TO_CLEANUP_POSITION||t===m0.RAISING_STACKER||t===m0.LOWERING_STACKER){const c=new S().copy(s.body.translation()),u=new S().copy(r.body.translation()),p=new S().copy(s.body.translation()),h=new S().copy(a.body.translation()),y=new S().copy(d.body.translation()),T=new S().copy(o.body.translation()),m=new S().copy(l.body.translation());c.setY(this.#i.position),this.#i.position+this.#i.supportPosition,u.setY(this.#i.position+this.#i.supportPosition);let f=this.#i.position+this.#i.supportPosition+this.#i.basePosition;f<0&&(f=0),p.setY(f),h.setY(this.#i.position+this.#i.armPosition),y.setY(this.#i.position+this.#i.armPosition+this.#i.armDoorPosition),T.setY(this.#i.position+this.#i.armPosition),m.setY(this.#i.position+this.#i.armPosition),r.body.setNextKinematicTranslation(u),s.body.setNextKinematicTranslation(p),a.body.setNextKinematicTranslation(h),o.body.setNextKinematicTranslation(T),l.body.setNextKinematicTranslation(m),d.body.setNextKinematicTranslation(y)}if(t===m0.LOWERING_SUPPORT_TO_READY_POSITION){const c=new S().copy(r.body.translation()),u=new S().copy(s.body.translation());c.setY(this.#i.position+this.#i.supportPosition),u.setY(this.#i.position+this.#i.supportPosition+this.#i.basePosition),s.body.setNextKinematicTranslation(u),r.body.setNextKinematicTranslation(c)}if((t===m0.LOWERING_STACKER||t===m0.RESETTING_BASE_ROTATION||t===m0.PREPARING_IDLE)&&this.#i.coins.forEach(c=>{c.body.setAngvel(new S(0,0,0),!1),c.body.setLinvel(new S(0,0,0),!1),c.body.sleep()}),t===m0.RAISING_BASE_TO_CLEANUP_POSITION||t===m0.RAISING_BASE||t===m0.LOWERING_BASE||t===m0.LOWERING_BASE_TO_READY_POSITION){const c=new S().copy(s.body.translation());c.setY(this.#i.position+this.#i.supportPosition+this.#i.basePosition),s.body.setNextKinematicTranslation(c)}if(t===m0.MOVING_ARM_TO_CIRCUMFERENCE_POSITION||t===m0.MOVING_ARM_TO_CENTER_POSITION||t===m0.MOVING_ARM_BACK_TO_CIRCUMFERENCE_POSITION||t===m0.MOVING_ARM_TO_INITIAL_POSITION){const c=new S().copy(a.body.translation());c.setZ(this.#i.armPosition),a.body.setNextKinematicTranslation(c)}if(t===m0.CLOSING_ARM_DOOR||t===m0.OPENING_ARM_DOOR){const c=new S().copy(d.body.translation());c.setY(this.#i.position+this.#i.armPosition+this.#i.armDoorPosition),d.body.setNextKinematicTranslation(c)}if(t===m0.CLEANING_UP_BASE_LEFT||t===m0.CLEANING_UP_BASE_RIGHT||t===m0.ROTATING_BASE||t===m0.ALIGNING_COINS||t===m0.RESETTING_BASE_ROTATION){const c=new ee().setFromAxisAngle(UC,this.#i.baseAngle),u=new S().sub(this.#o).applyQuaternion(c).add(this.#o);u.setY(this.#i.position+this.#i.supportPosition+this.#i.basePosition),s.body.setNextKinematicTranslation(u),s.body.setNextKinematicRotation(c);const p=new S().sub(this.#o).applyQuaternion(c).add(this.#o);p.setY(this.#i.position+this.#i.supportPosition),r.body.setNextKinematicTranslation(p),r.body.setNextKinematicRotation(c)}if(t===m0.RAISING_ARM_PROTECTION_LID||t===m0.LOWERING_ARM_PROTECTION_LID){let c=new S().setY(this.#i.position+this.#i.armPosition);const u=this.#u.clone().setY(this.#u.y+this.#i.position),p=new ee().setFromAxisAngle(GC,this.#i.armProtectionLidAngle);c=c.sub(u).applyQuaternion(p).add(u),l.body.setNextKinematicTranslation(c),l.body.setNextKinematicRotation(p)}if(t===m0.INITIALIZING_COIN){const c=this.#r.clone();c.setZ(c.z+this.#i.armPosition-li),c.setY(c.y+this.#i.position),this.#i.coin=this.#a({position:c,rotation:jC}),this.#i.coins.push(this.#i.coin)}t===m0.PUSHING_COIN&&this.#i.coin.body.applyImpulse(qC,!0),e.forEach(({meshes:c,body:u})=>{c.forEach(({data:p})=>{p.position.copy(u.translation()),p.quaternion.copy(u.rotation())})})}n.state!==Xt.IDLE&&n.bulbs.forEach((s,r)=>{this.#t[r].emissiveIntensity=s.intensity}),this.#i.nextState&&(this.#i.state=this.#i.nextState),this.#i.lights.nextState&&(this.#i.lights.state=this.#i.lights.nextState)}deliver({stacks:e=ea,levels:t=ta}={stacks:ea,levels:ta}){t=Math.max(ta,Math.min(kC,t)),e=Math.max(ea,Math.min(ZC,e)),this.#i.state===m0.IDLE?(this.#i.stacks=e,this.#i.levels=t,this.#i.state=m0.ACTIVATING):this.#i.pendingDeliveries.push({stacks:e,levels:t})}save(){const e={};this.#i.parts.forEach(({body:n},s)=>{e[s]={bodyHandle:n.handle}});const t=this.#i.coins.map(n=>n.body.handle);return{state:this.#i.state.description,parts:e,position:this.#i.position,supportPosition:this.#i.supportPosition,basePosition:this.#i.basePosition,armPosition:this.#i.armPosition,armDoorPosition:this.#i.armDoorPosition,armProtectionLidAngle:this.#i.armProtectionLidAngle,rotations:this.#i.rotations,rotationDirection:this.#i.rotationDirection,baseAngle:this.#i.baseAngle,level:this.#i.level,stacks:this.#i.stacks,levels:this.#i.levels,pendingDeliveries:this.#i.pendingDeliveries.map(n=>({stacks:n.stacks,levels:n.levels})),nextState:this.#i.nextState?this.#i.nextState.description:null,coinHandle:this.#i.coin?this.#i.coin.handle:null,coinsHandles:t,lights:{state:this.#i.lights.state.description,nextState:this.#i.lights.nextState?this.#i.lights.nextState.description:null,frameLastRefresh:this.#i.lights.frameLastRefresh,bulbs:this.#i.lights.bulbs.map(n=>({intensity:n.intensity}))}}}load(e){this.#i.state=Symbol.for(e.state),this.#i.position=e.position,this.#i.supportPosition=e.supportPosition,this.#i.basePosition=e.basePosition,this.#i.armPosition=e.armPosition,this.#i.armDoorPosition=e.armDoorPosition,this.#i.armProtectionLidAngle=e.armProtectionLidAngle,this.#i.rotations=e.rotations,this.#i.rotationDirection=e.rotationDirection,this.#i.baseAngle=e.baseAngle,this.#i.level=e.level,this.#i.stacks=e.stacks,this.#i.levels=e.levels,this.#i.pendingDeliveries=e.pendingDeliveries.map(t=>({stacks:t.stacks,levels:t.levels})),this.#i.nextState=e.nextState?Symbol.for(e.nextState):null,e.coinHandle?this.#i.coin=this.#e.worldBodies.get(e.coinHandle):this.#i.coin=null,this.#i.coins=[],e.coinsHandles.forEach(t=>this.#i.coins.push(this.#e.worldBodies.get(t))),this.#i.parts.forEach((t,n)=>{const s=e.parts[n];s&&(t.body=this.#e.worldBodies.get(s.bodyHandle))}),this.#i.lights.state=Symbol.for(e.lights.state),this.#i.lights.nextState=e.lights.nextState?Symbol.for(e.lights.nextState):null,this.#i.lights.frameLastRefresh=e.lights.frameLastRefresh,this.#i.lights.bulbs=e.lights.bulbs.map(t=>({intensity:t.intensity}))}get active(){return this.#i.state!==m0.IDLE&&this.#i.state!==m0.ACTIVATING}}function sz({stacker:i,canActivate:e}){let t;switch(i.nextState=null,i.state){case m0.IDLE:break;case m0.ACTIVATING:e()&&(i.nextState=m0.RAISING_STACKER_TO_CLEANUP_POSITION,i.lights.state=Xt.ACTIVATING);break;case m0.RAISING_STACKER_TO_CLEANUP_POSITION:i.position+=mo,i.position>Lo&&(i.position=Lo,i.nextState=m0.RAISING_BASE_TO_CLEANUP_POSITION);break;case m0.RAISING_BASE_TO_CLEANUP_POSITION:i.basePosition+=Qr,i.basePosition>So&&(i.basePosition=So,i.nextState=m0.CLEANING_UP_BASE_LEFT);break;case m0.CLEANING_UP_BASE_LEFT:i.baseAngle-=yo,i.baseAngle<-go*S3&&(i.baseAngle=P1,i.nextState=m0.CLEANING_UP_BASE_RIGHT);break;case m0.CLEANING_UP_BASE_RIGHT:i.baseAngle+=yo,i.baseAngle>go*S3&&(i.baseAngle=P1,i.nextState=m0.RAISING_STACKER);break;case m0.RAISING_STACKER:i.position+=mo,i.position>No&&(i.position=No,i.nextState=m0.RAISING_ARM_PROTECTION_LID);break;case m0.RAISING_ARM_PROTECTION_LID:i.armProtectionLidAngle-=vo,i.armProtectionLidAngle<Ro&&(i.armProtectionLidAngle=Ro,i.nextState=m0.LOWERING_ARM_PROTECTION_LID);break;case m0.LOWERING_ARM_PROTECTION_LID:i.armProtectionLidAngle+=vo,i.armProtectionLidAngle>w7&&(i.armProtectionLidAngle=w7,i.nextState=m0.LOWERING_SUPPORT_TO_READY_POSITION);break;case m0.LOWERING_SUPPORT_TO_READY_POSITION:i.supportPosition-=bo,i.supportPosition<Ho&&(i.supportPosition=Ho,i.nextState=m0.LOWERING_BASE_TO_READY_POSITION);break;case m0.LOWERING_BASE_TO_READY_POSITION:i.basePosition-=Qr,i.basePosition<Po&&(i.basePosition=Po,i.nextState=m0.OPENING_ARM_DOOR);break;case m0.OPENING_ARM_DOOR:i.armDoorPosition-=ho,i.armDoorPosition<xo&&(i.armDoorPosition=xo,i.stacks==1?i.nextState=m0.MOVING_ARM_TO_CENTER_POSITION:i.nextState=m0.MOVING_ARM_TO_CIRCUMFERENCE_POSITION);break;case m0.MOVING_ARM_TO_CIRCUMFERENCE_POSITION:i.armPosition+=x3,i.armPosition>li&&(i.armPosition=li,i.nextState=m0.INITIALIZING_COIN);break;case m0.INITIALIZING_COIN:i.nextState=m0.PUSHING_COIN;break;case m0.PUSHING_COIN:i.coin.position.y<wo+i.position&&(i.stacks==1?i.nextState=m0.LOWERING_BASE:i.armPosition===li?(i.stacks==2||i.stacks==3?i.rotations+=3:i.stacks==4?i.rotations+=2:i.stacks==5?i.rotations%3==0?i.rotations+=i.rotationDirection==1?2:1:i.rotations+=i.rotationDirection==1?1:2:i.rotations++,i.nextState=m0.ROTATING_BASE):i.nextState=m0.LOWERING_BASE);break;case m0.ROTATING_BASE:i.baseAngle+=_r*i.rotationDirection,t=S3/$r*i.rotations*i.rotationDirection,(i.rotationDirection==1&&i.baseAngle>t||i.rotationDirection==-1&&i.baseAngle<t)&&(i.baseAngle=t,i.rotations==$r?(i.rotations=V3,i.baseAngle=P1,i.stacks==2||i.stacks==6?i.nextState=m0.LOWERING_BASE:i.nextState=m0.MOVING_ARM_TO_CENTER_POSITION):i.nextState=m0.INITIALIZING_COIN);break;case m0.MOVING_ARM_TO_CENTER_POSITION:i.armPosition+=x3,i.armPosition>To&&(i.armPosition=To,i.nextState=m0.INITIALIZING_COIN);break;case m0.LOWERING_BASE:i.basePosition-=Qr,wo+i.position-i.coin.position.y>YC&&(i.rotationDirection=-i.rotationDirection,i.stacks==1?i.nextState=m0.FINISHING_LEVEL:i.nextState=m0.MOVING_ARM_BACK_TO_CIRCUMFERENCE_POSITION);break;case m0.MOVING_ARM_BACK_TO_CIRCUMFERENCE_POSITION:i.armPosition-=x3,i.armPosition<li&&(i.armPosition=li,i.nextState=m0.FINISHING_LEVEL);break;case m0.FINISHING_LEVEL:i.level++,i.level<i.levels?i.nextState=m0.INITIALIZING_COIN:(i.level=D8,i.levels=-1,i.nextState=m0.MOVING_ARM_TO_INITIAL_POSITION);break;case m0.MOVING_ARM_TO_INITIAL_POSITION:i.armPosition-=x3,i.armPosition<y7&&(i.armPosition=y7,i.nextState=m0.CLOSING_ARM_DOOR);break;case m0.CLOSING_ARM_DOOR:i.armDoorPosition+=ho,i.armDoorPosition>v7&&(i.armDoorPosition=v7,i.stacks==2||i.stacks==3||i.stacks==5?i.nextState=m0.ALIGNING_COINS:i.nextState=m0.LOWERING_STACKER);break;case m0.ALIGNING_COINS:i.baseAngle-=_r,t=-S3/$r*(i.stacks==5?2:1.5),i.baseAngle<t&&(i.baseAngle=t,i.nextState=m0.LOWERING_STACKER);break;case m0.LOWERING_STACKER:i.position-=bo,i.position<g7&&(i.position=g7,i.basePosition=V8,i.supportPosition=F8,i.stacks==2||i.stacks==3||i.stacks==5?i.nextState=m0.RESETTING_BASE_ROTATION:(i.rotations=V3,i.baseAngle=P1,i.nextState=m0.PREPARING_IDLE));break;case m0.RESETTING_BASE_ROTATION:i.baseAngle+=_r,i.baseAngle>P1&&(i.baseAngle=P1,i.rotations=V3,i.rotationDirection=1,i.nextState=m0.PREPARING_IDLE);break;case m0.PREPARING_IDLE:if(i.coin=null,i.coins=[],i.pendingDeliveries.length>0){const{stacks:n,levels:s}=i.pendingDeliveries.shift();i.stacks=n,i.levels=s,i.nextState=m0.ACTIVATING}else i.stacks=-1,i.nextState=m0.IDLE;break}}function rz({stacker:i}){switch(i.lights.nextState=null,i.lights.state){case Xt.IDLE:break;case Xt.ACTIVATING:i.lights.frameLastRefresh=0,i.lights.nextState=Xt.BLINKING;break;case Xt.BLINKING:i.lights.frameLastRefresh++,i.lights.frameLastRefresh>tz&&(i.lights.frameLastRefresh=0,i.lights.bulbs.forEach(e=>{e.intensity=e.intensity>ps?0:t2})),i.state===m0.INITIALIZING_COIN&&(i.lights.nextState=Xt.ROTATING);break;case Xt.ROTATING:i.lights.bulbs.forEach((e,t)=>{i.stacks===1?e.intensity=(t+i.level)%4<2?0:t2:e.intensity=t%4<2?0:t2}),i.state===m0.LOWERING_STACKER&&(i.lights.nextState=Xt.DELIVERING);break;case Xt.DELIVERING:i.lights.frameLastRefresh++,i.lights.frameLastRefresh>nz&&(i.lights.frameLastRefresh=0,i.lights.bulbs.forEach(e=>{e.intensity=e.intensity==t2?0:t2})),i.state===m0.PREPARING_IDLE&&(i.lights.nextState=Xt.PREPARING_IDLE);break;case Xt.PREPARING_IDLE:i.lights.bulbs.forEach(e=>{e.intensity=ps}),i.lights.frameLastRefresh=-1,i.lights.nextState=Xt.IDLE;break}}async function az({scene:i}){const t=(await i.loadModel(VC)).scene,n=new Map,s=new S,r=new S,a=new S,o=[];return t.traverse(l=>{if(l.isMesh){const{material:d,geometry:c}=l,u=d.userData;if(u.collider){const p=u.name,h=c.index,y=c.attributes.position,T=[],m=[];for(let N=0;N<y.count;N++)T.push(y.getX(N),y.getY(N),y.getZ(N));for(let N=0;N<h.count;N++)m.push(h.getX(N));const f=na(n,p);f.friction=u.friction,f.restitution=u.restitution,f.kinematic=u.kinematic,f.cuboid=u.cuboid,f.cylinder=u.cylinder,f.meshes.push({data:l,vertices:T,indices:m})}else{l.material.userData.light&&(o[l.material.userData.index]=l.material);const p=l.userData.name;na(n,p).meshes.push({data:l})}}else if(l.userData.collider){const d=l.userData.name;na(n,d).colliders.push({position:l.position,radius:l.userData.radius,height:l.userData.height})}else l.name==FC?s.copy(l.position):l.name==DC?r.copy(l.position):l.name==WC&&a.copy(l.position)}),{parts:n,dropPosition:s,pivotPosition:r,armProtectionLidPivotPosition:a,lightBulbsMaterials:o}}function na(i,e){let t;return i.has(e)?t=i.get(e):(t={meshes:[],colliders:[]},i.set(e,t)),t}function oz({scene:i,parts:e}){let t=0;e.forEach(n=>{const{meshes:s,colliders:r,friction:a,restitution:o,kinematic:l,cuboid:d,cylinder:c}=n,u=n.body=l?i.createKinematicBody():i.createFixedBody();if(u.setEnabled(!1),d||c){const p=s[0].data.geometry.boundingBox,h=new S().addVectors(p.min,p.max).multiplyScalar(.5).toArray(),y=new S(p.max.x-p.min.x,p.max.y-p.min.y,p.max.z-p.min.z);let T;d?T=i.createCuboidCollider({position:h,width:y.x,height:y.y,depth:y.z,friction:a,restitution:o},u):T=i.createCylinderCollider({position:h,radius:y.x/2,height:y.y,friction:a,restitution:o},u),T.setCollisionGroups(1<<t%16<<16|1<<t%16),t++}else{const p=[],h=[];let y=0;s.forEach(T=>{T.vertices&&(p.push(...T.vertices),h.push(...T.indices.map(m=>m+y)),y+=Math.max(...T.indices)+1)}),p.length>0&&(i.createTrimeshCollider({vertices:p,indices:h,friction:a,restitution:o},u).setCollisionGroups(1<<t%16<<16|1<<t%16),t++)}r.forEach(p=>{const{radius:h,position:y,height:T}=p;i.createCylinderCollider({radius:h,height:T,position:y,friction:a,restitution:o},u).setCollisionGroups(1<<t%16<<16|1<<t%16),t++})})}function lz({lightBulbsMaterials:i,lights:e}){i.forEach((t,n)=>{t.emissive.setHex(ez),t.emissiveIntensity=ps,e.bulbs[n]={intensity:ps}})}const dz="./assets/mini-stacker.glb",cz="drop-position",uz="pivot-position",pz="arm-protection-lid-pivot-position",P3=new S(0,0,0),fz=.006,hz=new S(1,0,0),mz=new S(0,1,0),Mo=.02,Oo=5e-4,ia=5e-4,Eo=.003,Co=.001,zo=Math.PI/9,Ao=.1,Io=3,Xo=.14,bz=new S(0,0,1e-5),T7=0,Vo=.08,x7=0,Fo=-.025,F3=0,W8=0,Do=.005,Wo=-.03,j8=0,jo=-.01,S7=0,Yo=.15,Go=.225,Uo=Math.PI*2,P7=0,qo=-Math.PI/3,Y8=0,sa=5,yz=80,vz="base",gz="support",wz="arm",Tz="arm-protection",xz="arm-protection-lid",Sz="arm-door",fs=0,H3=5,Pz=16711935,Hz=35,Lz=10,R0={IDLE:Symbol.for("stacker-idle"),ACTIVATING:Symbol.for("stacker-activating"),RAISING_STACKER_TO_CLEANUP_POSITION:Symbol.for("stacker-raising-stacker-to-cleanup-position"),RAISING_BASE_TO_CLEANUP_POSITION:Symbol.for("stacker-raising-base-to-cleanup-position"),CLOSING_ARM_DOOR:Symbol.for("stacker-closing-arm-door"),RAISING_ARM_PROTECTION_LID:Symbol.for("stacker-raising-arm-protection-lid"),LOWERING_ARM_PROTECTION_LID:Symbol.for("stacker-lowering-arm-protection-lid"),LOWERING_SUPPORT_TO_READY_POSITION:Symbol.for("stacker-lowering-support-to-ready-position"),LOWERING_BASE_TO_READY_POSITION:Symbol.for("stacker-lowering-base-to-ready-position"),CLEANING_UP_BASE_LEFT:Symbol.for("stacker-cleaning-up-base-left"),CLEANING_UP_BASE_RIGHT:Symbol.for("stacker-cleaning-up-base-right"),RAISING_STACKER:Symbol.for("stacker-raising-stacker"),OPENING_ARM_DOOR:Symbol.for("stacker-opening-arm-door"),MOVING_ARM_TO_DROP_POSITION:Symbol.for("stacker-moving-arm-to-drop-position"),INITIALIZING_COIN:Symbol.for("stacker-initializing-coin"),PUSHING_COIN:Symbol.for("stacker-pushing-coin"),LOWERING_BASE:Symbol.for("stacker-lowering-base"),FINISHING_LEVEL:Symbol.for("stacker-finishing-level"),MOVING_ARM_TO_INITIAL_POSITION:Symbol.for("stacker-moving-arm-to-initial-position"),LOWERING_STACKER:Symbol.for("stacker-lowering-stacker"),PREPARING_IDLE:Symbol.for("stacker-preparing-idle")},Vt={IDLE:Symbol.for("stacker-lights-idle"),ACTIVATING:Symbol.for("stacker-lights-activating"),BLINKING:Symbol.for("stacker-lights-blinking"),ROTATING:Symbol.for("stacker-lights-rotating"),DELIVERING:Symbol.for("stacker-lights-delivering"),PREPARING_IDLE:Symbol.for("stacker-lights-preparing-idle")};class Zo{#e;#t;#n;#a;#r;#o;#u;#i;#s={parts:null,level:Y8,coin:null,coins:[],nextState:null,levels:-1,pendingDeliveries:[],state:R0.IDLE,position:S7,supportPosition:j8,basePosition:W8,armPosition:T7,armDoorPosition:x7,armProtectionLidAngle:P7,baseAngle:F3,lights:{state:Vt.IDLE,frameLastRefresh:-1,bulbs:[],nextState:null}};constructor({scene:e,canActivate:t,onInitializeCoin:n,offsetX:s=0}){this.#e=e,this.#i=s,this.#n=t,this.#a=n}async initialize(){const e=this.#e,{parts:t,dropPosition:n,pivotPosition:s,armProtectionLidPivotPosition:r,lightBulbsMaterials:a}=await Mz({scene:e,offsetX:this.#i});this.#r=n,this.#o=s,this.#u=r,this.#t=a,Oz({scene:e,parts:t,offsetX:this.#i}),Ez({lightBulbsMaterials:a,lights:this.#s.lights}),t.forEach(({body:o,meshes:l})=>{l.forEach(({data:d})=>this.#e.addObject(d)),o.setEnabled(!0)}),Object.assign(this.#s,{parts:t})}update(){Nz({stacker:this.#s,canActivate:()=>this.#n(this)}),Rz({stacker:this.#s});const{parts:e,state:t,lights:n}=this.#s;if(t!==R0.IDLE){const s=e.get(vz),r=e.get(gz),a=e.get(wz),o=e.get(Tz),l=e.get(xz),d=e.get(Sz);if(t===R0.RAISING_STACKER_TO_CLEANUP_POSITION||t===R0.RAISING_STACKER||t===R0.LOWERING_STACKER){const c=new S().copy(s.body.translation()),u=new S().copy(r.body.translation()),p=new S().copy(s.body.translation()),h=new S().copy(a.body.translation()),y=new S().copy(d.body.translation()),T=new S().copy(o.body.translation()),m=new S().copy(l.body.translation());c.setY(this.#s.position),this.#s.position+this.#s.supportPosition,u.setY(this.#s.position+this.#s.supportPosition);let f=this.#s.position+this.#s.supportPosition+this.#s.basePosition;f<0&&(f=0),p.setY(f),h.setY(this.#s.position+this.#s.armPosition),y.setY(this.#s.position+this.#s.armPosition+this.#s.armDoorPosition),T.setY(this.#s.position+this.#s.armPosition),m.setY(this.#s.position+this.#s.armPosition),r.body.setNextKinematicTranslation(u),s.body.setNextKinematicTranslation(p),a.body.setNextKinematicTranslation(h),o.body.setNextKinematicTranslation(T),l.body.setNextKinematicTranslation(m),d.body.setNextKinematicTranslation(y)}if(t===R0.LOWERING_SUPPORT_TO_READY_POSITION){const c=new S().copy(r.body.translation()),u=new S().copy(s.body.translation());c.setY(this.#s.position+this.#s.supportPosition),u.setY(this.#s.position+this.#s.supportPosition+this.#s.basePosition),s.body.setNextKinematicTranslation(u),r.body.setNextKinematicTranslation(c)}if((t===R0.LOWERING_STACKER||t===R0.PREPARING_IDLE)&&this.#s.coins.forEach(c=>{c.body.setAngvel(new S(0,0,0),!1),c.body.setLinvel(new S(0,0,0),!1),c.body.sleep()}),t===R0.RAISING_BASE_TO_CLEANUP_POSITION||t===R0.RAISING_BASE||t===R0.LOWERING_BASE||t===R0.LOWERING_BASE_TO_READY_POSITION){const c=new S().copy(s.body.translation());c.setY(this.#s.position+this.#s.supportPosition+this.#s.basePosition),s.body.setNextKinematicTranslation(c)}if(t===R0.MOVING_ARM_TO_DROP_POSITION||t===R0.MOVING_ARM_TO_INITIAL_POSITION){const c=new S().copy(a.body.translation());c.setZ(this.#s.armPosition),a.body.setNextKinematicTranslation(c)}if(t===R0.CLOSING_ARM_DOOR||t===R0.OPENING_ARM_DOOR){const c=new S().copy(d.body.translation());c.setY(this.#s.position+this.#s.armPosition+this.#s.armDoorPosition),d.body.setNextKinematicTranslation(c)}if(t===R0.CLEANING_UP_BASE_LEFT||t===R0.CLEANING_UP_BASE_RIGHT){const c=new ee().setFromAxisAngle(mz,this.#s.baseAngle),u=new S().sub(this.#o).applyQuaternion(c).add(this.#o);u.setY(this.#s.position+this.#s.supportPosition+this.#s.basePosition),s.body.setNextKinematicTranslation(u),s.body.setNextKinematicRotation(c);const p=new S().sub(this.#o).applyQuaternion(c).add(this.#o);p.setY(this.#s.position+this.#s.supportPosition),r.body.setNextKinematicTranslation(p),r.body.setNextKinematicRotation(c)}if(t===R0.RAISING_ARM_PROTECTION_LID||t===R0.LOWERING_ARM_PROTECTION_LID){let c=new S().setY(this.#s.position+this.#s.armPosition);const u=this.#u.clone().setY(this.#u.y+this.#s.position),p=new ee().setFromAxisAngle(hz,this.#s.armProtectionLidAngle);c=c.sub(u).applyQuaternion(p).add(u),l.body.setNextKinematicTranslation(c),l.body.setNextKinematicRotation(p)}if(t===R0.INITIALIZING_COIN){const c=this.#r.clone();c.setZ(c.z+this.#s.armPosition),c.setY(c.y+this.#s.position),this.#s.coin=this.#a({position:c,rotation:P3}),this.#s.coins.push(this.#s.coin)}if(t===R0.PUSHING_COIN&&this.#s.coin.body.applyImpulse(bz,!0),t===R0.LOWERING_BASE){this.#s.coin.body.setRotation(new ee(P3.x,P3.y,P3.z,1),!1);const c=this.#s.coin.body.translation();this.#s.coin.body.setTranslation(new S(this.#i,c.y,this.#o.z),!1)}e.forEach(({meshes:c,body:u})=>{c.forEach(({data:p})=>{p.position.copy(u.translation()),p.quaternion.copy(u.rotation())})})}n.state!==Vt.IDLE&&n.bulbs.forEach((s,r)=>{this.#t[r].emissiveIntensity=s.intensity}),this.#s.nextState&&(this.#s.state=this.#s.nextState),this.#s.lights.nextState&&(this.#s.lights.state=this.#s.lights.nextState)}deliver({levels:e=sa}={levels:sa}){e=Math.max(sa,Math.min(yz,e)),this.#s.state===R0.IDLE?(this.#s.levels=e,this.#s.state=R0.ACTIVATING):this.#s.pendingDeliveries.push({levels:e})}save(){const e={};this.#s.parts.forEach(({body:n},s)=>{e[s]={bodyHandle:n.handle}});const t=this.#s.coins.map(n=>n.body.handle);return{state:this.#s.state.description,parts:e,position:this.#s.position,supportPosition:this.#s.supportPosition,basePosition:this.#s.basePosition,armPosition:this.#s.armPosition,armDoorPosition:this.#s.armDoorPosition,armProtectionLidAngle:this.#s.armProtectionLidAngle,baseAngle:this.#s.baseAngle,level:this.#s.level,levels:this.#s.levels,pendingDeliveries:this.#s.pendingDeliveries.map(n=>({levels:n.levels})),nextState:this.#s.nextState?this.#s.nextState.description:null,coinHandle:this.#s.coin?this.#s.coin.handle:null,coinsHandles:t,lights:{state:this.#s.lights.state.description,nextState:this.#s.lights.nextState?this.#s.lights.nextState.description:null,frameLastRefresh:this.#s.lights.frameLastRefresh,bulbs:this.#s.lights.bulbs.map(n=>({intensity:n.intensity}))}}}load(e){this.#s.state=Symbol.for(e.state),this.#s.position=e.position,this.#s.supportPosition=e.supportPosition,this.#s.basePosition=e.basePosition,this.#s.armPosition=e.armPosition,this.#s.armDoorPosition=e.armDoorPosition,this.#s.armProtectionLidAngle=e.armProtectionLidAngle,this.#s.baseAngle=e.baseAngle,this.#s.level=e.level,this.#s.levels=e.levels,this.#s.pendingDeliveries=e.pendingDeliveries.map(t=>({levels:t.levels})),this.#s.nextState=e.nextState?Symbol.for(e.nextState):null,e.coinHandle?this.#s.coin=this.#e.worldBodies.get(e.coinHandle):this.#s.coin=null,this.#s.coins=[],e.coinsHandles.forEach(t=>this.#s.coins.push(this.#e.worldBodies.get(t))),this.#s.parts.forEach((t,n)=>{const s=e.parts[n];s&&(t.body=this.#e.worldBodies.get(s.bodyHandle))}),this.#s.lights.state=Symbol.for(e.lights.state),this.#s.lights.nextState=e.lights.nextState?Symbol.for(e.lights.nextState):null,this.#s.lights.frameLastRefresh=e.lights.frameLastRefresh,this.#s.lights.bulbs=e.lights.bulbs.map(t=>({intensity:t.intensity}))}get active(){return this.#s.state!==R0.IDLE&&this.#s.state!==R0.ACTIVATING}}function Nz({stacker:i,canActivate:e}){switch(i.nextState=null,i.state){case R0.IDLE:break;case R0.ACTIVATING:e()&&(i.nextState=R0.RAISING_STACKER_TO_CLEANUP_POSITION,i.lights.state=Vt.ACTIVATING);break;case R0.RAISING_STACKER_TO_CLEANUP_POSITION:i.position+=Eo,i.position>Yo&&(i.position=Yo,i.nextState=R0.RAISING_BASE_TO_CLEANUP_POSITION);break;case R0.RAISING_BASE_TO_CLEANUP_POSITION:i.basePosition+=ia,i.basePosition>Do&&(i.basePosition=Do,i.nextState=R0.CLEANING_UP_BASE_LEFT);break;case R0.CLEANING_UP_BASE_LEFT:i.baseAngle-=zo,i.baseAngle<-Io*Uo&&(i.baseAngle=F3,i.nextState=R0.CLEANING_UP_BASE_RIGHT);break;case R0.CLEANING_UP_BASE_RIGHT:i.baseAngle+=zo,i.baseAngle>Io*Uo&&(i.baseAngle=F3,i.nextState=R0.RAISING_STACKER);break;case R0.RAISING_STACKER:i.position+=Eo,i.position>Go&&(i.position=Go,i.nextState=R0.RAISING_ARM_PROTECTION_LID);break;case R0.RAISING_ARM_PROTECTION_LID:i.armProtectionLidAngle-=Ao,i.armProtectionLidAngle<qo&&(i.armProtectionLidAngle=qo,i.nextState=R0.LOWERING_ARM_PROTECTION_LID);break;case R0.LOWERING_ARM_PROTECTION_LID:i.armProtectionLidAngle+=Ao,i.armProtectionLidAngle>P7&&(i.armProtectionLidAngle=P7,i.nextState=R0.LOWERING_SUPPORT_TO_READY_POSITION);break;case R0.LOWERING_SUPPORT_TO_READY_POSITION:i.supportPosition-=Co,i.supportPosition<jo&&(i.supportPosition=jo,i.nextState=R0.LOWERING_BASE_TO_READY_POSITION);break;case R0.LOWERING_BASE_TO_READY_POSITION:i.basePosition-=ia,i.basePosition<Wo&&(i.basePosition=Wo,i.nextState=R0.OPENING_ARM_DOOR);break;case R0.OPENING_ARM_DOOR:i.armDoorPosition-=Oo,i.armDoorPosition<Fo&&(i.armDoorPosition=Fo,i.nextState=R0.MOVING_ARM_TO_DROP_POSITION);break;case R0.MOVING_ARM_TO_DROP_POSITION:i.armPosition+=Mo,i.armPosition>Vo&&(i.armPosition=Vo,i.nextState=R0.INITIALIZING_COIN);break;case R0.INITIALIZING_COIN:i.nextState=R0.PUSHING_COIN;break;case R0.PUSHING_COIN:i.coin.position.y<Xo+i.position&&(i.nextState=R0.LOWERING_BASE);break;case R0.LOWERING_BASE:i.basePosition-=ia,Xo+i.position-i.coin.position.y>fz&&(i.nextState=R0.FINISHING_LEVEL);break;case R0.FINISHING_LEVEL:i.level++,i.level<i.levels?i.nextState=R0.INITIALIZING_COIN:(i.level=Y8,i.levels=-1,i.nextState=R0.MOVING_ARM_TO_INITIAL_POSITION);break;case R0.MOVING_ARM_TO_INITIAL_POSITION:i.armPosition-=Mo,i.armPosition<T7&&(i.armPosition=T7,i.nextState=R0.CLOSING_ARM_DOOR);break;case R0.CLOSING_ARM_DOOR:i.armDoorPosition+=Oo,i.armDoorPosition>x7&&(i.armDoorPosition=x7,i.nextState=R0.LOWERING_STACKER);break;case R0.LOWERING_STACKER:i.position-=Co,i.position<S7&&(i.position=S7,i.basePosition=W8,i.supportPosition=j8,i.baseAngle=F3,i.nextState=R0.PREPARING_IDLE);break;case R0.PREPARING_IDLE:if(i.coin=null,i.coins=[],i.pendingDeliveries.length>0){const{levels:t}=i.pendingDeliveries.shift();i.levels=t,i.nextState=R0.ACTIVATING}else i.nextState=R0.IDLE;break}}function Rz({stacker:i}){switch(i.lights.nextState=null,i.lights.state){case Vt.IDLE:break;case Vt.ACTIVATING:i.lights.frameLastRefresh=0,i.lights.nextState=Vt.BLINKING;break;case Vt.BLINKING:i.lights.frameLastRefresh++,i.lights.frameLastRefresh>Hz&&(i.lights.frameLastRefresh=0,i.lights.bulbs.forEach(e=>{e.intensity=e.intensity>fs?0:H3})),i.state===R0.INITIALIZING_COIN&&(i.lights.nextState=Vt.ROTATING);break;case Vt.ROTATING:i.lights.bulbs.forEach((e,t)=>{e.intensity=(t+i.level)%2<1?0:H3}),i.state===R0.LOWERING_STACKER&&(i.lights.nextState=Vt.DELIVERING);break;case Vt.DELIVERING:i.lights.frameLastRefresh++,i.lights.frameLastRefresh>Lz&&(i.lights.frameLastRefresh=0,i.lights.bulbs.forEach(e=>{e.intensity=e.intensity==H3?0:H3})),i.state===R0.PREPARING_IDLE&&(i.lights.nextState=Vt.PREPARING_IDLE);break;case Vt.PREPARING_IDLE:i.lights.bulbs.forEach(e=>{e.intensity=fs}),i.lights.frameLastRefresh=-1,i.lights.nextState=Vt.IDLE;break}}async function Mz({scene:i,offsetX:e}){const n=(await i.loadModel(dz)).scene,s=new Map,r=new S,a=new S,o=new S,l=[];return n.traverse(d=>{if(d.isMesh){const{material:c,geometry:u}=d;for(let h=0;h<u.index.count;h++){const y=u.attributes.position;y.setX(h,y.getX(h)+e)}const p=c.userData;if(p.collider){const h=p.name,y=u.index,T=u.attributes.position,m=[],f=[];for(let M=0;M<T.count;M++)m.push(T.getX(M),T.getY(M),T.getZ(M));for(let M=0;M<y.count;M++)f.push(y.getX(M));const N=ra(s,h);N.friction=p.friction,N.restitution=p.restitution,N.kinematic=p.kinematic,N.cuboid=p.cuboid,N.cylinder=p.cylinder,N.meshes.push({data:d,vertices:m,indices:f})}else{d.material.userData.light&&(l[d.material.userData.index]=d.material);const h=d.userData.name;ra(s,h).meshes.push({data:d})}}else if(d.userData.collider){const c=d.userData.name,u=ra(s,c),p=d.position.clone();p.x+=e,u.colliders.push({position:d.position,radius:d.userData.radius,height:d.userData.height})}else if(d.name==cz){const c=d.position.clone();c.x+=e,r.copy(c)}else if(d.name==uz){const c=d.position.clone();c.x+=e,a.copy(c)}else if(d.name==pz){const c=d.position.clone();c.x+=e,o.copy(c)}}),{parts:s,dropPosition:r,pivotPosition:a,armProtectionLidPivotPosition:o,lightBulbsMaterials:l}}function ra(i,e){let t;return i.has(e)?t=i.get(e):(t={meshes:[],colliders:[]},i.set(e,t)),t}function Oz({scene:i,parts:e,offsetX:t}){let n=0;e.forEach(s=>{const{meshes:r,colliders:a,friction:o,restitution:l,kinematic:d,cuboid:c,cylinder:u}=s,p=s.body=d?i.createKinematicBody():i.createFixedBody();if(p.setEnabled(!1),c||u){const h=r[0].data.geometry.boundingBox,y=new S().addVectors(h.min,h.max).multiplyScalar(.5);y.x+=t;const T=new S(h.max.x-h.min.x,h.max.y-h.min.y,h.max.z-h.min.z);let m;c?m=i.createCuboidCollider({position:y.toArray(),width:T.x,height:T.y,depth:T.z,friction:o,restitution:l},p):m=i.createCylinderCollider({position:y.toArray(),radius:T.x/2,height:T.y,friction:o,restitution:l},p),m.setCollisionGroups(1<<n%16<<16|1<<n%16),n++}else{const h=[],y=[];let T=0;r.forEach(m=>{m.vertices&&(h.push(...m.vertices),y.push(...m.indices.map(f=>f+T)),T+=Math.max(...m.indices)+1)}),h.length>0&&(i.createTrimeshCollider({vertices:h,indices:y,friction:o,restitution:l},p).setCollisionGroups(1<<n%16<<16|1<<n%16),n++)}a.forEach(h=>{const{radius:y,position:T,height:m}=h;T.x+=t,i.createCylinderCollider({radius:y,height:m,position:T,friction:o,restitution:l},p).setCollisionGroups(1<<n%16<<16|1<<n%16),n++})})}function Ez({lightBulbsMaterials:i,lights:e}){i.forEach((t,n)=>{t.emissive.setHex(Pz),t.emissiveIntensity=fs,e.bulbs[n]={intensity:fs}})}const Cz="./assets/sweepers.glb",zz="left-base",Az="right-base",G8="left-sweeper",Iz="right-sweeper",Xz="left-door",Vz="right-door",Fz="left-flap",Dz="right-flap",Wz="left-pivot-position",jz="right-pivot-position",Yz="left-door-pivot-position",Gz="right-door-pivot-position",o1=new S(0,1,0),L3=new S(0,0,1),hs=26.5*(Math.PI/180),Uz=new ee().setFromAxisAngle(o1,-hs),qz=new ee().setFromAxisAngle(o1,hs),ko=.05,N3=.002,Jo=.08,Bo=.07,Ko=.01,Qo=Math.PI/2,_o=.01,$o=.001,e4=Math.PI,t4=Math.PI/2,Zz=.0075,kz=.03,n4=.05,H7=0,L7=0,N7=0,Jz=0,R7=0,M7=0,O7=0,Bz=16711680,E7=0,i4=2,Kz=20,de={IDLE:Symbol.for("sweepers-idle"),ACTIVATING:Symbol.for("sweepers-activating"),OPENING_DOORS:Symbol.for("sweepers-opening-doors"),MOVING_BASE:Symbol.for("sweepers-moving-base"),ROTATING_BASE:Symbol.for("sweepers-rotating-base"),TRANSLATING_BASE:Symbol.for("sweepers-translating-base"),ROTATING_SWEEPERS:Symbol.for("sweepers-rotating-sweepers"),DEPLOYING_FLAPS:Symbol.for("sweepers-deploying-flaps"),SWEEPING:Symbol.for("sweepers-sweeping"),SWEEPING_BACK:Symbol.for("sweepers-sweeping-back"),RETRACTING_FLAPS:Symbol.for("sweepers-retracting-flaps"),ROTATING_SWEEPERS_BACK:Symbol.for("sweepers-rotating-sweepers-back"),TRANSLATING_BASE_BACK:Symbol.for("sweepers-translating-base-back"),ROTATING_BASE_BACK:Symbol.for("sweepers-rotating-base-back"),MOVING_BASE_BACK:Symbol.for("sweepers-moving-base-back"),CLOSING_DOORS:Symbol.for("sweepers-closing-doors")},l1={IDLE:Symbol.for("sweepers-lights-idle"),ACTIVATING:Symbol.for("sweepers-lights-activating"),BLINKING:Symbol.for("sweepers-lights-blinking")};class Qz{#e;#t;#n;#a;#r;#o;#u;#i;#s;#d;#f;#l;#b;#g;#m=new S;#h=new S;#y=new ee;#v=new ee;#p=new S;#x=new S;#S=new S;#P=new S;#w=new ee;#L=new ee;#H=new ee;#T=new ee;#N=new ee;#O=new ee;#E=new S;#C=new S;#z=new S;#A=new S;#I=new S;#X=new S;#R=new ee;#M=new ee;#V=new S;#F=new S;#D;#W;#c={parts:null,state:de.IDLE,position:H7,rotation:L7,translation:N7,sweepersRotationZ:Jz,sweepersRotationY:R7,doorsRotation:M7,flapsPosition:O7,level:0,pendingSweeps:[],nextState:null,lights:{state:l1.IDLE,leftOn:!1,rightOn:!1,frameLastRefresh:-1}};constructor({scene:e,canActivate:t}){this.#e=e,this.#t=t}async initialize(){const e=this.#e,{parts:t,leftPivotPosition:n,rightPivotPosition:s,leftDoorPivotPosition:r,rightDoorPivotPosition:a,leftLightMaterial:o,rightLightMaterial:l}=await eA({scene:e});this.#n=n,this.#a=s,this.#r=r,this.#o=a,this.#D=o,this.#W=l,tA({scene:e,parts:t}),t.forEach(({body:d,meshes:c})=>{c.forEach(({data:u})=>this.#e.addObject(u)),d.setEnabled(!0)}),Object.assign(this.#c,{parts:t}),this.#u=t.get(zz),this.#i=t.get(Az),this.#f=t.get(G8),this.#l=t.get(Iz),this.#s=t.get(Xz),this.#d=t.get(Vz),this.#b=t.get(Fz),this.#g=t.get(Dz)}update(){_z({sweepers:this.#c,canActivate:()=>this.#t(this)}),$z({sweepers:this.#c,lights:this.#c.lights});const{parts:e,state:t}=this.#c;t!==de.IDLE&&(this.#m.set(this.#c.position,0,0),this.#h.set(-this.#c.position,0,0),this.#y.setFromAxisAngle(o1,-this.#c.rotation),this.#v.setFromAxisAngle(o1,this.#c.rotation),this.#L.setFromAxisAngle(o1,-this.#c.sweepersRotationY),this.#H.setFromAxisAngle(L3,this.#c.sweepersRotationZ),this.#N.setFromAxisAngle(o1,this.#c.sweepersRotationY),this.#O.setFromAxisAngle(L3,-this.#c.sweepersRotationZ),this.#w.setFromAxisAngle(o1,-this.#c.rotation).multiply(this.#L).multiply(this.#H),this.#T.setFromAxisAngle(o1,this.#c.rotation).multiply(this.#N).multiply(this.#O),this.#p.set(this.#c.translation,0,0).applyQuaternion(this.#y),this.#x.set(-this.#c.translation,0,0).applyQuaternion(this.#v),this.#C.set(-this.#c.flapsPosition,0,0),this.#V.set(this.#c.flapsPosition,0,0),this.#S.copy(this.#m).sub(this.#n).applyQuaternion(this.#w).add(this.#n).add(this.#p),this.#P.copy(this.#h).sub(this.#a).applyQuaternion(this.#T).add(this.#a).add(this.#x),this.#z.copy(this.#m).sub(this.#n).add(this.#C).applyQuaternion(this.#w).add(this.#n).add(this.#p),this.#F.copy(this.#h).sub(this.#a).add(this.#V).applyQuaternion(this.#T).add(this.#a).add(this.#x),this.#m.sub(this.#n).applyQuaternion(this.#y).add(this.#n).add(this.#p),this.#h.sub(this.#a).applyQuaternion(this.#v).add(this.#a).add(this.#x),this.#E.copy(L3).applyQuaternion(Uz),this.#R.setFromAxisAngle(this.#E,this.#c.doorsRotation),this.#I.set(0,0,0).sub(this.#r).applyQuaternion(this.#R).add(this.#r),this.#A.copy(L3).applyQuaternion(qz),this.#M.setFromAxisAngle(this.#A,-this.#c.doorsRotation),this.#X.set(0,0,0).sub(this.#o).applyQuaternion(this.#M).add(this.#o),this.#u.body.setNextKinematicTranslation(this.#m),this.#i.body.setNextKinematicTranslation(this.#h),this.#f.body.setNextKinematicTranslation(this.#S),this.#l.body.setNextKinematicTranslation(this.#P),this.#b.body.setNextKinematicTranslation(this.#z),this.#g.body.setNextKinematicTranslation(this.#F),this.#b.body.setNextKinematicRotation(this.#w),this.#g.body.setNextKinematicRotation(this.#T),this.#s.body.setNextKinematicTranslation(this.#I),this.#d.body.setNextKinematicTranslation(this.#X),this.#u.body.setNextKinematicRotation(this.#y),this.#i.body.setNextKinematicRotation(this.#v),this.#f.body.setNextKinematicRotation(this.#w),this.#l.body.setNextKinematicRotation(this.#T),this.#s.body.setNextKinematicRotation(this.#R),this.#d.body.setNextKinematicRotation(this.#M),e.forEach(({meshes:n,body:s})=>{n.forEach(({data:r})=>{r.position.copy(s.translation()),r.quaternion.copy(s.rotation())})}),this.#c.lights.state===l1.BLINKING&&(this.#D.emissiveIntensity=this.#c.lights.leftOn?i4:E7,this.#W.emissiveIntensity=this.#c.lights.rightOn?i4:E7)),this.#c.nextState&&(this.#c.state=this.#c.nextState),this.#c.lights.nextState&&(this.#c.lights.state=this.#c.lights.nextState)}sweepFloor({level:e}={level:0}){e=Math.max(0,Math.min(10,e))/10,this.#c.state===de.IDLE?(this.#c.level=e,this.#c.state=de.ACTIVATING):this.#c.pendingSweeps.push({level:e})}save(){const e={};return this.#c.parts.forEach(({body:t},n)=>{e[n]={bodyHandle:t.handle}}),{state:this.#c.state.description,nextState:this.#c.nextState?this.#c.nextState.description:null,parts:e,position:this.#c.position,rotation:this.#c.rotation,translation:this.#c.translation,sweepersRotationZ:this.#c.sweepersRotationZ,sweepersRotationY:this.#c.sweepersRotationY,doorsRotation:this.#c.doorsRotation,pendingSweeps:this.#c.pendingSweeps.map(t=>({level:t.level})),lights:{state:this.#c.lights.state.description,nextState:this.#c.lights.nextState?this.#c.lights.nextState.description:null,leftOn:this.#c.lights.leftOn,rightOn:this.#c.lights.rightOn,frameLastRefresh:this.#c.lights.frameLastRefresh}}}load(e){this.#c.state=Symbol.for(e.state),this.#c.nextState=e.nextState?Symbol.for(e.nextState):null,this.#c.position=e.position,this.#c.rotation=e.rotation,this.#c.translation=e.translation,this.#c.sweepersRotationZ=e.sweepersRotationZ,this.#c.sweepersRotationY=e.sweepersRotationY,this.#c.doorsRotation=e.doorsRotation,this.#c.pendingSweeps=e.pendingSweeps.map(t=>({level:t.level})),this.#c.lights.state=Symbol.for(e.lights.state),this.#c.lights.nextState=e.lights.nextState?Symbol.for(e.lights.nextState):null,this.#c.lights.leftOn=e.lights.leftOn,this.#c.lights.rightOn=e.lights.rightOn,this.#c.lights.frameLastRefresh=e.lights.frameLastRefresh,this.#c.parts.forEach((t,n)=>{const s=e.parts[n];s&&(t.body=this.#e.worldBodies.get(s.bodyHandle))})}get active(){return this.#c.state!==de.IDLE&&this.#c.state!==de.ACTIVATING}}function _z({sweepers:i,canActivate:e}){switch(i.nextState=null,i.state){case de.IDLE:break;case de.ACTIVATING:e()&&(i.nextState=de.OPENING_DOORS);break;case de.OPENING_DOORS:i.doorsRotation+=ko,i.doorsRotation>Qo&&(i.doorsRotation=Qo,i.nextState=de.MOVING_BASE);break;case de.MOVING_BASE:i.position+=N3,i.position>Jo&&(i.position=Jo,i.nextState=de.ROTATING_BASE);break;case de.ROTATING_BASE:i.rotation+=Ko,i.rotation>hs&&(i.rotation=hs,i.nextState=de.TRANSLATING_BASE);break;case de.TRANSLATING_BASE:i.translation+=N3,i.translation>Bo&&(i.translation=Bo,i.nextState=de.ROTATING_SWEEPERS);break;case de.ROTATING_SWEEPERS:i.sweepersRotationZ+=n4,i.sweepersRotationZ>t4&&(i.sweepersRotationZ=t4,i.nextState=de.DEPLOYING_FLAPS);break;case de.DEPLOYING_FLAPS:i.flapsPosition+=$o,i.flapsPosition>_o*i.level&&(i.flapsPosition=_o*i.level,i.nextState=de.SWEEPING,i.lights.state=l1.ACTIVATING);break;case de.SWEEPING:i.sweepersRotationY+=Zz,i.sweepersRotationY>e4&&(i.sweepersRotationY=e4,i.nextState=de.RETRACTING_FLAPS);break;case de.RETRACTING_FLAPS:i.flapsPosition-=$o,i.flapsPosition<O7&&(i.flapsPosition=O7,i.nextState=de.ROTATING_SWEEPERS_BACK);break;case de.ROTATING_SWEEPERS_BACK:i.sweepersRotationZ-=n4,i.sweepersRotationZ<0&&(i.sweepersRotationZ=0,i.nextState=de.SWEEPING_BACK);break;case de.SWEEPING_BACK:if(i.sweepersRotationY-=kz,i.sweepersRotationY<R7)if(i.sweepersRotationY=R7,i.pendingSweeps.length){const{level:t}=i.pendingSweeps.shift();i.level=t,i.nextState=de.OPENING_DOORS}else i.nextState=de.TRANSLATING_BASE_BACK;break;case de.TRANSLATING_BASE_BACK:i.translation-=N3,i.translation<N7&&(i.translation=N7,i.nextState=de.ROTATING_BASE_BACK);break;case de.ROTATING_BASE_BACK:i.rotation-=Ko,i.rotation<L7&&(i.rotation=L7,i.nextState=de.MOVING_BASE_BACK);break;case de.MOVING_BASE_BACK:i.position-=N3,i.position<H7&&(i.position=H7,i.nextState=de.CLOSING_DOORS);break;case de.CLOSING_DOORS:i.doorsRotation-=ko,i.doorsRotation<M7&&(i.doorsRotation=M7,i.nextState=de.IDLE);break}}function $z({sweepers:i,lights:e}){switch(e.nextState=null,e.state){case l1.IDLE:break;case l1.ACTIVATING:e.frameLastRefresh=0,e.leftOn=!0,e.rightOn=!1,e.nextState=l1.BLINKING;break;case l1.BLINKING:e.frameLastRefresh++,e.frameLastRefresh>Kz&&(e.frameLastRefresh=0,e.leftOn=!e.leftOn,e.rightOn=!e.rightOn),i.state==de.TRANSLATING_BASE_BACK&&(e.leftOn=!1,e.rightOn=!1,e.frameLastRefresh=-1,e.nextState=l1.IDLE);break}}async function eA({scene:i}){const t=(await i.loadModel(Cz)).scene,n=new Map,s=new S,r=new S,a=new S,o=new S;let l,d;return t.traverse(c=>{if(c.isMesh){const{material:u,geometry:p}=c,h=u.userData;if(h.collider){const y=h.name,T=p.index,m=p.attributes.position,f=[],N=[];for(let P=0;P<m.count;P++)f.push(m.getX(P),m.getY(P),m.getZ(P));for(let P=0;P<T.count;P++)N.push(T.getX(P));const M=s4(n,y);M.friction=h.friction,M.restitution=h.restitution,M.kinematic=h.kinematic,M.cuboid=h.cuboid,M.meshes.push({data:c,vertices:f,indices:N})}else s4(n,c.userData.name).meshes.push({data:c}),h.light&&(h.name==G8?l=u:d=u,u.emissive.setHex(Bz),u.emissiveIntensity=E7)}else c.name==Wz?s.copy(c.position):c.name==jz?r.copy(c.position):c.name==Yz?a.copy(c.position):c.name==Gz&&o.copy(c.position)}),{parts:n,leftPivotPosition:s,rightPivotPosition:r,leftDoorPivotPosition:a,rightDoorPivotPosition:o,leftLightMaterial:l,rightLightMaterial:d}}function s4(i,e){let t;return i.has(e)?t=i.get(e):(t={meshes:[],colliders:[]},i.set(e,t)),t}function tA({scene:i,parts:e}){let t=0;e.forEach(n=>{const{meshes:s,friction:r,restitution:a,kinematic:o,cuboid:l}=n,d=n.body=o?i.createKinematicBody():i.createFixedBody();if(d.setEnabled(!1),l){const c=s[0].data.geometry.boundingBox,u=new S().addVectors(c.min,c.max).multiplyScalar(.5).toArray(),p=new S(c.max.x-c.min.x,c.max.y-c.min.y,c.max.z-c.min.z);let h;l&&(h=i.createCuboidCollider({position:u,width:p.x,height:p.y,depth:p.z,friction:r,restitution:a},d)),h.setCollisionGroups(1<<t%16<<16|1<<t%16),t++}else{const c=[],u=[];let p=0;s.forEach(h=>{h.vertices&&(c.push(...h.vertices),u.push(...h.indices.map(y=>y+p)),p+=Math.max(...h.indices)+1)}),c.length>0&&(i.createTrimeshCollider({vertices:c,indices:u,friction:r,restitution:a},d).setCollisionGroups(1<<t%16<<16|1<<t%16),t++)}})}const r4=new S,nA=new ee,a4=new S;class iA extends qe{constructor(e=document.createElement("div")){super(),this.isCSS3DObject=!0,this.element=e,this.element.style.position="absolute",this.element.style.pointerEvents="auto",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.addEventListener("removed",function(){this.traverse(function(t){t.element instanceof t.element.ownerDocument.defaultView.Element&&t.element.parentNode!==null&&t.element.remove()})})}copy(e,t){return super.copy(e,t),this.element=e.element.cloneNode(!0),this}}const mn=new B0,sA=new B0;class rA{constructor(e={}){const t=this;let n,s,r,a;const o={camera:{style:""},objects:new WeakMap},l=e.element!==void 0?e.element:document.createElement("div");l.style.overflow="hidden",this.domElement=l;const d=document.createElement("div");d.style.transformOrigin="0 0",d.style.pointerEvents="none",l.appendChild(d);const c=document.createElement("div");c.style.transformStyle="preserve-3d",d.appendChild(c),this.getSize=function(){return{width:n,height:s}},this.render=function(m,f){const N=f.projectionMatrix.elements[5]*a;f.view&&f.view.enabled?(d.style.transform=`translate( ${-f.view.offsetX*(n/f.view.width)}px, ${-f.view.offsetY*(s/f.view.height)}px )`,d.style.transform+=`scale( ${f.view.fullWidth/f.view.width}, ${f.view.fullHeight/f.view.height} )`):d.style.transform="",m.matrixWorldAutoUpdate===!0&&m.updateMatrixWorld(),f.parent===null&&f.matrixWorldAutoUpdate===!0&&f.updateMatrixWorld();let M,P;f.isOrthographicCamera&&(M=-(f.right+f.left)/2,P=(f.top+f.bottom)/2);const F=f.view&&f.view.enabled?f.view.height/f.view.fullHeight:1,X=f.isOrthographicCamera?`scale( ${F} )scale(`+N+")translate("+u(M)+"px,"+u(P)+"px)"+p(f.matrixWorldInverse):`scale( ${F} )translateZ(`+N+"px)"+p(f.matrixWorldInverse),U=(f.isPerspectiveCamera?"perspective("+N+"px) ":"")+X+"translate("+r+"px,"+a+"px)";o.camera.style!==U&&(c.style.transform=U,o.camera.style=U),T(m,m,f)},this.setSize=function(m,f){n=m,s=f,r=n/2,a=s/2,l.style.width=m+"px",l.style.height=f+"px",d.style.width=m+"px",d.style.height=f+"px",c.style.width=m+"px",c.style.height=f+"px"};function u(m){return Math.abs(m)<1e-10?0:m}function p(m){const f=m.elements;return"matrix3d("+u(f[0])+","+u(-f[1])+","+u(f[2])+","+u(f[3])+","+u(f[4])+","+u(-f[5])+","+u(f[6])+","+u(f[7])+","+u(f[8])+","+u(-f[9])+","+u(f[10])+","+u(f[11])+","+u(f[12])+","+u(-f[13])+","+u(f[14])+","+u(f[15])+")"}function h(m){const f=m.elements;return"translate(-50%,-50%)"+("matrix3d("+u(f[0])+","+u(f[1])+","+u(f[2])+","+u(f[3])+","+u(-f[4])+","+u(-f[5])+","+u(-f[6])+","+u(-f[7])+","+u(f[8])+","+u(f[9])+","+u(f[10])+","+u(f[11])+","+u(f[12])+","+u(f[13])+","+u(f[14])+","+u(f[15])+")")}function y(m){m.isCSS3DObject&&(m.element.style.display="none");for(let f=0,N=m.children.length;f<N;f++)y(m.children[f])}function T(m,f,N,M){if(m.visible===!1){y(m);return}if(m.isCSS3DObject){const P=m.layers.test(N.layers)===!0,F=m.element;if(F.style.display=P===!0?"":"none",P===!0){m.onBeforeRender(t,f,N);let X;m.isCSS3DSprite?(mn.copy(N.matrixWorldInverse),mn.transpose(),m.rotation2D!==0&&mn.multiply(sA.makeRotationZ(m.rotation2D)),m.matrixWorld.decompose(r4,nA,a4),mn.setPosition(r4),mn.scale(a4),mn.elements[3]=0,mn.elements[7]=0,mn.elements[11]=0,mn.elements[15]=1,X=h(mn)):X=h(m.matrixWorld);const D=o.objects.get(m);if(D===void 0||D.style!==X){F.style.transform=X;const U={style:X};o.objects.set(m,U)}F.parentNode!==c&&c.appendChild(F),m.onAfterRender(t,f,N)}}for(let P=0,F=m.children.length;P<F;P++)T(m.children[P],f,N)}}}const aA="./assets/screen.glb",oA="display",lA=.442,dA=.319;class cA{#e;#t;#n;#a;constructor({scene:e}){this.#e=e,this.#t=document.createElement("iframe"),this.#t.style.width=`${lA*1e3}px`,this.#t.style.height=`${dA*1e3}px`,this.#t.style.border="none",this.#n=new rA,this.#n.setSize(window.innerWidth,window.innerHeight),this.#n.domElement.style.position="absolute",this.#n.domElement.style.top=0,e.containerElement.appendChild(this.#n.domElement)}async initialize(){const{screenPosition:e,screenRotation:t}=await uA({scene:this.#e});return this.#a=new iA(this.#t),this.#a.position.copy(e),this.#a.rotation.copy(t),this.#a.scale.set(.001,.001,.001),this.#e.css3DScene.add(this.#a),new Promise(n=>{addEventListener("message",()=>n(),{once:!0}),this.#t.src="views/index.html",this.update()})}update(){const e=this.#e.camera.position.clone(),t=this.#a.position.clone(),n=new S(0,0,1);n.applyQuaternion(this.#a.quaternion);const r=e.sub(t).normalize().dot(n);this.#a.visible=r>0,this.#n.render(this.#e.css3DScene,this.#e.camera)}resize(e,t){this.#n&&this.#n.setSize(e,t)}showDemoMode(){this.#t.contentWindow.postMessage({type:"showDemoMode"},"*")}showRunStart(e){this.#t.contentWindow.postMessage({type:"showRunStart",...e},"*")}showRunComplete(e){this.#t.contentWindow.postMessage({type:"showRunComplete",...e},"*")}}async function uA({scene:i}){const t=(await i.loadModel(aA)).scene;let n,s;return t.traverse(r=>{r.name===oA&&(n=r.position,s=r.rotation)}),i.addObject(t),{screenPosition:n,screenRotation:s}}const pA="./assets/card-reader.glb",fA="insert-position",hA=0,aa={IDLE:Symbol.for("card-reader-idle"),ACTIVATING:Symbol.for("card-reader-activating")};class mA{#e;#t;#n;#a={state:aa.IDLE,cardPosition:hA,pendingCards:[],nextState:null};constructor({scene:e,onCardRead:t}){this.#e=e,this.#n=t}async initialize(){const e=this.#e,{parts:t,insertPosition:n}=await yA({scene:e});this.#t=n,t.forEach(({meshes:s})=>s.forEach(({data:r})=>this.#e.addObject(r))),Object.assign(this.#a,{parts:t})}update(){bA({cardReader:this.#a});const{parts:e,state:t}=this.#a;this.#a.nextState&&(this.#a.state=this.#a.nextState)}readCard(e){this.#a.state===aa.IDLE?this.#a.state=aa.ACTIVATING:this.#a.pendingCards.push(e)}save(){}load(e){}}function bA({cardReader:i}){i.nextState=null,i.state}async function yA({scene:i}){const t=(await i.loadModel(pA)).scene,n=new Map,s=new S;return t.traverse(r=>{r.isMesh?vA(n,r.name).meshes.push({data:r}):r.name==fA&&s.copy(r.position)}),{parts:n,insertPosition:s}}function vA(i,e){let t;return i.has(e)?t=i.get(e):(t={meshes:[]},i.set(e,t)),t}const gA="./assets/token-slot.glb",wA="insert-position",TA=0,oa={IDLE:Symbol.for("token-slot-idle"),ACTIVATING:Symbol.for("token-slot-activating")};class xA{#e;#t;#n;#a={state:oa.IDLE,cardPosition:TA,pendingTokens:[],nextState:null};constructor({scene:e,onTokenInserted:t}){this.#e=e,this.#n=t}async initialize(){const e=this.#e,{parts:t,insertPosition:n}=await PA({scene:e});this.#t=n,t.forEach(({meshes:s})=>s.forEach(({data:r})=>this.#e.addObject(r))),Object.assign(this.#a,{parts:t})}update(){SA({tokenSlot:this.#a});const{parts:e,state:t}=this.#a;this.#a.nextState&&(this.#a.state=this.#a.nextState)}insertToken(e){this.#a.state===oa.IDLE?this.#a.state=oa.ACTIVATING:this.#a.pendingTokens.push(e)}save(){}load(e){}}function SA({tokenSlot:i}){i.nextState=null,i.state}async function PA({scene:i}){const t=(await i.loadModel(gA)).scene,n=new Map,s=new S;return t.traverse(r=>{r.isMesh?HA(n,r.name).meshes.push({data:r}):r.name==wA&&s.copy(r.position)}),{parts:n,insertPosition:s}}function HA(i,e){let t;return i.has(e)?t=i.get(e):(t={meshes:[]},i.set(e,t)),t}const LA=5e3,U8=[{description:"Win 150 points",passed:(i,e)=>i.score-e.scoreStart>=150,message:(i,e)=>"Remaining points: "+(150-(i.score-e.scoreStart))},{description:"Win 200 points",passed:(i,e)=>i.score-e.scoreStart>=200,message:(i,e)=>"Remaining points: "+(200-(i.score-e.scoreStart))},{description:"Win 250 points",passed:(i,e)=>i.score-e.scoreStart>=250,message:(i,e)=>"Remaining points: "+(250-(i.score-e.scoreStart))}],ht={IDLE:Symbol.for("runs-idle"),STARTING_RUNS:Symbol.for("runs-starting-runs"),STARTING_RUN:Symbol.for("runs-starting-run"),RUNNING:Symbol.for("runs-running"),COMPLETED_RUN:Symbol.for("runs-completed-run")};class NA{#e;#t;#n={state:ht.IDLE,step:-1,timeRunCompleted:-1};constructor({state:e,screen:t}){this.#e=e,this.#t=t}initialize(){}load(e){this.#n.state=Symbol.for(e.state),this.#n.data=e.data,this.#n.step=e.step,this.#n.timeRunCompleted=e.timeRunCompleted}save(){return{state:this.#n.state.description,data:this.#n.data,step:this.#n.step,timeRunCompleted:this.#n.timeRunCompleted}}start(){this.#n.state===ht.IDLE&&(this.#n.state=ht.STARTING_RUNS)}update(e){const t=U8[this.#n.step];RA({run:this.#n,state:this.#e,currentRun:t,time:e}),this.#n.state===ht.IDLE?this.#t.showDemoMode():(this.#n.data&&(this.#n.state===ht.STARTING_RUN||this.#n.state===ht.RUNNING)&&this.#t.showRunStart({description:t.description,content:t.message(this.#e,this.#n.data)}),this.#n.state===ht.COMPLETED_RUN&&this.#t.showRunComplete())}get started(){return this.#n.state!==ht.IDLE&&this.#n.state!==ht.STARTING_RUNS}}function RA({run:i,state:e,currentRun:t,time:n}){switch(i.state){case ht.STARTING_RUNS:i.step=0,e.coins=100,i.state=ht.STARTING_RUN;break;case ht.STARTING_RUN:i.data={scoreStart:e.score},i.state=ht.RUNNING;break;case ht.RUNNING:t.passed(e,i.data)&&(i.timeRunCompleted=n,i.state=ht.COMPLETED_RUN);break;case ht.COMPLETED_RUN:n-i.timeRunCompleted>LA&&(i.step++,i.timeRunCompleted=-1,i.step<U8.length?i.state=ht.STARTING_RUN:i.state=ht.IDLE);break}}const MA=-1,OA="./assets/cabinet.glb",EA=.2,CA=65537;class zA{DEBUG_AUTOPLAY=!1;DEBUG_HIDE_CABINET=!1;constructor({scene:e}){this.#e=e}#e;#t={state:{score:0,points:0,coins:0}};#n;#a={"left-trap":e=>{const t=this.#H(e);t&&R3(t)},"right-trap":e=>{const t=this.#H(e);t&&R3(t)},gutter:e=>{const t=this.#H(e);t&&(R3(t),this.#w.started&&(t.objectType===Ae.TYPE&&(this.#t.state.score++,this.#t.state.points++,this.#t.state.coins++),t.objectType===Jt.TYPE&&(this.#t.state.score+=5,this.#t.state.points+=5),t.objectType===an.TYPE&&(this.#t.state.score+=10,this.#t.state.points+=10,this.#S.readCard(t))))}};#r=new Map;#o;#u;#i;#s;#d;#f;#l;#b;#g;#m;#h;#y;#v;#p;#x;#S;#P;#w;#L;async initialize(){const e=this.#e,{parts:t}=await AA({scene:e,DEBUG_HIDE_CABINET:this.DEBUG_HIDE_CABINET});this.#L=t;const{sensorColliders:n}=IA({scene:e,sensorListeners:this.#a,parts:t});this.#n=n;const s=new nR({scene:e});this.#o=new yR({onPressDropButton:r=>{this.#t.state.coins&&(Ae.dropCoin({slot:r}),this.#t.state.coins--)},onPressActionButton:()=>{this.#m.triggerCoin()},onPressStartButton:()=>{this.#o.disableStartButton(),this.#w.start()}}),this.#u=new LR({scene:e,depositBonus:({reward:r,position:a})=>{Ae.depositCoins({position:a,count:r.coinCount}),Jt.depositTokens({position:a,count:r.tokenCount}),an.depositCards({position:a,count:r.cardCount}),Xn.depositIngots({position:a,count:r.ingotCount})}}),this.#i=new DO({scene:e,cabinet:this,state:this.#t.state}),this.#d=new gO({scene:e}),this.#s=new $O({scene:e,onCoinFallen:r=>{Ae.enableCcd(r,!1)},onBonusWon:()=>{const r=Math.random();this.DEBUG_AUTOPLAY?this.#u.deliverBonus({coinCount:10,cardCount:Math.random()<.5?1:0,tokenCount:Math.random()<.5?1:0,ingotCount:Math.random()<.5?1:0}):r<.14?this.#f.spinReels():r<.28?this.#l.pick():r<.43?(this.#o.enableActionButton(),this.#m.shootCoin()):r<.57?(this.#b.shootCoins(),this.#g.shootCoins()):r<.71?(this.#y.deliver({levels:30}),this.#v.deliver({levels:30})):r<.86?this.#p.sweepFloor({level:5}):this.#h.deliver({stacks:7,levels:15})}}),this.#f=new mE({scene:e,onBonusWon:r=>{this.#u.deliverBonus({coinCount:Math.floor(5*Math.random())+10,cardCount:Math.random()<.5?1:0,tokenCount:Math.random()<.5?1:0,ingotCount:Math.random()<.25?1:0})}}),this.#l=new ZE({scene:e,canActivate:r=>this.#T(r),onPick:r=>{const a=[];for(let o=0;o<30+Math.floor(Math.random()*10);o++){const l={x:(Math.random()-.5)*Math.PI/4,y:(Math.random()-.5)*Math.PI/4,z:(Math.random()-.5)*Math.PI/4},d={x:r.x+(Math.random()-.5)*.02,y:r.y,z:r.z+(Math.random()-.5)*.02};a.push(Ae.depositCoin({position:d,rotation:l}))}return Math.random()<.25&&a.push(Jt.depositToken({position:{x:r.x+(Math.random()-.5)*.02,y:r.y,z:r.z+(Math.random()-.5)*.02},rotation:{x:(Math.random()-.5)*Math.PI/4,y:(Math.random()-.5)*Math.PI/4,z:(Math.random()-.5)*Math.PI/4}})),a},onGetObject:r=>this.#H(r),onRecycleObject:r=>{const a=this.#H(r);a&&R3(a)}}),this.#b=new oo({scene:e,offsetX:-.25,oscillationDirection:1,canActivate:r=>this.#T(r),onShootCoin:({position:r,impulse:a})=>{Ae.depositCoin({position:r,impulse:a})}}),this.#g=new oo({scene:e,offsetX:.25,oscillationDirection:-1,canActivate:r=>this.#T(r),onShootCoin:({position:r,impulse:a})=>{Ae.depositCoin({position:r,impulse:a})}}),this.#m=new EC({scene:e,onInitializeCoin:({position:r,rotation:a})=>Ae.depositCoin({position:r,rotation:a}),onGetCoin:r=>Ae.getCoin(r),onRecycleCoin:r=>{Ae.recycle(r),this.#o.disableActionButton()},onBonusWon:r=>{Ae.dropCoins({count:Math.pow(r+1,2)*5}),this.#o.disableActionButton()}}),this.#h=new iz({scene:e,canActivate:r=>this.#T(r),onInitializeCoin:({position:r,rotation:a,impulse:o})=>Ae.depositCoin({position:r,rotation:a,impulse:o})}),this.#y=new Zo({scene:e,canActivate:r=>this.#T(r),onInitializeCoin:({position:r,rotation:a,impulse:o})=>Ae.depositCoin({position:r,rotation:a,impulse:o}),offsetX:-.4}),this.#v=new Zo({scene:e,canActivate:r=>this.#T(r),onInitializeCoin:({position:r,rotation:a,impulse:o})=>Ae.depositCoin({position:r,rotation:a,impulse:o}),offsetX:.4}),this.#p=new Qz({scene:e,canActivate:r=>this.#T(r)}),this.#x=new cA({scene:e}),this.#S=new mA({scene:e,onCardRead:r=>{}}),this.#P=new xA({scene:e,onTokenInserted:r=>{}}),this.#w=new NA({state:this.#t.state,screen:this.#x}),this.#r.set(this.#y,new Set([this.#p])),this.#r.set(this.#v,new Set([this.#p])),this.#r.set(this.#h,new Set([this.#p,this.#l])),this.#r.set(this.#p,null),this.#r.set(this.#l,new Set([this.#p,this.#h])),this.#r.set(this.#b,new Set([this.#p])),this.#r.set(this.#g,new Set([this.#p])),await Promise.all([an.initialize({scene:e}),Ae.initialize({scene:e,onSpawnedCoin:r=>{Ae.enableCcd(r,!0)}}),Jt.initialize({scene:e}),wt.initialize({scene:e}),it.initialize({scene:e}),Xn.initialize({scene:e})]),await Promise.all([s.initialize(),this.#d.initialize(),this.#o.initialize(),this.#u.initialize(),this.#i.initialize(),this.#s.initialize(),this.#f.initialize(),this.#l.initialize(),this.#b.initialize(),this.#g.initialize(),this.#m.initialize(),this.#h.initialize(),this.#y.initialize(),this.#v.initialize(),this.#p.initialize(),this.#x.initialize(),this.#S.initialize(),this.#P.initialize(),this.#w.initialize()]),setTimeout(()=>{setTimeout(()=>{},105e3)},500)}update(e){an.update(),Ae.update(),Jt.update(),wt.update(),it.update(),Xn.update(),this.#u.update(),this.#d.update(),this.#i.update(),this.#o.update(),this.#s.update(),this.#f.update(),this.#p.update(),this.#l.update(),this.#b.update(),this.#g.update(),this.#m.update(),this.#h.update(),this.#y.update(),this.#v.update(),this.#x.update(),this.#S.update(),this.#P.update(),this.#w.update(e),this.dynamicBodies.forEach(({object:t,objects:n})=>{t.position.y<MA&&(console.warn("object recycled",t,structuredClone(t.position),structuredClone(t.rotation)),n.recycle(t))}),this.DEBUG_AUTOPLAY&&this.#N()}resize(e,t){this.#x.resize(e,t)}get interactiveObjects(){return this.#o.interactiveObjects}get joints(){return this.#l.joints}get coinsInPlay(){return Ae.usedCoins}get dynamicBodies(){return[...Ae.dynamicBodies,...Jt.dynamicBodies,...an.dynamicBodies]}async save(){const e={};this.#n.forEach((n,s)=>e[s]=n.handle);const t={};return t.cards=an.save(),t.coins=Ae.save(),t.tokens=Jt.save(),t.buttons=wt.save(),t.ingots=Xn.save(),Object.assign(t,{state:this.#t.state,sensorCollidersHandles:e,pusher:this.#u.save(),sensorGate:this.#s.save(),reelsBox:this.#f.save(),excavator:this.#l.save(),leftTower:this.#b.save(),rightTower:this.#g.save(),coinRoller:this.#m.save(),stacker:this.#h.save(),leftStacker:this.#y.save(),rightStacker:this.#v.save(),sweepers:this.#p.save(),cardReader:this.#S.save(),tokenSlot:this.#P.save(),runs:this.#w.save(),scene:await this.#e.save()}),t}async load(e){await this.#e.load(e.scene),an.load(e.cards),Ae.load(e.coins),Jt.load(e.tokens),wt.load(e.buttons),Xn.load(e.ingots),this.#n=new Map,this.#L.forEach(t=>{t.meshes.forEach(({data:n})=>{n.traverse(s=>{if(s.isMesh){const r=s.material.userData,a=s.material.name;if(r.sensor){const o=e.sensorCollidersHandles[a],l=this.#e.worldColliders.get(o);l.userData={objectType:a,onIntersect:this.#a[a]},this.#n.set(a,l)}}})})}),this.#t.state.score=e.state.score,this.#t.state.points=e.state.points,this.#t.state.coins=e.state.coins,this.#u.load(e.pusher),this.#s.load(e.sensorGate),this.#f.load(e.reelsBox),this.#l.load(e.excavator),this.#b.load(e.leftTower),this.#g.load(e.rightTower),this.#m.load(e.coinRoller),this.#h.load(e.stacker),this.#y.load(e.leftStacker),this.#v.load(e.rightStacker),this.#p.load(e.sweepers),this.#S.load(e.cardReader),this.#P.load(e.tokenSlot),this.#w.load(e.runs)}#H(e){if(e.objectType===Ae.TYPE)return Ae.getCoin(e);if(e.objectType===Jt.TYPE)return Jt.getToken(e);if(e.objectType===an.TYPE)return an.getCard(e);if(e.objectType===Xn.TYPE)return Xn.getIngot(e)}#T(e){const t=this.#r.get(e);return t?!Array.from(t).filter(s=>s!==e).find(s=>s.active):!Array.from(this.#r.keys()).filter(s=>s!==e).find(s=>s.active)}#N(){this.#u.phase>2&&this.#u.phase<2.05&&this.#u.phase>this.lastPhase&&Ae.dropCoins({count:30}),this.lastPhase=this.#u.phase}}function R3(i){i.objectType===Ae.TYPE&&Ae.recycle(i),i.objectType===Jt.TYPE&&Jt.recycle(i),i.objectType===an.TYPE&&an.recycle(i),i.objectType===Xn.TYPE&&Xn.recycle(i)}async function AA({scene:i,DEBUG_HIDE_CABINET:e}){const n=(await i.loadModel(OA)).scene,s=new Map;return n.traverse(r=>{if(r.isMesh){const{material:a,geometry:o}=r,l=a.userData,d=l.name;if(l.collider||l.sensor){const c=o.index,u=o.attributes.position,p=[],h=[];for(let T=0;T<u.count;T++)p.push(u.getX(T),u.getY(T),u.getZ(T));for(let T=0;T<c.count;T++)h.push(c.getX(T));const y=o4(s,d);y.sensor=l.sensor,y.friction=l.friction,y.restitution=l.restitution,y.meshes.push({data:r,vertices:p,indices:h})}else{const c=r.userData.name;o4(s,c).meshes.push({data:r})}}}),e||i.addObject(n),{parts:s}}function IA({scene:i,parts:e,sensorListeners:t}){const n=new Map;return e.forEach((s,r)=>{const{meshes:a,sensor:o,friction:l,restitution:d}=s,c=i.createFixedBody(),u=[],p=[];let h=0;a.forEach(y=>{if(o){const T=i.createCuboidColliderFromBoundingBox({mesh:y.data,height:EA,userData:{objectType:r,onIntersect:t[r]},sensor:o},c);n.set(r,T)}else y.vertices&&(u.push(...y.vertices),p.push(...y.indices.map(T=>T+h)),h+=Math.max(...y.indices)+1)}),u.length>0&&i.createTrimeshCollider({vertices:u,indices:p,friction:l,restitution:d},c).setCollisionGroups(CA)}),{sensorColliders:n}}function o4(i,e){let t;return i.has(e)?t=i.get(e):(t={meshes:[]},i.set(e,t)),t}class XA{constructor({scene:e,camera:t,interactiveObjects:n}){this.#e=e,this.#t=t,this.#n=n}#e;#t;#n;#a=new $0;#r=new mc;initialize(e,t){addEventListener("mousemove",n=>{this.#a.x=n.clientX/e*2-1,this.#a.y=-(n.clientY/t)*2+1,this.#r.setFromCamera(this.#a,this.#t);const s=this.#r.intersectObjects(this.#e.children);s.length&&this.#n.includes(s[0].object)?document.body.style.cursor="pointer":document.body.style.cursor="default"}),addEventListener("click",n=>{this.#r.setFromCamera(this.#a,this.#t);const s=this.#r.intersectObjects(this.#e.children);s.length&&this.#n.includes(s[0].object)&&(n.defaultPrevented||(s[0].object.userData.onClick(s[0].instanceId),n.preventDefault()))})}update(){}resize(e,t){this.#t.aspect=e/t,this.#t.updateProjectionMatrix(),this.#r.setFromCamera(this.#a,this.#t)}}const VA=[0,2,4.95],FA=20,DA=.01,WA=100,jA=[0,.5,0];class YA{constructor(e){const t=new Ct(FA,e,DA,WA);return t.position.set(...VA),t.lookAt(...jA),t}}const GA=361933.3333333885,UA=JSON.parse('{"cards":[[{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.37e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.373e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.38e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.383e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.39e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.393e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.4e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.403e-321}],[{"position":[0.003905788529664278,0.173769012093544,0.33768779039382935],"rotation":[0.029726561158895493,-0.10361766070127487,-0.003929750993847847,0.9941651225090027],"used":true,"bodyHandle":6.41e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.413e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.42e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.423e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.43e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.433e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.44e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.443e-321}],[{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.45e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.452e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.457e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.46e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.467e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.47e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.477e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.48e-321}],[{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.487e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.49e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.497e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.5e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.507e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.51e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.517e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.52e-321}],[{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.527e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.53e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.536e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.54e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.546e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.55e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.556e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.56e-321}],[{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.566e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.57e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.576e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.58e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.586e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.59e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.596e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.6e-321}],[{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.606e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.61e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.616e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.62e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.625e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.63e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.635e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.64e-321}]],"coins":[{"position":[-0.2695404887199402,0.24713143706321716,-0.1000429019331932],"rotation":[0.0002801649970933795,-0.23391668498516083,-0.0005013513145968318,0.9722564816474915],"used":true,"bodyHandle":4.4e-323,"linearSpeed":0.003238339577304575,"angularVelocityHistory":[[-0.01824125461280346,-0.025042099878191948],[0.07762714475393295,-0.0035569353494793177],[0.060874179005622864,-0.020426910370588303],[0.0004105924454052001,0.0006052216049283743],[-0.009978773072361946,0.0015750316670164466],[0.12436749786138535,-0.007468500640243292],[0.029621679335832596,-0.0028056821320205927],[0.08721578866243362,-0.0019971199799329042],[-0.005543630104511976,0.005990772973746061],[0.02768789790570736,-0.002510417951270938],[-0.011156545020639896,0.002882180269807577]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.003995991311967373,0.2525140345096588,-0.0963546559214592],"rotation":[-0.005866285879164934,-0.8890003561973572,-0.0010589645244181156,0.45786771178245544],"used":true,"bodyHandle":5e-323,"linearSpeed":0.002828755428837416,"angularVelocityHistory":[[0.041776448488235474,0.0328732505440712],[0.034210167825222015,0.02711566537618637],[0.027450619265437126,0.018878931179642677],[0.022302042692899704,0.014840424992144108],[0.017901945859193802,0.01131480373442173],[0.014496391639113426,0.01239129900932312],[0.01428944244980812,0.005326276179403067],[0.010989365167915821,0.007637167815119028],[0.009430017322301865,0.003828063141554594],[0.0075056301429867744,0.0032644581515341997],[0.006054345052689314,0.0024604592472314835]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.09626445174217224,0.2524958550930023,-0.09663514047861099],"rotation":[-0.006828332785516977,0.6258227229118347,0.0006268764263950288,-0.7799352407455444],"used":true,"bodyHandle":5.4e-323,"linearSpeed":0.0028813273359583414,"angularVelocityHistory":[[-0.0014501919504255056,-0.013146269135177135],[-0.006301396992057562,0.000002396332320131478],[-0.0003197189071215689,0.0007410486578010023],[0.0012248613638803363,-0.00012500531738623977],[0.0018810603069141507,-0.0009724305127747357],[0.00394545728340745,-0.0002652336552273482],[-0.0002546128525864333,-0.0005519636906683445],[0.0001754869008436799,-0.0003751869953703135],[0.0007659154944121838,-0.001651293714530766],[0.0037753672804683447,-0.0005541392602026463],[0.0033013122156262398,0.0012853259686380625]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00046349570038728416,0.1704997420310974,0.5990793704986572],"rotation":[0.0027252361178398132,-0.5555137991905212,0.0015964602353051305,0.831501305103302],"used":true,"bodyHandle":6e-323,"linearSpeed":0,"angularVelocityHistory":[[-0.0267778392881155,0.03851659223437309],[-0.023336028680205345,0.016542108729481697],[0.015082800760865211,0.005616709124296904],[0.025859778746962547,-0.026452282443642616],[0.030412474647164345,-0.0030424646101891994],[-0.10880497097969055,-0.07116380333900452],[0.030313661321997643,0.027282839640975],[0.0008974985685199499,0.00034436420537531376],[-0.21339134871959686,-0.11358503252267838],[0.00574254197999835,0.23084743320941925]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.17298293113708496,0.18489885330200195,0.5479928851127625],"rotation":[-0.02334141731262207,-0.18393419682979584,-0.018358059227466583,0.9824898838996887],"used":true,"bodyHandle":6.4e-323,"linearSpeed":4.8607760757581256e-8,"angularVelocityHistory":[[-0.01569419912993908,0.02239075116813183],[-0.03203795477747917,0.007681925315409899],[-0.015108921565115452,0.014446576125919819],[0.04984342306852341,-0.043351076543331146],[0.0700845867395401,-0.017993468791246414],[0.12428034842014313,-0.02876886911690235],[0.04877741262316704,-0.007373510859906673],[0.06439433246850967,0.004981972277164459],[0.08837330341339111,0.06172364577651024],[0.061450324952602386,0.03574730083346367],[-0.01682150550186634,-0.012038287706673145]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.129227414727211,0.17684122920036316,0.2666119337081909],"rotation":[0.08656927198171616,0.00020618127018678933,-0.9962447285652161,-0.0014454583870247006],"used":true,"bodyHandle":7e-323,"linearSpeed":5.364937289752892e-10,"angularVelocityHistory":[[-0.0008658613660372794,0.002527507022023201],[-0.0004885057569481432,0.001068469719029963],[-0.001337838009931147,0.0031276873778551817],[-0.003941063303500414,-0.0016936163883656263],[-0.005686294287443161,0.013400492258369923],[-0.006753995083272457,0.03586747497320175],[0.00951116532087326,-0.030400192365050316],[-0.012400006875395775,0.03542361781001091],[0.004976992029696703,-0.013921743258833885],[-0.0008462542318738997,-0.0013139806687831879],[0.0023147398605942726,0.002095993375405669]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[-0.22427953779697418,0.17707854509353638,0.20992574095726013],"rotation":[0.8910948038101196,-0.004344199784100056,0.4537954330444336,-0.0009360373951494694],"used":true,"bodyHandle":7.4e-323,"linearSpeed":8.063733800456102e-11,"angularVelocityHistory":[[-0.0012904548784717917,-0.007212330121546984],[-0.0015241130022332072,-0.00271875923499465],[-0.002364854793995619,0.023367565125226974],[-0.0016918987967073917,0.02441277913749218],[0.00020592729561030865,0.0014016167260706425],[0.001466680783778429,0.009121427312493324],[0.0012209010310471058,0.005021851044148207],[0.0020431445445865393,-0.00007619046664331108],[-0.00009606409730622545,0.0021171998232603073],[0.0008147148764692247,0.0005014688358642161],[0.012112267315387726,-0.03886592760682106]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.5489014983177185,0.17422756552696228,0.7447386980056763],"rotation":[0.8695984482765198,-0.0033023373689502478,0.49373674392700195,0.0034123044461011887],"used":true,"bodyHandle":8e-323,"linearSpeed":5.144125062961297e-9,"angularVelocityHistory":[[0.000015900239304755814,0.00004869239637628198],[-0.000005295108167047147,0.00008665735367685556],[0.00002319498162250966,0.000018347611330682412],[0.00004651270864997059,0.00008285227522719651],[0.00005943485666648485,0.000062095612520352],[0.00001377559055981692,0.000024494742319802754],[-0.0000066251791395188775,0.00001345077544101514],[0.000005404563125921413,0.00008151833026204258],[0.000012771906767738983,0.000050524929974926636],[-0.00003893583198077977,0.00007972879393491894],[-0.000018050017388304695,0.00010994511103490368]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.24862165749073029,0.17441962659358978,0.3968418538570404],"rotation":[-0.002597896847873926,-0.9572084546089172,0.00146864156704396,-0.28938400745391846],"used":true,"bodyHandle":8.4e-323,"linearSpeed":4.4889152926843214e-10,"angularVelocityHistory":[[0.000001587010956427548,-0.0000025955478122341447],[0.000001591240561538143,-0.0000026512000204093056],[0.0000014360567774929223,-0.0000026273824005329516],[0.0000015650659861421445,-0.000002554586217229371],[0.0000015460539088962832,-0.000002605315785331186],[0.000001493442255195987,-0.0000025307601845270256],[0.0000015651439753128216,-0.0000025615925096644787],[0.0000015562196722385124,-0.000002636899125718628],[0.0000015333682767959544,-0.000002645955419211532],[0.000001538046490168199,-0.0000026128057015739614],[0.000001453800223316648,-0.0000025875087885651737]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.3097390830516815,0.18255847692489624,0.2642682194709778],"rotation":[0.02319491095840931,-0.000604786560870707,-0.9997303485870361,0.0009593990398570895],"used":true,"bodyHandle":9e-323,"linearSpeed":4.733481725095995e-9,"angularVelocityHistory":[[0.002998185344040394,-0.0004369299567770213],[-0.000772149651311338,0.0007559260702691972],[0.0019260123372077942,-0.0002491562918294221],[0.0008736985619179904,0.0010604516137391329],[0.0017538032261654735,-0.00036782160168513656],[-0.00045215553836897016,0.0006268084398470819],[0.0014148000627756119,0.00002352180854359176],[0.0008081900305114686,0.0005890660104341805],[0.002425721613690257,0.00027305196272209287],[-0.000898890895769,0.00060226273490116],[0.002186424797400832,-0.000058222663938067853]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.06070427596569061,0.17068810760974884,0.6346871256828308],"rotation":[0.003431347431614995,-0.8633365631103516,-0.0026042230892926455,0.5046101808547974],"used":true,"bodyHandle":9.4e-323,"linearSpeed":0,"angularVelocityHistory":[[0.03772828355431557,-0.05162733420729637],[0.14119216799736023,0.08315787464380264],[0.008016437292098999,0.14043864607810974],[0.05025999993085861,0.06723292171955109],[0.026441365480422974,0.015212217345833778],[0.024808699265122414,-0.011440476402640343],[-0.005377213936299086,-0.0005075566004961729],[-0.02376759797334671,0.014411941170692444],[0.005827086046338081,0.03132269158959389],[0.018880952149629593,0.007453084457665682]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.3658304214477539,0.18499088287353516,0.4025960862636566],"rotation":[0.4308668375015259,0.06528975814580917,-0.8989886045455933,-0.04370837286114693],"used":true,"bodyHandle":1e-322,"linearSpeed":2.665710574478397e-7,"angularVelocityHistory":[[-0.0018219350604340434,-0.002286445116624236],[0.001610176987014711,0.001274610636755824],[-0.001710708485916257,-0.004456259310245514],[-0.00014544103760272264,0.0005533280200324953],[-0.0021695394534617662,-0.001602396834641695],[0.0005509445909410715,0.0008206999045796692],[-0.00017138592374976724,-0.002600188134238124],[-0.0007534497999586165,-0.005460407584905624],[0.000853214121889323,-0.002663544612005353],[-0.0022591042798012495,-0.009345977567136288],[0.0021839106921106577,0.0011027256259694695]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.10770545154809952,0.1766827404499054,0.2099117636680603],"rotation":[0.5672839283943176,-0.0012944835470989347,-0.8235203623771667,0.0012286510318517685],"used":true,"bodyHandle":1.04e-322,"linearSpeed":1.2044172430414445e-11,"angularVelocityHistory":[[0.00008835582411848009,0.002683216007426381],[0.0007530284929089248,0.00036168823135085404],[0.0023448371794074774,0.0007671816856600344],[-0.001568069215863943,-0.000006852178103144979],[-0.001335848355665803,-0.0006101514445617795],[-0.00009453431266592816,-0.002321658656001091],[0.0022895990405231714,-0.0011514635989442468],[-0.0023133258800953627,0.0014598376583307981],[-0.00008656085992697626,0.0025227235164493322],[-0.000671416346449405,0.0022134222090244293],[0.002858375897631049,-0.00118632719386369]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.061048708856105804,0.17165406048297882,0.704925537109375],"rotation":[-0.002470721025019884,-0.9734997749328613,0.0030776283238083124,0.22865401208400726],"used":true,"bodyHandle":1.1e-322,"linearSpeed":0,"angularVelocityHistory":[[0.011414569802582264,-0.02691994421184063],[-0.018163226544857025,-0.009561806917190552],[-0.009220369160175323,-0.02919909916818142],[-0.03321325406432152,0.015285837464034557],[0.02040647715330124,0.041195955127477646],[-0.03175537288188934,-0.034207429736852646],[0.037445176392793655,-0.021536892279982567],[0.04649230092763901,-0.022380230948328972],[-0.009456426836550236,-0.01153835840523243],[0.005401888396590948,0.0396137498319149]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.3092917501926422,0.17688918113708496,0.26352640986442566],"rotation":[-0.5665552020072937,0.0011709568789228797,0.8240203261375427,-0.002068736357614398],"used":true,"bodyHandle":1.14e-322,"linearSpeed":2.2433368319563845e-11,"angularVelocityHistory":[[-0.0006521305185742676,0.00041222680010832846],[0.0005121123977005482,-0.0004674099909607321],[-0.0005350470310077071,0.0005001107347197831],[0.0015773983905091882,-0.000713682733476162],[-0.0002970157947856933,0.0003493936965242028],[-0.00037628525751642883,0.0002243004710180685],[0.0007406874792650342,-0.0005879862583242357],[-0.00014779972843825817,-0.00009619369666324928],[-0.0013143079122528434,0.00011690993414958939],[-0.000896757876034826,0.0007259204285219312],[0.00035989898606203496,-0.0006405172171071172]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.1585085541009903,0.19366338849067688,0.41048097610473633],"rotation":[0.012096797116100788,-0.15116369724273682,0.02426747977733612,-0.9881367683410645],"used":true,"bodyHandle":1.2e-322,"linearSpeed":2.081439470669978e-7,"angularVelocityHistory":[[0.0021488345228135586,0.0053297365084290504],[0.0074761370196938515,-0.002252360573038459],[-0.01968035101890564,0.005548606161028147],[0.01258454192429781,-0.0017661595484241843],[-0.007061524782329798,0.005875851958990097],[0.00027501850854605436,-0.00040809420170262456],[-0.013306187465786934,0.008203296922147274],[0.02231093868613243,-0.00028619193471968174],[-0.014146021567285061,0.005469882860779762],[0.00714112538844347,0.000679643067996949],[0.001956420950591564,0.0031164989341050386]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.1563367396593094,0.1768011897802353,0.2820618152618408],"rotation":[0.0036145017948001623,-0.14956536889076233,0.0030225692316889763,-0.9887405633926392],"used":true,"bodyHandle":1.24e-322,"linearSpeed":1.2997475806131573e-10,"angularVelocityHistory":[[-0.0009120066533796489,0.00027382877306081355],[-0.00024865183513611555,-0.0006869694334454834],[0.0002945353335235268,0.00007968248974066228],[-0.0006079272134229541,-0.00022586327395401895],[-0.0012879404239356518,-0.0002399998775217682],[0.0003095875435974449,0.00020071057952009141],[0.000014934293176338542,-0.001287122955545783],[0.0006864998140372336,-0.000922798179090023],[-0.0013822943437844515,0.001894863205961883],[0.0005614584079012275,0.00043797818943858147],[-0.0016876125009730458,0.0006576294545084238]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.0005907983868382871,0.17039409279823303,0.740444540977478],"rotation":[-0.0036419848911464214,-0.8802198171615601,-0.0005515529774129391,0.47455185651779175],"used":true,"bodyHandle":1.3e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.017084168270230293,0.007169850170612335],[-0.012552662752568722,0.011542833410203457],[-0.008955856785178185,0.009691695682704449],[0.0810374841094017,0.04418816417455673],[0.24326473474502563,0.10838378965854645],[-0.12288716435432434,-0.008420850150287151],[-0.08637590706348419,-0.018661631271243095],[-0.004298280458897352,-0.016540704295039177],[0.009532419964671135,-0.011394506320357323],[0.021395886316895485,0.05905995890498161]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2999967932701111,0.17893816530704498,0.3671949803829193],"rotation":[0.0046156938187778,-0.9911621809005737,0.007374164182692766,0.13237006962299347],"used":true,"bodyHandle":1.33e-322,"linearSpeed":4.864824376755596e-7,"angularVelocityHistory":[[0.00266377255320549,-0.0029287494253367186],[-0.010712159797549248,0.016364995390176773],[0.010581152513623238,-0.00878809578716755],[-0.0016461082268506289,-0.004731899127364159],[0.006210310384631157,0.0017861007945612073],[-0.010032824240624905,0.015115778893232346],[0.01136801578104496,-0.00906329695135355],[-0.0008904871647246182,-0.003591707907617092],[0.0026384128723293543,-0.0012017512926831841],[-0.009229738265275955,0.016646411269903183],[0.004488135688006878,-0.008494390174746513]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.047740381211042404,0.1819317489862442,0.21995221078395844],"rotation":[0.4296649694442749,-0.012769930064678192,0.9028428792953491,0.00998461153358221],"used":true,"bodyHandle":1.4e-322,"linearSpeed":1.428039872391264e-8,"angularVelocityHistory":[[0.01966376230120659,0.005737051367759705],[0.01514157373458147,0.00907953828573227],[0.015127001330256462,0.0028224708512425423],[-0.15003767609596252,-0.03565693274140358],[-0.07017339020967484,0.008773363195359707],[-0.08572792261838913,0.006487102713435888],[-0.07097378373146057,0.0019411408575251698],[-0.06004376336932182,0.0023492826148867607],[-0.043442193418741226,0.0030076734255999327],[-0.02663440629839897,-0.00424382695928216],[-0.04025067389011383,-0.0002858939114958048]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.11871938407421112,0.2512970268726349,0.08467260003089905],"rotation":[-0.05092955753207207,-0.8464738726615906,0.02865094132721424,-0.5292137861251831],"used":true,"bodyHandle":1.43e-322,"linearSpeed":0.002978795859339856,"angularVelocityHistory":[[0.03596729040145874,0.001298784394748509],[-0.0014553554356098175,0.00021940370788797736],[0.03874141350388527,0.000044278644054429606],[-0.1905907541513443,-0.03832085430622101],[-0.04322899132966995,-0.0015131434192880988],[-0.13819944858551025,-0.02871422842144966],[-0.007474122568964958,-0.023110734298825264],[-0.08660002052783966,0.004239494446665049],[-0.07254550606012344,-0.017437350004911423],[-0.17107127606868744,-0.029759371653199196],[-0.12806786596775055,-0.025501184165477753]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.16475673019886017,0.24764515459537506,0.14105050265789032],"rotation":[-0.2471466064453125,-0.0030054301023483276,-0.9689729809761047,0.0009480766020715237],"used":true,"bodyHandle":1.5e-322,"linearSpeed":0.0032168814483437835,"angularVelocityHistory":[[0.000174094588146545,-0.0006529918173328042],[0.018405091017484665,0.0019409212982282043],[-0.0005933410720899701,0.002108323387801647],[-0.003255999879911542,-0.0014704341301694512],[0.00393142132088542,-0.0012628136901184916],[0.014189333654940128,-0.0011761366622522473],[0.005197484046220779,0.0007314474205486476],[0.003304307349026203,-0.005344808101654053],[0.001381486188620329,0.0021923871245235205],[-0.0015448980266228318,-0.0014039194211363792],[0.004847745876759291,-0.0010069952113553882]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.048153527081012726,0.24770745635032654,0.08356589078903198],"rotation":[0.9959344267845154,0.00033069291384890676,0.09006573259830475,-0.0016470375703647733],"used":true,"bodyHandle":1.53e-322,"linearSpeed":0.003227038116391955,"angularVelocityHistory":[[0.0014512998750433326,-0.0014007582794874907],[0.0019393583061173558,0.003656950546428561],[0.0012726292479783297,0.0017768547404557467],[-0.01318685244768858,-0.034178026020526886],[0.031787410378456116,-0.11236223578453064],[0.01397616509348154,0.04476935788989067],[-0.36051928997039795,0.027490705251693726],[0.03144235536456108,-0.018498210236430168],[-0.0063149211928248405,-0.048929668962955475],[-0.000589835224673152,0.002986909355968237],[-0.0009160789777524769,0.00030713449814356863]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.26725032925605774,0.1768939197063446,0.271971732378006],"rotation":[-0.0021913964301347733,-0.865835428237915,-0.000514196464791894,-0.5003238320350647],"used":true,"bodyHandle":1.6e-322,"linearSpeed":5.309900150373102e-10,"angularVelocityHistory":[[-0.00021998322336003184,-0.0004160440294072032],[-0.000011292050658084918,-0.00023540238908026367],[-0.000705593207385391,-0.0001120368906413205],[0.0013282783329486847,0.0010984712280333042],[0.000197999834199436,0.0002625824126880616],[0.00001088367025658954,0.0003029871731996536],[-0.00027128905639983714,-0.00007277933764271438],[-0.0004008171381428838,0.0000016416731796198292],[-0.00015086447820067406,-0.0000616354082012549],[-0.0003273088368587196,-0.00021300301887094975],[-0.0010255231754854321,-0.000814370287116617]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06113484501838684,0.1702757477760315,0.7050588130950928],"rotation":[-0.000551388890016824,-0.2818024158477783,0.003570066997781396,-0.9594656825065613],"used":true,"bodyHandle":1.63e-322,"linearSpeed":0,"angularVelocityHistory":[[0.05006079003214836,0.10703656822443008],[-0.011301442980766296,0.08181920647621155],[0.005568054970353842,-0.043692272156476974],[0.00436209375038743,-0.0028005773201584816],[-0.004825706128031015,0.0019532593432813883],[-0.019083568826317787,-0.028002195060253143],[-0.025993401184678078,-0.01191417220979929],[-0.015703942626714706,-0.010593372397124767],[-0.008448162116110325,-0.027475407347083092],[0.01763025112450123,-0.005889483727514744]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06373177468776703,0.24741670489311218,-0.0979425311088562],"rotation":[0.9517254829406738,-0.003310432657599449,0.3069327175617218,0.000048245150537695736],"used":true,"bodyHandle":1.7e-322,"linearSpeed":0.0032293114462133778,"angularVelocityHistory":[[0.0006266246200539172,-0.0010064017260447145],[0.0004896583850495517,-0.0010696382960304618],[0.0003681521338876337,-0.0008759544580243528],[0.00000339565622198279,0.0010547920828685164],[0.00023923332628328353,-0.0006501501775346696],[-0.004153632093220949,0.0035346467047929764],[0.00006573124119313434,-0.000430272746598348],[0.00015235418686643243,0.00009172670979751274],[0.00009081193275051191,-0.00021553918486461043],[0.00006980490434216335,-0.00017144209414254874],[0.00011723000352503732,-0.00015311030438169837]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.30888134241104126,0.18308214843273163,0.42838844656944275],"rotation":[-0.870788037776947,0.03494694083929062,0.4897606074810028,-0.025328535586595535],"used":true,"bodyHandle":1.73e-322,"linearSpeed":3.5770481039574085e-7,"angularVelocityHistory":[[-0.004046536982059479,0.004390256013721228],[0.015540635213255882,-0.001858453848399222],[-0.004479620605707169,0.0034098403993993998],[0.0034328808542340994,0.006286936812102795],[-0.0052364300936460495,0.0005405581905506551],[0.012807387858629227,-0.005421800538897514],[-0.0005170723889023066,0.005868980661034584],[-0.0035241323057562113,0.006516309455037117],[0.007150148507207632,0.003442872315645218],[0.011408481746912003,-0.005636162124574184],[-0.0022279792465269566,0.006986114662140608]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.3012489974498749,0.17384356260299683,0.36679232120513916],"rotation":[0.002383796265348792,0.703035295009613,-0.0048401919193565845,-0.7111345529556274],"used":true,"bodyHandle":1.8e-322,"linearSpeed":1.727528918767399e-9,"angularVelocityHistory":[[0.0061056409031152725,-0.001396893640048802],[-0.0007927956175990403,-0.0007666321471333504],[0.006010223180055618,0.0002945403684861958],[0.0011473408667370677,-0.003748878836631775],[0.006466686725616455,-0.001140457927249372],[-0.0015432677464559674,-0.0002418823423795402],[0.005872940178960562,-0.0000673670947435312],[-0.00013948317791800946,-0.0034550614655017853],[0.005457512103021145,-0.0006980363395996392],[-0.0012392973294481635,-0.0011973530054092407],[0.005056319758296013,0.0016746349865570664]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.01068604364991188,0.25324416160583496,0.09347416460514069],"rotation":[0.046161964535713196,-0.0009713498293422163,-0.9989333748817444,0.000548792362678796],"used":true,"bodyHandle":1.83e-322,"linearSpeed":0.002988691772781857,"angularVelocityHistory":[[0.000416975119151175,0.00026337243616580963],[-0.000715486821718514,0.00047499898937530816],[-0.00029816178721375763,0.002029123017564416],[-0.004385966341942549,0.0071704634465277195],[-0.019767073914408684,-0.01252008881419897],[0.003046296536922455,-0.008757153525948524],[-0.005008827894926071,-0.015696177259087563],[-0.00294681079685688,0.04655405879020691],[0.004493333399295807,0.0076322052627801895],[-0.004044979345053434,0.019231224432587624],[-0.00009102022886509076,0.011625702492892742]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06037505343556404,0.17141921818256378,0.6339361667633057],"rotation":[0.001369770267046988,0.1984972506761551,-0.004547287710011005,-0.9800899028778076],"used":true,"bodyHandle":1.9e-322,"linearSpeed":0,"angularVelocityHistory":[[0.0025742051657289267,-0.02610504813492298],[0.006878613494336605,0.002757823560386896],[-0.13134817779064178,-0.20509380102157593],[0.11153271794319153,0.04332064092159271],[0.03964114561676979,0.00044903793605044484],[0.0929313451051712,0.03698040172457695],[0.3219511806964874,-0.10128537565469742],[-0.02832827717065811,0.00921452697366476],[-0.010613628663122654,-0.01360233686864376],[-0.012352067977190018,-0.011339988559484482]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0020427668932825327,0.16981400549411774,0.6719701290130615],"rotation":[-0.0005682890769094229,-0.25122973322868347,-0.0014469593297690153,-0.9679262638092041],"used":true,"bodyHandle":1.93e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.00021439269767142832,-0.05317286029458046],[0.0006662305677309632,-0.00421551801264286],[0.004898907151073217,0.009501655586063862],[0.0006786059821024537,-0.003391098463907838],[0.019522137939929962,0.028342286124825478],[-0.006735357455909252,0.013264398090541363],[-0.007514864671975374,0.022195255383849144],[-0.0032184813171625137,0.02644178457558155],[-0.00522186141461134,0.031396202743053436],[0.02404671721160412,-0.037957657128572464]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.5824766159057617,0.18040598928928375,0.8286777138710022],"rotation":[0.0035437552724033594,-0.3868217468261719,-0.0008682875195518136,0.922147274017334],"used":true,"bodyHandle":2e-322,"linearSpeed":1.6347015807262562e-8,"angularVelocityHistory":[[-0.0000317233098030556,-5.308638151291234e-7],[-0.00002496106935723219,0.00001642579991312232],[-0.0000388985536119435,0.000027382424377719872],[-0.000017297659724135883,0.000011035182978957891],[-0.0000200378563022241,0.000008712398084753659],[-0.000007404648840747541,0.000009136905646300875],[-0.00001686958785285242,0.000011416331290092785],[-0.000005571749170485418,0.000007955838555062655],[-0.000011348943189659622,0.000009806692105485126],[-0.000022238345991354436,0.000013175765161577147],[-0.000021577599909505807,0.000013107600352668669]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.13218413293361664,0.18213199079036713,0.2100203037261963],"rotation":[-0.1948789656162262,0.00252755475230515,0.9808158278465271,-0.004017550498247147],"used":true,"bodyHandle":2.03e-322,"linearSpeed":9.38703715473655e-9,"angularVelocityHistory":[[-0.003191529307514429,0.0009729733574204147],[0.0026256416458636522,-0.002281109569594264],[-0.002766519319266081,0.0003039338917005807],[0.0031691784970462322,-0.0023414327297359705],[-0.0046554733999073505,0.0012419304111972451],[0.003409729339182377,0.0003192792646586895],[-0.0034311916679143906,0.0005253794370219111],[0.0034010594245046377,-0.001345600001513958],[-0.0037171633448451757,0.001232275040820241],[0.002892580581828952,-0.0004287566407583654],[-0.0038044133689254522,0.0009180880733765662]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.12184375524520874,0.17434930801391602,0.4540458619594574],"rotation":[0.0027546726632863283,0.08413887023925781,0.006013575010001659,-0.9964320659637451],"used":true,"bodyHandle":2.08e-322,"linearSpeed":2.1636225227208788e-9,"angularVelocityHistory":[[-0.0011478877859190106,0.000031594849133398384],[-0.00026077209622599185,-0.0015408927574753761],[-0.00004879124753642827,0.0009931153617799282],[-0.002515834290534258,-0.0011203647591173649],[-0.0015811632620170712,0.0004539394285529852],[-0.0011551720090210438,-0.0011507124872878194],[0.0012597808381542563,-0.003130836645141244],[0.0006673900061286986,-0.001562262768857181],[-0.004273429978638887,0.005055422428995371],[0.00030626810621470213,-0.0028034746646881104],[-0.001515430980361998,0.0045316182076931]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.5887232422828674,0.18029773235321045,0.3416599929332733],"rotation":[0.002045209752395749,-0.6652981042861938,-0.00009616703755455092,-0.7465749979019165],"used":true,"bodyHandle":2.1e-322,"linearSpeed":4.32246639809983e-13,"angularVelocityHistory":[[0.000028685550205409527,0.00002360779035370797],[0.00002614820004964713,-0.00006183893128763884],[-0.000011888303561136127,-0.00004456900933291763],[0.00005757428516517393,-0.00015135362627916038],[-0.00006235254841158167,0.00013776177365798503],[-0.000031359038985101506,0.00002838803811755497],[0.0000241313646256458,-0.000033276908652624115],[-0.00002243363269371912,0.000018552389519754797],[-0.00002736536589509342,0.00003789660331676714],[0.000034365504689048976,-0.00018185257795266807],[-0.00019211220205761492,0.0003221436054445803]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.0010291332146152854,0.1718137115240097,0.5999885201454163],"rotation":[0.0005854208720847964,0.39307448267936707,-0.0038117854855954647,-0.9194985032081604],"used":true,"bodyHandle":2.17e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.016434649005532265,-0.011177171021699905],[-0.032773442566394806,0.005938330199569464],[0.0012312018079683185,-0.005081202834844589],[-0.024600133299827576,-0.0027523706667125225],[0.0076329405419528484,-0.04070313647389412],[-0.0529487244784832,-0.035040635615587234],[0.005581500940024853,0.018056197091937065],[-0.003671821905300021,0.01195930689573288],[0.008352010510861874,-0.004856188781559467],[-0.08178851008415222,-0.0015254798345267773]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.07316479086875916,0.1824013888835907,0.21521230041980743],"rotation":[-0.9995630979537964,-0.003522621700540185,0.02908242493867874,0.003918798640370369],"used":true,"bodyHandle":2.2e-322,"linearSpeed":9.985931081074684e-10,"angularVelocityHistory":[[0.00007685455057071522,-0.0009335078648291528],[0.0007119355141185224,0.000663041602820158],[-0.00018879158596973866,-0.0016960721695795655],[0.0005608898354694247,0.004342084750533104],[-0.0000631055299891159,-0.0025239288806915283],[0.002474569482728839,-0.00005800619692308828],[0.003321689320728183,0.0004591199685819447],[0.006270890589803457,0.003964593168348074],[-0.0011989943450316787,-0.0027396848890930414],[-0.0016063011717051268,0.00025613646721467376],[0.0015236844774335623,0.0001508903078502044]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.05900094285607338,0.1774812638759613,0.6369702219963074],"rotation":[0.005383410956710577,0.19246619939804077,-0.01106299739331007,-0.9812264442443848],"used":true,"bodyHandle":2.27e-322,"linearSpeed":0,"angularVelocityHistory":[[0.11599931120872498,-0.13879063725471497],[0.017636079341173172,0.0081854909658432],[0.14394785463809967,-0.28589850664138794],[0.14433179795742035,0.046253103762865067],[0.12507985532283783,0.17363110184669495],[-0.05748111754655838,-0.00008471168257528916],[-0.3432072401046753,0.08514799922704697],[-0.25193920731544495,0.07463055849075317],[-0.19007931649684906,0.014039836823940277],[0.022317830473184586,0.0362713485956192]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.590756893157959,0.17460183799266815,0.34989768266677856],"rotation":[-0.001252276822924614,0.8816227912902832,0.0009252183954231441,0.4719521403312683],"used":true,"bodyHandle":2.3e-322,"linearSpeed":9.455343138642756e-16,"angularVelocityHistory":[[0.0000060570805544557516,0.000036436034861253574],[-0.00001474611690355232,-0.000024505128749297],[-0.00000838673713587923,-0.0000025075364646909293],[0.000006897238108649617,-0.000015230888493533712],[0.00005482798951561563,-0.0000020040440631419187],[-0.000005050761046732077,0.000015345569408964366],[0.000004405542313179467,0.000022362726667779498],[0.0000012607360986294225,0.000011072300367231946],[-0.0000071645795287622605,-0.0000116909423013567],[0.0000032309126254403964,-0.000049858099373523146],[-0.00006088619920774363,-6.590880730072968e-8]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.13463515043258667,0.17667725682258606,0.21843093633651733],"rotation":[-0.16348253190517426,-0.0006277517531998456,0.9865449666976929,-0.001429597265087068],"used":true,"bodyHandle":2.37e-322,"linearSpeed":5.037251818109212e-10,"angularVelocityHistory":[[0.000029371514756348915,-0.00011603588063735515],[-0.00030185194918885827,0.0015617740573361516],[0.0006914807599969208,-0.0010452793212607503],[-0.00030145319760777056,0.0012698195641860366],[0.0005180854932405055,-0.0017128664767369628],[-0.0005159041611477733,-0.0005729945842176676],[0.00023628011695109308,-0.0004024678491987288],[0.0002690815308596939,-0.0006243110401555896],[-0.0010421600891277194,-0.0005077844834886491],[0.00038487432175315917,-0.00044877867912873626],[-0.0009145821095444262,0.00046605084207840264]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.05890020728111267,0.1731448918581009,0.7037113308906555],"rotation":[0.0015479070134460926,-0.24653857946395874,-0.0007571441237814724,-0.9691314697265625],"used":true,"bodyHandle":2.4e-322,"linearSpeed":0,"angularVelocityHistory":[[0.06769201159477234,0.07535603642463684],[0.09909553080797195,0.011017758399248123],[-0.033115994185209274,-0.1903260499238968],[-0.009154293686151505,-0.04806435853242874],[0.021377088502049446,-0.01153771486133337],[-0.01091202162206173,-0.008495055139064789],[-0.11247307062149048,-0.03842952847480774],[-0.018614724278450012,-0.016727205365896225],[-0.015905233100056648,-0.07753316313028336],[0.047527723014354706,-0.008270160295069218]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00016042706556618214,0.17172053456306458,0.7398006319999695],"rotation":[-0.002958399709314108,-0.921562910079956,0.0026834853924810886,0.38820844888687134],"used":true,"bodyHandle":2.47e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.03371793031692505,-0.000396812247345224],[-0.012673133052885532,0.0012800644617527723],[0.007480660453438759,0.028042946010828018],[0.051924098283052444,-0.008215750567615032],[0.10289269685745239,0.013203417882323265],[-0.11043195426464081,0.0020972914062440395],[-0.11103106290102005,-0.015093865804374218],[-0.02653101272881031,-0.01066604070365429],[0.011084883473813534,-0.021796826273202896],[0.028745556250214577,0.08620458096265793]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06127496808767319,0.17040133476257324,0.7043629288673401],"rotation":[0.004039629362523556,-0.8847606182098389,0.0004944077809341252,0.4660279452800751],"used":true,"bodyHandle":2.5e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.06243809312582016,0.009380298666656017],[0.03906645253300667,0.02027331292629242],[0.03563346713781357,-0.015678128227591515],[-0.020819930359721184,0.02456282265484333],[0.16981598734855652,0.07799026370048523],[-0.007659419439733028,-0.012720583006739616],[0.03208509460091591,-0.01024562120437622],[0.03528213128447533,0.008506613783538342],[-0.0012320185778662562,-0.013720384798943996],[0.005749505013227463,0.030020521953701973]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.10572067648172379,0.24740302562713623,0.07008892297744751],"rotation":[-0.0032242536544799805,-0.8602105379104614,-0.0029831475112587214,-0.509920060634613],"used":true,"bodyHandle":2.57e-322,"linearSpeed":0.003221114714964758,"angularVelocityHistory":[[-0.0010385921923443675,-0.0030407530721277],[-0.0014729179674759507,-0.004692623391747475],[-0.0016216931398957968,-0.0019186496501788497],[-0.0034788937773555517,0.008284267969429493],[-0.13108013570308685,0.03496779128909111],[0.19015997648239136,0.10219519585371017],[0.009184586815536022,0.0013361197197809815],[-0.07118646055459976,0.09562227129936218],[0.0008603452588431537,-0.016339605674147606],[0.0010465484810993075,0.00561201898381114],[0.0002292483695782721,0.0005900869728066027]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06054258346557617,0.17153511941432953,0.6343146562576294],"rotation":[0.0021381492260843515,-0.6592959761619568,0.0007934303721413016,0.7518800497055054],"used":true,"bodyHandle":2.6e-322,"linearSpeed":0,"angularVelocityHistory":[[0.1333874762058258,0.15545842051506042],[0.09945042431354523,-0.1656181663274765],[-0.0951482355594635,0.46927037835121155],[-0.13486729562282562,-0.014574961736798286],[-0.044196851551532745,0.015590879134833813],[0.010712789371609688,0.039996590465307236],[0.028922883793711662,0.07883819192647934],[0.013296693563461304,0.007362300995737314],[0.005668836645781994,-0.005567741114646196],[0.041599053889513016,0.008883140981197357]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2199980467557907,0.18307866156101227,0.2836959660053253],"rotation":[0.9324955940246582,-0.003583374200388789,-0.36107394099235535,0.008042361587285995],"used":true,"bodyHandle":2.67e-322,"linearSpeed":1.4100584599528205e-9,"angularVelocityHistory":[[-0.00019810619414784014,0.0009989729151129723],[0.000049673792091198266,-0.0008903589332476258],[-0.00020159957057330757,-0.0000367527682101354],[0.000106774692540057,-0.001308005885221064],[-0.00026302970945835114,0.0003980975307058543],[0.0002561229339335114,-0.0010652266209945083],[-0.0007141773821786046,0.000019742139556910843],[-0.00015753033221699297,-0.0019041154300794005],[-0.0004441972996573895,0.00174685288220644],[-0.00011048166925320402,-0.0013377661816775799],[-0.000237024636589922,0.0003453469544183463]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.010184258222579956,0.17686542868614197,0.20917785167694092],"rotation":[0.8090657591819763,-0.0040166438557207584,-0.5876998901367188,-0.002281383378431201],"used":true,"bodyHandle":2.7e-322,"linearSpeed":1.349362659885621e-10,"angularVelocityHistory":[[-0.00009343077545054257,0.0010093649616464972],[-0.0015912652015686035,0.005372791085392237],[-0.00011036060459446162,-0.0010143625549972057],[-0.005748877301812172,-0.0018972663674503565],[0.001789150875993073,-0.005383388604968786],[-0.0007545254193246365,-0.0012538738083094358],[-0.017202941700816154,0.010185377672314644],[0.010216977447271347,-0.0005925542791374028],[0.006104468367993832,-0.002067048102617264],[-0.0018138039158657193,-0.0034479000605642796],[0.0018770156893879175,0.002737815259024501]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[-0.2831273376941681,0.18177486956119537,0.21306201815605164],"rotation":[0.97818922996521,0.0012606570962816477,0.20762966573238373,0.0058433301746845245],"used":true,"bodyHandle":2.77e-322,"linearSpeed":5.874793952506481e-7,"angularVelocityHistory":[[0.07634846866130829,0.020364398136734962],[0.05429748445749283,0.01686207950115204],[-0.16260313987731934,-0.03400636836886406],[-0.05502226948738098,-0.022552823647856712],[-0.04749804735183716,-0.008083133026957512],[-0.05969003960490227,-0.013714058324694633],[-0.04594964161515236,-0.006348117720335722],[-0.0318661704659462,-0.004464853089302778],[-0.033327896147966385,-0.0038470784202218056],[-0.02632051333785057,-0.0038638515397906303],[0.11148501187562943,0.004078359808772802]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.1753520518541336,0.18022949993610382,0.37360161542892456],"rotation":[-0.001387847471050918,0.9646070599555969,0.00034578851773403585,-0.2636876106262207],"used":true,"bodyHandle":2.8e-322,"linearSpeed":3.834654358113915e-9,"angularVelocityHistory":[[0.0008203777833841741,0.004612846300005913],[-0.0019407275831326842,0.001158514409326017],[0.005318874958902597,0.005098331719636917],[-0.003907627426087856,0.004576453939080238],[0.0019093340961262584,0.003367261728271842],[0.002181977964937687,-0.0034718739334493876],[-0.0001436667371308431,0.0008192670647986233],[-0.0020409661810845137,0.004671939183026552],[0.0028881679754704237,0.003377815242856741],[-0.004014712292701006,-0.002713488880544901],[-0.00047590138274244964,0.0031125214882194996]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.0004444402875378728,0.1716587096452713,0.6669345498085022],"rotation":[-0.003209279850125313,0.3368211090564728,-0.0016343441093340516,0.941561758518219],"used":true,"bodyHandle":2.87e-322,"linearSpeed":0,"angularVelocityHistory":[[0.018255917355418205,0.022957615554332733],[-0.015168284066021442,0.030601315200328827],[0.030105717480182648,0.028742248192429543],[-0.00878915749490261,0.01093862671405077],[-0.06310935318470001,0.04507705196738243],[0.03568875044584274,0.06297529488801956],[-0.004949967376887798,0.0324399508535862],[0.006669778376817703,0.07074907422065735],[-0.0031690390314906836,0.02629268541932106],[0.029412856325507164,-0.0695054680109024]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.14871086180210114,0.25318771600723267,0.1469494104385376],"rotation":[0.0037264914717525244,-0.12907588481903076,-0.001269018743187189,0.9916269183158875],"used":true,"bodyHandle":2.9e-322,"linearSpeed":0.0027676648268248043,"angularVelocityHistory":[[-0.00014977453975006938,-0.00010748080967459828],[0.00012140363833168522,-0.0003238799108657986],[0.00013491197023540735,-0.00002996213879669085],[-0.00017130281776189804,-0.00009671689622336999],[-0.00000970402379607549,0.000019506160242599435],[-0.000038544902054127306,-0.000015840769265196286],[-0.0003325680154375732,-0.000035714903788175434],[-0.0001703825400909409,0.00014412766904570162],[-0.00008315187005791813,0.000210299389436841],[-0.0005799061618745327,0.00007071099389577284],[-0.0004684968735091388,0.00011618727148743346]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.21751323342323303,0.24753649532794952,0.05340944603085518],"rotation":[0.0019876838196069,0.7211053967475891,0.0009561788756400347,-0.6928218603134155],"used":true,"bodyHandle":2.96e-322,"linearSpeed":0.003222827779187501,"angularVelocityHistory":[[0.01529151014983654,0.006551804021000862],[0.003261879552155733,-0.008518378250300884],[0.01884024403989315,0.022282758727669716],[-0.007878264412283897,0.00590237183496356],[-0.005139960441738367,0.011859009973704815],[-0.00450982665643096,-0.03146190196275711],[-0.0018701499793678522,0.0012306440621614456],[0.0003694220504257828,0.00016941754438448697],[-0.0578950010240078,0.0688176229596138],[0.011225261725485325,0.009131760336458683],[0.0005685187061317265,0.0013728180201724172]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2700169086456299,0.2529202103614807,0.1467267870903015],"rotation":[0.00011797781917266548,0.9787202477455139,0.002208222169429064,0.20518720149993896],"used":true,"bodyHandle":3e-322,"linearSpeed":0.0029119490627075454,"angularVelocityHistory":[[0.027936413884162903,-0.0031379826832562685],[0.024493630975484848,-0.001511883456259966],[0.02071705274283886,-0.002698258962482214],[0.04315505176782608,-0.004092585761100054],[0.016091221943497658,-0.0023939250968396664],[0.01770327053964138,-0.0008709797402843833],[0.017220154404640198,-0.0034144404344260693],[0.015858294442296028,0.0009068829822354019],[0.014960147440433502,0.00021154619753360748],[0.013088109903037548,-0.0006206995458342135],[0.011479981243610382,-0.0001677658292464912]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.000012267439160495996,0.17521671950817108,0.6032018661499023],"rotation":[-0.02256271429359913,-0.3414103090763092,0.0017572304932400584,0.9396418333053589],"used":true,"bodyHandle":3.06e-322,"linearSpeed":0,"angularVelocityHistory":[[0.008199309930205345,0.20905821025371552],[-0.05557378754019737,0.024285078048706055],[-0.03356394171714783,0.0006824597367085516],[-0.43055102229118347,-0.011876706965267658],[-0.15968310832977295,-0.15308985114097595],[-0.0454675666987896,-0.029714815318584442],[-0.05244932323694229,-0.01485452800989151],[-0.058856818825006485,-0.05815841630101204],[0.023985615000128746,-0.014484887011349201],[-0.0921829417347908,0.035410575568675995]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.07299435883760452,0.24732151627540588,0.12859666347503662],"rotation":[-0.7886408567428589,-0.00025794931570999324,0.6148513555526733,0.0018112746765837073],"used":true,"bodyHandle":3.1e-322,"linearSpeed":0.003226346812421243,"angularVelocityHistory":[[0.0022383180912584066,0.0034730860497802496],[0.0016489028930664062,-0.0014355925377458334],[0.0028564350213855505,0.002778532449156046],[0.003109031356871128,0.0015859374543651938],[0.00020937637600582093,0.006071182899177074],[0.0017459276132285595,-0.0048441216349601746],[-0.006674273870885372,-0.0040284013375639915],[0.002421003533527255,0.0073444172739982605],[0.004801931791007519,-0.00015117281873244792],[0.0010651249904185534,-0.00408601388335228],[0.0042866854928433895,-0.002488531870767474]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.28419744968414307,0.17636638879776,0.21530024707317352],"rotation":[-0.00035557468072511256,0.9781713485717773,0.0005855894414708018,-0.2077987641096115],"used":true,"bodyHandle":3.16e-322,"linearSpeed":1.6707901987403496e-9,"angularVelocityHistory":[[0.004599388223141432,0.0007614628411829472],[0.003251480869948864,0.00017984831356443465],[-0.02428320050239563,-0.004818218760192394],[-0.001078678877092898,0.0023514307104051113],[-0.0037471598479896784,0.000812326732557267],[-0.006736101116985083,0.0019467832753434777],[-0.004696620628237724,0.005114090163260698],[-0.002889157272875309,0.0018371482146903872],[-0.0026198269333690405,0.003255516290664673],[-0.0010097026824951172,0.00014423277752939612],[0.01069291215389967,0.008411241695284843]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.07382041215896606,0.17673128843307495,0.20994915068149567],"rotation":[-0.00003585141530493274,-0.843457818031311,-0.0048987469635903835,-0.5371729731559753],"used":true,"bodyHandle":3.2e-322,"linearSpeed":2.2045658077050186e-11,"angularVelocityHistory":[[0.00030761785455979407,0.00006073741678847],[0.00018072577950078994,0.0026694624684751034],[-0.0004515319596976042,-0.0009036340634338558],[-0.00035077534266747534,0.0010540566872805357],[0.001443667453713715,-0.001525686588138342],[0.0003258641518186778,-0.0008579844143241644],[-0.0031242843251675367,-0.00260261632502079],[0.00012238392082508653,-0.0012370654148980975],[0.00041191017953678966,0.00024604363716207445],[-0.0011256575817242265,-0.0000014438336393141071],[0.00013027232489548624,0.0006772468914277852]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[0.059293895959854126,0.17489862442016602,0.6363077163696289],"rotation":[-0.0014179310528561473,-0.15491005778312683,-0.008517228998243809,0.9878907799720764],"used":true,"bodyHandle":3.26e-322,"linearSpeed":0,"angularVelocityHistory":[[1.283057451248169,-0.39007389545440674],[-1.2740625143051147,1.1473312377929688],[-2.1778042316436768,0.20501284301280975],[-0.002116853604093194,-0.022292105481028557],[0.007088263984769583,-0.04657463729381561],[0.6076129078865051,-1.1207331418991089],[0.05151032283902168,-0.03698483854532242],[-0.004827940370887518,0.007402800023555756],[0.040849488228559494,0.01501381304115057],[0.038330934941768646,0.010468406602740288]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.30673378705978394,0.18912912905216217,0.43058890104293823],"rotation":[-0.9880921244621277,0.010970651172101498,-0.14783400297164917,-0.04121547192335129],"used":true,"bodyHandle":3.3e-322,"linearSpeed":2.5794896133967016e-7,"angularVelocityHistory":[[-0.02423124946653843,0.004583324305713177],[0.0028594129253178835,0.00017718221351969987],[-0.01737263798713684,0.006149458233267069],[-0.004894929938018322,0.004548314027488232],[-0.018834125250577927,0.001361674745567143],[-0.00464871758595109,-0.001445283880457282],[-0.0170153696089983,0.005147713236510754],[-0.01971118152141571,0.006532872561365366],[-0.01889919489622116,0.006876254454255104],[-0.017858941107988358,0.0006688788416795433],[-0.004305846057832241,0.0111548388376832]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.16556204855442047,0.24721768498420715,0.08376405388116837],"rotation":[0.0030712857842445374,0.3991454541683197,-0.0025235710199922323,0.9168789982795715],"used":true,"bodyHandle":3.36e-322,"linearSpeed":0.0032215157314817644,"angularVelocityHistory":[[0.0006480434094555676,-0.0019146240083500743],[-0.008765589445829391,0.0013925540260970592],[-0.001397148473188281,0.0029886425472795963],[-0.0007348817307502031,-0.006991084665060043],[0.01590750552713871,-0.03268926963210106],[0.01513558067381382,0.025636211037635803],[0.004938991740345955,-0.008420782163739204],[0.057095348834991455,-0.13333144783973694],[-0.03040260262787342,0.03836448863148689],[0.0012258830247446895,-0.0016607536235824227],[0.004359032958745956,-0.00010164105333387852]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05900325998663902,0.17325247824192047,0.704646110534668],"rotation":[0.002996981143951416,-0.42706117033958435,0.009102442301809788,0.9041719436645508],"used":true,"bodyHandle":3.4e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.004831693600863218,0.24697193503379822],[0.07290652394294739,0.019103283062577248],[0.004689967725425959,-0.04027070105075836],[-0.054411355406045914,0.03787784278392792],[-0.026380298659205437,0.00012197697651572526],[-0.024392930790781975,-0.02434997819364071],[0.03878873214125633,-0.027940239757299423],[0.04866235703229904,-0.06487162411212921],[-0.03314600884914398,-0.03693587705492973],[0.006477117072790861,0.04091809689998627]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.17303676903247833,0.18242290616035461,0.31355127692222595],"rotation":[0.00101745396386832,0.9867465496063232,0.03121642954647541,0.15923485159873962],"used":true,"bodyHandle":3.46e-322,"linearSpeed":1.370784406753287e-8,"angularVelocityHistory":[[0.004645378794521093,0.0033860220573842525],[-0.0016097103944048285,-0.0018270878354087472],[-0.012286954559385777,-0.00024664547527208924],[-0.0027725868858397007,0.002346382476389408],[-0.004320783540606499,-0.0010021624621003866],[-0.0034231313038617373,0.0000771824925323017],[-0.0037270872853696346,0.0004017532628495246],[-0.00379246287047863,-0.002441101474687457],[0.013402261771261692,-0.003871598979458213],[0.00031161526567302644,-0.000863022287376225],[-0.0019444756908342242,-0.005121661350131035]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.00008699053432792425,0.1749085783958435,0.7381438612937927],"rotation":[-0.001769639435224235,-0.9996716380119324,0.017101090401411057,-0.018999647349119186],"used":true,"bodyHandle":3.5e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.01934090256690979,0.016875097528100014],[-0.007347228936851025,-0.013580648228526115],[-0.012226913124322891,0.031658023595809937],[0.24473601579666138,-0.13230405747890472],[0.14452601969242096,-0.0499289371073246],[-0.032773442566394806,0.045545369386672974],[-0.0740307867527008,0.009220887906849384],[-0.0031067458912730217,-0.005276279989629984],[-0.030742689967155457,-0.0006316003855317831],[-0.024848267436027527,0.03131302073597908]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.5094906687736511,0.17411893606185913,0.6998112797737122],"rotation":[-0.46577441692352295,-0.001128228148445487,0.8848896026611328,0.004829149693250656],"used":true,"bodyHandle":3.56e-322,"linearSpeed":1.7170572838659776e-9,"angularVelocityHistory":[[0.000023406506443279795,0.00012484067701734602],[0.000013143512660462875,0.00012809275358449668],[0.000010529141036386136,0.00015284011897165328],[0.00009321665129391477,0.00009254572069039568],[0.00005090671038487926,0.00009465864422963932],[0.00008458861702820286,0.00010660928819561377],[0.00006448969361372292,0.00006856991240056232],[0.00007280372665263712,0.00005277875607134774],[0.00005479567698785104,0.00005276352021610364],[8.718974413568503e-7,0.0000415720533055719],[-0.00002645891254360322,0.000024698352717678063]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.28238147497177124,0.19316479563713074,0.2122197300195694],"rotation":[-0.004401685204356909,-0.7930576205253601,0.004158029332756996,0.6091164350509644],"used":true,"bodyHandle":3.6e-322,"linearSpeed":0.000003268159309954048,"angularVelocityHistory":[[0.09768277406692505,0.03676888719201088],[0.06972203403711319,0.02554924413561821],[-0.20451584458351135,-0.06747934222221375],[-0.08425558358430862,-0.0374164916574955],[-0.05582242086529732,-0.007303167134523392],[-0.08106867223978043,-0.014598637819290161],[-0.06144244596362114,-0.007880100049078465],[-0.04320601746439934,0.0005203145556151867],[-0.04580913856625557,-0.001448031165637076],[-0.037780698388814926,0.001350702135823667],[0.13722477853298187,0.04644269868731499]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.6053377985954285,0.1745588779449463,0.5068545937538147],"rotation":[-0.9708452224731445,0.0073515865951776505,-0.23958763480186462,-0.0018097945721819997],"used":true,"bodyHandle":3.66e-322,"linearSpeed":3.7667003849209414e-11,"angularVelocityHistory":[[-3.276831250786927e-7,0.0000171435658558039],[-5.974029022581817e-7,0.0000014096327731749625],[0.000016618258086964488,0.00004702292790170759],[0.00000701210319675738,0.000020595305613824166],[0.000008364091627299786,0.00001908187914523296],[-0.00000772631847212324,-0.00001390253055433277],[-0.000008352373697562143,-0.000015301666280720383],[0.000011800602806033567,0.00003729890158865601],[-0.000015274294128175825,-0.000026395551685709506],[0.000006323770321614575,0.000017204480172949843],[0.0000019921810689993436,0.000005978105946269352]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06056392937898636,0.17212039232254028,0.7054674029350281],"rotation":[0.002854998456314206,-0.07357878983020782,0.004999070428311825,-0.997272789478302],"used":true,"bodyHandle":3.7e-322,"linearSpeed":0,"angularVelocityHistory":[[0.04288347810506821,0.04961000755429268],[0.03386010602116585,0.08048407733440399],[0.05330807715654373,0.0777946263551712],[-0.028457166627049446,-0.04963645711541176],[-0.013140886090695858,0.002207467332482338],[-0.036944590508937836,-0.07317624986171722],[-0.06085732579231262,-0.02573041431605816],[-0.0021356213837862015,-0.03352108970284462],[-0.012627946212887764,-0.056956272572278976],[0.02412714809179306,-0.01588262990117073]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06148979440331459,0.16988737881183624,0.6358014345169067],"rotation":[-0.0019814306870102882,-0.06952040642499924,0.002248818054795265,-0.9975759983062744],"used":true,"bodyHandle":3.75e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.0028221101965755224,0.0007636829977855086],[-0.017482656985521317,0.036432355642318726],[0.011045054532587528,0.00146374327596277],[0.027000481262803078,0.03927278146147728],[0.044863514602184296,-0.0455271452665329],[0.05926211178302765,0.009715890511870384],[-0.07974426448345184,0.07742095738649368],[-0.02949049137532711,0.005618126131594181],[-0.007158239837735891,-0.020258402451872826],[-0.023807596415281296,-0.01738675870001316]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.000005753507139161229,0.1735052913427353,0.6731741428375244],"rotation":[-0.0004495535104069859,-0.3042736351490021,0.0010733030503615737,-0.9525839686393738],"used":true,"bodyHandle":3.8e-322,"linearSpeed":0,"angularVelocityHistory":[[0.032720599323511124,0.0005021945107728243],[0.010639137588441372,0.07918959856033325],[0.009755415841937065,0.01855175942182541],[0.05524635687470436,0.017371948808431625],[-0.014307989738881588,0.03753090649843216],[0.049666374921798706,0.010017399676144123],[0.010029801167547703,-0.004991932772099972],[0.060218676924705505,0.06824124604463577],[-0.001456892117857933,0.09747898578643799],[-0.02251051366329193,-0.002671642694622278]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00019791320664808154,0.17270927131175995,0.6009343266487122],"rotation":[-0.008203241974115372,0.4562477171421051,-0.0017546156886965036,-0.889813244342804],"used":true,"bodyHandle":3.85e-322,"linearSpeed":0,"angularVelocityHistory":[[0.020761428400874138,0.03481012582778931],[-0.03706061840057373,0.016874458640813828],[-0.007835601456463337,0.05816229060292244],[-0.001752169686369598,-0.01330220140516758],[0.05538034066557884,0.01685134321451187],[-0.0038573003839701414,-0.06509260088205338],[-0.010454670526087284,0.012173429131507874],[-0.035886429250240326,-0.01728789135813713],[0.1056104451417923,-0.017497502267360687],[-0.09120414406061172,0.03293948993086815]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.2698521018028259,0.24693888425827026,0.001141427899710834],"rotation":[-0.08393663167953491,0.007064017467200756,-0.9964378476142883,0.004036098252981901],"used":true,"bodyHandle":3.9e-322,"linearSpeed":0.0034152385188703075,"angularVelocityHistory":[[-0.03516296297311783,0.017996475100517273],[0.024642661213874817,0.020882083103060722],[0.05567777529358864,-0.016705725342035294],[0.02151787467300892,0.009075440466403961],[-0.005044106859713793,0.029710575938224792],[0.032223884016275406,0.015436166897416115],[0.015431352891027927,-0.01913813315331936],[0.007820562459528446,-0.03157108649611473],[0.017985476180911064,-0.023798976093530655],[0.03391377255320549,0.007811212446540594],[0.030962783843278885,-0.06287829577922821]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5404462814331055,0.17410026490688324,0.8042495846748352],"rotation":[-0.9999297857284546,-0.008559005334973335,0.007252855226397514,-0.003804884385317564],"used":true,"bodyHandle":3.95e-322,"linearSpeed":1.1789110259116458e-15,"angularVelocityHistory":[[-0.0001697294501354918,-0.00007242263382067904],[0.00015130461542867124,0.00013146658602636307],[-0.00007352182001341134,0.00003570304761524312],[0.0000072560005719424225,0.000020658771973103285],[-0.000014405743968382012,-0.000022218046069610864],[-0.000008780034477240406,-0.000006716529242112301],[-8.460912113150698e-7,-0.0000031786476029083133],[-5.613296139017621e-7,0.0000022154472389956936],[-0.000020452755052247085,-0.00003184671368217096],[0.000045991429942660034,0.00006234044849406928],[0.0000060702263908751775,0.00001149663239630172]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.05785597860813141,0.17368316650390625,0.6363714337348938],"rotation":[0.0005665553035214543,-0.5475321412086487,0.0038916149642318487,-0.8367753624916077],"used":true,"bodyHandle":4e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.011191028170287609,0.005126494914293289],[-0.08355862647294998,0.05958325043320656],[-0.15253359079360962,0.21862149238586426],[0.08675646781921387,0.05229814723134041],[0.0008079377585090697,0.035128992050886154],[0.08140373975038528,0.008036554791033268],[-0.07992073148488998,-0.025750571861863136],[-0.01824522577226162,0.00184814038220793],[-0.03177264332771301,-0.026588240638375282],[-0.046286843717098236,-0.04608204960823059]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.5510286092758179,0.18155410885810852,0.7675933241844177],"rotation":[0.4568849802017212,-0.11119839549064636,0.8818849921226501,-0.034202940762043],"used":true,"bodyHandle":4.05e-322,"linearSpeed":0.000153366039492958,"angularVelocityHistory":[[0.0002216754073742777,-0.0008055823855102062],[0.00036325541441328824,-0.000020085381038370542],[0.0004597745428327471,0.00035238490090705454],[0.00034223220427520573,-0.00007882971840444952],[0.00031259143725037575,0.0000581862150283996],[0.0002867413859348744,0.0001621650590095669],[0.00021156469301786274,0.00010100955842062831],[0.00014896599168423563,0.000029893235478084534],[0.0001324664626736194,-0.0000482758077851031],[0.00010676925739971921,-0.00012576457811519504],[0.00006867942283861339,-0.00011891759641002864]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.21393029391765594,0.2474253922700882,-0.01204900536686182],"rotation":[0.001168321818113327,-0.0787162184715271,0.002888394519686699,-0.9968921542167664],"used":true,"bodyHandle":4.1e-322,"linearSpeed":0.003856136191992611,"angularVelocityHistory":[[0.014420376159250736,-0.014118405990302563],[0.005377218127250671,0.0011970079503953457],[0.13882218301296234,0.009784362278878689],[0.002885867841541767,0.005613562650978565],[0.009022916667163372,-0.0007711583166383207],[-0.0004220499540679157,0.003301465418189764],[0.0006385620217770338,-0.018648885190486908],[0.007465179078280926,-0.0016944403760135174],[0.012430127710103989,0.01634724996984005],[0.008943617343902588,-0.00983603298664093],[0.010148415341973305,-0.035327792167663574]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05848926305770874,0.17477837204933167,0.7039111852645874],"rotation":[-0.0025457548908889294,0.15038913488388062,-0.0008026426658034325,-0.9886232614517212],"used":true,"bodyHandle":4.15e-322,"linearSpeed":0,"angularVelocityHistory":[[0.1364016979932785,0.2268025279045105],[0.07161081582307816,0.12040793150663376],[-0.03835854306817055,-0.08202490210533142],[0.0006256572669371963,-0.0751841813325882],[0.03729729354381561,0.009535962715744972],[-0.005834238603711128,-0.01205251645296812],[-0.06683458387851715,0.0037870334926992655],[-0.029759736731648445,-0.0516791045665741],[0.010331464000046253,-0.06921379268169403],[0.06692627817392349,0.002047451213002205]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.2695060074329376,0.2525082230567932,0.11311507225036621],"rotation":[-0.0037022989708930254,0.9560753107070923,-0.0029995718505233526,-0.2930823564529419],"used":true,"bodyHandle":4.2e-322,"linearSpeed":0.0028682128548261744,"angularVelocityHistory":[[-0.002026183530688286,0.0005918266251683235],[0.010113254189491272,0.0042476109229028225],[-0.010554613545536995,-0.0067194015718996525],[0.004998738411813974,-0.0002450064930599183],[0.004710150882601738,-0.00008958567923400551],[-0.001684154267422855,0.002227074233815074],[0.0031969461124390364,-0.0076935128308832645],[0.00396777642890811,-0.008552136830985546],[0.004693098831921816,-0.0049899243749678135],[0.0032259575091302395,0.003020006697624922],[-0.009214581921696663,-0.0002435783389955759]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00068838702281937,0.17390353977680206,0.7397482395172119],"rotation":[0.0031238531228154898,-0.9826273918151855,-0.0035077757202088833,-0.18552978336811066],"used":true,"bodyHandle":4.25e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.1726987361907959,0.034339725971221924],[-0.04410024732351303,0.05118235945701599],[-0.012714819051325321,0.04177458584308624],[0.04241893067955971,-0.026347998529672623],[0.15210026502609253,0.1956656128168106],[-0.11360515654087067,0.07083838433027267],[-0.05846894532442093,-0.0025019219610840082],[-0.047998104244470596,-0.032811664044857025],[0.024075359106063843,0.0016840394819155335],[0.04496748000383377,0.11213738471269608]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.12706510722637177,0.2530396580696106,-0.03579796478152275],"rotation":[0.9950646758079529,-0.006049664691090584,0.0989517867565155,-0.0042585162445902824],"used":true,"bodyHandle":4.3e-322,"linearSpeed":0.0028978391927589006,"angularVelocityHistory":[[0.004083285573869944,0.006867149379104376],[0.004916236270219088,-0.0008664686465635896],[0.008980462327599525,0.004707796964794397],[0.0019081097561866045,0.0014906375436112285],[0.0026173489168286324,0.0009163811337202787],[-0.0009803466964513063,-0.002819991437718272],[0.010470166802406311,0.000556246901396662],[-0.0055208029225468636,0.01872149668633938],[0.014447472989559174,-0.0052728671580553055],[0.0020705333445221186,-0.0032790254335850477],[0.0023234798572957516,-0.0003340407565701753]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.1637636423110962,0.24727432429790497,0.024592798203229904],"rotation":[-0.002300495048984885,-0.5209280252456665,0.00386964064091444,-0.8535887002944946],"used":true,"bodyHandle":4.35e-322,"linearSpeed":0.0032237941702958073,"angularVelocityHistory":[[0.0031212219037115574,-0.006677049212157726],[0.002300754189491272,-0.0013086835388094187],[0.0013082503573969007,-0.009073720313608646],[0.004979652352631092,-0.003508972004055977],[-0.0016095319297164679,-0.003574225353077054],[0.005915404763072729,-0.0012941767927259207],[0.0014869903679937124,-0.006843439303338528],[0.0017087229061871767,-0.002836183412000537],[0.0037957176100462675,-0.0019883618224412203],[0.013532441109418869,-0.0008422289974987507],[0.03049132227897644,-0.005767148453742266]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5783628821372986,0.177451029419899,0.802390992641449],"rotation":[0.04384740814566612,-0.9878727197647095,0.02265973947942257,0.14721211791038513],"used":true,"bodyHandle":4.4e-322,"linearSpeed":1.2696467948365958e-13,"angularVelocityHistory":[[0.00002089631016133353,-0.000008717423042980954],[0.000012703866559604649,-0.000006792087788198842],[0.00004755780173582025,0.00004140978489886038],[-0.00007486964750569314,-0.000006991861027927371],[0.00000528904138263897,-0.000012165439329692163],[-0.000017121798009611666,-0.0000037965853607602185],[-0.00002410032357147429,0.000009317708645539824],[-0.000017313665011897683,-2.0183949800411938e-7],[-0.000017309475879301317,-0.000011875213203893509],[0.000014131147509033326,0.0000414720198023133],[-0.0000031146305445872713,0.000015875231838435866]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.0594162717461586,0.17582039535045624,0.704076886177063],"rotation":[-0.006300296634435654,-0.1458798050880432,-0.0030133635737001896,0.9892776012420654],"used":true,"bodyHandle":4.45e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.15147066116333008,-0.08941707015037537],[-0.10986169427633286,-0.051885101944208145],[0.008159869350492954,-0.09858633577823639],[-0.13374820351600647,0.11060810834169388],[-0.022610826417803764,0.006736149545758963],[0.32959386706352234,-0.13089506328105927],[0.2314770519733429,0.055174440145492554],[0.4625210762023926,-0.23484061658382416],[-0.0618106909096241,-0.0497213751077652],[0.08472796529531479,0.04011271148920059]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.26965799927711487,0.24746756255626678,-0.035463493317365646],"rotation":[0.3787168264389038,0.0008855288615450263,0.9255121350288391,0.000008921809239836875],"used":true,"bodyHandle":4.5e-322,"linearSpeed":0.0032257239935352803,"angularVelocityHistory":[[0.001953231869265437,-0.03359485790133476],[0.006795252673327923,-0.020327666774392128],[0.021019989624619484,-0.01387578621506691],[0.04558762162923813,-0.020190423354506493],[0.0014484658604487777,-0.015422926284372807],[0.008222217671573162,-0.00749453529715538],[-0.001434230711311102,-0.006224135868251324],[0.001924285665154457,-0.011409434489905834],[-0.0037132594734430313,-0.00989304669201374],[-0.003647856879979372,-0.00304277241230011],[0.0016440957551822066,-0.003923655021935701]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05825851112604141,0.1736375242471695,0.6366753578186035],"rotation":[0.004237162880599499,0.4823884665966034,0.004755258560180664,0.8759343028068542],"used":true,"bodyHandle":4.55e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.01838521473109722,-0.08974112570285797],[0.028245404362678528,-0.08002768456935883],[0.08012930303812027,0.24860580265522003],[0.00629200367256999,0.03491771221160889],[0.07315994799137115,-0.16448335349559784],[-0.11914064735174179,-0.5179178714752197],[0.02627657912671566,-0.016908884048461914],[-0.019078733399510384,0.023019511252641678],[0.01678997464478016,0.005153802689164877],[0.03162965923547745,0.015257141552865505]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.6132919192314148,0.18012386560440063,0.5040306448936462],"rotation":[-0.009385411627590656,-0.9470939040184021,-0.002968652406707406,0.32080546021461487],"used":true,"bodyHandle":4.6e-322,"linearSpeed":1.471298128068244e-9,"angularVelocityHistory":[[-0.000007723631824774202,-8.779194331509643e-7],[-0.0000024681908143975306,0.0000070914343268668745],[0.000010895662853727117,9.205887181451544e-7],[0.000018355196516495198,0.00003547757296473719],[-0.00000634207663097186,-0.000009447788215766195],[-0.000001070970029104501,0.000008030535354919266],[-0.000011158213965245523,-0.000005678531579178525],[0.0000035932212085754145,0.000016386768038501032],[-0.0000029061611712677404,0.000004435473783814814],[0.000019135677575832233,0.00003677172207972035],[0.000011423793694120832,0.00001863291981862858]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.002579182619228959,0.17719581723213196,0.6683636903762817],"rotation":[0.00505411671474576,0.4183956980705261,0.010336333885788918,0.9081919193267822],"used":true,"bodyHandle":4.64e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.41906654834747314,0.070930615067482],[0.04346885532140732,-0.09806854277849197],[0.02386709488928318,0.02015284076333046],[0.08431775122880936,-0.05196063593029976],[-0.05471401661634445,0.06451990455389023],[0.2340247929096222,0.4075857698917389],[0.06451678276062012,0.10111238062381744],[-0.16914013028144836,-0.21707183122634888],[0.12965980172157288,0.13407477736473083],[0.012376932427287102,-0.2160722017288208]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2699752748012543,0.24748016893863678,0.023559903725981712],"rotation":[-0.062177352607250214,0.0019905578810721636,-0.9980628490447998,-0.0007767339120618999],"used":true,"bodyHandle":4.7e-322,"linearSpeed":0.00322586369143366,"angularVelocityHistory":[[0.0011412188177928329,0.0005012264009565115],[0.010775981470942497,-0.0009958830196410418],[-0.003173697739839554,0.048984967172145844],[-0.1613224446773529,-0.01494025718420744],[0.0008015796192921698,-0.0018028905615210533],[0.037862379103899,-0.029948845505714417],[0.0008499821415171027,-0.0016937234904617071],[0.00039239038596861064,-0.0019791286904364824],[0.07638884335756302,0.044763412326574326],[0.004297931678593159,0.0012402053689584136],[0.0001638400281080976,-0.0005284523358568549]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00020724802743643522,0.1768062263727188,0.6027973294258118],"rotation":[-0.022366246208548546,-0.7950112819671631,-0.005146464798599482,0.6061602234840393],"used":true,"bodyHandle":4.74e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.01869172602891922,0.0342944860458374],[-0.251029372215271,0.10789626836776733],[0.21463818848133087,0.10990050435066223],[0.04878995195031166,-0.18928617238998413],[-0.19322729110717773,-0.3394831418991089],[-0.07206611335277557,-0.13669918477535248],[0.047891926020383835,0.01234184205532074],[-0.03725861757993698,-0.05058576539158821],[-0.02148468606173992,0.02193702571094036],[-0.09039472043514252,0.02248315140604973]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05843932554125786,0.17983965575695038,0.6365216970443726],"rotation":[0.0010963219683617353,0.8293375968933105,0.004829719662666321,0.558725893497467],"used":true,"bodyHandle":4.8e-322,"linearSpeed":0,"angularVelocityHistory":[[0.23076803982257843,-0.24914608895778656],[-0.12169719487428665,0.14822541177272797],[-0.057521920651197433,-0.1470959335565567],[-0.07534389197826385,-0.27367109060287476],[-0.0513312928378582,-0.013966880738735199],[0.34944382309913635,-0.6779349446296692],[0.07923204451799393,-0.09049496054649353],[0.24131612479686737,-0.06965577602386475],[0.07169383764266968,0.0393093079328537],[-0.032518401741981506,-0.07664821296930313]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05823706090450287,0.1772707998752594,0.7036430239677429],"rotation":[0.010537815280258656,-0.1487049013376236,0.021192114800214767,0.9885983467102051],"used":true,"bodyHandle":4.84e-322,"linearSpeed":0,"angularVelocityHistory":[[0.2992818355560303,-0.0592803917825222],[-0.04861367866396904,0.04859566316008568],[-0.1523391455411911,-0.13535669445991516],[-0.16270911693572998,0.13873320817947388],[-0.03256984427571297,0.057926177978515625],[-0.05938756465911865,0.010251141153275967],[0.18433108925819397,0.028492335230112076],[0.1623573899269104,-0.04654621332883835],[-0.06544250249862671,-0.07349090278148651],[-0.021888284012675285,-0.13924454152584076]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0002959870616905391,0.17707891762256622,0.7368964552879333],"rotation":[0.0008899787208065391,-0.8683035969734192,-0.011162230744957924,-0.4959067702293396],"used":true,"bodyHandle":4.9e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.13555043935775757,0.02190895937383175],[0.009047118946909904,0.07854082435369492],[-0.05848702788352966,0.11954157799482346],[0.12675702571868896,-0.03533543273806572],[0.2236911803483963,0.218155637383461],[-0.0696689561009407,0.2140299528837204],[-0.17529024183750153,-0.019127635285258293],[-0.05587968975305557,-0.08448059111833572],[0.10542956739664078,-0.05405847355723381],[-0.04061368107795715,0.01977727748453617]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.3712707459926605,0.18965750932693481,0.4444894790649414],"rotation":[-0.22522859275341034,-0.07714813947677612,0.9709395170211792,0.02442651055753231],"used":true,"bodyHandle":4.94e-322,"linearSpeed":4.9499186643754276e-8,"angularVelocityHistory":[[-0.0009581511840224266,-0.0019415186252444983],[-0.00011027076106984168,0.007944894023239613],[-0.0027169431559741497,-0.003173672826960683],[-0.0029199139680713415,0.0020537865348160267],[-0.0017293267883360386,0.0016308388439938426],[0.00021450745407491922,0.005990937817841768],[0.0023171850480139256,0.003326145466417074],[-0.0014964205911383033,-0.003262922400608659],[0.001489349058829248,0.0023503643460571766],[-0.0021756887435913086,-0.010527562350034714],[0.003390417667105794,0.002307993359863758]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3229881227016449,0.17683827877044678,0.29121077060699463],"rotation":[0.37446528673171997,0.004157425835728645,-0.9272288680076599,0.00225642672739923],"used":true,"bodyHandle":5e-322,"linearSpeed":4.6387095693606666e-12,"angularVelocityHistory":[[0.0002191562671214342,-0.00001974502083612606],[-0.00019742474250961095,-0.00008748340042075142],[-0.0002472887863405049,-0.0001113754406105727],[0.0001412105921190232,0.00010488265979802236],[0.00002954068077087868,0.000028771219149348326],[0.00042268537799827754,0.00019332308147568256],[-0.0002561763976700604,-0.00009702390525490046],[0.00005862428588443436,0.00004716685361927375],[-0.000010180269782722462,-0.000031029801903059706],[-0.0003246624837629497,-0.0001170715331682004],[-0.0005002472316846251,-0.00026091738254763186]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.08560484647750854,0.25252270698547363,-0.04095891863107681],"rotation":[0.9122970104217529,-0.0035858217161148787,0.4095131754875183,0.0005564555758610368],"used":true,"bodyHandle":5.04e-322,"linearSpeed":0.002842887556044133,"angularVelocityHistory":[[-0.008811505511403084,0.035907961428165436],[-0.024598944932222366,0.023834945634007454],[-0.02065247856080532,0.02073642984032631],[0.008978870697319508,0.03787107765674591],[-0.013119800947606564,0.014298510737717152],[-0.05900409817695618,-0.11037659645080566],[-0.0026285077910870314,-0.11528213322162628],[-0.007059050723910332,-0.09803777188062668],[-0.00688814464956522,-0.07855625450611115],[-0.005927839316427708,-0.06342162191867828],[-0.004989954177290201,-0.051132943481206894]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.538827121257782,0.17959743738174438,0.72344571352005],"rotation":[0.003442431101575494,0.5827144384384155,-0.0024530268274247646,-0.8126659989356995],"used":true,"bodyHandle":5.1e-322,"linearSpeed":7.326315748479905e-7,"angularVelocityHistory":[[0.00006877726264065132,0.00030359235825017095],[0.00012811199121642858,0.00037114700535312295],[0.00010252698848489672,0.0003472170210443437],[0.00008133229130180553,0.0003279165830463171],[0.00009898914868244901,0.00034018763108178973],[-0.000046743782149860635,0.00041853165021166205],[-0.00006553794810315594,0.00047324367915280163],[-0.00009682012751000002,0.0005426969728432596],[-0.00014616742555517703,0.000454216351499781],[-0.0002714079455472529,0.00044631375931203365],[-0.0002788966230582446,0.0005066333687864244]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05832620710134506,0.1775578260421753,0.7030950784683228],"rotation":[-0.005218028090894222,-0.16496455669403076,-0.010807327926158905,-0.9862264394760132],"used":true,"bodyHandle":5.14e-322,"linearSpeed":0,"angularVelocityHistory":[[0.01971890591084957,0.15612880885601044],[0.16421903669834137,0.30369606614112854],[-0.059821948409080505,-0.015150471590459347],[-0.13986118137836456,-0.023419154807925224],[0.0471707284450531,0.0320594385266304],[-0.030599458143115044,-0.010390161536633968],[-0.21419931948184967,-0.06520847231149673],[0.07639186829328537,0.024097980931401253],[-0.11030374467372894,-0.0314115546643734],[0.12034384161233902,0.2075221836566925]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.061269115656614304,0.17979378998279572,0.6357053518295288],"rotation":[0.009165819734334946,0.13651861250400543,-0.006232517305761576,-0.9905754327774048],"used":true,"bodyHandle":5.2e-322,"linearSpeed":0,"angularVelocityHistory":[[0.10733790695667267,-0.014765567146241665],[-0.015600419603288174,0.05712685361504555],[0.27197203040122986,-0.2623620331287384],[0.2354094237089157,0.15736417472362518],[0.08139017969369888,0.16388890147209167],[-0.030350815504789352,-0.01142067089676857],[-0.30785292387008667,0.25782743096351624],[-0.23192736506462097,-0.03332655131816864],[-0.17880111932754517,0.07197115570306778],[0.07336156815290451,-0.10039614886045456]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0005212366813793778,0.17417949438095093,0.6672819256782532],"rotation":[-0.0033436869271099567,-0.8988267779350281,-0.0054274192079901695,-0.4382576048374176],"used":true,"bodyHandle":5.24e-322,"linearSpeed":0,"angularVelocityHistory":[[0.6528557538986206,-0.05963456630706787],[0.006804258096963167,0.08051344752311707],[-0.018342163413763046,0.18918894231319427],[0.006618108134716749,0.04021991789340973],[-0.07373910397291183,-0.0006831356440670788],[-0.05314035341143608,0.09205138683319092],[0.060278166085481644,-0.008989781141281128],[-0.014854193665087223,0.07978019118309021],[0.12398088723421097,-0.030596239492297173],[0.027322856709361076,-0.09877686947584152]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0007878788746893406,0.17869865894317627,0.5991442799568176],"rotation":[0.01321521494537592,0.7190209031105042,-0.0022909482941031456,-0.6948590278625488],"used":true,"bodyHandle":5.3e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.00048262550262734294,0.14736852049827576],[-0.0722801685333252,-0.012485884130001068],[0.042109113186597824,0.015527135692536831],[-0.04677395895123482,-0.06248389929533005],[-0.3695562779903412,-0.1997862309217453],[-0.12496287375688553,0.00970497727394104],[0.1249626949429512,-0.008762568235397339],[0.012703211978077888,-0.07986349612474442],[0.034035827964544296,0.01266610436141491],[-0.0067514278925955296,0.0933290421962738]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.059766270220279694,0.17492976784706116,0.6358533501625061],"rotation":[-0.004560483619570732,0.6189116835594177,0.018904749304056168,-0.7852198481559753],"used":true,"bodyHandle":5.34e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.002559922868385911,-0.010165933519601822],[-0.04273172840476036,0.05344221368432045],[0.19805753231048584,0.0656670406460762],[0.1706559658050537,-0.1066991314291954],[0.02914603427052498,0.011096864938735962],[0.24992799758911133,-0.07593072205781937],[-0.017618000507354736,-0.10363470762968063],[0.011669491417706013,-0.017453022301197052],[-0.01381380669772625,-0.014976857230067253],[-0.039609652012586594,-0.05189568176865578]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06100809946656227,0.18096955120563507,0.7061633467674255],"rotation":[-0.01457606814801693,0.3549610376358032,-0.010498161427676678,-0.9347084760665894],"used":true,"bodyHandle":5.4e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.01937997341156006,0.19688114523887634],[-0.0647973045706749,-0.0034310310147702694],[-0.09337314963340759,-0.06935352832078934],[-0.15267224609851837,0.011338279582560062],[-0.00888948142528534,0.0942675918340683],[-0.07630098611116409,-0.03220691531896591],[-0.22155572474002838,-0.06209361180663109],[-0.08306021243333817,0.03034210205078125],[-0.014863271266222,-0.07871953397989273],[-0.000028629710868699476,0.08103066682815552]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00014863157412037253,0.17784655094146729,0.736948549747467],"rotation":[0.00039017442031763494,-0.8630877137184143,0.0034916556905955076,-0.5050419569015503],"used":true,"bodyHandle":5.43e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.11104695498943329,0.03125888109207153],[0.0034362031146883965,0.10542502254247665],[-0.032797686755657196,0.16632577776908875],[0.14982756972312927,0.07266461104154587],[0.26818880438804626,0.1733364313840866],[-0.04165271669626236,0.32265612483024597],[-0.13521884381771088,-0.035549238324165344],[-0.028970392420887947,-0.06266441196203232],[0.0413275882601738,-0.26811766624450684],[-0.07418952137231827,-0.02777739427983761]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.2837282717227936,0.1801457703113556,0.3467617332935333],"rotation":[0.002270702738314867,-0.9518899917602539,0.003160596126690507,0.3064152002334595],"used":true,"bodyHandle":5.5e-322,"linearSpeed":4.5501990821335254e-10,"angularVelocityHistory":[[0.00009087673970498145,0.00007964085671119392],[-0.0003394830273464322,0.00019552436424419284],[-0.00011435904889367521,-0.00023992775822989643],[-0.00013336919073481113,0.00011288082168903202],[0.00006144576764199883,-0.00004536296546575613],[0.0001155235804617405,-0.00009622486686566845],[-0.00001632160638109781,0.00010078438208438456],[-0.00006416792166419327,0.00006248172576306388],[-0.000021495454348041676,-0.0000635048418189399],[-0.00045634908019565046,-0.00030341563979163766],[-0.000363529019523412,0.00007440101762767881]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[0.05940072238445282,0.18075788021087646,0.7040931582450867],"rotation":[0.0006077082362025976,-0.483163982629776,0.006792216096073389,0.8755033016204834],"used":true,"bodyHandle":5.53e-322,"linearSpeed":0,"angularVelocityHistory":[[0.05441393703222275,-0.06674472242593765],[-0.11182334274053574,-0.18660961091518402],[-0.1510094255208969,-0.11925144493579865],[-0.19941751658916473,0.12051554024219513],[-0.04129425808787346,-0.06590722501277924],[0.27438387274742126,0.18937049806118011],[0.15236926078796387,0.19716902077198029],[0.03586462885141373,0.11250808835029602],[-0.06451103836297989,-0.05156584084033966],[-0.07363283634185791,-0.1064821109175682]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06176763400435448,0.17730024456977844,0.6350272297859192],"rotation":[-0.0159036535769701,0.7686875462532043,0.01397128589451313,0.6392740607261658],"used":true,"bodyHandle":5.6e-322,"linearSpeed":0,"angularVelocityHistory":[[0.25341251492500305,-0.1695733219385147],[-0.21407334506511688,-0.055632706731557846],[0.10212916880846024,-0.008047152310609818],[-0.04711604863405228,-0.0666089579463005],[-0.006532559171319008,0.029788950458168983],[0.21126560866832733,-0.4345362186431885],[0.014877894893288612,-0.06557190418243408],[0.053009964525699615,0.020544487982988358],[-0.025834424421191216,0.04218960553407669],[0.08759516477584839,-0.027347512543201447]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0010566397104412317,0.17818787693977356,0.6723780632019043],"rotation":[-0.002528464887291193,0.36491459608078003,0.004117125645279884,0.9310284852981567],"used":true,"bodyHandle":5.63e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.16816109418869019,0.00689317611977458],[-0.11547377705574036,-0.007726146839559078],[0.06123996898531914,0.059007324278354645],[0.042615216225385666,-0.09778640419244766],[-0.06935641914606094,0.05743676424026489],[0.11107952147722244,0.45336875319480896],[0.11946652829647064,0.11695815622806549],[-0.15519337356090546,-0.199276402592659],[0.021518727764487267,-0.14551977813243866],[0.014121190644800663,-0.14326131343841553]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0005315565504133701,0.18040642142295837,0.6010704636573792],"rotation":[0.0033909159246832132,0.07948441058397293,-0.009640028700232506,0.9967836737632751],"used":true,"bodyHandle":5.7e-322,"linearSpeed":0,"angularVelocityHistory":[[0.02557893842458725,0.14208969473838806],[-0.004229224752634764,0.0018149908864870667],[0.07595913112163544,-0.06864554435014725],[0.2763334810733795,0.005308116786181927],[-0.2657031714916229,-0.020059464499354362],[-0.013880417682230473,-0.21764731407165527],[0.09374392777681351,0.0027447075117379427],[0.06957247108221054,-0.08950094878673553],[-0.14488226175308228,0.04975663870573044],[-0.07385876774787903,0.03689558058977127]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.058611009269952774,0.17852754890918732,0.6371554732322693],"rotation":[0.0015803962014615536,0.7376391887664795,0.0011437736684456468,0.6751922369003296],"used":true,"bodyHandle":5.73e-322,"linearSpeed":0,"angularVelocityHistory":[[0.22323700785636902,0.02042829804122448],[-0.24331633746623993,0.10345947742462158],[0.17510901391506195,-0.3154450058937073],[-0.1491919457912445,-0.24981825053691864],[0.0919182151556015,0.03369753062725067],[0.12763388454914093,-0.6346736550331116],[-0.013252931647002697,-0.08094241470098495],[0.11725978553295135,0.09330787509679794],[0.09892278909683228,-0.05344311147928238],[0.016633857041597366,-0.0400729663670063]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.060950007289648056,0.17876212298870087,0.7055531144142151],"rotation":[-0.005187581293284893,0.5045368075370789,-0.00680741760879755,0.8633477687835693],"used":true,"bodyHandle":5.8e-322,"linearSpeed":0,"angularVelocityHistory":[[0.19181139767169952,-0.0916755348443985],[-0.05828206613659859,-0.14292587339878082],[-0.19683457911014557,-0.07917103171348572],[-0.16994431614875793,0.05955406278371811],[-0.026829060167074203,-0.045622799545526505],[0.04946950823068619,-0.020397068932652473],[0.17790842056274414,0.1408698409795761],[0.10457425564527512,0.13732047379016876],[-0.12744444608688354,-0.036456719040870667],[0.014600513502955437,-0.09901059418916702]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00016044790390878916,0.18218131363391876,0.7401227355003357],"rotation":[-0.0008848700672388077,-0.7291984558105469,-0.01084135938435793,-0.6842158436775208],"used":true,"bodyHandle":5.83e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.016843780875205994,0.031238190829753876],[0.05898013338446617,0.029486756771802902],[-0.043957918882369995,0.18218183517456055],[0.12001058459281921,0.08683318644762039],[0.22513140738010406,0.22396735846996307],[0.023709269240498543,0.3184506595134735],[-0.06896822154521942,0.02829034812748432],[-0.03741345554590225,-0.07432491332292557],[0.000928361143451184,-0.22792671620845795],[-0.09929734468460083,-0.11241956800222397]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05958737060427666,0.1821531057357788,0.7042824029922485],"rotation":[-0.01896144263446331,0.7353334426879883,-0.00978395901620388,-0.6773694157600403],"used":true,"bodyHandle":5.9e-322,"linearSpeed":0,"angularVelocityHistory":[[0.0054452866315841675,0.19099849462509155],[-0.09954951703548431,0.029373809695243835],[-0.015821291133761406,0.03982864320278168],[-0.12921975553035736,0.0943283885717392],[0.07479379326105118,0.05732966586947441],[0.05734320357441902,-0.05423136055469513],[-0.2230777144432068,-0.05237651616334915],[0.10618460178375244,0.023312300443649292],[-0.10457787662744522,0.03136393800377846],[-0.10655129700899124,0.13966761529445648]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.055929869413375854,0.18278853595256805,0.6368634104728699],"rotation":[0.004713146016001701,0.3558715283870697,-0.010041788220405579,-0.9344690442085266],"used":true,"bodyHandle":5.93e-322,"linearSpeed":0,"angularVelocityHistory":[[0.04032616317272186,-0.024628281593322754],[-0.0979766771197319,0.036547210067510605],[0.08145829290151596,-0.2914365231990814],[0.11460786312818527,0.13955217599868774],[0.15133847296237946,0.11559192836284637],[-0.08496052771806717,0.14882226288318634],[-0.37494316697120667,0.18018901348114014],[-0.24941200017929077,0.132416233420372],[-0.1442776918411255,0.03034132532775402],[0.03925297036767006,0.11841056495904922]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0028167946729809046,0.18088936805725098,0.6691927313804626],"rotation":[-0.0000825160532258451,-0.9421550035476685,-0.011647974140942097,-0.3349750339984894],"used":true,"bodyHandle":6e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.005618575494736433,0.07882316410541534],[0.08221691846847534,-0.16933263838291168],[0.0910869687795639,-0.024108165875077248],[0.1363508552312851,-0.13171833753585815],[0.024317223578691483,-0.13762608170509338],[0.11291585117578506,0.4138934910297394],[0.0530172660946846,0.12175428122282028],[-0.13243675231933594,-0.12328042834997177],[0.1536252647638321,0.06825947761535645],[-0.0003300918033346534,-0.17938315868377686]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0004027281538583338,0.18260008096694946,0.6028214693069458],"rotation":[0.01148383878171444,0.26528415083885193,-0.003306406317278743,-0.964096188545227],"used":true,"bodyHandle":6.03e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.08289352804422379,0.12929080426692963],[-0.07281549274921417,-0.017333202064037323],[0.04079652950167656,-0.025295723229646683],[-0.17686745524406433,0.006094716023653746],[-0.24966326355934143,-0.30477824807167053],[0.24578507244586945,0.19674614071846008],[0.09224725514650345,-0.04213576391339302],[0.08323793858289719,-0.034121591597795486],[-0.11146171391010284,-0.006565481889992952],[-0.07733533531427383,0.21306821703910828]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06118524819612503,0.1810522973537445,0.6353537440299988],"rotation":[0.003067753044888377,0.5873234272003174,-0.00013054563896730542,-0.8093464970588684],"used":true,"bodyHandle":6.1e-322,"linearSpeed":0,"angularVelocityHistory":[[0.13237173855304718,0.0032396933529525995],[-0.07839659601449966,0.0629086047410965],[0.2324293702840805,-0.22858533263206482],[0.16376088559627533,0.07055644690990448],[0.07048162072896957,0.16868501901626587],[0.08473401516675949,0.029720623046159744],[-0.2874435782432556,0.016282130032777786],[-0.24712976813316345,0.03660692274570465],[-0.15775537490844727,0.01599964313209057],[-0.0157408956438303,0.046261727809906006]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05837753042578697,0.1775810569524765,0.7034384608268738],"rotation":[0.016365038231015205,0.6862103343009949,0.008972509764134884,-0.7271636724472046],"used":true,"bodyHandle":6.13e-322,"linearSpeed":0,"angularVelocityHistory":[[0.001986156217753887,0.21576133370399475],[-0.1217876672744751,0.1389007419347763],[-0.0312904454767704,0.05179877206683159],[-0.04396878182888031,-0.1186673566699028],[0.09663460403680801,0.09436804056167603],[0.04225393757224083,0.004251441918313503],[-0.22266718745231628,-0.03595117852091789],[-0.049648936837911606,-0.04381723329424858],[-0.04239924997091293,-0.1442691683769226],[-0.010068299248814583,0.0912574976682663]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0015617873286828399,0.1802448332309723,0.7391817569732666],"rotation":[0.002594340592622757,-0.999839186668396,0.0002684687206055969,0.0177422184497118],"used":true,"bodyHandle":6.2e-322,"linearSpeed":0,"angularVelocityHistory":[[0.03126632794737816,0.0843970850110054],[-0.037961915135383606,0.06492222845554352],[-0.05718523636460304,0.18042299151420593],[0.1464293748140335,0.06285206228494644],[0.22203420102596283,0.2501069903373718],[-0.04705559089779854,0.289458692073822],[-0.11644020676612854,-0.00047500504297204316],[-0.014554893597960472,-0.11766892671585083],[0.03248916193842888,-0.24735626578330994],[-0.0498705692589283,-0.056165535002946854]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05941000580787659,0.18204805254936218,0.7044708132743835],"rotation":[-0.002715498208999634,0.8861236572265625,-0.005882554687559605,0.46340349316596985],"used":true,"bodyHandle":6.23e-322,"linearSpeed":0,"angularVelocityHistory":[[0.09026062488555908,-0.0016416216967627406],[-0.19768188893795013,-0.1877603828907013],[-0.0863000899553299,-0.07153385877609253],[-0.11958707123994827,0.1061970517039299],[-0.12293735146522522,-0.1966109573841095],[-0.04277608543634415,0.25923585891723633],[0.17031709849834442,0.27108824253082275],[0.023823341354727745,0.26209717988967896],[-0.09868088364601135,0.0001488092093495652],[-0.053381551057100296,-0.12035943567752838]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06122088432312012,0.185060054063797,0.6338565349578857],"rotation":[0.001253685331903398,-0.01593082956969738,-0.004833682905882597,0.9998606443405151],"used":true,"bodyHandle":6.27e-322,"linearSpeed":0,"angularVelocityHistory":[[0.3245958685874939,-0.09054363518953323],[-0.2356499880552292,0.020380888134241104],[-0.0366460420191288,-0.1860039085149765],[-0.017381494864821434,-0.14287856221199036],[-0.023795127868652344,0.11513298004865646],[0.1519315391778946,-0.4392969310283661],[0.10191041976213455,-0.1116047203540802],[0.22607579827308655,-0.044833485037088394],[0.07153310626745224,0.0024184260983020067],[-0.01968197524547577,-0.039688047021627426]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.5231132507324219,0.1906886249780655,0.5478233695030212],"rotation":[-0.8734228014945984,0.0015105344355106354,-0.4869590699672699,-0.0010669662151485682],"used":true,"bodyHandle":6.3e-322,"linearSpeed":1.0502241433418541e-8,"angularVelocityHistory":[[-0.0001274026435567066,-0.00019751217041630298],[0.000014251242646423634,-0.0003280098899267614],[-0.00012677142512984574,-0.00030688176047988236],[-0.00007736716361250728,-0.00023760519979987293],[-0.000026188532501691952,-0.0004661500279325992],[0.00002680504803720396,-0.00018313493637833744],[-0.00005377470006351359,0.00014540486154146492],[0.0000735041030566208,-0.00043500959873199463],[-0.00007804302731528878,-0.0008809402934275568],[-0.0003982640919275582,0.000753662723582238],[-0.0005640893359668553,-0.0013493964215740561]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.002753234002739191,0.1825113594532013,0.6707077026367188],"rotation":[-0.000625418673735112,0.6606516242027283,0.00797802023589611,0.7506499290466309],"used":true,"bodyHandle":6.37e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.09960338473320007,0.09847016632556915],[0.08927064388990402,-0.1457570344209671],[0.34992146492004395,-0.2684409022331238],[0.06176449730992317,-0.2533597946166992],[0.061036381870508194,0.528666079044342],[0.20183230936527252,0.44760406017303467],[0.2389431744813919,0.1716953068971634],[-0.13147208094596863,-0.13789473474025726],[0.06608638912439346,0.09749234467744827],[-0.0431060828268528,-0.1388586312532425]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00046770484186708927,0.18465353548526764,0.6007799506187439],"rotation":[-0.001790238544344902,-0.6933337450027466,-0.00761581864207983,0.720574140548706],"used":true,"bodyHandle":6.4e-322,"linearSpeed":0,"angularVelocityHistory":[[0.07733293622732162,0.10084240883588791],[0.017674073576927185,0.00800020806491375],[0.052903853356838226,0.05077948793768883],[0.18400730192661285,0.05706077441573143],[-0.30553367733955383,-0.13695986568927765],[0.7221896648406982,0.34483033418655396],[0.11079148203134537,-0.057480838149785995],[0.07925340533256531,-0.06411561369895935],[-0.2235279679298401,0.003163238288834691],[0.009237517602741718,0.08650215715169907]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05864622816443443,0.1840706169605255,0.6369860172271729],"rotation":[0.0026809682603925467,0.45371755957603455,0.0015821041306480765,0.8911401629447937],"used":true,"bodyHandle":6.47e-322,"linearSpeed":0,"angularVelocityHistory":[[0.34903883934020996,-0.13725163042545319],[-0.2324676811695099,0.05262291058897972],[-0.3488543629646301,-0.11551599949598312],[-0.07982384413480759,-0.2049870491027832],[-0.01478530652821064,0.10887973755598068],[0.14834889769554138,-0.46726804971694946],[0.11616344004869461,-0.04541501775383949],[0.28227102756500244,-0.07544521987438202],[0.02903803437948227,0.022929957136511803],[0.01139865443110466,-0.04954936355352402]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.060840681195259094,0.18404042720794678,0.7037208676338196],"rotation":[-0.008065802976489067,0.8440908193588257,-0.001182028790935874,0.5361382961273193],"used":true,"bodyHandle":6.5e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.09932103753089905,0.03434814512729645],[-0.0946722999215126,-0.12534199655056],[-0.12514230608940125,-0.17405027151107788],[-0.12872175872325897,0.15512512624263763],[-0.03308691084384918,-0.08042280375957489],[0.15553617477416992,0.27329108119010925],[0.25536003708839417,0.24489769339561462],[0.14779764413833618,0.171172633767128],[-0.054104141891002655,-0.02941909059882164],[-0.012993848882615566,-0.11833761632442474]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00003608630504459143,0.18507042527198792,0.739188551902771],"rotation":[0.00021133155678398907,-0.7394545674324036,-0.006072669290006161,-0.673179030418396],"used":true,"bodyHandle":6.57e-322,"linearSpeed":0,"angularVelocityHistory":[[0.019045783206820488,0.016100885346531868],[0.08509109914302826,0.06845421344041824],[0.014808855950832367,0.18574675917625427],[0.03020893968641758,0.07970954477787018],[0.16488616168498993,0.11440790444612503],[0.09952604025602341,0.3248995840549469],[-0.05996113270521164,-0.06794851273298264],[-0.03411956503987312,-0.0841856449842453],[-0.039259325712919235,-0.3447958528995514],[-0.06423739343881607,-0.07334322482347488]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0596664622426033,0.18289703130722046,0.7037891745567322],"rotation":[-0.0018187102396041155,-0.20696929097175598,-0.011941193602979183,-0.9782727956771851],"used":true,"bodyHandle":6.6e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.07064821571111679,0.08531881868839264],[-0.17499247193336487,-0.02852737531065941],[-0.03163409233093262,0.010411557741463184],[-0.08130715042352676,0.13890644907951355],[0.0566161647439003,-0.023256031796336174],[-0.05414426326751709,-0.01709878258407116],[-0.16142746806144714,-0.045082952827215195],[0.059229958802461624,0.0694708377122879],[-0.09955216199159622,-0.06327974051237106],[-0.03521105647087097,0.21152298152446747]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.21411162614822388,0.25327590107917786,0.1205192357301712],"rotation":[-0.0015854628290981054,-0.35975298285484314,0.00318781565874815,-0.9330407977104187],"used":true,"bodyHandle":6.67e-322,"linearSpeed":0.002931596938349906,"angularVelocityHistory":[[-0.028021691367030144,-0.007377941161394119],[-0.0004711298388428986,0.0027891139034181833],[0.001989206997677684,0.0013748116325587034],[-0.0013551849406212568,0.0021508929785341024],[-0.0015589551767334342,0.004259069915860891],[0.0009658384951762855,-0.0009297860087826848],[-0.0021355387289077044,0.004886625334620476],[0.00008716581942280754,0.011048137210309505],[-0.005201780702918768,0.007863916456699371],[-0.0031039630994200706,0.0027131959795951843],[-0.0008631653618067503,-0.0006916855927556753]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.10628630965948105,0.25307491421699524,0.073309026658535],"rotation":[-0.0033165726345032454,0.7129091620445251,0.004742643795907497,-0.7012324929237366],"used":true,"bodyHandle":6.7e-322,"linearSpeed":0.0031351967195367486,"angularVelocityHistory":[[0.0033518332056701183,0.0013925610110163689],[0.005325661040842533,-0.0024519776925444603],[-0.0015425055753439665,0.0004848443786613643],[0.000931625603698194,0.006734545808285475],[0.08316487073898315,0.026694009080529213],[0.30170461535453796,0.026899129152297974],[0.02110307104885578,0.017576610669493675],[0.07082206755876541,0.12066090852022171],[0.019370535388588905,-0.00247071566991508],[0.01337406225502491,0.005678229033946991],[0.010635961778461933,0.004761002957820892]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.15414881706237793,0.19329585134983063,0.2098863571882248],"rotation":[-0.0037368391640484333,-0.5162861347198486,-0.0017512560589239001,0.8564062118530273],"used":true,"bodyHandle":6.77e-322,"linearSpeed":1.660092290616437e-8,"angularVelocityHistory":[[0.008045372553169727,-0.0014575414825230837],[-0.008764402940869331,0.0019512237049639225],[0.012086993083357811,0.00026083437842316926],[0.019776945933699608,-0.005546183325350285],[-0.019548319280147552,0.0056296456605196],[-0.023989016190171242,-0.00659112399443984],[0.0031953987199813128,-0.0020144267473369837],[0.002688258420675993,0.0009506144560873508],[-0.020488619804382324,0.006680195219814777],[-0.0070180525071918964,-0.0015947283245623112],[-0.015324299223721027,-0.0000037402564885269385]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.24970310926437378,0.18011052906513214,0.3965276777744293],"rotation":[-0.001983202062547207,-0.1211683452129364,-0.0011614811373874545,0.99262934923172],"used":true,"bodyHandle":6.8e-322,"linearSpeed":2.9279676546896594e-8,"angularVelocityHistory":[[0.00001046987745212391,-0.000011733299288607668],[0.000010516635484236758,-0.00001180796061817091],[0.000010496148206584621,-0.000011794390957220457],[0.000010410599315946456,-0.000011682702279358637],[0.000010403531632618979,-0.00001177247759187594],[0.000010443793144077063,-0.000011849637303384952],[0.000010519373063289095,-0.000011827720300061628],[0.000010481915523996577,-0.000011859000551339705],[0.000010445311090734322,-0.00001188120040751528],[0.000010496172762941569,-0.000011818679013231304],[0.000010369586561864708,-0.000011760184861486778]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[0.06689855456352234,0.17992940545082092,0.4316757619380951],"rotation":[0.001257914351299405,0.7488860487937927,0.00598708214238286,0.6626705527305603],"used":true,"bodyHandle":6.87e-322,"linearSpeed":1.8434191732032078e-8,"angularVelocityHistory":[[-0.004096378572285175,0.0000617489276919514],[-0.0005783303640782833,0.002528943819925189],[-0.001145138405263424,-0.00010633633064571768],[-0.0021974642295390368,0.0019653423223644495],[-0.0033699232153594494,-0.0006240340298973024],[0.0017540138214826584,0.0013223713031038642],[0.0007746088085696101,0.004425321239978075],[-0.003703155554831028,-0.005043854936957359],[-0.0018015869427472353,-0.004707726649940014],[-0.0021964593324810266,-0.00039698800537735224],[-0.0038667661137878895,-0.002190801315009594]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.044511277228593826,0.18741323053836823,0.22268329560756683],"rotation":[0.9491983652114868,-0.023378761485219002,0.3138086199760437,-0.000004864796665060567],"used":true,"bodyHandle":6.9e-322,"linearSpeed":2.6888197432671443e-8,"angularVelocityHistory":[[0.016649216413497925,0.0033736841287463903],[0.013374186120927334,0.0071038794703781605],[0.013408171012997627,0.0027210344560444355],[-0.14578917622566223,-0.03196857124567032],[-0.06142168492078781,0.010209695436060429],[-0.07850068062543869,0.007970013655722141],[-0.06820216029882431,-0.0005568724009208381],[-0.05611434951424599,-0.0004513550957199186],[-0.041031356900930405,0.0031655661296099424],[-0.025338483974337578,-0.001513396156951785],[-0.038893382996320724,-0.0015366945881396532]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.5656285881996155,0.17461538314819336,0.8246378898620605],"rotation":[0.0016145433764904737,-0.51491779088974,0.0014611391816288233,0.8572368025779724],"used":true,"bodyHandle":6.97e-322,"linearSpeed":7.231724025278082e-8,"angularVelocityHistory":[[0.000005003419119020691,-0.00000894502409209963],[2.0696562330613233e-7,-0.000005106579919811338],[-0.0000033709820854710415,0.0000012525321153589175],[0.000004791226274392102,-0.000001183519088954199],[0.000004428268312040018,0.0000022648839603789384],[0.000010233469765807968,0.00001691368561296258],[0.000003586137154343305,-0.0000022641740997642046],[0.000005638407401420409,0.000008038718078751117],[0.000003841884335997747,3.862012647459778e-7],[0.0000027044882244808832,4.60558879922246e-7],[0.0000022621454718319,-7.508550083912269e-7]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.6232900023460388,0.1747465580701828,0.8120828866958618],"rotation":[0.0016258734976872802,-0.7665191292762756,0.0006169758271425962,0.642219066619873],"used":true,"bodyHandle":7e-322,"linearSpeed":3.072183199120717e-11,"angularVelocityHistory":[[0.0000075642260526365135,-0.00001603655982762575],[-5.206093192100525e-7,0.0000037815582345501753],[0.0000016662249890941894,0.00002108565422531683],[-2.211159539911023e-7,0.000003821008249360602],[0.000002332762051082682,0.0000013320263860805426],[-0.0000015587487496304675,0.000017103098798543215],[-7.955258070069249e-7,0.00000546976252735476],[1.8547511615452095e-7,0.000012778990821971092],[7.2200731437988e-7,0.00000378343816009874],[5.223332095738442e-7,0.000003978502263635164],[1.045947470856845e-7,0.000003208379439456621]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.058698009699583054,0.18678134679794312,0.6364746689796448],"rotation":[0.004184284713119268,0.23396353423595428,-0.00759477773681283,-0.9722066521644592],"used":true,"bodyHandle":7.07e-322,"linearSpeed":0,"angularVelocityHistory":[[0.11483985930681229,-0.02771095372736454],[-0.038466811180114746,0.04012618586421013],[0.22550158202648163,-0.23349139094352722],[0.21230271458625793,0.07245758920907974],[0.13648948073387146,0.002614881843328476],[0.003059091279283166,0.061860132962465286],[-0.21141037344932556,-0.3069983124732971],[-0.12726250290870667,-0.1554865837097168],[-0.1353054791688919,-0.05870281532406807],[-0.13379989564418793,0.13249002397060394]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.586815357208252,0.18034619092941284,0.34081795811653137],"rotation":[-0.00045076277456246316,-0.17626218497753143,0.001350587815977633,0.9843421578407288],"used":true,"bodyHandle":7.1e-322,"linearSpeed":2.4280541764222212e-8,"angularVelocityHistory":[[-0.00023016351042315364,0.00039129203651100397],[0.00034004420740529895,-0.00016817070718389004],[0.00010275842942064628,0.00044752596295438707],[-0.00021622635540552437,-0.00001984214031836018],[0.00006227670382941142,-0.00000858098064782098],[-0.000014489422937913332,0.0006235865294001997],[0.0002962873550131917,-0.00024097415735013783],[-0.0010204112622886896,0.00019413915288168937],[-0.0008868716540746391,-0.0015173619613051414],[-0.003769505303353071,-0.0005917251110076904],[0.0003608197148423642,0.0001618199748918414]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[-0.0015747329453006387,0.18425032496452332,0.6685218811035156],"rotation":[-0.00016552546003367752,-0.9163490533828735,-0.01371857151389122,-0.40014511346817017],"used":true,"bodyHandle":7.16e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.0741366371512413,0.025462795048952103],[0.17384639382362366,-0.11771681159734726],[0.252856969833374,-0.05089344456791878],[-0.03161932900547981,-0.18086481094360352],[-0.1292925328016281,0.1839522272348404],[-0.01568649895489216,0.5303800702095032],[0.08687196671962738,0.09994689375162125],[-0.06524177640676498,-0.05150008946657181],[0.08076547831296921,0.09771110117435455],[0.03886111080646515,-0.06896059960126877]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0004013009602203965,0.18565864861011505,0.5990221500396729],"rotation":[0.0025565277319401503,0.4887959957122803,0.004241339862346649,-0.8723841309547424],"used":true,"bodyHandle":7.2e-322,"linearSpeed":0,"angularVelocityHistory":[[0.212065652012825,0.2307642251253128],[0.09760075807571411,-0.03357527777552605],[0.06613630801439285,-0.04455775022506714],[0.2538122534751892,0.0585254468023777],[-0.3107059597969055,-0.04864082485437393],[0.7728651762008667,0.5457066297531128],[0.06633631885051727,-0.04633009433746338],[0.029478194192051888,-0.0992598831653595],[-0.19383753836154938,-0.04342213645577431],[-0.10633455961942673,0.033421047031879425]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.059197552502155304,0.18500502407550812,0.6367371082305908],"rotation":[0.012013901025056839,0.054496634751558304,-0.0018194003496319056,-0.9984400272369385],"used":true,"bodyHandle":7.26e-322,"linearSpeed":0,"angularVelocityHistory":[[0.08425647020339966,0.03662008047103882],[-0.019955048337578773,0.09245350956916809],[0.19639572501182556,-0.16703811287879944],[0.17459547519683838,0.06359550356864929],[0.07086905837059021,0.18405230343341827],[0.0169287770986557,-0.015564369037747383],[-0.33597832918167114,0.2637534439563751],[-0.2969511151313782,-0.08179847151041031],[-0.17184989154338837,-0.018484201282262802],[-0.06281258910894394,0.0547514371573925]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05853583291172981,0.1873789131641388,0.7037688493728638],"rotation":[-0.011079303920269012,-0.45069682598114014,-0.010552791878581047,-0.8925459384918213],"used":true,"bodyHandle":7.3e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.07978330552577972,0.05509734898805618],[-0.1747884601354599,-0.09436904639005661],[-0.045594874769449234,0.030118416994810104],[-0.13425178825855255,0.20632751286029816],[0.01494026929140091,0.077308788895607],[0.03588423505425453,0.07370967417955399],[-0.05823475122451782,-0.02210414409637451],[0.2249787300825119,0.20950596034526825],[-0.07910070568323135,-0.06819498538970947],[-0.03281596302986145,0.20882754027843475]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00033906474709510803,0.183313250541687,0.7400001883506775],"rotation":[-0.00018529914086684585,-0.7692472338676453,-0.006815698463469744,-0.6389148831367493],"used":true,"bodyHandle":7.36e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.03785735368728638,-0.0650472342967987],[0.014692614786326885,0.0471947081387043],[-0.03457331657409668,0.2056380957365036],[-0.04206344112753868,0.14410866796970367],[0.1503845751285553,0.15483218431472778],[-0.029331820085644722,0.2527960538864136],[-0.11668423563241959,-0.06568560004234314],[-0.019792405888438225,-0.06488756835460663],[0.05665016546845436,-0.2805955111980438],[-0.07673057913780212,-0.10248758643865585]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06051768735051155,0.18539826571941376,0.7052875757217407],"rotation":[-0.007329100742936134,0.6967011094093323,-0.0018786927685141563,0.7173216342926025],"used":true,"bodyHandle":7.4e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.10293661057949066,-0.037610605359077454],[-0.07159502804279327,-0.176120325922966],[-0.1494249850511551,-0.015452893450856209],[-0.1232130229473114,0.12227488309144974],[0.02012672647833824,-0.1547899842262268],[0.12668922543525696,0.2489267885684967],[0.15852954983711243,0.2127460092306137],[0.037571460008621216,0.13081960380077362],[-0.052848927676677704,-0.0634516030550003],[-0.06440875679254532,-0.10920567065477371]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05864113196730614,0.1822775900363922,0.6367056965827942],"rotation":[0.006353125441819429,0.0352802649140358,0.0009505420457571745,0.9993568062782288],"used":true,"bodyHandle":7.46e-322,"linearSpeed":0,"angularVelocityHistory":[[0.32943034172058105,-0.008721559308469296],[-0.1411421298980713,0.10481914132833481],[-0.15036189556121826,-0.26359671354293823],[-0.15428051352500916,-0.14732182025909424],[-0.04104326292872429,0.06555215269327164],[0.14212746918201447,-0.3308202922344208],[0.014098036102950573,-0.07089082151651382],[0.12843680381774902,0.03139028325676918],[0.026059677824378014,0.059220533818006516],[0.0503227598965168,-0.032073404639959335]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.001029924489557743,0.18821226060390472,0.6724725365638733],"rotation":[0.005164310336112976,-0.2662474811077118,-0.0075566936284303665,0.9638612270355225],"used":true,"bodyHandle":7.5e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.14699408411979675,0.06261682510375977],[0.08322605490684509,-0.14159584045410156],[0.19611310958862305,-0.08974862843751907],[0.12194517254829407,-0.21811538934707642],[-0.08715701848268509,0.21052394807338715],[0.0789131447672844,0.6317291855812073],[0.23751996457576752,0.12935854494571686],[-0.16266722977161407,-0.24074198305606842],[0.09366782754659653,0.06585634499788284],[-0.09879491478204727,-0.1813320368528366]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00038353755371645093,0.1882634460926056,0.6022611856460571],"rotation":[-0.013397187925875187,-0.6615815758705139,-0.006704736966639757,0.749723494052887],"used":true,"bodyHandle":7.56e-322,"linearSpeed":0,"angularVelocityHistory":[[0.16662529110908508,0.16929224133491516],[0.08799435198307037,-0.04117327183485031],[0.024954797700047493,-0.0364634171128273],[0.1685429811477661,0.061554986983537674],[-0.3828985095024109,-0.06511913985013962],[0.42408719658851624,0.03226446732878685],[0.09209228307008743,-0.055721066892147064],[0.17906486988067627,0.07428941130638123],[-0.14214596152305603,-0.015748845413327217],[-0.008038287051022053,-0.12829279899597168]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5355427861213684,0.1739889234304428,0.7189412713050842],"rotation":[-0.014997023157775402,0.38782134652137756,0.0005165585316717625,-0.9216123223304749],"used":true,"bodyHandle":7.6e-322,"linearSpeed":8.846024619661016e-17,"angularVelocityHistory":[[0.000009778706953511573,0.0000026391016945126466],[0.00003022659984708298,-0.000006145623956399504],[0.000018981832909048535,0.0000042872829908446874],[-0.000006900442713231314,0.0000019893282114935573],[0.0000027200021577300504,0.0000035583323096943786],[-0.0000014724156471856986,-0.0000012753716873703524],[-0.000003908653525286354,0.0000013305780157679692],[-0.000001074474766937783,4.645274884751416e-7],[-0.000001146371573668148,-0.0000010682674655981828],[0.0000037273619000188773,-0.0000020629181562981103],[-0.0000027376422622182872,0.0000019110784705844708]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.0603247806429863,0.18630577623844147,0.6351354718208313],"rotation":[-0.006913515739142895,-0.8571039438247681,-0.003366138320416212,0.5150860548019409],"used":true,"bodyHandle":7.66e-322,"linearSpeed":0,"angularVelocityHistory":[[0.3136402368545532,0.010899459011852741],[-0.10576560348272324,0.15828841924667358],[-0.1511000245809555,-0.09268742054700851],[-0.13869506120681763,-0.18221040070056915],[-0.09472725540399551,0.11471397429704666],[0.18975453078746796,-0.3460005223751068],[0.06405002623796463,-0.04833218827843666],[0.2407975047826767,-0.055401772260665894],[0.108607217669487,-0.05846830829977989],[-0.019664455205202103,-0.08179376274347305]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05888156220316887,0.19087930023670197,0.7036594152450562],"rotation":[-0.0028250052127987146,-0.027057860046625137,0.0038052001036703587,0.9996225833892822],"used":true,"bodyHandle":7.7e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.24804627895355225,-0.009004754945635796],[-0.21273860335350037,-0.13205119967460632],[-0.11644057929515839,-0.16307634115219116],[-0.09194479137659073,0.05832187086343765],[0.026208939030766487,0.015022304840385914],[0.02916911616921425,0.08888343721628189],[0.2663719654083252,0.08812342584133148],[0.016488926485180855,0.1375107765197754],[-0.10364308953285217,0.08046708256006241],[-0.056513335555791855,-0.11368897557258606]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.000012888252967968583,0.19065266847610474,0.7366944551467896],"rotation":[0.002084793522953987,-0.999951958656311,0.005054488778114319,-0.008134240284562111],"used":true,"bodyHandle":7.76e-322,"linearSpeed":0,"angularVelocityHistory":[[0.09434423595666885,-0.00015291484305635095],[0.06744509190320969,0.008407817222177982],[0.03701237589120865,0.14661256968975067],[0.08493505418300629,0.062359556555747986],[0.23132647573947906,-0.1506645530462265],[0.17378459870815277,0.16221179068088531],[0.0005665437784045935,0.0550781786441803],[-0.01568889431655407,-0.02079121395945549],[-0.016253137961030006,-0.24399539828300476],[-0.1272926926612854,-0.056343767791986465]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.060954928398132324,0.1850138157606125,0.7059736251831055],"rotation":[-0.012063205242156982,-0.29838234186172485,-0.0015434493543580174,-0.9543689489364624],"used":true,"bodyHandle":7.8e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.06776612997055054,0.0819535031914711],[-0.096876360476017,0.0023388017434626818],[-0.005949359852820635,0.019666727632284164],[-0.10598358511924744,0.08170505613088608],[0.04421091824769974,0.011402535252273083],[-0.03836760297417641,-0.040635768324136734],[-0.2622491717338562,-0.033474043011665344],[-0.14814241230487823,0.22349508106708527],[-0.09327393025159836,0.009075669571757317],[0.002999036805704236,0.01265318039804697]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06095217168331146,0.18830111622810364,0.6343328356742859],"rotation":[0.01905062235891819,0.052347972989082336,-0.013312878087162971,-0.998358428478241],"used":true,"bodyHandle":7.86e-322,"linearSpeed":0,"angularVelocityHistory":[[0.11315491795539856,-0.016066379845142365],[0.07104068994522095,0.07168304175138474],[0.2633773982524872,-0.12422934919595718],[0.053663428872823715,0.09182797372341156],[0.06107497587800026,0.13583695888519287],[-0.13611410558223724,-0.126795694231987],[-0.45669233798980713,0.09280923753976822],[-0.2607961893081665,0.042123619467020035],[-0.1603124439716339,0.00878053717315197],[0.11800336092710495,0.06656471639871597]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.001928574638441205,0.18694248795509338,0.6725265383720398],"rotation":[0.013707633130252361,0.24424579739570618,0.003432314144447446,-0.9696103930473328],"used":true,"bodyHandle":7.9e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.13863743841648102,0.11035288870334625],[0.11629247665405273,-0.12770575284957886],[0.22393782436847687,-0.0904204249382019],[0.02965785749256611,-0.130955770611763],[-0.0810849517583847,0.19470588862895966],[0.12629695236682892,0.5755183100700378],[0.13133326172828674,0.09626404196023941],[-0.1165987029671669,-0.1343260407447815],[0.12179797887802124,0.09970973432064056],[-0.015209641307592392,-0.1601957529783249]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5493071675300598,0.17720548808574677,0.7481116652488708],"rotation":[0.9912859797477722,0.008058130741119385,0.12612411379814148,-0.03714735433459282],"used":true,"bodyHandle":7.95e-322,"linearSpeed":1.2802389151733746e-13,"angularVelocityHistory":[[-0.0000019082513063040096,0.0001268644555239007],[0.00002281607339682523,-0.00017234988627023995],[-0.000016901760318432935,0.000040687733417144045],[-0.00002838616637745872,-0.00004474323941394687],[0.000011595288924581837,0.00007935176836326718],[-0.000015909248759271577,-0.00002710704575292766],[3.4055167930091557e-7,-0.00004704016464529559],[8.503964643580275e-9,-0.000008627046554465778],[-0.000009551472430757713,-0.0000053137459872232284],[-0.000005018725005356828,-0.000011583540072024334],[0.0000059576409512374084,-0.00002966630199807696]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.00009526044595986605,0.18957561254501343,0.598686695098877],"rotation":[0.009349699132144451,0.8143907785415649,-0.00508933374658227,-0.5802191495895386],"used":true,"bodyHandle":8e-322,"linearSpeed":0,"angularVelocityHistory":[[0.1490161269903183,0.20937295258045197],[0.1455000638961792,-0.07663287967443466],[0.10783406347036362,0.016747133806347847],[0.3130505084991455,0.1050354614853859],[-0.34791094064712524,-0.0553278885781765],[0.6029478907585144,0.3194062113761902],[0.16195692121982574,-0.04808743670582771],[0.07034862041473389,-0.050091758370399475],[-0.27506041526794434,-0.06022511422634125],[0.08341943472623825,-0.19550977647304535]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.48748770356178284,0.17412739992141724,0.8343018889427185],"rotation":[0.9996867775917053,-0.0049314601346850395,-0.019246604293584824,-0.015214161947369576],"used":true,"bodyHandle":8.05e-322,"linearSpeed":5.316439359147059e-16,"angularVelocityHistory":[[-0.0000823520531412214,-0.00005202939428272657],[0.00010371469397796318,0.00008343689842149615],[0.000005027804490964627,0.000002871303877327591],[0.000002507493263692595,0.000019775037799263373],[-0.000018336993889533915,-0.00001787756264093332],[-0.000013963003766548354,-0.0000018724231267697178],[0.000029200135031715035,0.000007549468136858195],[-0.000005250287358649075,0.0000018198195448348997],[-0.000020359882910270244,-0.000017234589904546738],[0.0000680622979416512,0.000034003132896032184],[0.000043353764340281487,0.000019088165572611615]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.05852673947811127,0.19144949316978455,0.6366388201713562],"rotation":[-0.001732819713652134,0.9642813801765442,-0.011064332909882069,-0.2646428644657135],"used":true,"bodyHandle":8.1e-322,"linearSpeed":0,"angularVelocityHistory":[[0.08581704646348953,0.027990901842713356],[0.054097775369882584,0.0993645191192627],[0.19487743079662323,-0.19265925884246826],[0.008383593522012234,0.1366114765405655],[0.05305220186710358,0.13350506126880646],[-0.2031714767217636,-0.24658210575580597],[-0.4239082336425781,0.18994979560375214],[0.026913655921816826,0.13792778551578522],[-0.013848741538822651,0.0874909982085228],[0.011043030768632889,0.013273859396576881]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05887412279844284,0.1899981051683426,0.7039903998374939],"rotation":[0.005827086977660656,-0.7052860856056213,-0.008503742516040802,-0.7088477611541748],"used":true,"bodyHandle":8.15e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.06124494597315788,0.08904549479484558],[-0.1437186896800995,-0.08763272315263748],[-0.04746060445904732,0.04995427653193474],[-0.038583576679229736,0.2641263008117676],[-0.018222184851765633,0.08151742070913315],[0.0370364673435688,0.0179713387042284],[-0.08417576551437378,-0.040809791535139084],[0.1853606402873993,0.13819926977157593],[-0.043429482728242874,0.12589532136917114],[0.1050482913851738,0.23580116033554077]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.000005376932676881552,0.18679481744766235,0.7367932200431824],"rotation":[0.003709143027663231,-0.9981922507286072,0.000652318587526679,-0.05998428165912628],"used":true,"bodyHandle":8.2e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.009817156940698624,0.039995137602090836],[0.039829470217227936,0.031148530542850494],[-0.049524594098329544,0.1647815853357315],[0.13409394025802612,0.06238353252410889],[0.2100231945514679,0.2016196846961975],[-0.006791348569095135,0.3285001516342163],[-0.10887270420789719,-0.012356726452708244],[-0.008258776739239693,-0.08952745050191879],[0.1049603670835495,-0.21176166832447052],[-0.010753138922154903,-0.03721793368458748]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.061574384570121765,0.1871209442615509,0.7054653763771057],"rotation":[-0.015108495950698853,0.4180448055267334,0.01194029115140438,0.9082223176956177],"used":true,"bodyHandle":8.25e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.20127207040786743,-0.01318330131471157],[-0.16720889508724213,-0.11094410717487335],[-0.14200441539287567,-0.12523412704467773],[-0.10507650673389435,0.09113899618387222],[0.01974143274128437,0.013173753395676613],[0.22638039290905,0.30452316999435425],[0.14649105072021484,0.2205672711133957],[0.03262504190206528,0.1277565360069275],[-0.07762738317251205,-0.02179761230945587],[-0.08194313943386078,-0.10962386429309845]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4879966378211975,0.17441308498382568,0.7648521661758423],"rotation":[-0.0947796180844307,0.0030089705251157284,-0.9954929947853088,-0.0011777897598221898],"used":true,"bodyHandle":8.3e-322,"linearSpeed":7.849934731682617e-14,"angularVelocityHistory":[[-0.000711808621417731,0.0002294323203386739],[0.000911340001039207,-0.0004016574821434915],[-0.000016314088497892953,0.00013521475193556398],[0.00017335478332825005,-0.00012150064867455512],[-0.0002219049201812595,0.00005669620441040024],[-0.00002820584995788522,-0.0000029266532237670617],[0.0001171847980003804,-0.00008746837556827813],[-0.00004000159242423251,0.0000025868318971333792],[-0.00022590994194615632,0.00005955067172180861],[0.0003899342264048755,-0.00010236474918201566],[0.00018725924019236118,-0.0000533664169779513]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.5860878229141235,0.17463593184947968,0.34122341871261597],"rotation":[-0.0011095944792032242,0.8389672636985779,0.000541935907676816,0.5441803932189941],"used":true,"bodyHandle":8.35e-322,"linearSpeed":2.3959861423970215e-8,"angularVelocityHistory":[[-0.00018504699983168393,0.00010549595026532188],[-0.0007812830153852701,-0.000002468434104230255],[-0.0016241698758676648,0.000028579723220900632],[0.0007971387240104377,-0.000057611821830505505],[-0.0004020134510938078,-0.0003822907747235149],[-0.00019224954303354025,-0.0000054269921747618355],[-0.001909268437884748,0.0002086137974401936],[0.0037672598846256733,0.0001587797305546701],[0.0025913813151419163,0.00019824974879156798],[0.0029348162934184074,-0.00028041470795869827],[-0.0029844038654118776,0.00010817001748364419]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.4766656458377838,0.17391012609004974,0.581451952457428],"rotation":[-0.6388466954231262,-0.0015648906119167805,0.7693322896957397,0.0004206486919429153],"used":true,"bodyHandle":8.4e-322,"linearSpeed":2.4405766195659813e-10,"angularVelocityHistory":[[0.0000836128238006495,-0.000019009630705113523],[-0.00007131100574042648,0.00005962181239738129],[0.00001870468804554548,-0.00007725393516011536],[0.000011483454727567732,-0.000166896206792444],[-0.00003617538823164068,0.00019491754937916994],[-0.000027103696993435733,0.00002718153155001346],[0.000014682022083434276,-0.0000020786137611139566],[-0.00009279251389671117,-0.000002559417680458864],[-0.00003087753793806769,0.0002718524483498186],[0.00016367880743928254,-0.00021549769735429436],[-0.00004639499820768833,-0.00024400460824836046]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[0.05892573669552803,0.18938066065311432,0.6362180113792419],"rotation":[-0.00013154746557120234,-0.3877740800380707,-0.013006657361984253,0.9216626286506653],"used":true,"bodyHandle":8.45e-322,"linearSpeed":0,"angularVelocityHistory":[[0.37312471866607666,-0.12877027690410614],[-0.10188432782888412,0.040461521595716476],[-0.11935655772686005,-0.1296120584011078],[-0.14548560976982117,-0.1694834977388382],[-0.04494316130876541,0.10130290687084198],[0.10693803429603577,-0.37711334228515625],[0.07343722134828568,-0.03645054250955582],[0.27835237979888916,-0.07484453171491623],[0.05246999114751816,0.0018370577599853277],[0.005066532175987959,-0.11690852791070938]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.000042664309148676693,0.18996736407279968,0.6672203540802002],"rotation":[-0.001142776687629521,-0.6640483140945435,0.0002484891447238624,0.7476887106895447],"used":true,"bodyHandle":8.5e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.14333128929138184,0.061953622847795486],[0.15607793629169464,-0.09153702855110168],[0.3448377549648285,-0.02451682649552822],[0.04260365664958954,-0.21973051130771637],[-0.2816563844680786,0.08553827553987503],[0.019650034606456757,0.63819819688797],[0.2599608898162842,0.021867256611585617],[-0.2058994024991989,-0.22079306840896606],[0.06172756478190422,0.09834636747837067],[-0.12153193354606628,-0.16083398461341858]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00004825959331355989,0.19108635187149048,0.6016552448272705],"rotation":[0.01249402854591608,0.18355713784694672,-0.004889779724180698,0.9829174280166626],"used":true,"bodyHandle":8.55e-322,"linearSpeed":0,"angularVelocityHistory":[[0.24803951382637024,0.10315489023923874],[0.10116970539093018,-0.06870638579130173],[0.08680319041013718,-0.050532761961221695],[0.30165690183639526,0.034260597079992294],[-0.37164196372032166,-0.02836420387029648],[0.8651815056800842,0.32611122727394104],[0.13337823748588562,-0.07069902122020721],[0.029812781140208244,-0.09788193553686142],[-0.3731602132320404,-0.10081545263528824],[-0.09838347882032394,-0.01560552604496479]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4878520667552948,0.17424429953098297,0.6449606418609619],"rotation":[0.0034091954585164785,-0.2799749970436096,0.003081780392676592,0.9599962830543518],"used":true,"bodyHandle":8.6e-322,"linearSpeed":9.870027099380664e-10,"angularVelocityHistory":[[-0.00005682160553988069,-0.000035655069950735196],[-0.00009250305447494611,-0.00009418495756108314],[-0.00013485834642779082,-0.00009594759467290714],[-0.0000349608417309355,-0.0001784040650818497],[0.000029296264983713627,-0.00008433283801423386],[-0.00005955076267127879,-0.00015413925575558096],[-0.0000770930273574777,-0.00010125802509719506],[0.00002830946323229,-0.00008297534805024043],[0.0000017343741092190612,-0.00018973101396113634],[-0.00009479999425821006,-0.00008808978600427508],[0.0000054824299695610534,0.00012887339107692242]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05877451226115227,0.19293421506881714,0.6368908882141113],"rotation":[0.003173693548887968,-0.08752492815256119,-0.007767307106405497,0.9961269497871399],"used":true,"bodyHandle":8.65e-322,"linearSpeed":0,"angularVelocityHistory":[[0.26543283462524414,-0.14315639436244965],[0.036414384841918945,0.034388620406389236],[-0.24608580768108368,-0.06560679525136948],[-0.06602934747934341,-0.2837808132171631],[-0.05174839496612549,0.09292713552713394],[0.14575926959514618,-0.12715978920459747],[0.11389997601509094,-0.10459960997104645],[0.28812554478645325,-0.07544487714767456],[0.1308382749557495,-0.13052819669246674],[-0.012169851921498775,-0.20673634111881256]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.058784060180187225,0.18945637345314026,0.701543927192688],"rotation":[-0.0021593233104795218,0.15406186878681183,0.007555819116532803,0.988029956817627],"used":true,"bodyHandle":8.7e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.19987531006336212,0.031293246895074844],[-0.03801020607352257,-0.11732552200555801],[-0.14971402287483215,-0.1374145746231079],[-0.14736692607402802,0.11130273342132568],[0.002128897001966834,-0.18790271878242493],[-0.05439421162009239,0.264071524143219],[0.18742960691452026,0.21592390537261963],[0.10748142004013062,0.16371957957744598],[0.022410564124584198,0.022467579692602158],[-0.06852103769779205,-0.13259848952293396]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00012149826216045767,0.1926836520433426,0.7385168671607971],"rotation":[-0.017890414223074913,-0.8093578219413757,-0.008331303484737873,-0.5869841575622559],"used":true,"bodyHandle":8.74e-322,"linearSpeed":0,"angularVelocityHistory":[[0.13287894427776337,-0.05329795554280281],[0.20048339664936066,0.21877159178256989],[-0.012414170429110527,0.17644038796424866],[-0.0319666862487793,0.10932748764753342],[0.25223487615585327,0.033034056425094604],[0.13174061477184296,0.13182096183300018],[0.04881524294614792,-0.003755487035959959],[-0.02818763442337513,-0.01413944736123085],[0.0009552073897793889,-0.3711321949958801],[-0.09985463321208954,-0.10235859453678131]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06205182895064354,0.18901678919792175,0.7047731280326843],"rotation":[0.0016778577119112015,-0.46053820848464966,-0.004516827408224344,-0.8876267671585083],"used":true,"bodyHandle":8.8e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.08529434353113174,0.02696855738759041],[-0.08213257044553757,-0.14435602724552155],[-0.08369077742099762,0.0358625091612339],[-0.06014623865485191,0.1586628258228302],[0.031699638813734055,0.0385432243347168],[-0.0795184001326561,0.07099006325006485],[-0.11176550388336182,-0.04156894236803055],[0.19347980618476868,0.08130898326635361],[-0.1080123782157898,0.06853543221950531],[0.09509690850973129,0.15520252287387848]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06024633347988129,0.19103586673736572,0.6359376907348633],"rotation":[-0.003849428379908204,0.9873354434967041,0.0027836838271468878,-0.15857529640197754],"used":true,"bodyHandle":8.84e-322,"linearSpeed":0,"angularVelocityHistory":[[0.10039111971855164,0.014327403157949448],[0.04807549715042114,0.08016310632228851],[0.2012055516242981,-0.22805511951446533],[0.1702360361814499,0.1133231520652771],[0.050559334456920624,0.13035638630390167],[-0.09751320630311966,-0.06676344573497772],[-0.30404752492904663,0.11436520516872406],[-0.12477946281433105,0.05192279815673828],[-0.007365871220827103,0.12443496286869049],[-0.007849006913602352,-0.047360192984342575]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.002318362472578883,0.1908467561006546,0.6719091534614563],"rotation":[-0.0028230133466422558,-0.0938277617096901,-0.0005908602615818381,-0.99558424949646],"used":true,"bodyHandle":8.9e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.17363807559013367,0.11783663183450699],[0.09790267795324326,0.05269405245780945],[0.24662192165851593,-0.03397371619939804],[-0.09024873375892639,-0.17153549194335938],[-0.030038997530937195,0.28689736127853394],[0.044144582003355026,0.5862823724746704],[0.29911670088768005,0.0091615105047822],[-0.17930075526237488,-0.20537367463111877],[0.12069355696439743,0.03983471542596817],[-0.03820446878671646,-0.1270238757133484]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.46661341190338135,0.18282805383205414,0.7071407437324524],"rotation":[-0.4003835618495941,0.11542621999979019,-0.9089978933334351,0.00962806399911642],"used":true,"bodyHandle":8.94e-322,"linearSpeed":2.977810709835234e-11,"angularVelocityHistory":[[-0.0017581171123310924,0.0019662624690681696],[0.0027419093530625105,-0.0027393370401114225],[-0.0009802713757380843,0.0012452458031475544],[0.00029497360810637474,-0.00015720994269941002],[-0.00009013758244691417,0.000023321559638134204],[0.0001347690704278648,-0.00015379724209196866],[0.00032634270610287786,-0.00022614163754042238],[0.00025469003594480455,-0.0001392136764479801],[0.0000481079587189015,0.000014946709598007146],[0.00022573024034500122,-0.00005746228271164],[0.00020519254030659795,-0.000232900187256746]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.00004573911428451538,0.19457511603832245,0.5996450781822205],"rotation":[0.008145630359649658,-0.4775279760360718,0.01394807081669569,-0.8784680366516113],"used":true,"bodyHandle":9e-322,"linearSpeed":0,"angularVelocityHistory":[[0.18647818267345428,0.0891214907169342],[0.1449839174747467,-0.11880103498697281],[0.03956054151058197,-0.033807460218667984],[0.2514646351337433,0.013869810849428177],[-0.40637850761413574,-0.034195806831121445],[0.47028854489326477,0.521209716796875],[-0.029010865837335587,0.014079642482101917],[0.11531193554401398,-0.07700788229703903],[-0.30346977710723877,-0.08868791162967682],[-0.03762391209602356,-0.05274105444550514]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5198692083358765,0.1803249567747116,0.8114762306213379],"rotation":[-0.008013113401830196,0.3780730068683624,0.006881644483655691,0.9257155060768127],"used":true,"bodyHandle":9.04e-322,"linearSpeed":6.966165826855047e-13,"angularVelocityHistory":[[-0.00020028169092256576,0.00001664314913796261],[0.0003154579899273813,0.000040273345803143457],[0.0000727097867638804,0.00002055457662208937],[-0.00003742655462701805,0.000015414965673699044],[-0.00004548901415546425,-0.00004041635475005023],[-0.000017578600818524137,-0.00000759036129238666],[0.000007949975952215027,-0.0000017906598941408447],[-0.0000032359396300307708,0.000002806970769597683],[0.00007612545596202835,0.000059553934988798574],[0.00013202551053836942,-0.000010168888366024476],[0.00006199372000992298,0.0000036828478187089786]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.5708457827568054,0.18882669508457184,0.7868419289588928],"rotation":[-0.001653128070756793,0.3834541141986847,-0.04721420258283615,-0.9223508238792419],"used":true,"bodyHandle":9.1e-322,"linearSpeed":3.867848575974181e-13,"angularVelocityHistory":[[0.00011504192661959678,0.000052565974328899756],[-0.00007091944280546159,-0.00007482059299945831],[0.00008440954115940258,0.00004064071617904119],[-0.00009008480265038088,-0.000053843985369894654],[0.000005801238785352325,-0.0000032031855425884714],[-0.000012082904504495673,-9.456352927372791e-7],[-0.00002627067078719847,3.3714141522978025e-7],[-0.000010627338269841857,0.0000013758597106061643],[-0.0000015581643992845784,0.000002817693712131586],[-0.000010095156540046446,0.000014239947631722316],[-0.000013154752195987385,-1.5271170639152842e-7]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.5686580538749695,0.1832580715417862,0.7854072451591492],"rotation":[0.2487732172012329,-0.006765879224985838,-0.9674102663993835,0.04672815650701523],"used":true,"bodyHandle":9.14e-322,"linearSpeed":3.4837439956662625e-13,"angularVelocityHistory":[[0.00014160537102725357,0.00007238166290335357],[-0.000005931240139034344,-0.00010140694939764217],[0.00006781815318390727,-7.080540171955363e-7],[-0.0001124319969676435,-0.00005628007056657225],[0.000012024378520436585,0.000020238232536939904],[-0.00001773166331986431,-0.0000018862187971535604],[-0.00003428968193475157,-0.000011483528396638576],[-0.000016739351849537343,0.0000021459943582158303],[-4.214579405470431e-7,0.000013757744454778731],[-0.000009826605491980445,-0.00002062436760752462],[-0.00002623494219733402,-0.0000220668352994835]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.06065485626459122,0.19356569647789001,0.6341456174850464],"rotation":[0.0042115468531847,0.9893307685852051,-0.010641335509717464,-0.14523659646511078],"used":true,"bodyHandle":9.2e-322,"linearSpeed":0,"angularVelocityHistory":[[0.06998185068368912,0.007093219552189112],[0.05636341869831085,0.09304210543632507],[0.21512116491794586,-0.18432530760765076],[0.06880450248718262,0.0539625883102417],[0.06646668910980225,0.10983401536941528],[-0.1720374971628189,-0.2358822226524353],[-0.4637375771999359,0.09289277344942093],[-0.16896024346351624,-0.017217012122273445],[-0.14461182057857513,0.09025819599628448],[-0.16862720251083374,-0.03941210359334946]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06162674352526665,0.19269655644893646,0.7058568596839905],"rotation":[-0.01117341686040163,-0.06803721189498901,-0.007233419455587864,-0.9975939989089966],"used":true,"bodyHandle":9.24e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.03551222383975983,0.0443638451397419],[-0.09268128871917725,-0.10385595262050629],[-0.06012880057096481,0.043839916586875916],[0.039673008024692535,0.26567569375038147],[-0.0644422098994255,0.049682386219501495],[0.07034230977296829,0.06840314716100693],[-0.058714523911476135,-0.03670802339911461],[0.1810927540063858,0.09778328239917755],[-0.09404347836971283,0.08379361778497696],[0.04709405079483986,0.1788996309041977]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0008326045353896916,0.1892038881778717,0.7405612468719482],"rotation":[-0.02100016176700592,-0.9379135966300964,0.017138415947556496,-0.3458081781864166],"used":true,"bodyHandle":9.3e-322,"linearSpeed":0,"angularVelocityHistory":[[0.11813350766897202,-0.01709701679646969],[0.08652638643980026,-0.08209174126386642],[-0.07071605324745178,0.20627959072589874],[0.013547541573643684,0.08283136785030365],[0.2274615466594696,0.17657098174095154],[0.08879482001066208,0.295416921377182],[0.01871773786842823,-0.071917824447155],[0.011919091455638409,-0.0533844418823719],[-0.04324926435947418,-0.3885446786880493],[-0.019552089273929596,-0.013246999122202396]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.060885123908519745,0.195393368601799,0.705550491809845],"rotation":[0.0019352552480995655,-0.1275230199098587,0.009229487739503384,0.991790771484375],"used":true,"bodyHandle":9.34e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.388159841299057,0.0698825865983963],[-0.4399043023586273,-0.16059815883636475],[-0.13265380263328552,-0.1927977353334427],[-0.0662202537059784,-0.03956043720245361],[0.036218658089637756,0.11880482733249664],[-0.004941752180457115,0.1521574705839157],[0.022241877391934395,0.23631708323955536],[0.04558330029249191,0.2667497992515564],[0.022227277979254723,0.03195097669959068],[-0.06635282188653946,-0.13340121507644653]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06125456467270851,0.19018618762493134,0.6346816420555115],"rotation":[0.007860484533011913,0.9996863603591919,0.0031194393523037434,-0.023569446057081223],"used":true,"bodyHandle":9.4e-322,"linearSpeed":0,"angularVelocityHistory":[[0.3489604592323303,-0.08581310510635376],[-0.00021805531287100166,0.05405380576848984],[-0.21839112043380737,-0.0530608668923378],[-0.024142974987626076,-0.22375614941120148],[-0.04319415241479874,0.10833744704723358],[0.16426628828048706,-0.34525832533836365],[0.1108960509300232,-0.1089245155453682],[0.26631495356559753,-0.08570995181798935],[0.1299760490655899,-0.13442862033843994],[0.002658726181834936,-0.11374955624341965]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0032064204569905996,0.19380024075508118,0.6701054573059082],"rotation":[0.009581356309354305,-0.7164742350578308,-0.0010884549701586366,0.6975468397140503],"used":true,"bodyHandle":9.44e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.14227581024169922,0.060081448405981064],[0.07968135923147202,-0.12388738244771957],[0.19780388474464417,-0.0740884318947792],[0.12758322060108185,-0.18686145544052124],[-0.0387103371322155,0.2438891977071762],[0.07677535712718964,0.6100366115570068],[0.15062151849269867,0.14669707417488098],[-0.15272073447704315,-0.26648908853530884],[0.060156647115945816,0.08097262680530548],[-0.13331466913223267,-0.20582357048988342]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5821510553359985,0.17961695790290833,0.5197393894195557],"rotation":[-0.9335712194442749,-0.0024295300245285034,0.35833314061164856,-0.00602091895416379],"used":true,"bodyHandle":9.5e-322,"linearSpeed":2.7198334002263004e-9,"angularVelocityHistory":[[-0.0008811648585833609,-0.0002477433590684086],[-0.00236703734844923,0.00552726536989212],[-0.0038290959782898426,0.004884189926087856],[-0.0016668402822688222,-0.00023860280634835362],[-0.0009268643334507942,0.003723675385117531],[-0.0035688583739101887,0.006906761322170496],[-0.0017341672210022807,0.0009634534362703562],[-0.0029946339782327414,0.001227962551638484],[-0.0011280090548098087,-0.0013016877928748727],[0.0013654077192768455,-0.004680152982473373],[-0.006715970579534769,0.010976330377161503]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0003362965944688767,0.19575674831867218,0.5998235940933228],"rotation":[-0.013076258823275566,0.5622079968452454,-0.013162580318748951,0.8267877101898193],"used":true,"bodyHandle":9.54e-322,"linearSpeed":0,"angularVelocityHistory":[[0.18011994659900665,0.17551176249980927],[0.13785423338413239,-0.10528985410928726],[0.003556285286322236,-0.02264692820608616],[0.19150061905384064,-0.0038891576696187258],[-0.40140601992607117,-0.07314610481262207],[0.4909815192222595,0.1402226835489273],[0.09241155534982681,-0.09757076948881149],[0.015550808049738407,-0.0357954315841198],[-0.20885129272937775,-0.11327169835567474],[-0.22201018035411835,-0.12553539872169495]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05911688506603241,0.19469936192035675,0.6368284821510315],"rotation":[0.0012423633597791195,0.8331220746040344,0.012156142853200436,-0.5529541373252869],"used":true,"bodyHandle":9.6e-322,"linearSpeed":0,"angularVelocityHistory":[[0.21678578853607178,-0.13837772607803345],[0.06114236265420914,0.2504848837852478],[-0.2701025605201721,0.04127879440784454],[-0.07971574366092682,-0.26688146591186523],[-0.0414692722260952,0.10752492398023605],[0.13681815564632416,-0.21031461656093597],[0.11085332930088043,-0.14728662371635437],[0.3162783086299896,-0.07001767307519913],[0.1680413782596588,-0.11828795075416565],[-0.0013222997076809406,-0.0977340117096901]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.5191954374313354,0.1849311888217926,0.5503835082054138],"rotation":[0.0003477841673884541,0.9594510793685913,0.0002812021120917052,0.28187471628189087],"used":true,"bodyHandle":9.63e-322,"linearSpeed":1.4525302303449517e-8,"angularVelocityHistory":[[-0.000042814277549041435,-0.0002051099727395922],[0.000028379377909004688,-0.00029659204301424325],[-0.00004275752871762961,-0.00031997362384572625],[-0.00007741832814645022,-0.00011574243399081752],[-0.0000859713472891599,-0.0004924810491502285],[0.000033235366572625935,-0.00018309097504243255],[-0.00004684871237259358,0.0001299316354561597],[0.000001950098067027284,-0.0004339717561379075],[-0.00004073253512615338,-0.0008690216927789152],[-0.0003129027027171105,0.0009380894480273128],[-0.0005212539108470082,-0.0011807611444965005]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.3237859904766083,0.17441684007644653,0.7422162294387817],"rotation":[-0.0025647070724517107,-0.9710994958877563,-0.0017378254560753703,-0.23865468800067902],"used":true,"bodyHandle":9.7e-322,"linearSpeed":4.0934089564291404e-16,"angularVelocityHistory":[[0.0003389447520021349,0.00005728454561904073],[0.00007927008118713275,0.00003761991683859378],[-0.00003939360613003373,-0.00005932944986852817],[0.0001352423132630065,0.00013779537403024733],[0.00017210211080964655,0.00010095218749484047],[0.000034190477890660986,0.00002155798392777797],[0.0001906606339616701,0.00008475314098177478],[0.000129252890474163,0.00010293376544723287],[-0.00024317130737472326,0.00008986944885691628],[0.00009743750706547871,0.00011561770224943757],[-0.00009540520841255784,-0.00006867305637570098]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0616859532892704,0.19667735695838928,0.7044786214828491],"rotation":[0.004031956661492586,-0.4186309576034546,0.02106979675590992,0.9079030156135559],"used":true,"bodyHandle":9.73e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.3788844048976898,0.11617347598075867],[-0.2415955811738968,-0.039552606642246246],[-0.07648387551307678,-0.17254434525966644],[-0.0724000632762909,-0.008298637345433235],[-0.0481291264295578,-0.08697138726711273],[0.050109997391700745,0.057974930852651596],[-0.05418821796774864,0.2409868985414505],[-0.004097488708794117,0.14451412856578827],[-0.04152099788188934,0.09600871056318283],[-0.11147398501634598,-0.1278882473707199]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00006290600867941976,0.19448059797286987,0.7369625568389893],"rotation":[-0.0010455365991219878,-0.34314054250717163,-0.0013989040162414312,-0.9392824172973633],"used":true,"bodyHandle":9.8e-322,"linearSpeed":0,"angularVelocityHistory":[[0.11146214604377747,0.04452125355601311],[0.07036241143941879,0.01926770806312561],[0.021292762830853462,0.14927208423614502],[0.07211557775735855,0.08066172152757645],[0.21942289173603058,-0.1376228630542755],[0.24464091658592224,0.13460852205753326],[-0.00013803444744553417,0.014411435462534428],[-0.029034892097115517,-0.008663871325552464],[-0.037528447806835175,-0.2615085542201996],[-0.14631551504135132,-0.07140955328941345]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4883260726928711,0.17444035410881042,0.7625975012779236],"rotation":[0.00048563850577920675,0.9184921979904175,-0.008040474727749825,-0.3953569233417511],"used":true,"bodyHandle":9.83e-322,"linearSpeed":2.857649177994399e-9,"angularVelocityHistory":[[0.00006014072278048843,0.00005869632150279358],[-0.00004044894376420416,0.000009310219866165426],[-0.000050991955504287034,-0.000023396396500174887],[0.00006173652946017683,0.00005858274380443618],[-0.000039201611798489466,0.000009821589628700167],[-0.000010171223038923927,-0.00007316036499105394],[0.00006321685941657051,0.00002975046845676843],[-0.00002691979898372665,3.999864759407501e-7],[0.00005160288492334075,-0.00007779860607115552],[0.0000516222498845309,0.00006784342986065894],[-0.00003435829057707451,0.000015337936929427087]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.061980027705430984,0.19706368446350098,0.7063904404640198],"rotation":[-0.007220090366899967,0.9758015871047974,-0.0007256849785335362,-0.21853730082511902],"used":true,"bodyHandle":9.9e-322,"linearSpeed":0,"angularVelocityHistory":[[-0.030916539952158928,-0.09744339436292648],[0.031291261315345764,-0.4164886772632599],[-0.15107223391532898,0.02942200005054474],[0.0443299263715744,0.1568865180015564],[-0.0008863869006745517,0.12671053409576416],[0.047038331627845764,0.1400456726551056],[-0.17480015754699707,-0.008007396012544632],[0.272705078125,0.17446859180927277],[-0.09799990057945251,0.1155015155673027],[-0.0539485402405262,0.30344104766845703]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.058449842035770416,0.19578880071640015,0.6366481184959412],"rotation":[-0.005037318915128708,0.665296196937561,-0.004713370464742184,-0.7465476393699646],"used":true,"bodyHandle":9.93e-322,"linearSpeed":0,"angularVelocityHistory":[[0.14640282094478607,0.021509258076548576],[-0.010959377512335777,0.10111617296934128],[0.23615662753582,-0.1520754098892212],[0.21362733840942383,0.08902987837791443],[0.09267278015613556,0.1479470282793045],[-0.08472681045532227,-0.15069173276424408],[-0.4075291156768799,0.09424188733100891],[-0.07280606031417847,0.02243996411561966],[-0.1052468866109848,0.034350696951150894],[-0.025054337456822395,0.0939553827047348]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0011760329362004995,0.19532302021980286,0.6681734919548035],"rotation":[-0.005871022120118141,-0.6378100514411926,0.0019722881261259317,-0.7701687216758728],"used":true,"bodyHandle":1e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.13462866842746735,0.15931670367717743],[0.04993423819541931,-0.1339854896068573],[0.26168376207351685,-0.13422298431396484],[0.26122501492500305,-0.203019380569458],[-0.0842803418636322,-0.09002911299467087],[0.0018664206145331264,0.4709014594554901],[0.29703429341316223,0.17606571316719055],[-0.13178908824920654,-0.19297482073307037],[-0.0017070703906938434,0.07241366803646088],[-0.1766359955072403,-0.03137018904089928]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0003080396563746035,0.1968938410282135,0.6020369529724121],"rotation":[-0.00010137887147720903,0.314742773771286,0.0073699187487363815,-0.9491483569145203],"used":true,"bodyHandle":1.003e-321,"linearSpeed":0,"angularVelocityHistory":[[0.15403002500534058,0.33116498589515686],[0.021646648645401,-0.05565784499049187],[-0.006726834923028946,-0.03284347429871559],[0.24253474175930023,0.006278058048337698],[-0.4598773419857025,0.013981949537992477],[0.9829556345939636,0.49317798018455505],[0.04568054899573326,-0.04757309332489967],[0.05225542560219765,-0.00015009878552518785],[-0.2799585163593292,-0.15540333092212677],[-0.1662166714668274,-0.132246732711792]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5637401342391968,0.1742013692855835,0.5281867384910583],"rotation":[0.004191845655441284,-0.49341702461242676,0.0016771226655691862,-0.8697810769081116],"used":true,"bodyHandle":1.01e-321,"linearSpeed":4.4252603125001724e-9,"angularVelocityHistory":[[0.0003572998393792659,-0.0009194606100209057],[-0.0012760035460814834,0.004549400880932808],[0.003579736454412341,0.0014305037911981344],[0.0007370460662059486,-0.0036930309142917395],[-0.0013821901520714164,0.002937609562650323],[-0.0024521201848983765,0.003148253308609128],[0.0015074393013492227,0.0011789583368226886],[0.0012121073668822646,-0.004269106313586235],[0.0007889376138336957,0.0014856768539175391],[0.001290835440158844,-0.0023773980792611837],[-0.0016861985204741359,0.013101308606564999]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.061803173273801804,0.19701139628887177,0.6354614496231079],"rotation":[-0.0010716484393924475,0.9959720969200134,-0.010700888931751251,-0.08901593834161758],"used":true,"bodyHandle":1.013e-321,"linearSpeed":0,"angularVelocityHistory":[[0.02027350850403309,-0.020545175299048424],[0.11185979843139648,0.12640659511089325],[0.21435488760471344,-0.05084562301635742],[-0.19354988634586334,-0.054884400218725204],[0.05667524412274361,0.09919440001249313],[-0.15533608198165894,-0.23237526416778564],[-0.5210453271865845,0.14250218868255615],[0.0491158552467823,0.15454956889152527],[-0.11246072500944138,0.15667963027954102],[0.012459796853363514,0.04098554700613022]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5880947709083557,0.1850862205028534,0.516294002532959],"rotation":[-0.9706392288208008,-0.004465804900974035,-0.24048100411891937,-0.002901199273765087],"used":true,"bodyHandle":1.02e-321,"linearSpeed":5.278763317345411e-8,"angularVelocityHistory":[[-0.00044595744111575186,0.0012305212439969182],[-0.0033404272980988026,-0.0002579818246886134],[-0.007740178145468235,0.0007867299718782306],[-0.005283950828015804,0.008738702163100243],[-0.003702455898746848,0.0076568592339754105],[-0.0034422778990119696,0.004550750833004713],[-0.005563677288591862,-0.004002046305686235],[-0.00720937317237258,0.01258575078099966],[-0.00196009106002748,0.006415790878236294],[-0.002712567336857319,0.011764349415898323],[-0.004465654492378235,-0.0031576547771692276]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.4800134599208832,0.1792493611574173,0.5762137174606323],"rotation":[-0.908666729927063,-0.0008134583476930857,0.4175184369087219,0.001543608377687633],"used":true,"bodyHandle":1.023e-321,"linearSpeed":2.053831977635317e-8,"angularVelocityHistory":[[0.0003136791056022048,-0.000021715710317948833],[0.00034874185803346336,0.00015862274449318647],[-0.000046684952394571155,0.0000693794572725892],[0.00013092102017253637,-0.00013237330131232738],[0.00028322619618847966,0.00010495450987946242],[0.00012945820344612002,0.00015085958875715733],[0.00001330909344687825,-0.00007396478758892044],[0.00017328398826066405,0.00008440051897196099],[0.0006842531729489565,0.0003076682914979756],[-0.00019585902919061482,-0.00008194812835427001],[0.0008311757701449096,0.00009038998541655019]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[-0.05895894393324852,0.19428695738315582,0.7039535045623779],"rotation":[-0.004468151833862066,0.9734704494476318,-0.00846169050782919,-0.22861245274543762],"used":true,"bodyHandle":1.03e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.07929432392120361,0.03066614829003811],[-0.12247049808502197,-0.1332463026046753],[-0.09550889581441879,0.04322167485952377],[-0.10542446374893188,0.1936749666929245],[0.02495856210589409,0.06596624851226807],[0.0015612811548635364,0.026774637401103973],[-0.1131463423371315,-0.05389576777815819],[0.30064791440963745,0.05212042108178139],[-0.09724994748830795,0.07792019098997116],[-0.031170371919870377,0.20523801445960999]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.059495553374290466,0.202381893992424,0.704371988773346],"rotation":[0.001561615732498467,0.9669225811958313,0.0014477312797680497,0.2550610601902008],"used":true,"bodyHandle":1.033e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.07137700915336609,-0.27560630440711975],[0.026150314137339592,-0.4123993515968323],[-0.13702376186847687,0.009747584350407124],[0.030158933252096176,0.14996519684791565],[-0.03925171494483948,0.1582222282886505],[0.056760434061288834,0.24220387637615204],[0.09822756052017212,-0.05427933856844902],[0.3252299427986145,0.15689902007579803],[-0.12584809958934784,0.20472705364227295],[-0.015971485525369644,0.07754698395729065]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0005299311014823616,0.19702517986297607,0.7398539781570435],"rotation":[0.0018120241584256291,-0.5920211672782898,0.015657082200050354,-0.8057683110237122],"used":true,"bodyHandle":1.04e-321,"linearSpeed":0,"angularVelocityHistory":[[0.0960807204246521,0.005712585989385843],[0.06870918720960617,0.006535518914461136],[0.06001792848110199,0.11629200726747513],[-0.05710776150226593,0.08484285324811935],[0.19475828111171722,-0.258588969707489],[0.25215357542037964,0.09486297518014908],[-0.02108483575284481,-0.019973786547780037],[-0.0007023588404990733,-0.03567930683493614],[-0.05907271429896355,-0.3882734775543213],[-0.046843089163303375,-0.11214771121740341]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05865398049354553,0.19227202236652374,0.7036154270172119],"rotation":[0.00788669940084219,-0.9693499803543091,-0.0003535562427714467,-0.24555712938308716],"used":true,"bodyHandle":1.042e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.19505921006202698,-0.0850641131401062],[-0.2202768325805664,-0.15901659429073334],[-0.136779323220253,-0.12265409529209137],[-0.10362128168344498,0.08549805730581284],[-0.03523648902773857,0.13047268986701965],[0.07837769389152527,0.21680563688278198],[0.12270058691501617,0.26985225081443787],[0.01595877669751644,0.1035991832613945],[-0.02408633381128311,-0.00946810469031334],[-0.09053729474544525,-0.11553545296192169]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.44637706875801086,0.17723125219345093,0.8432028293609619],"rotation":[0.7865933775901794,-0.014160262420773506,-0.6150632500648499,-0.05260723829269409],"used":true,"bodyHandle":1.047e-321,"linearSpeed":6.108929427611419e-14,"angularVelocityHistory":[[-0.00017769992700777948,-0.00007699423440499231],[-0.00006951591785764322,0.000042254425352439284],[-0.00011663966870401055,-0.00006148283137008548],[-0.000035395736631471664,0.000020505389329628088],[-0.00008950574556365609,-0.0000031718855098006316],[-0.0000857489721965976,-0.0000202895807888126],[-0.00008092743519227952,-0.000004123364305996802],[-0.00006212179869180545,-0.00001512417566118529],[-0.00006856639083707705,-0.000010267018296872266],[-0.0000679677032167092,-0.000002483994649082888],[-0.000043101561459479854,-0.000011558207916095853]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5946171283721924,0.1793932169675827,0.45780402421951294],"rotation":[0.3230893909931183,-0.03223343566060066,-0.9456643462181091,0.017120877280831337],"used":true,"bodyHandle":1.05e-321,"linearSpeed":4.294912228007334e-8,"angularVelocityHistory":[[0.00031554425368085504,0.0018949290970340371],[-0.0014766297535970807,0.0002084293810185045],[0.00019898531900253147,0.0026535785291343927],[0.002319036517292261,0.0017392095178365707],[0.0023502965923398733,0.0016114473110064864],[-0.0007144896080717444,0.0036868916358798742],[-0.000040086673834593967,0.0003650682047009468],[0.005363840144127607,0.004047539085149765],[0.0029746138025075197,0.0024400062393397093],[0.0051553621888160706,0.0058870743960142136],[-0.0009036995470523834,-0.0012002568691968918]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.06163283437490463,0.19634473323822021,0.6352328062057495],"rotation":[0.00629008375108242,0.9768937826156616,0.004288640804588795,-0.2135898619890213],"used":true,"bodyHandle":1.057e-321,"linearSpeed":0,"angularVelocityHistory":[[0.1940106600522995,-0.16712410748004913],[-0.015483706258237362,0.1470528393983841],[-0.3192525804042816,0.21679827570915222],[-0.04949776083230972,-0.20581477880477905],[-0.02376563288271427,0.086481973528862],[0.1721740961074829,-0.014669026248157024],[0.11457714438438416,-0.12114089727401733],[0.24583956599235535,-0.11783264577388763],[0.14052323997020721,-0.13518989086151123],[-0.031081467866897583,-0.19215981662273407]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4687080681324005,0.1841053068637848,0.8528883457183838],"rotation":[0.4177704453468323,-0.048430971801280975,0.9071094393730164,0.016575317829847336],"used":true,"bodyHandle":1.06e-321,"linearSpeed":2.5983086646243854e-13,"angularVelocityHistory":[[-0.00017880511586554348,-0.00007273787923622876],[-0.00005584475729847327,0.00005115810927236453],[-0.00012099633022444323,-0.00005368968049879186],[-0.00003684568946482614,0.00001411696030118037],[-0.00009240697545465082,-0.00000413378757002647],[-0.0000865711917867884,-0.000020664620024035685],[-0.00007818530139047652,-0.000005948089437879389],[-0.00006242959352675825,-0.000013822599612467457],[-0.00006819187547080219,-0.000008911651093512774],[-0.00006269504228839651,0.000005042940756538883],[-0.00004121983874938451,-0.000009026688530866522]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.0030695779714733362,0.19678319990634918,0.6698915362358093],"rotation":[-0.0007463038200512528,-0.5306289196014404,-0.0016053192084655166,0.847602367401123],"used":true,"bodyHandle":1.067e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.12741000950336456,0.10973948985338211],[0.05617503076791763,-0.2145271897315979],[0.20064641535282135,-0.0036960607394576073],[0.14521875977516174,-0.3061002790927887],[-0.09893729537725449,-0.21212942898273468],[0.0581815205514431,0.5330589413642883],[0.3045993745326996,0.19667503237724304],[-0.19511324167251587,-0.20920014381408691],[0.0594184584915638,0.15330561995506287],[-0.12119273841381073,-0.04045097157359123]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4241137206554413,0.17425478994846344,0.5538339614868164],"rotation":[-0.642614483833313,-0.0008686495712026954,-0.7661780714988708,0.004123748280107975],"used":true,"bodyHandle":1.07e-321,"linearSpeed":2.6307067323787523e-9,"angularVelocityHistory":[[-0.000006620852673222544,-0.0003557926684152335],[-0.0008770345593802631,-0.000029067501600366086],[-0.00009838920959737152,-0.00023535733635071665],[-0.0001372301485389471,-0.001267287414520979],[-0.00037212713505141437,0.0005236259894445539],[0.00039011999615468085,-0.00008427280408795923],[0.0005649277591146529,-0.0001604187418706715],[-0.0001738834980642423,0.00010264697630191222],[-0.0013185152783989906,0.00043499303865246475],[0.0009088488295674324,-0.0008744927472434938],[-0.0037066596560180187,-0.0024385852739214897]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[0.4045972526073456,0.18068458139896393,0.6476176381111145],"rotation":[-0.022928206250071526,0.5179519057273865,0.0986129641532898,0.8493971228599548],"used":true,"bodyHandle":1.077e-321,"linearSpeed":2.0628296174128106e-8,"angularVelocityHistory":[[0.001268237829208374,-0.0003028817300219089],[-0.001358022796921432,0.0005904296995140612],[-0.002073906594887376,0.00044136072392575443],[0.0013961924705654383,-0.0006111292750574648],[-0.0013418685412034392,0.0005708654643967748],[-0.0020422902889549732,0.0003235876210965216],[0.001488835783675313,-0.0005539290723390877],[-0.001200412167236209,0.0004639166872948408],[-0.0018356195650994778,0.00000212334066418407],[0.0016664655413478613,-0.0005095748347230256],[-0.0015789262251928449,0.00028910665423609316]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.32332706451416016,0.174434632062912,0.8011549711227417],"rotation":[-0.9926161766052246,0.002521701855584979,0.12126681208610535,0.0010242810240015388],"used":true,"bodyHandle":1.08e-321,"linearSpeed":1.1003931742021267e-16,"angularVelocityHistory":[[0.000022797070414526388,0.000006065963134460617],[6.42575912479515e-7,9.700954706204357e-7],[-0.000001280143806070555,-0.0000022306455775833456],[-0.0000021527591798076173,-1.1683560785513691e-7],[-7.632012852809567e-7,-0.00000313165082843625],[-0.0000015353765547843068,-0.000001336394234385807],[-0.000008661922038299963,-0.000002931462177002686],[0.000013083993508189451,-0.00006210213177837431],[0.00011417466885177419,0.000004664654170483118],[0.00010407863737782463,-0.000017833088350016624],[-0.0000016364809880542452,-0.000006943756943655899]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0010817585280165076,0.1984628140926361,0.5984179973602295],"rotation":[0.011721158400177956,0.30938422679901123,0.0049058981239795685,0.9508522152900696],"used":true,"bodyHandle":1.087e-321,"linearSpeed":0,"angularVelocityHistory":[[0.27569150924682617,0.09246169775724411],[0.14235994219779968,-0.0938771590590477],[0.10676196217536926,-0.07307950407266617],[0.2974835932254791,0.06446832418441772],[-0.4662407636642456,-0.043828874826431274],[0.8718657493591309,0.23821480572223663],[0.10898938775062561,-0.043976787477731705],[0.0955052375793457,-0.07209492474794388],[-0.1839926689863205,-0.18231423199176788],[-0.12122175842523575,-0.11026263236999512]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.5118541717529297,0.17984572052955627,0.6692231297492981],"rotation":[0.993618905544281,-0.002234888728708029,0.11271823197603226,-0.0033221999183297157],"used":true,"bodyHandle":1.09e-321,"linearSpeed":1.0707999487678313e-7,"angularVelocityHistory":[[0.0037298183888196945,0.00013881019549444318],[0.0036431443877518177,0.0002843450929503888],[0.003464530920609832,0.00028625308186747134],[0.003406546311452985,0.00007364907651208341],[0.0028004951309412718,0.0005850346060469747],[0.001728404895402491,0.0009658677154220641],[0.0010301244910806417,0.0010851165279746056],[0.0007582355756312609,0.0013713141670450568],[0.00046878409921191633,0.0015751728788018227],[0.00010920451313722879,0.0015321330865845084],[-0.00035263790050521493,0.0018672901205718517]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5367422103881836,0.1839941442012787,0.7307506799697876],"rotation":[-0.02658858709037304,-0.6175897717475891,-0.01949317753314972,-0.7858090996742249],"used":true,"bodyHandle":1.097e-321,"linearSpeed":5.960665446142659e-13,"angularVelocityHistory":[[-0.00011815991456387565,0.000011640169759630226],[0.00017633334209676832,-0.00009659532952355221],[-0.00019288407929707319,0.00004299348438507877],[0.000033175387216033414,-0.00003256666968809441],[0.00004195092697045766,0.00017112091882154346],[-0.000009005483661894687,-0.000025481986085651442],[0.000046077526349108666,-0.00004384267595014535],[0.00002446556209179107,-0.000011366931175871287],[-8.456527780253964e-7,-0.000014890231796016451],[-0.00003223205203539692,-0.0000034590045743243536],[0.0000269734828179935,-0.000013943445992481429]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.058765094727277756,0.19892115890979767,0.637014627456665],"rotation":[0.014337141998112202,0.9991661310195923,0.008928384631872177,-0.037171270698308945],"used":true,"bodyHandle":1.1e-321,"linearSpeed":0,"angularVelocityHistory":[[0.30073708295822144,-0.09850022941827774],[0.10833895951509476,0.10570649057626724],[-0.38967615365982056,0.32211363315582275],[-0.11336386948823929,-0.2467682659626007],[-0.003605511272326112,0.13067777454853058],[0.06957040727138519,0.16296620666980743],[0.16127870976924896,-0.20983394980430603],[0.21209749579429626,-0.09119471162557602],[0.14547088742256165,-0.2041863650083542],[0.0024933756794780493,-0.15594656765460968]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06096630170941353,0.19889430701732635,0.7052624821662903],"rotation":[0.016666270792484283,-0.936697244644165,-0.009152068756520748,-0.34962376952171326],"used":true,"bodyHandle":1.107e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.3390974998474121,-0.023681098595261574],[-0.16386230289936066,-0.048066046088933945],[-0.15501073002815247,-0.25460290908813477],[-0.02901769056916237,-0.044639263302087784],[0.03472093865275383,0.00462335953488946],[0.21033009886741638,0.3028813302516937],[-0.1267441064119339,0.2398538738489151],[-0.018931977450847626,0.25680315494537354],[-0.07784393429756165,0.020065607503056526],[-0.07606390863656998,-0.11984623223543167]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5874121189117432,0.17436420917510986,0.47420021891593933],"rotation":[-0.0039680758491158485,0.7108849287033081,-0.002500947332009673,0.7032926082611084],"used":true,"bodyHandle":1.11e-321,"linearSpeed":4.225383988490429e-10,"angularVelocityHistory":[[0.00024125409254338592,-0.0023423507809638977],[-0.0016616338398307562,0.008315996266901493],[-0.0033234895672649145,-0.0036484224256128073],[0.002487222431227565,0.000033334301406284794],[-0.0014146807370707393,-0.0012563567142933607],[-0.0011044020066037774,0.008073076605796814],[-0.003475228324532509,-0.007625740487128496],[0.003080379916355014,-0.0017624659230932593],[0.0013060960918664932,0.0005289226537570357],[0.0038638620171695948,-0.0017598957056179643],[-0.008390444330871105,0.003390301251783967]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.522059440612793,0.1854139268398285,0.8290139436721802],"rotation":[0.003767052898183465,0.8945951461791992,-0.0029214767273515463,0.44685205817222595],"used":true,"bodyHandle":1.117e-321,"linearSpeed":4.55196838390913e-8,"angularVelocityHistory":[[-0.000030846334993839264,0.00001294249523198232],[-0.000026758618332678452,0.00001096399500966072],[-0.00003785273293033242,0.0000046429308895312715],[-0.000027512585802469403,0.000017275411664741114],[-0.000031287250749301165,0.000019050121409236453],[-0.000029849139536963776,0.000016689997210050933],[-0.000029352855563047342,0.000013695859706785996],[-0.000027914569727727212,0.00001666618845774792],[-0.000029879596695536748,0.000017655636838753708],[-0.00002993010639329441,0.000012236192560521886],[-0.00003142928107990883,0.0000126627510326216]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00007199466926977038,0.19932900369167328,0.7403321862220764],"rotation":[-0.004425373859703541,-0.10916908085346222,-0.028872551396489143,-0.9935938715934753],"used":true,"bodyHandle":1.12e-321,"linearSpeed":0,"angularVelocityHistory":[[0.16467830538749695,0.07135441899299622],[0.01126178726553917,-0.017437752336263657],[0.11897221207618713,0.11754059046506882],[-0.017336709424853325,0.12714391946792603],[0.06467117369174957,-0.31813082098960876],[0.26262155175209045,0.25764092803001404],[0.04265005886554718,0.034131281077861786],[0.02045990712940693,0.1248798817396164],[-0.11649078875780106,-0.40545469522476196],[-0.0724523738026619,-0.07758105546236038]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.34599074721336365,0.1854715794324875,0.5558185577392578],"rotation":[0.00150505849160254,-0.8091541528701782,0.002186736324802041,-0.5875903964042664],"used":true,"bodyHandle":1.126e-321,"linearSpeed":4.2283166619015895e-9,"angularVelocityHistory":[[-0.0024474412202835083,0.00012411430361680686],[-0.005055143032222986,-0.0003927115467377007],[0.002872931305319071,-0.0011178589193150401],[-0.00037302388227544725,0.0005515725933946669],[0.002589849289506674,-0.00013004224456381053],[-0.0008282014168798923,0.0015813781647011638],[-0.0002970272907987237,-0.0009375833906233311],[-0.000735697743948549,0.00033634871942922473],[-0.0016163007821887732,-0.001005627098493278],[0.002457228023558855,0.0006840205169282854],[-0.002522100694477558,0.0007371523533947766]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.06240559741854668,0.19987481832504272,0.705588161945343],"rotation":[0.00018137943698093295,0.9655054211616516,0.001006419537588954,0.26038098335266113],"used":true,"bodyHandle":1.13e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.03609851375222206,-0.2393224984407425],[0.047497399151325226,-0.4208635985851288],[-0.18958386778831482,0.05142757296562195],[-0.06463402509689331,0.19454695284366608],[-0.012963315472006798,0.21077555418014526],[0.048699915409088135,0.20301936566829681],[0.09869267791509628,-0.03693009912967682],[0.33835992217063904,0.13174858689308167],[-0.13623879849910736,0.19908426702022552],[0.00840925332158804,0.20344963669776917]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4324607253074646,0.180708646774292,0.6414128541946411],"rotation":[-0.6934839487075806,-0.09172546118497849,0.7130417823791504,-0.047305479645729065],"used":true,"bodyHandle":1.136e-321,"linearSpeed":4.871930070292435e-8,"angularVelocityHistory":[[0.0007065864629112184,-0.0003013057867065072],[-0.0010580014204606414,0.0005533747607842088],[-0.001538152457214892,0.0007170136668719351],[0.0008710012189112604,-0.000582615495659411],[-0.0009829042246565223,0.0005163568421266973],[-0.001593181281350553,0.0007282407023012638],[0.0008961155544966459,-0.0005323417135514319],[-0.0008390165166929364,0.0003775187360588461],[-0.0017006766283884645,0.0004835570289287716],[0.0010103423846885562,-0.0004555181076284498],[-0.0012354510836303234,0.00011161569273099303]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05844109132885933,0.19979795813560486,0.6363338232040405],"rotation":[0.003260067431256175,0.9807392358779907,-0.008147159591317177,-0.19512414932250977],"used":true,"bodyHandle":1.14e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.01681438647210598,-0.018780162557959557],[0.11061904579401016,0.14500467479228973],[0.15927152335643768,0.11148317903280258],[-0.1616046279668808,-0.04871302843093872],[0.02319902740418911,-0.0008753169677220285],[-0.22481533885002136,-0.31099408864974976],[-0.49510523676872253,0.2728342115879059],[0.059328947216272354,0.0647333636879921],[0.20329582691192627,0.2023407220840454],[0.04013485834002495,-0.07564552873373032]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5829585790634155,0.17472964525222778,0.4000880718231201],"rotation":[-0.003577894764021039,-0.5539498329162598,-0.000027205371225136332,0.832542359828949],"used":true,"bodyHandle":1.146e-321,"linearSpeed":2.7262011278644534e-8,"angularVelocityHistory":[[-0.00024083949392661452,0.0010915362508967519],[-0.0025969853159040213,0.0029401155188679695],[-0.0034494746942073107,0.0024612529668956995],[0.002079562284052372,0.0006775539368391037],[0.0006936906138435006,0.0005473876954056323],[-0.00273621897213161,0.0020134500227868557],[-0.0012576255248859525,0.0008942021522670984],[0.006925997324287891,0.0021095944102853537],[0.0014642446767538786,0.0014999008271843195],[0.007616810034960508,-0.0019921367056667805],[-0.006304174195975065,0.0018466266337782145]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0004512101586442441,0.19933798909187317,0.6728470921516418],"rotation":[0.005647685378789902,-0.2076481133699417,0.002178977709263563,-0.9781848788261414],"used":true,"bodyHandle":1.15e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.11489861458539963,-0.000732427928596735],[0.03307998552918434,-0.1510675996541977],[0.34542784094810486,0.029555669054389],[0.1539979875087738,-0.19744108617305756],[-0.31477606296539307,-0.09160681068897247],[-0.07666264474391937,0.34420788288116455],[0.341070294380188,0.11552593857049942],[-0.1744554340839386,-0.27136144042015076],[-0.009904248639941216,0.05755326896905899],[-0.10684751719236374,-0.09152761101722717]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.334281325340271,0.18552042543888092,0.5146163702011108],"rotation":[-0.7753831148147583,0.0021154123824089766,0.6314837336540222,-0.0021948202047497034],"used":true,"bodyHandle":1.156e-321,"linearSpeed":6.140161816335902e-10,"angularVelocityHistory":[[0.000030397812224691734,-0.000011046223335142713],[-0.00003329108949401416,0.000010258087968395557],[0.00000605668492426048,0.0000060442876019806135],[0.00003153738362016156,-0.000006229078735486837],[0.00000679056347507867,-0.000006664549800916575],[0.000016261370546999387,0.0000014189222383720335],[0.000015005266504886094,-0.000006099887741584098],[-0.000021803642084705643,0.00001912562220240943],[-0.000029482849640771747,0.00002427979779895395],[-0.0000034531958590378053,0.000007317204563150881],[0.00005437751315184869,-0.000031878800655249506]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.5460574626922607,0.17448942363262177,0.47114092111587524],"rotation":[-0.0005502609419636428,-0.9188011288642883,-0.002389263128861785,-0.3947131037712097],"used":true,"bodyHandle":1.16e-321,"linearSpeed":1.0562068932771306e-9,"angularVelocityHistory":[[-0.0008006406715139747,0.0010346216149628162],[0.0010693472577258945,-0.0014243596233427525],[-0.0002966818865388632,0.00037211348535493016],[0.00040940145845524967,-0.0005929137696512043],[-0.00011459129018476233,0.00003221709266654216],[0.0008017991203814745,-0.0011521204141899943],[0.00034346929169259965,-0.0005148631171323359],[0.00028684409335255623,-0.00042960469727404416],[0.0006430900539271533,-0.0012459959834814072],[0.0000664851613692008,-0.00031007672077976167],[-0.0005358405760489404,-0.00030562918982468545]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[-0.47672340273857117,0.1742725968360901,0.6112966537475586],"rotation":[0.8019754886627197,0.0015349097084254026,-0.5973390340805054,-0.004366658627986908],"used":true,"bodyHandle":1.166e-321,"linearSpeed":1.9426979954808138e-10,"angularVelocityHistory":[[0.00011372811422916129,0.0012948443181812763],[0.003691022517159581,-0.0029431802686303854],[0.001902613672427833,0.0025665252469480038],[-0.003103773109614849,0.0008629752555862069],[0.0001370413665426895,0.0005664764321409166],[0.0008545729797333479,-0.004623790271580219],[-0.001205247943289578,0.002007843693718314],[-0.0021503684110939503,0.00011364970123395324],[-0.0035967594012618065,0.0017459661467000842],[-0.0018284112447872758,0.0006097318255342543],[0.0016343722818419337,-0.004103099927306175]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.4570728838443756,0.18056124448776245,0.6296353340148926],"rotation":[-0.8898205757141113,-0.10000921785831451,0.4450151026248932,-0.013380646705627441],"used":true,"bodyHandle":1.17e-321,"linearSpeed":1.0036680646396256e-7,"angularVelocityHistory":[[0.000615522381849587,-0.00042288415716029704],[-0.0009173954022116959,0.0005766521207988262],[-0.0014539026888087392,0.001154230791144073],[0.0007685755263082683,-0.0006570093100890517],[-0.001052654581144452,0.0005092049832455814],[-0.0016704967711120844,0.001048283651471138],[0.0007828688248991966,-0.0006012013182044029],[-0.0008076319936662912,0.00035123166162520647],[-0.0018014945089817047,0.0006578622269444168],[0.000991554232314229,-0.0004998799413442612],[-0.001159447361715138,-0.00013016800221521407]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.000021038198610767722,0.20103901624679565,0.6019649505615234],"rotation":[0.005104702431708574,0.28394556045532227,-0.0004140679375268519,-0.9588267207145691],"used":true,"bodyHandle":1.176e-321,"linearSpeed":0,"angularVelocityHistory":[[0.2512747645378113,0.13771456480026245],[0.11828801780939102,-0.04732302948832512],[0.000014707958143844735,-0.051046714186668396],[0.17147603631019592,0.03102211095392704],[-0.3913574814796448,-0.05234577879309654],[0.6870821714401245,0.42358633875846863],[0.0903792604804039,-0.061259232461452484],[-0.0659211054444313,-0.07241211086511612],[-0.25277432799339294,-0.22442404925823212],[-0.022891538217663765,-0.14065486192703247]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3587367832660675,0.19448530673980713,0.43351563811302185],"rotation":[-0.020860912278294563,-0.28645217418670654,0.015981383621692657,0.9577341079711914],"used":true,"bodyHandle":1.18e-321,"linearSpeed":0.00003062149393710941,"angularVelocityHistory":[[0.13131146132946014,0.1193324625492096],[0.0433754026889801,0.20804454386234283],[-0.35237938165664673,-0.14351004362106323],[0.08466285467147827,-0.26721757650375366],[0.3069818913936615,-0.11531928926706314],[0.047250472009181976,-0.04336827993392944],[-0.09338069707155228,-0.09728740155696869],[-0.006456682924181223,-0.11844760924577713],[-0.1229478046298027,0.47339311242103577],[0.07809949666261673,0.2081368863582611],[0.1960945874452591,-0.11385501176118851]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5954110622406006,0.18310140073299408,0.43144193291664124],"rotation":[-0.03483842313289642,-0.3884154260158539,0.02076789364218712,0.9205912947654724],"used":true,"bodyHandle":1.186e-321,"linearSpeed":4.1870394470519434e-8,"angularVelocityHistory":[[-0.00039442742126993835,0.002009992254897952],[-0.0027082907035946846,-0.0009771119803190231],[-0.0025599070359021425,0.004094675648957491],[0.00119756069034338,0.0018363589188084006],[0.0009154433500953019,0.00026602009893395007],[-0.0016751966904848814,0.0018772974144667387],[-0.001686970703303814,0.002008095383644104],[0.006727459840476513,0.00542149692773819],[0.002007914474233985,0.003574853530153632],[0.007031943183392286,0.0039308019913733006],[-0.004554501734673977,-0.0008743994403630495]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.0610734224319458,0.20085342228412628,0.6342580318450928],"rotation":[0.007668409030884504,0.4604829251766205,-0.006788005121052265,-0.8876094818115234],"used":true,"bodyHandle":1.19e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.05786881223320961,-0.004779361654073],[0.11995454132556915,0.14778894186019897],[0.17285588383674622,-0.022823166102170944],[-0.16693133115768433,-0.0449291355907917],[0.06222614645957947,0.08669553697109222],[-0.13149377703666687,-0.2939249575138092],[-0.5265666246414185,0.1921180635690689],[0.04161648824810982,0.07166842371225357],[0.08674181997776031,0.22716499865055084],[-0.007762117777019739,0.024690890684723854]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.309020459651947,0.17442011833190918,0.7493646144866943],"rotation":[0.07654473185539246,-0.0002429047308396548,0.9970608949661255,-0.003231616225093603],"used":true,"bodyHandle":1.196e-321,"linearSpeed":0,"angularVelocityHistory":[[-8.542155001123319e-7,-8.923338441491069e-7],[-7.757056437185383e-7,-9.56818439590279e-7],[-8.048978656916006e-7,-9.495236099610338e-7],[-9.328006740361161e-7,-7.831712878214603e-7],[-8.545604828213982e-7,-7.831401944713434e-7],[-7.829488026800391e-7,-8.990767241812136e-7],[-9.531917157801217e-7,-9.249999379790097e-7],[-8.557033766010136e-7,-9.189507750306802e-7],[-9.121879429585533e-7,-9.343642091153015e-7],[-8.938670816860395e-7,-8.588680202592514e-7]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05950033664703369,0.19789741933345795,0.7038821578025818],"rotation":[-0.010175419971346855,0.9909033179283142,0.003506329609081149,-0.1341443806886673],"used":true,"bodyHandle":1.2e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.06513655930757523,-0.044153884053230286],[-0.1208670437335968,-0.3072044253349304],[-0.11636071652173996,0.0755629688501358],[-0.009353071451187134,0.2886444330215454],[-0.008290679194033146,0.16903866827487946],[0.017605090513825417,0.14716306328773499],[0.09625539183616638,-0.046873390674591064],[0.232725128531456,0.012396440841257572],[-0.025004765018820763,0.1291608214378357],[0.012520814314484596,0.16730834543704987]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0004168715386185795,0.20087343454360962,0.738220751285553],"rotation":[-0.006469388026744127,-0.44821852445602417,-0.008935346268117428,-0.89385586977005],"used":true,"bodyHandle":1.206e-321,"linearSpeed":0,"angularVelocityHistory":[[0.1367688924074173,0.015149550512433052],[0.062113650143146515,-0.001027324004098773],[0.11235064268112183,0.12090224027633667],[0.06004610285162926,0.05114611238241196],[0.2692028284072876,-0.2796526849269867],[0.2774793803691864,0.1313237100839615],[0.050288788974285126,0.16843557357788086],[-0.13999047875404358,-0.027270101010799408],[-0.2592829167842865,-0.4126381278038025],[-0.0784536749124527,-0.10476826131343842]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06001275032758713,0.2029028981924057,0.7037656307220459],"rotation":[0.011484581045806408,-0.7915481925010681,-0.008448430337011814,-0.6109403371810913],"used":true,"bodyHandle":1.21e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.4178500175476074,0.01776186376810074],[-0.13582555949687958,-0.007176149636507034],[-0.15412962436676025,-0.22007107734680176],[-0.08895643800497055,-0.15315528213977814],[0.0054622250609099865,-0.10386147350072861],[0.015104425139725208,0.14181028306484222],[-0.03763395547866821,0.1907193958759308],[-0.13223423063755035,0.2065027952194214],[-0.05112767592072487,0.07613791525363922],[0.0764593631029129,-0.08250360935926437]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4774421751499176,0.17996735870838165,0.6098039746284485],"rotation":[-0.9678820967674255,0.0041524977423250675,-0.2513010799884796,0.005893542431294918],"used":true,"bodyHandle":1.215e-321,"linearSpeed":5.830921383376827e-8,"angularVelocityHistory":[[0.0014656779821962118,0.0016155290650203824],[0.004271874204277992,0.001776352757588029],[0.00004522267772699706,0.005848925560712814],[-0.0020376183092594147,-0.0005349521525204182],[0.00017816769832279533,0.005338971968740225],[0.00239276560023427,0.0024906895123422146],[-0.00272055109962821,0.005060176365077496],[-0.001276708673685789,-0.0008739525219425559],[0.003231914946809411,0.0025256378576159477],[-0.0009585387306287885,0.001537451520562172],[0.004322206135839224,0.002499325666576624]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[-0.24506893754005432,0.17449788749217987,0.8237184286117554],"rotation":[0.7106833457946777,0.0032425839453935623,0.7034935355186462,0.003934157080948353],"used":true,"bodyHandle":1.22e-321,"linearSpeed":7.097062975011306e-17,"angularVelocityHistory":[[-0.000007965775694174226,-0.00002549587225075811],[0.000004396965778141748,0.0000066313314164290205],[5.460664169731899e-7,-0.000005192169737711083],[-0.00002557777042966336,-0.000012836811947636306],[-0.000005244912699708948,-0.000004179773441137513],[-0.00003106221629423089,-0.000007203508630482247],[-0.000017038400983437896,-0.00001406404498993652],[0.000002931332801381359,-0.00000414965916206711],[0.00004772857209900394,0.00006750343163730577],[0.000039730919525027275,0.0000017911062286657398],[0.00002797990782710258,0.000042310766730224714]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.4880322515964508,0.17390918731689453,0.556277334690094],"rotation":[-0.012696119025349617,0.663379967212677,0.003749642288312316,0.7481655478477478],"used":true,"bodyHandle":1.225e-321,"linearSpeed":2.2371459588459368e-8,"angularVelocityHistory":[[0.0010940161300823092,-0.0003317619557492435],[0.00020798669720534235,-0.003451725235208869],[-0.0016419398598372936,-0.0009652669541537762],[0.0007883219514042139,0.002077674027532339],[0.0014190811198204756,-0.0007543617393821478],[-0.0007659194525331259,-0.0038537634536623955],[-0.002460464835166931,0.0016455210279673338],[0.0002788507554214448,0.0021625463850796223],[0.0005318107432685792,0.0014858600916340947],[0.001732774660922587,0.0038576170336455107],[-0.001394193503074348,-0.003230009926483035]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[0.34614938497543335,0.1922430545091629,0.49627190828323364],"rotation":[-0.019953249022364616,0.7695274949073792,0.13169260323047638,0.6245689988136292],"used":true,"bodyHandle":1.23e-321,"linearSpeed":2.3135664328664442e-8,"angularVelocityHistory":[[0.0019013156415894628,-0.005223200190812349],[0.0010755514958873391,-0.004884626250714064],[-0.0011618523858487606,0.008741888217628002],[0.0010362978791818023,-0.0009577542659826577],[-0.0028647538274526596,0.005976141896098852],[-0.0017882194370031357,0.0021891994401812553],[-0.002474994631484151,-0.0009688331047073007],[0.0013476226013153791,0.0065141646191477776],[-0.0005509826587513089,-0.002748906845226884],[0.003198633436113596,0.007372303865849972],[0.000012666707334574312,-0.005316656548529863]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06206761673092842,0.2001752108335495,0.6357602477073669],"rotation":[0.003387067699804902,0.8067355155944824,0.002957924734801054,0.5908956527709961],"used":true,"bodyHandle":1.235e-321,"linearSpeed":0,"angularVelocityHistory":[[0.12795057892799377,-0.14357392489910126],[0.10547828674316406,0.1466475874185562],[-0.29213374853134155,0.10559751838445663],[-0.050869181752204895,-0.24155500531196594],[-0.039332661777734756,0.09520415216684341],[0.1760939359664917,0.14713633060455322],[0.08785823732614517,-0.20391181111335754],[0.1349281519651413,-0.06269259005784988],[0.16132159531116486,-0.18822503089904785],[0.002209627302363515,-0.19082674384117126]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.25718924403190613,0.17461678385734558,0.8157540559768677],"rotation":[0.0004664916777983308,0.3353722393512726,-0.004112292546778917,-0.942076563835144],"used":true,"bodyHandle":1.24e-321,"linearSpeed":3.940820961102625e-16,"angularVelocityHistory":[[0.0000046918162297515664,-0.0000010673551287254668],[0.0000032154184737009928,-4.6311936330312165e-7],[0.000003402976972211036,-6.660515055045835e-7],[0.00000802495105745038,-0.000002336501893296372],[0.0000033476728731329786,-5.123183655086905e-7],[0.0000034291263091290602,-4.263860944320186e-7],[0.000003815217496594414,-2.1189397614307381e-7],[0.0000031405274967255536,-3.752534212253522e-7],[0.000003275516519352095,-5.778625222774281e-7],[0.000003477970039966749,-4.456030922028731e-7],[0.000006024797585268971,-0.0000014733017223989009]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.002111227484419942,0.20156843960285187,0.6680393815040588],"rotation":[0.005372859071940184,-0.6224536299705505,0.000002791944780256017,0.7826381921768188],"used":true,"bodyHandle":1.245e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.1805589348077774,0.14973126351833344],[0.053667102009058,0.008475267328321934],[0.3618834614753723,0.03326985612511635],[0.2883099913597107,-0.21067340672016144],[-0.19224770367145538,-0.2233433574438095],[-0.1020718663930893,0.2439768761396408],[0.2601987421512604,0.23925577104091644],[-0.07173062860965729,-0.3244304358959198],[-0.07203064858913422,0.09102539718151093],[-0.15908636152744293,0.12340870499610901]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4675135910511017,0.17401868104934692,0.6893412470817566],"rotation":[-0.004821529611945152,0.5381547212600708,0.00857143197208643,0.8427886366844177],"used":true,"bodyHandle":1.25e-321,"linearSpeed":6.317388106491213e-14,"angularVelocityHistory":[[-0.0009158996981568635,-0.000028895094146719202],[0.0006800236296840012,-0.000034802418667823076],[0.00006769896572222933,0.00023401361249852926],[0.0003208948182873428,0.00006813331128796563],[-0.00017842819215729833,0.000012218564734212123],[0.00006617103645112365,-0.0000333088100887835],[0.00017707765800878406,2.2034367930245935e-7],[-0.000016681240595062263,-0.000015817868188605644],[-0.0002688462263904512,0.000035929868317907676],[0.0002025858557317406,0.000051465533033479005],[0.0002224607887910679,0.00004069170245202258]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.32920512557029724,0.17447905242443085,0.6645123362541199],"rotation":[0.0007521560764871538,0.8359987139701843,0.0034025427885353565,-0.5487202405929565],"used":true,"bodyHandle":1.255e-321,"linearSpeed":8.421523614482585e-17,"angularVelocityHistory":[[-9.134705578617286e-7,-9.770955102794687e-7],[-8.426633257840876e-7,-9.950493904398172e-7],[-0.0000010339471145925927,-0.0000011135385875604698],[-9.186631473312445e-7,-0.0000011615560424615978],[-0.000001021044568005891,-0.0000012001388540738844],[-0.0000010916060091403779,-0.0000011385481002434972],[-7.571944706796785e-7,-8.209679549509019e-7],[-9.200273893839039e-7,-0.0000011493627880554413],[-7.52565654238424e-7,-0.0000010597389064059826],[-8.045980166571098e-7,-7.298016271306551e-7],[-7.434861686306249e-7,-0.0000010909662933045183]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00014902313705533743,0.20552334189414978,0.6016548871994019],"rotation":[0.012255370616912842,0.28289490938186646,-0.001606516307219863,0.9590712189674377],"used":true,"bodyHandle":1.26e-321,"linearSpeed":0,"angularVelocityHistory":[[0.8568170070648193,-0.47944626212120056],[0.14401502907276154,0.027166837826371193],[-0.005758059676736593,-0.1251763254404068],[0.12017225474119186,-0.17780572175979614],[-0.34506547451019287,-0.08698628842830658],[0.6646135449409485,0.20963263511657715],[-0.04163038730621338,-0.013023155741393566],[0.016874689608812332,-0.02860480546951294],[-0.2080489695072174,-0.13415630161762238],[-0.015212323516607285,-0.03476576507091522]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05871158838272095,0.2028728574514389,0.6368457078933716],"rotation":[0.0004473170265555382,-0.1533517986536026,-0.0035952876787632704,0.988165020942688],"used":true,"bodyHandle":1.265e-321,"linearSpeed":0,"angularVelocityHistory":[[0.2089109867811203,-0.18580949306488037],[0.016978930681943893,0.12385998666286469],[-0.2792346477508545,0.16317535936832428],[-0.004884091671556234,-0.22168666124343872],[-0.040507882833480835,0.1309080868959427],[0.09472152590751648,0.025163227692246437],[0.04695342108607292,-0.19663012027740479],[0.15187187492847443,-0.05112510547041893],[0.220434308052063,-0.1440245807170868],[0.05709242448210716,-0.2148772031068802]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.058637507259845734,0.20127667486667633,0.7042886018753052],"rotation":[0.017351411283016205,-0.9187564253807068,-0.0017507497686892748,-0.3944394588470459],"used":true,"bodyHandle":1.27e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.4232797622680664,-0.020474255084991455],[-0.1910167783498764,-0.009585253894329071],[-0.1653134971857071,-0.20287585258483887],[0.000021492918676813133,-0.1156298816204071],[0.10667566955089569,-0.12536554038524628],[0.010056857019662857,0.08233942836523056],[-0.07458887994289398,0.26929712295532227],[-0.054873719811439514,0.24418513476848602],[-0.018471097573637962,0.055489636957645416],[0.002257005078718066,-0.09177042543888092]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4689757525920868,0.17957240343093872,0.7463651895523071],"rotation":[0.9487459063529968,0.06830735504627228,0.30547064542770386,0.04362276941537857],"used":true,"bodyHandle":1.275e-321,"linearSpeed":0.000029982555368863933,"angularVelocityHistory":[[0.000037016343412688,0.00006142977508716285],[0.00001555083872517571,-0.00005186435373616405],[-0.0001644494041102007,0.00028845350607298315],[0.00004104394247406162,0.00005140510620549321],[0.000015581446859869175,-0.00004629338945960626],[-0.0001323762262472883,0.0002700297045521438],[0.000050244740123162046,0.00004431087654666044],[-0.0000044802231968787964,-0.00004261871436028741],[-0.00023713686096016318,0.0002623676846269518],[0.00004328931390773505,0.000059510228311410174],[-0.000013376164133660495,-0.0000046532886699424125]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00013567274436354637,0.20243553817272186,0.7401751279830933],"rotation":[-0.01710190810263157,-0.7133317589759827,-0.010004187002778053,-0.7005463242530823],"used":true,"bodyHandle":1.28e-321,"linearSpeed":0,"angularVelocityHistory":[[0.11642307043075562,-0.015855785459280014],[0.030701374635100365,-0.027951491996645927],[0.15606409311294556,0.10834046453237534],[0.0900232344865799,0.1541730910539627],[0.2173592895269394,-0.3227840065956116],[0.2444949597120285,0.10378454625606537],[0.06955374777317047,0.0425550639629364],[0.03927760571241379,0.06172804534435272],[-0.16679105162620544,-0.3119616210460663],[-0.03540113940834999,-0.12275683879852295]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05841429531574249,0.20365381240844727,0.6363911628723145],"rotation":[-0.0006231260485947132,0.37211769819259644,0.003910875879228115,-0.9281771183013916],"used":true,"bodyHandle":1.285e-321,"linearSpeed":0,"angularVelocityHistory":[[0.019854627549648285,-0.03366374224424362],[0.1550343781709671,-0.03298081457614899],[0.11292760819196701,-0.1551675647497177],[-0.20445846021175385,0.08223101496696472],[0.05932369828224182,0.05389900133013725],[-0.1782785803079605,-0.28255340456962585],[-0.5362765192985535,0.2894892394542694],[0.002958310768008232,0.021090252324938774],[0.2966032922267914,0.18615244328975677],[0.13534347712993622,-0.1326204538345337]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5070456862449646,0.177223339676857,0.5440714359283447],"rotation":[-0.031200526282191277,0.9963575005531311,-0.03213178366422653,-0.07256583124399185],"used":true,"bodyHandle":1.29e-321,"linearSpeed":1.8164759786034416e-8,"angularVelocityHistory":[[-0.0007367600337602198,-0.0020901618991047144],[-0.001828923705033958,-0.0011874729534611106],[0.0007055703899823129,-0.0010117973433807492],[-0.004525074735283852,-0.0015898249112069607],[-0.005934828892350197,-0.004299795720726252],[-0.006124305073171854,-0.004032825585454702],[0.011027339845895767,0.005694400053471327],[-0.006751027889549732,-0.0038196451496332884],[-0.009004274383187294,-0.0019570812582969666],[-0.005466598551720381,-0.0029114065691828728],[-0.006450904533267021,-0.004974743351340294]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0019829885568469763,0.20227587223052979,0.6719332933425903],"rotation":[-0.0003202111693099141,0.07295586913824081,-0.0016274747904390097,-0.9973337650299072],"used":true,"bodyHandle":1.294e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.14879712462425232,0.1414947658777237],[0.04683613032102585,0.05206530541181564],[0.28202730417251587,-0.09028391540050507],[0.10497308522462845,-0.23700422048568726],[-0.1577887386083603,-0.2908116281032562],[-0.020164692774415016,0.08304305374622345],[0.307657390832901,0.0818757638335228],[-0.23515067994594574,-0.20574018359184265],[-0.007184642367064953,0.08703961223363876],[-0.161149799823761,0.010034145787358284]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0005425468552857637,0.20253196358680725,0.5985512137413025],"rotation":[0.010073356330394745,0.7957495450973511,0.0037322656717151403,-0.6055305004119873],"used":true,"bodyHandle":1.3e-321,"linearSpeed":0,"angularVelocityHistory":[[0.07513392716646194,0.2776150107383728],[0.011744119226932526,-0.03877575695514679],[-0.4446246027946472,-0.07461608201265335],[0.07742606103420258,0.014163263142108917],[-0.622504472732544,-0.2432427555322647],[0.6493560075759888,0.14481502771377563],[0.05215468630194664,-0.04352471977472305],[-0.0007430054247379303,-0.06525585800409317],[-0.14470194280147552,-0.13239145278930664],[-0.10657111555337906,-0.022818194702267647]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06185075640678406,0.2046326845884323,0.6351560950279236],"rotation":[0.01270262524485588,0.5371329188346863,-0.0034833576064556837,-0.8433947563171387],"used":true,"bodyHandle":1.304e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.017938124015927315,-0.0045296913012862206],[0.13282231986522675,0.07169429957866669],[0.19128131866455078,-0.02782018482685089],[-0.25372299551963806,0.05693042278289795],[-0.0397753044962883,0.00003754820500034839],[-0.22075597941875458,-0.40541037917137146],[-0.5240232348442078,0.2724246382713318],[0.021044356748461723,0.09285427629947662],[0.20680145919322968,0.24341268837451935],[0.052999839186668396,-0.08431974053382874]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05938708409667015,0.20503097772598267,0.704788327217102],"rotation":[0.001227776287123561,0.9472001194953918,0.003046095371246338,0.3206261992454529],"used":true,"bodyHandle":1.31e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.033379871398210526,-0.24099400639533997],[-0.004157581366598606,-0.4706328809261322],[-0.12452548742294312,0.1194721907377243],[0.08213894069194794,0.21558521687984467],[-0.06028002128005028,0.1891518235206604],[0.04114045947790146,0.15568332374095917],[0.13030871748924255,-0.05015651881694794],[0.3152638375759125,0.14914245903491974],[-0.011707115918397903,0.25591254234313965],[-0.03289948031306267,0.199229434132576]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3027655780315399,0.18547175824642181,0.6154705286026001],"rotation":[0.000493815983645618,-0.9262170791625977,0.0022074307780712843,-0.3769837021827698],"used":true,"bodyHandle":1.314e-321,"linearSpeed":4.035626443254834e-12,"angularVelocityHistory":[[0.00036955150426365435,0.0008838830981403589],[-0.00017995199596043676,-0.00011479006934678182],[-0.000259464664850384,-0.00040876923594623804],[-0.0002505858719814569,-0.0010143436957150698],[-0.00016668312309775501,-0.000012774648894264828],[-0.00028078912873752415,-0.0013521070359274745],[-0.0002694668364711106,-0.0006468696519732475],[-0.0007892522262409329,-0.00021732784807682037],[-0.0003100633039139211,-0.00019190172315575182],[-0.00016154140757862478,-0.0009070549276657403],[-0.00021124885824974626,0.000039206377550726756]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0005483239656314254,0.20513419806957245,0.7373639345169067],"rotation":[-0.011221306398510933,-0.9108747243881226,-0.0014565929304808378,-0.4125277101993561],"used":true,"bodyHandle":1.32e-321,"linearSpeed":0,"angularVelocityHistory":[[0.18121804296970367,0.05094316229224205],[0.01380061823874712,-0.02185746841132641],[0.1562807708978653,0.10498952120542526],[0.07860826700925827,0.07053304463624954],[0.13342349231243134,-0.45607566833496094],[0.3281680643558502,0.08604931831359863],[-0.06233777850866318,0.020280523225665092],[-0.023469673469662666,0.05578800290822983],[-0.3323819935321808,-0.3814457952976227],[-0.10403250902891159,-0.08439381420612335]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.061486970633268356,0.24185194075107574,0.635119616985321],"rotation":[0.010098797269165516,-0.997707188129425,-0.006453388370573521,-0.0666082426905632],"used":true,"bodyHandle":1.324e-321,"linearSpeed":0,"angularVelocityHistory":[[0.11748498678207397,-0.2755414843559265],[0.07953765243291855,0.042916592210531235],[0.008761770091950893,-0.17999079823493958],[0.29616084694862366,0.039026349782943726],[-0.13501839339733124,0.035471752285957336],[-0.044484175741672516,0.5887508392333984],[-0.019358374178409576,-0.04618844389915466],[-0.09936057031154633,0.10546411573886871],[-0.006618097424507141,0.03096311166882515],[-0.14977487921714783,0.18950515985488892]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5277457237243652,0.19025008380413055,0.5212507247924805],"rotation":[0.06241853907704353,-0.43088704347610474,-0.02579553797841072,-0.8998749852180481],"used":true,"bodyHandle":1.33e-321,"linearSpeed":4.458918279016661e-7,"angularVelocityHistory":[[-0.00023297054576687515,-0.0016322878655046225],[-0.0017793020233511925,0.0016031652921810746],[0.007341855205595493,0.007412174716591835],[-0.01255030557513237,-0.007492366246879101],[-0.006961859297007322,-0.006932813208550215],[-0.011153548955917358,-0.005748166237026453],[0.019292816519737244,0.014096482656896114],[-0.011168388649821281,-0.008895774371922016],[-0.012761720456182957,-0.011412855237722397],[-0.008719073608517647,-0.009366889484226704],[-0.009127744473516941,0.003956933971494436]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05826656147837639,0.20511017739772797,0.7036406397819519],"rotation":[0.00065992446616292,-0.4727752208709717,-0.01295056939125061,-0.881087601184845],"used":true,"bodyHandle":1.334e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.007562906946986914,-0.09078609198331833],[-0.1803322285413742,0.005201476160436869],[-0.10865064710378647,-0.18005158007144928],[0.015246445313096046,-0.14187301695346832],[-0.0856490433216095,-0.00970938615500927],[-0.10857956856489182,0.07413813471794128],[-0.05764225125312805,0.33732539415359497],[-0.06770646572113037,0.22539348900318146],[-0.05466730147600174,0.014876803383231163],[0.06209220737218857,-0.12234488129615784]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05962919071316719,0.20447954535484314,0.6369431614875793],"rotation":[0.0065102241933345795,0.4984097182750702,-0.004904689267277718,0.8669033050537109],"used":true,"bodyHandle":1.34e-321,"linearSpeed":0,"angularVelocityHistory":[[0.01206314004957676,-0.06116781383752823],[0.06602593511343002,0.14725011587142944],[-0.3901705741882324,0.1918630599975586],[-0.044030386954545975,-0.19971933960914612],[-0.05538254976272583,0.0438200905919075],[0.08224229514598846,0.34990325570106506],[0.14202094078063965,-0.1968814581632614],[0.1393643170595169,-0.014483794569969177],[0.1544688493013382,-0.16178807616233826],[0.02221347577869892,-0.22453196346759796]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3689853250980377,0.17471221089363098,0.6204299926757812],"rotation":[-0.65664142370224,0.0007857258897274733,-0.7542012333869934,-0.0013892893912270665],"used":true,"bodyHandle":1.344e-321,"linearSpeed":7.11390146503823e-14,"angularVelocityHistory":[[-0.000029497796276700683,-0.00005330228304956108],[0.00018207762332167476,-0.00005720364788430743],[0.00014220716548152268,-0.00013114497414790094],[0.00018387901945970953,-0.00013065236271359026],[0.00005740801861975342,-0.000005712128768209368],[0.00023880272055976093,0.00032292373361997306],[0.00017109578766394407,-0.000050167596782557666],[0.00010362927423557267,-0.00002198567563027609],[0.00018917223496828228,-0.00004265004099579528],[0.00012873500236310065,-0.00003302230834378861],[0.0000401571742258966,0.0000691312670824118]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[-0.002463698387145996,0.20728863775730133,0.6721166968345642],"rotation":[0.010578903369605541,-0.4989965856075287,-0.007077354472130537,0.8665104508399963],"used":true,"bodyHandle":1.35e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.14721490442752838,0.030097879469394684],[0.02315223217010498,0.040637560188770294],[0.35347288846969604,0.16215339303016663],[0.1999678909778595,-0.23940986394882202],[-0.20231805741786957,-0.2502354383468628],[-0.10536479949951172,0.11510908603668213],[0.2608700394630432,0.1012672483921051],[-0.14695297181606293,-0.33405789732933044],[0.06788689643144608,0.08329847455024719],[-0.17662657797336578,-0.10153770446777344]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0007653271313756704,0.20618461072444916,0.598669171333313],"rotation":[-0.003498668782413006,-0.15660788118839264,-0.005493467673659325,0.9876394271850586],"used":true,"bodyHandle":1.354e-321,"linearSpeed":0,"angularVelocityHistory":[[0.38751906156539917,-0.14005796611309052],[0.0899294763803482,-0.0016580057563260198],[0.10358944535255432,-0.076728455722332],[0.20374366641044617,-0.22320301830768585],[-0.3595627546310425,-0.07052553445100784],[0.48469361662864685,0.13212017714977264],[-0.04612518101930618,-0.01094221044331789],[0.02261635847389698,0.004672640934586525],[-0.17872166633605957,-0.0654829666018486],[-0.06780899316072464,-0.04997071623802185]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.061522915959358215,0.20721258223056793,0.6343791484832764],"rotation":[-0.0004950571455992758,-0.47623732686042786,-0.0013384356861934066,0.8793155550956726],"used":true,"bodyHandle":1.36e-321,"linearSpeed":0,"angularVelocityHistory":[[0.10459849238395691,-0.03398677334189415],[0.10879961401224136,0.16570152342319489],[-0.45335808396339417,0.2430901825428009],[-0.003498999634757638,-0.22496728599071503],[0.027974944561719894,0.06401801109313965],[0.15792341530323029,0.33104923367500305],[0.02074267342686653,-0.22310198843479156],[-0.0036137488204985857,-0.005140034016221762],[0.16910287737846375,-0.1374628245830536],[0.012753061018884182,-0.28239864110946655]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06033242493867874,0.20753973722457886,0.7060355544090271],"rotation":[0.00922766700387001,-0.8095418810844421,-0.009429224766790867,-0.5869138836860657],"used":true,"bodyHandle":1.364e-321,"linearSpeed":0,"angularVelocityHistory":[[0.20961327850818634,-0.179971843957901],[-0.07822410017251968,0.065906822681427],[-0.17939279973506927,-0.09459836035966873],[0.018864857032895088,-0.16597887873649597],[-0.05500610172748566,-0.046834059059619904],[-0.10696075856685638,0.1274631917476654],[-0.13888375461101532,0.2105441689491272],[-0.14397725462913513,0.22289487719535828],[-0.10609162598848343,0.06619544327259064],[0.00848856195807457,-0.07387767732143402]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00010065859532915056,0.20636345446109772,0.7385810017585754],"rotation":[0.005164856091141701,-0.27299022674560547,-0.0047082253731787205,0.9619914293289185],"used":true,"bodyHandle":1.37e-321,"linearSpeed":0,"angularVelocityHistory":[[0.20088592171669006,0.0749862939119339],[-0.013466686941683292,-0.0360429622232914],[0.16581246256828308,0.09117481857538223],[0.03992417827248573,0.10351888090372086],[0.2970949113368988,-0.29864436388015747],[0.36276954412460327,0.06995674967765808],[0.0771416649222374,0.03810577467083931],[-0.15950821340084076,-0.05270177870988846],[-0.2893333435058594,-0.43574005365371704],[-0.11530909687280655,-0.05673739314079285]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06274689733982086,0.20532597601413727,0.7056012749671936],"rotation":[0.0023647770285606384,0.9991639256477356,0.0012723645195364952,-0.04079519957304001],"used":true,"bodyHandle":1.374e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.03224106878042221,-0.21851176023483276],[0.05228131636977196,-0.42341843247413635],[-0.20386873185634613,0.06079655513167381],[0.06478597223758698,0.16029970347881317],[-0.0766686275601387,0.3758232295513153],[0.0741020143032074,0.24389353394508362],[0.1656503975391388,-0.07171719521284103],[0.29442983865737915,0.10649458318948746],[-0.0187339149415493,0.3072865307331085],[-0.03527998924255371,0.17598794400691986]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05868317931890488,0.20686005055904388,0.6363031268119812],"rotation":[0.016045255586504936,-0.16485725343227386,0.00011760616325773299,-0.9861869215965271],"used":true,"bodyHandle":1.38e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.09164049476385117,0.00436121691018343],[0.145513653755188,0.13235944509506226],[0.1768939197063446,-0.0438493937253952],[-0.2987094521522522,-0.047746606171131134],[-0.12033410370349884,-0.0054988800548017025],[-0.21370019018650055,-0.44002193212509155],[-0.531770646572113,0.4773942530155182],[-0.032685235142707825,0.08161140978336334],[0.32308143377304077,0.10503081977367401],[0.12122015655040741,-0.1796644777059555]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00025114521849900484,0.2053491771221161,0.6677504181861877],"rotation":[0.005054152105003595,-0.5057799816131592,-0.00024368675076402724,-0.8626476526260376],"used":true,"bodyHandle":1.383e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.15946607291698456,0.07160031050443649],[0.034379731863737106,-0.015335381031036377],[0.3802332580089569,0.026050148531794548],[0.20765604078769684,-0.19011905789375305],[-0.28552570939064026,-0.20362691581249237],[-0.04228539019823074,0.2107321172952652],[0.309684157371521,-0.05742452293634415],[-0.2541927397251129,-0.04964383319020271],[-0.04201321676373482,0.07046567648649216],[-0.16574910283088684,0.0289441104978323]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.5027502179145813,0.17446596920490265,0.824228823184967],"rotation":[-0.003750778501853347,0.05927104875445366,-0.0009355516522191465,0.9982343912124634],"used":true,"bodyHandle":1.39e-321,"linearSpeed":7.953784565143098e-11,"angularVelocityHistory":[[-2.96849577807734e-7,-0.0000014828581242909422],[-0.000002039943183262949,-0.0000010235096397082089],[-0.0000013442494264381821,-0.0000012914852050016634],[-0.000001112747440856765,-5.025720497542352e-7],[-0.0000015472585346287815,-0.0000018021484038399649],[-0.0000032168100005947053,-3.478729695416405e-7],[-0.000002313847744517261,-5.781951131211827e-7],[-0.000003083630417677341,-6.581684033335478e-7],[-0.000001222403170686448,-0.0000010501353244762868],[-0.000001056140035871067,-0.0000010649217756508733],[-0.000001347362172055,-9.534163041280408e-7]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.5089191794395447,0.17977415025234222,0.8172762989997864],"rotation":[-0.0023877383209764957,0.23302476108074188,-0.0007171977777034044,0.9724676012992859],"used":true,"bodyHandle":1.393e-321,"linearSpeed":1.3271908674236266e-8,"angularVelocityHistory":[[-0.000021543593902606517,0.000004904019078821875],[-0.000019249357137596235,-0.0000012459039453460719],[-0.000027914185920963064,-0.000004519868070929078],[-0.000019094315575785004,0.000003223395651730243],[-0.000024661891075083986,0.0000035373273021832574],[-0.000020194871467538178,0.00000226700854000228],[-0.00001967884054465685,5.845505484103342e-7],[-0.00001845560473157093,0.0000015366407524197712],[-0.00002133919406333007,0.000002401217670922051],[-0.00002246656185889151,-1.1422355328249978e-7],[-0.000023535269065178,-4.2579028303180166e-8]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0008883116533979774,0.20858575403690338,0.6014485359191895],"rotation":[0.008202694356441498,0.08657712489366531,0.002871723147109151,-0.9962072372436523],"used":true,"bodyHandle":1.4e-321,"linearSpeed":0,"angularVelocityHistory":[[0.17998374998569489,-0.21846981346607208],[0.10663624852895737,0.06891266256570816],[-0.00045115049579180777,-0.09783685952425003],[0.05213572829961777,-0.16913655400276184],[-0.21471118927001953,-0.05529119074344635],[0.3765372335910797,0.16302071511745453],[-0.03548061475157738,-0.05464455485343933],[-0.13161593675613403,0.031324468553066254],[-0.11669497191905975,-0.006856324151158333],[0.0025746787432581186,-0.013957057148218155]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2734513580799103,0.17429976165294647,0.6837078928947449],"rotation":[-0.004234363790601492,0.6717211604118347,0.002579113934189081,-0.7407875061035156],"used":true,"bodyHandle":1.403e-321,"linearSpeed":3.4437563795588645e-16,"angularVelocityHistory":[[0.0000014524498510581907,0.000001624259084564983],[0.0000016373649032175308,0.0000016783237697381992],[0.0000018130592707166215,0.0000020633219719456974],[0.0000017946955495062866,0.0000022429153432312887],[0.0000018089413060806692,0.000001962560190804652],[0.0000016557095250391285,0.0000019422968762228265],[0.0000012065398777849623,0.0000018766239691103692],[0.0000015868350828895927,0.0000017693702147880686],[0.0000012000747346974094,0.0000018518461502026184],[0.0000013455447742671822,0.0000014243570376493153],[0.0000013055580438958714,0.000001845011638579308]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[-0.42649051547050476,0.1916927695274353,0.5157324075698853],"rotation":[-0.9709521532058716,-0.03768915310502052,-0.23315322399139404,-0.038353826850652695],"used":true,"bodyHandle":1.41e-321,"linearSpeed":1.1448241655075721e-7,"angularVelocityHistory":[[0.002231327351182699,0.0046958052553236485],[-0.012697924859821796,0.012050251476466656],[-0.001560691394843161,0.00502785062417388],[-0.010166475549340248,-0.0011055395007133484],[-0.011762451380491257,0.017402779310941696],[-0.014775567688047886,0.02071557193994522],[0.00853642262518406,-0.006930866744369268],[-0.006958184763789177,0.007107209414243698],[0.0004687790060415864,0.011042539030313492],[-0.006285648327320814,0.0027380536776036024],[0.001816582982428372,0.009221109561622143]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.059510957449674606,0.20912033319473267,0.6354998350143433],"rotation":[0.009584350511431694,-0.4504203796386719,0.00351602747105062,-0.8927582502365112],"used":true,"bodyHandle":1.413e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.12543223798274994,0.023341482505202293],[0.13912907242774963,0.10816224664449692],[0.13522100448608398,-0.03755394369363785],[-0.449583500623703,0.02080908603966236],[-0.1736195832490921,-0.1538843810558319],[-0.15637852251529694,-0.30641984939575195],[-0.4405544698238373,0.3689517676830292],[0.0026187263429164886,0.09201174229383469],[0.2673312723636627,0.2312239408493042],[0.1301986277103424,-0.15838150680065155]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05970035120844841,0.20773117244243622,0.7049094438552856],"rotation":[0.0013291314244270325,0.7052112221717834,0.0026497673243284225,-0.7089910507202148],"used":true,"bodyHandle":1.42e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.040331944823265076,-0.23948527872562408],[0.07321473211050034,-0.4298256039619446],[-0.21776194870471954,-0.06765593588352203],[0.09493676573038101,0.06850016862154007],[-0.10859157890081406,0.37484127283096313],[0.10897848010063171,0.23322735726833344],[0.1612342894077301,-0.04185851663351059],[0.3252703845500946,0.07923109829425812],[-0.05161866918206215,0.2813206613063812],[-0.017851902171969414,0.13126307725906372]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5248112678527832,0.186262845993042,0.5380722880363464],"rotation":[-0.010570045560598373,0.7397317886352539,-0.06399444490671158,-0.6697684526443481],"used":true,"bodyHandle":1.423e-321,"linearSpeed":1.7987154498834374e-7,"angularVelocityHistory":[[-0.00033185293432325125,-0.0017692437395453453],[0.002283800859004259,-0.0016558690695092082],[0.004462876822799444,0.0013547968119382858],[-0.005756769794970751,-0.006715311203151941],[-0.004000566434115171,-0.010236878879368305],[-0.0020357700996100903,-0.009774081408977509],[0.013579699210822582,0.010858288034796715],[-0.006305197719484568,-0.009857742115855217],[-0.005976867396384478,-0.013251490890979767],[-0.005499962717294693,-0.007882555015385151],[-0.004442750941962004,-0.0069960118271410465]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.000010282557923346758,0.2080591320991516,0.7376971244812012],"rotation":[0.015194740146398544,0.07529015094041824,-0.011501799337565899,0.9969795346260071],"used":true,"bodyHandle":1.43e-321,"linearSpeed":0,"angularVelocityHistory":[[0.25574377179145813,0.05158931389451027],[0.0029020027723163366,-0.05383647233247757],[0.16458073258399963,0.061572618782520294],[0.07715664803981781,0.0943949818611145],[0.07667937874794006,-0.11877462267875671],[0.26885172724723816,0.10509093850851059],[0.06676051765680313,0.05823855102062225],[-0.00680935475975275,0.034643832594156265],[-0.20872902870178223,-0.3466796278953552],[-0.09660476446151733,-0.11935555189847946]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.058030758053064346,0.2117258459329605,0.7037618160247803],"rotation":[0.003058115253224969,-0.4023730158805847,-0.01684190332889557,-0.9153156876564026],"used":true,"bodyHandle":1.433e-321,"linearSpeed":0,"angularVelocityHistory":[[0.24936749041080475,-0.08848773688077927],[-0.05041806399822235,0.04461653530597687],[-0.17738276720046997,-0.09256113320589066],[-0.024624330922961235,-0.08440403640270233],[-0.12165375053882599,0.02786301262676716],[-0.2545318901538849,0.18284355103969574],[-0.08790750801563263,0.35047876834869385],[-0.300711065530777,0.14408250153064728],[-0.07861216366291046,0.02142781764268875],[0.15754592418670654,-0.006927031558007002]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05958211421966553,0.2083054631948471,0.6370156407356262],"rotation":[-0.005528021603822708,-0.24033139646053314,0.011308303102850914,0.9706093072891235],"used":true,"bodyHandle":1.44e-321,"linearSpeed":0,"angularVelocityHistory":[[0.09688585251569748,-0.3082776963710785],[0.09447696059942245,0.0752832293510437],[-0.4114622175693512,0.32062867283821106],[-0.017398379743099213,-0.11846380680799484],[0.07611101865768433,0.10701335221529007],[0.034387875348329544,0.4503747522830963],[0.015488509088754654,-0.20955196022987366],[-0.05062922090291977,0.016462163999676704],[0.1478048861026764,-0.05519356206059456],[0.006142840720713139,-0.3055761456489563]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.33327439427375793,0.17993776500225067,0.6848251223564148],"rotation":[0.6799988746643066,-0.00864215474575758,0.7331610918045044,-0.0012712478637695312],"used":true,"bodyHandle":1.443e-321,"linearSpeed":4.004047489745371e-14,"angularVelocityHistory":[[-0.0000045044312173558865,-4.6442727352769e-7],[-0.00000457290161648416,-4.6160724309629586e-7],[-0.000004500108843785711,-5.531665578928369e-7],[-0.00000453814664069796,-4.827650172956055e-7],[-0.000004497359441302251,-4.5190827790975163e-7],[-0.000004499418082559714,-5.828857752021577e-7],[-0.00000440385611000238,-4.394383665839996e-7],[-0.000004606128641171381,-6.075762826185382e-7],[-0.000004513685780693777,-7.317354970837187e-7],[-0.000004544850980892079,-6.337743911899452e-7],[-0.000004669573172577657,-6.540240065078251e-7]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.44296643137931824,0.1775379776954651,0.7032463550567627],"rotation":[0.833781361579895,0.02768942527472973,-0.5488802194595337,0.0526534728705883],"used":true,"bodyHandle":1.45e-321,"linearSpeed":0.00010176988160753701,"angularVelocityHistory":[[0.000057690867834025994,0.00002390447843936272],[-0.000024876411771401763,0.00009350572508992627],[0.00036433577770367265,-0.0002031945186899975],[0.00003905212724930607,0.00001771904317138251],[-0.00003263714461354539,0.00009796560334507376],[0.00046759002725593746,-0.00023902319662738591],[0.00005959541522315703,0.000031985855457605794],[-0.00005620900265057571,0.00003725988062797114],[0.0006424330058507621,-0.000383868464268744],[0.000044497526687337086,0.00005637958747684024],[-0.00003450812437222339,0.00007220435509225354]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0014888955047354102,0.20956973731517792,0.6724979877471924],"rotation":[-0.020580485463142395,-0.10300862789154053,0.002018948318436742,0.9944654703140259],"used":true,"bodyHandle":1.453e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.11260899901390076,0.06726402789354324],[0.022491225972771645,0.0395796112716198],[0.3746596574783325,0.1303456574678421],[0.277488112449646,-0.1327066570520401],[-0.29421141743659973,-0.3335568308830261],[-0.1400020718574524,0.05123181641101837],[0.20052124559879303,0.001687971642240882],[-0.2798444330692291,0.06149933114647865],[-0.33749523758888245,0.07144207507371902],[-0.166654571890831,-0.007336505688726902]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0003901977324858308,0.2105700820684433,0.5982396602630615],"rotation":[0.0037078377790749073,0.24541178345680237,-0.006012498866766691,0.9693931341171265],"used":true,"bodyHandle":1.457e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.26607272028923035,0.04067417234182358],[0.13084565103054047,0.0829935148358345],[-0.02160521224141121,-0.1197345107793808],[-0.18765293061733246,-0.185200035572052],[-0.2573360502719879,-0.0091010807082057],[0.44823160767555237,0.09972063452005386],[-0.01928219571709633,-0.021305739879608154],[-0.15138134360313416,-0.004227111581712961],[-0.12479758262634277,0.0480639711022377],[0.014987754635512829,-0.05654224380850792]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.440569132566452,0.19635440409183502,0.5133846402168274],"rotation":[0.018454859033226967,-0.9704110026359558,0.05318561941385269,0.23480455577373505],"used":true,"bodyHandle":1.46e-321,"linearSpeed":0.0000010299846846327815,"angularVelocityHistory":[[0.007413497194647789,0.008093956857919693],[-0.010798795148730278,0.0209509264677763],[0.0009312295005656779,0.011601674370467663],[-0.009850786998867989,0.004900635685771704],[-0.019143227487802505,0.029255017638206482],[-0.027447812259197235,0.033015307039022446],[0.013711054809391499,-0.007281468715518713],[-0.015659814700484276,0.015724925324320793],[-0.001322191208600998,0.023638756945729256],[-0.007640528492629528,0.012097638100385666],[-0.0026309562381356955,0.017372850328683853]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.08676595985889435,0.17432604730129242,0.7914080023765564],"rotation":[-0.9841415882110596,0.0016435342840850353,-0.17737430334091187,-0.0009835344972088933],"used":true,"bodyHandle":1.467e-321,"linearSpeed":6.604237224781126e-16,"angularVelocityHistory":[[-0.000012161044651293196,0.00001031418469210621],[-0.000009660247087595053,0.0000017854649740911555],[-0.000010687292160582729,-0.000008355133104487322],[0.000001288144403588376,-0.000004767851805809187],[-0.0000017060759773812606,-1.3575714774560765e-7],[0.0000037015704492660007,0.0000011157632116010063],[0.0000018696939605433727,-0.000014279130482464097],[0.000003069009153477964,-0.000027289343051961623],[-0.000048134883400052786,-0.0000018483078747522086],[0.00001424900347046787,-0.000019725144738913514],[-4.744315162952262e-7,0.000050345712224952877]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[0.05977435037493706,0.21102386713027954,0.6355970501899719],"rotation":[0.002222561975941062,-0.0701717808842659,0.00585322268307209,0.9975152611732483],"used":true,"bodyHandle":1.47e-321,"linearSpeed":0,"angularVelocityHistory":[[0.06593192368745804,-0.17696405947208405],[0.11796638369560242,0.09126855432987213],[-0.3514750003814697,0.3794421851634979],[0.04930968955159187,-0.11210791021585464],[0.04072036221623421,0.22925496101379395],[0.08334001898765564,0.3352953791618347],[0.023531552404165268,-0.175728440284729],[0.04775284230709076,-0.030713869258761406],[0.212192103266716,-0.1294306516647339],[0.03616906329989433,-0.2905723750591278]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0594346709549427,0.21019183099269867,0.7040467858314514],"rotation":[0.0009986754739657044,-0.02991858683526516,-0.01676224172115326,-0.9994112253189087],"used":true,"bodyHandle":1.477e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.19173090159893036,-0.01611737161874771],[-0.1209559366106987,0.04729769751429558],[-0.10797030478715897,-0.18047191202640533],[-0.02888980321586132,-0.09891554713249207],[0.059971727430820465,-0.01906106248497963],[-0.2177942842245102,0.20247428119182587],[-0.13811910152435303,0.15094885230064392],[-0.1834910809993744,0.21613812446594238],[-0.07508837431669235,-0.006054392550140619],[0.24975468218326569,-0.04372682049870491]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.001660993555560708,0.21038979291915894,0.7392934560775757],"rotation":[0.00008228659862652421,0.28883999586105347,0.000286393566057086,0.9573773145675659],"used":true,"bodyHandle":1.48e-321,"linearSpeed":0,"angularVelocityHistory":[[0.1493346393108368,0.14297525584697723],[-0.0021149031817913055,-0.07505816966295242],[0.16851972043514252,0.006720034871250391],[0.10425857454538345,0.0490090511739254],[0.09583961218595505,-0.501582145690918],[0.2602851390838623,-0.00004609457027981989],[0.1482710987329483,0.015924746170639992],[-0.059916216880083084,0.09945689141750336],[0.004310541786253452,-0.14645130932331085],[-0.09036588668823242,-0.09957382827997208]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5188964605331421,0.174316868185997,0.4823229908943176],"rotation":[-0.004395794123411179,0.9650694727897644,-0.00286676874384284,0.26194149255752563],"used":true,"bodyHandle":1.487e-321,"linearSpeed":6.734672157924279e-10,"angularVelocityHistory":[[0.0008436530479229987,-0.0010130215669050813],[0.00014519480464514345,0.0015403948491439223],[0.0019162569660693407,0.000636577547993511],[-0.0038693018723279238,-0.00023410632275044918],[0.0015724835684522986,-0.004067938309162855],[0.0006117425509728491,0.002433916786685586],[0.003911974839866161,-0.0003652126179076731],[-0.0016880600014701486,-0.0014202500460669398],[-0.0021092575043439865,0.0010194756323471665],[0.00100706669036299,-0.0017105004517361522],[-0.0002031128533417359,0.003111450234428048]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06144401431083679,0.21114033460617065,0.7052968144416809],"rotation":[-0.007028126623481512,0.30189797282218933,0.0021725334227085114,-0.9533118009567261],"used":true,"bodyHandle":1.49e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.04973844066262245,-0.3140386939048767],[0.010502325370907784,-0.22329336404800415],[-0.15752683579921722,-0.05593552440404892],[0.06932666897773743,0.12483899295330048],[-0.04579697176814079,0.387247234582901],[0.07538614422082901,0.22971883416175842],[0.1725589781999588,-0.09852240234613419],[0.3088185787200928,0.07778840512037277],[-0.008051658980548382,0.2636062204837799],[-0.03355499356985092,0.1843687742948532]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.061764948070049286,0.21115396916866302,0.6348358392715454],"rotation":[0.005980959162116051,-0.6004511713981628,0.0056898449547588825,-0.7996187806129456],"used":true,"bodyHandle":1.497e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.11696728318929672,0.03098263405263424],[0.2005346268415451,0.0824960321187973],[0.23306633532047272,-0.042002853006124496],[-0.33396562933921814,-0.06344366073608398],[-0.12980332970619202,-0.18464744091033936],[-0.11971007287502289,-0.14620889723300934],[-0.35367104411125183,0.3804740905761719],[-0.017324544489383698,0.09109028428792953],[0.2766300141811371,0.18779346346855164],[0.13949193060398102,-0.1919640749692917]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4149887263774872,0.18775209784507751,0.5280860662460327],"rotation":[0.9806241393089294,0.022141261026263237,-0.19174452126026154,-0.033467479050159454],"used":true,"bodyHandle":1.5e-321,"linearSpeed":2.599893787622262e-8,"angularVelocityHistory":[[-0.0014314644504338503,0.00443350151181221],[-0.000015889057976892218,0.006854170002043247],[0.002359145786613226,-0.008774756453931332],[-0.0024355680216103792,0.001524963416159153],[0.0003606553946156055,0.005259884987026453],[-0.0006209066486917436,-0.002275989158079028],[-0.00090285629266873,0.0021742957178503275],[-0.000990060856565833,-0.005782910622656345],[-0.0010500323260203004,0.004243748728185892],[0.00207804748788476,-0.00426202779635787],[-0.0035399096086621284,0.004858045373111963]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5126134157180786,0.18221651017665863,0.5429089665412903],"rotation":[-0.965029239654541,-0.04774312674999237,-0.256912499666214,-0.020858056843280792],"used":true,"bodyHandle":1.507e-321,"linearSpeed":7.192301333408455e-8,"angularVelocityHistory":[[-0.001685356954112649,-0.0013164130505174398],[-0.0013206142466515303,0.002346734283491969],[0.002444820012897253,0.00020252959802746773],[-0.005123049486428499,-0.003930864855647087],[-0.00773356668651104,-0.006067817099392414],[-0.006513176020234823,-0.0023262386675924063],[0.011753374710679054,0.007136554457247257],[-0.005405244883149862,-0.0073439329862594604],[-0.008004991337656975,-0.005699360743165016],[-0.00676113972440362,-0.005867036059498787],[-0.006998638156801462,0.000016112498997244984]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.33281975984573364,0.17434759438037872,0.6037891507148743],"rotation":[-0.9874733686447144,-0.0022496571764349937,0.1577528566122055,-0.002309010596945882],"used":true,"bodyHandle":1.51e-321,"linearSpeed":4.2048813840756746e-11,"angularVelocityHistory":[[-0.0004837347660213709,-0.0004574622435029596],[-0.002428731881082058,0.0005251975962892175],[-0.0002823428076226264,-0.00030799928936176],[0.00011607570922933519,0.0005298440810292959],[-0.0000542610687261913,-0.00008093143696896732],[0.00034380349097773433,0.0009184309164993465],[0.0005836840136907995,-0.00014556761016137898],[0.00015487227938137949,0.000798596243839711],[0.00009027487976709381,-0.0009109178790822625],[0.0004350190283730626,0.0013085564132779837],[0.000049836835387395695,-0.00004997833457309753]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[-0.4277859330177307,0.17358078062534332,0.545364260673523],"rotation":[0.9988391399383545,0.006522651761770248,-0.046710506081581116,0.009793137200176716],"used":true,"bodyHandle":1.517e-321,"linearSpeed":2.031712305014457e-10,"angularVelocityHistory":[[0.00016867056547198445,0.001117213978432119],[0.0008434093906544149,-0.0021102502942085266],[0.00014030892634764314,-0.00015019711281638592],[0.0015352779300883412,0.000545620743650943],[-0.002675100928172469,-0.003210893366485834],[-0.004545195028185844,-0.0036913366056978703],[0.0012310548918321729,0.0019525387324392796],[-0.00007418529276037589,-0.0005981914000585675],[-0.001141356653533876,0.0014628216158598661],[-0.00007092027954058722,-0.0010267767356708646],[-0.0013966946862637997,-0.00047018728218972683]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[0.0018854388035833836,0.21107138693332672,0.6689602136611938],"rotation":[0.002310117706656456,-0.43108662962913513,0.0037569934502243996,-0.902299702167511],"used":true,"bodyHandle":1.52e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.12496813386678696,0.018724678084254265],[0.03121326118707657,0.051905520260334015],[0.2642776668071747,0.1715756058692932],[0.12379071861505508,-0.03391517326235771],[-0.16333642601966858,-0.18414412438869476],[-0.07737945020198822,-0.17636041343212128],[0.18804942071437836,-0.16774901747703552],[-0.10684892535209656,-0.29600274562835693],[-0.17135752737522125,0.07696298509836197],[-0.1675134003162384,0.11964332312345505]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0005485595902428031,0.2132706493139267,0.6011172533035278],"rotation":[-0.010787454433739185,-0.2814182639122009,0.006115869618952274,-0.9595050811767578],"used":true,"bodyHandle":1.527e-321,"linearSpeed":0,"angularVelocityHistory":[[0.29259786009788513,-0.14411208033561707],[0.09896387904882431,0.02410034090280533],[-0.12355532497167587,-0.11210617423057556],[-0.00030316560878418386,-0.11781772971153259],[-0.2306635081768036,-0.0349133238196373],[0.2403452843427658,0.09924891591072083],[-0.03629491105675697,-0.04270858317613602],[-0.18627585470676422,-0.008364490233361721],[-0.07892204076051712,0.04051443189382553],[0.08392858505249023,-0.12699684500694275]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5104891657829285,0.18107694387435913,0.6672492623329163],"rotation":[0.04128098115324974,-0.32745644450187683,-0.04631364718079567,-0.9428272247314453],"used":true,"bodyHandle":1.53e-321,"linearSpeed":3.098273492670199e-11,"angularVelocityHistory":[[0.0020900554955005646,0.00013554705947171897],[-0.006054854020476341,-0.00181145453825593],[0.004057802259922028,0.0015834532678127289],[-0.002566133625805378,-0.001978948013857007],[0.00000403338481191895,-0.00020597856200765818],[0.0002162631571991369,-0.00004011714190710336],[-0.0007333378889597952,0.00007083539094310254],[-0.0008111190400086343,-0.0003006577317137271],[-0.0005229939124546945,-0.00046621650108136237],[-0.00012622802751138806,0.0001819491881178692],[-0.0003069735539611429,-0.0001084536561393179]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.4912090599536896,0.1741427779197693,0.4960065484046936],"rotation":[-0.20802442729473114,-0.00552337383851409,0.9781078100204468,0.0006628846167586744],"used":true,"bodyHandle":1.537e-321,"linearSpeed":9.899300902278104e-10,"angularVelocityHistory":[[-0.000889702991116792,0.0011782740475609899],[0.0012336974032223225,-0.002819124609231949],[-0.0003540190518833697,0.0008651227108202875],[0.00041882225195877254,-0.0014404729008674622],[0.0006390855414792895,0.00017388765991199762],[0.0003400308487471193,-0.0016983941895887256],[0.0002460945979692042,-0.000055204061936819926],[0.0002257691085105762,-0.00014117610407993197],[0.000492690596729517,-0.0011657102731987834],[-0.000060508056776598096,0.0005363390082493424],[-0.00018924835603684187,-0.001193310134112835]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5354567766189575,0.18073643743991852,0.3741768002510071],"rotation":[-0.09239041805267334,0.5464802980422974,-0.04787231609225273,0.8309822678565979],"used":true,"bodyHandle":1.54e-321,"linearSpeed":3.990922862599966e-9,"angularVelocityHistory":[[-0.00020930205937474966,0.0014382257359102368],[-0.00030043243896216154,0.001382139977067709],[-0.0004037191392853856,0.004289350472390652],[-0.00011733463179552928,0.0017440634546801448],[-0.0015372138004750013,0.003223547711968422],[-0.0005292629357427359,0.0018619330367073417],[0.0013484717346727848,0.0006329784519039094],[-0.0009630621061660349,0.001938076806254685],[-0.00013594339543487877,-0.00015323628031183034],[-0.0005203927285037935,-0.001120309461839497],[-0.00048726433306001127,0.003280519973486662]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.5348799228668213,0.1740889996290207,0.5408037304878235],"rotation":[0.2186690866947174,-0.002788363955914974,-0.9757946729660034,0.0008761758217588067],"used":true,"bodyHandle":1.546e-321,"linearSpeed":8.505988338235324e-12,"angularVelocityHistory":[[-0.0000030743917704967316,-0.000011502296729304362],[0.0000058788323258340824,0.000021050018403911963],[-0.000016463029169244692,-0.0000019720046111615375],[0.000011054581591452006,0.00006986712833167985],[-0.00002932064307969995,0.000005485827387019526],[0.000008110364433377981,0.0000016979695374175208],[8.861316587172041e-7,-0.000009920679076458327],[-0.000020159402993158437,-0.00003372873834450729],[-0.00005796262121293694,-0.00003577199095161632],[-0.00006421616126317531,0.0000986430823104456],[-0.0000957624361035414,-0.00011045639257645234]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[-0.09601355344057083,0.17984306812286377,0.8044899106025696],"rotation":[-0.0013498540502041578,0.7913931608200073,-0.003420391818508506,0.6112964153289795],"used":true,"bodyHandle":1.55e-321,"linearSpeed":1.8401941363613714e-13,"angularVelocityHistory":[[-0.00005196219353820197,0.00003140494300168939],[-0.000023736885850667022,0.000006125685104052536],[-0.000041942563257180154,3.9446504729312437e-7],[-0.000018124323105439544,0.0000030333073937072186],[-0.000009797795428312384,0.000016835461792652495],[-0.000004291100594855379,-0.0000013682625876754173],[-0.000009480090739089064,0.000006628200935665518],[4.691314927640633e-7,0.00004136084680794738],[-0.00012503097241278738,-0.00001200869428430451],[0.0000298176546493778,-0.000027344336558599025],[-0.00001455541314498987,0.00003153890065732412]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.3091542720794678,0.17991013824939728,0.7494360208511353],"rotation":[0.17209365963935852,0.004237891174852848,-0.9850679636001587,0.0026078291703015566],"used":true,"bodyHandle":1.556e-321,"linearSpeed":0,"angularVelocityHistory":[[0.000005819909347337671,-0.000011451762475189753],[0.0000058116947911912575,-0.000011473608537926339],[0.00000567926781513961,-0.000011413646461733151],[0.000005663869615091244,-0.000011425638149376027],[0.000005742535904573742,-0.000011541027561179362],[0.000005802381110697752,-0.0000113367232188466],[0.0000057591769291320816,-0.000011377868759154808],[0.0000058378336689202115,-0.00001135426191467559],[0.000005736608727602288,-0.000011375140275049489],[0.0000057113775255857036,-0.000011367566003173124]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05917380005121231,0.21371400356292725,0.6354236006736755],"rotation":[0.010179278440773487,-0.7495285868644714,0.007535272277891636,-0.6618507504463196],"used":true,"bodyHandle":1.56e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.09821154922246933,0.011207271367311478],[0.2145223170518875,0.10040324181318283],[0.24403084814548492,-0.12483764439821243],[-0.47923240065574646,0.05093253776431084],[-0.2534305453300476,-0.04698949679732323],[-0.19112466275691986,-0.34540873765945435],[-0.414276123046875,0.4480944275856018],[0.04482175409793854,0.05429941415786743],[0.2800130546092987,0.1777605414390564],[0.12321928143501282,-0.1861119568347931]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5209624767303467,0.1797109693288803,0.421064168214798],"rotation":[-0.9641939401626587,0.0008467850275337696,-0.2650635540485382,-0.008405813947319984],"used":true,"bodyHandle":1.566e-321,"linearSpeed":1.6843057444409718e-9,"angularVelocityHistory":[[-0.0007457067840732634,-0.0001047663827193901],[-0.0008856459171511233,-0.0014587243786081672],[0.0006377729587256908,0.0017347000539302826],[-0.0005845420528203249,0.00020940405374858528],[0.0032038067001849413,-0.001983383670449257],[-0.00023671507369726896,-0.0019242247799411416],[-0.0019308262271806598,-0.0004284260794520378],[0.003339794697239995,0.0002523996226955205],[0.00010201001714449376,-0.00030967863858677447],[0.0007049497216939926,-0.0005061659030616283],[0.0008816754561848938,-0.0010230208281427622]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05698559433221817,0.2131727933883667,0.7056924104690552],"rotation":[-0.006753698457032442,-0.2588341534137726,0.0011282105697318912,-0.9658975005149841],"used":true,"bodyHandle":1.57e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.03487510234117508,-0.40293577313423157],[0.10482548177242279,-0.22849078476428986],[0.010025723837316036,0.17757587134838104],[0.024151861667633057,0.08318258076906204],[-0.08328744769096375,0.5657652616500854],[0.11582943797111511,0.19500209391117096],[0.19735932350158691,-0.18098010122776031],[0.059468887746334076,-0.06984403729438782],[-0.02537469007074833,0.27367499470710754],[-0.06437870860099792,0.031484611332416534]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5207869410514832,0.17409701645374298,0.40457475185394287],"rotation":[0.6094744801521301,-0.004471589811146259,-0.7927930355072021,0.00012551626423373818],"used":true,"bodyHandle":1.576e-321,"linearSpeed":1.6438082624848905e-11,"angularVelocityHistory":[[0.0006993459537625313,0.0003048941434826702],[0.00017400376964360476,0.0009994929423555732],[0.00004898449333268218,-0.0007969585712999105],[0.001072384649887681,-0.0002487104502506554],[-0.0007329111103899777,-0.0013685420854017138],[0.0001979098451556638,0.0017527244053781033],[0.0012298253132030368,-0.0007517786580137908],[-0.00030122880707494915,-0.000262099172687158],[-0.000019585395421017893,0.001442227279767394],[-0.00006100994869484566,0.0001857917959569022],[-0.000986822647973895,-0.00007919447671156377]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00033993617398664355,0.2127746194601059,0.7372756600379944],"rotation":[0.0037496353033930063,0.2894973158836365,-0.00046998990001156926,0.9571713209152222],"used":true,"bodyHandle":1.58e-321,"linearSpeed":0,"angularVelocityHistory":[[0.13296203315258026,0.12194795906543732],[0.0034153887536376715,-0.09223039448261261],[0.15972347557544708,0.0249034333974123],[0.07519274950027466,0.0853419080376625],[0.08316263556480408,-0.32291045784950256],[0.2953576147556305,0.048659730702638626],[0.10183443129062653,0.00783590879291296],[-0.009695664048194885,0.0016567145939916372],[-0.17023244500160217,-0.09929555654525757],[-0.09761544317007065,-0.0736391693353653]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5304388999938965,0.17983858287334442,0.47922176122665405],"rotation":[-0.005274106282740831,0.7601830959320068,-0.005739795509725809,0.6496621370315552],"used":true,"bodyHandle":1.586e-321,"linearSpeed":7.824630306450933e-8,"angularVelocityHistory":[[0.0010947718983516097,-0.002837416250258684],[0.00006790767656639218,0.004642181564122438],[-0.0016082270303741097,-0.0006204121164046228],[-0.000625540385954082,-0.001040319330058992],[0.001873498666100204,-0.005719767417758703],[0.00011852967145387083,0.003903300268575549],[0.0021288087591528893,-0.0017832624725997448],[-0.0009303931146860123,-0.003889732761308551],[0.0014474834315478802,-0.0020952613558620214],[0.0033641497138887644,-0.004976596683263779],[0.006289467215538025,0.012081634253263474]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4696654677391052,0.18568235635757446,0.5986882448196411],"rotation":[-0.002543863607570529,-0.9999847412109375,-0.004893789067864418,-0.00018440670100972056],"used":true,"bodyHandle":1.59e-321,"linearSpeed":3.442880417083429e-7,"angularVelocityHistory":[[0.003756110556423664,0.0008611992234364152],[-0.002045092871412635,0.01514984481036663],[-0.0023438087664544582,0.006834843661636114],[0.0018524047918617725,-0.0002233059931313619],[-0.00006899995059939101,0.005447712726891041],[-0.0023113444913178682,0.01679929345846176],[0.0027133291587233543,0.0038708422798663378],[0.003002688754349947,-0.00029425922548398376],[0.007010547444224358,-0.00006896500417497009],[0.0025723022408783436,0.0021464552264660597],[-0.0010609884047880769,0.01816597208380699]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.05848471820354462,0.2132164090871811,0.7042743563652039],"rotation":[0.005890045780688524,-0.6839596629142761,-0.012307561933994293,-0.7293921709060669],"used":true,"bodyHandle":1.596e-321,"linearSpeed":0,"angularVelocityHistory":[[0.1303529590368271,-0.004462536424398422],[-0.05771416425704956,0.05104583874344826],[-0.18448254466056824,0.03389201685786247],[-0.029632100835442543,-0.13411927223205566],[0.1077321395277977,-0.05221617594361305],[-0.21531879901885986,0.26216116547584534],[-0.3191731870174408,0.19921481609344482],[-0.23739326000213623,0.14355093240737915],[-0.10692254453897476,0.014066021889448166],[0.2782953977584839,0.10704254359006882]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06063223257660866,0.2131877988576889,0.6364855170249939],"rotation":[-0.0035628601908683777,0.9843837022781372,0.006060798652470112,0.17589549720287323],"used":true,"bodyHandle":1.6e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.0158171895891428,-0.11940407752990723],[-0.0034777377732098103,0.16960355639457703],[-0.3386993706226349,0.3581922650337219],[0.05801049619913101,-0.13508358597755432],[0.016766667366027832,0.09981594234704971],[-0.05810771882534027,0.4115736782550812],[0.026117177680134773,-0.1903669238090515],[-0.015729019418358803,0.015372728928923607],[0.15409891307353973,-0.1264244168996811],[-0.0008151486981660128,-0.31010016798973083]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.30736401677131653,0.17424757778644562,0.6852313280105591],"rotation":[-0.00551398191601038,0.07682814449071884,-0.001763983629643917,-0.9970275163650513],"used":true,"bodyHandle":1.606e-321,"linearSpeed":1.9667894488781367e-12,"angularVelocityHistory":[[-0.0004489031562115997,0.0004221002454869449],[0.0001709557109279558,0.0005059048999100924],[-0.00029829199775122106,0.00002078667785099242],[-0.00017781184578780085,-0.0001371621765429154],[-0.0000062277772485686,0.0005396682536229491],[-0.00032014219323173165,0.0001949720026459545],[-0.00010294187813997269,0.00045070648775435984],[0.0027945982292294502,-0.0006095648277550936],[0.002701305318623781,0.0005329102859832346],[0.0016339212888851762,-0.0018221440259367228],[0.0016570939915254712,0.00023693882394582033]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.44515419006347656,0.18243150413036346,0.5386196970939636],"rotation":[-0.045890744775533676,0.32590019702911377,0.015619530342519283,0.944160521030426],"used":true,"bodyHandle":1.61e-321,"linearSpeed":1.549657639386377e-8,"angularVelocityHistory":[[0.0012234178138896823,0.0037682310212403536],[-0.0005427729338407516,0.005149501375854015],[0.0006598985055461526,0.0034344156738370657],[-0.0013850831892341375,-0.0016770202200859785],[-0.00043954350985586643,0.010504449717700481],[-0.003732535755261779,0.01353214867413044],[0.0027438453398644924,-0.005732299759984016],[-0.0025940060149878263,-0.0014007200952619314],[-0.0032400900963693857,0.003988189622759819],[0.0011746319942176342,0.0023109905887395144],[-0.003536724718287587,0.0030439773108810186]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4312497079372406,0.1785583347082138,0.5443210005760193],"rotation":[-0.5915558338165283,-0.031090781092643738,-0.8056610226631165,0.0023081894032657146],"used":true,"bodyHandle":1.616e-321,"linearSpeed":1.4345191079502147e-8,"angularVelocityHistory":[[0.003394749481230974,0.0017923446139320731],[0.00019402532780077308,0.007457391824573278],[0.002523723291233182,0.002080002799630165],[-0.0014661892782896757,0.0036518622655421495],[0.002878181403502822,0.00965011678636074],[-0.0016853329725563526,0.013837871141731739],[0.0038121771067380905,-0.005166887771338224],[-0.003627110505476594,0.004932335577905178],[0.0006099958554841578,0.006072171963751316],[0.0004664597217924893,0.005572282709181309],[-0.0006038110004737973,0.004741592798382044]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5106644630432129,0.186888188123703,0.6665747165679932],"rotation":[-0.051245350390672684,0.5585734844207764,0.03356277570128441,0.8271898627281189],"used":true,"bodyHandle":1.62e-321,"linearSpeed":1.0147244364430696e-10,"angularVelocityHistory":[[0.0007712329388596117,-0.0007001254707574844],[-0.007919157855212688,-0.0034134378656744957],[0.002593602752313018,0.0002906091685872525],[-0.0016259221592918038,-0.0009966595098376274],[0.00024126796051859856,-0.00005196602432988584],[0.0001948685821844265,0.0003107665106654167],[-0.0008971714414656162,-0.00022131511650513858],[-0.0008578987326472998,-0.0002969206834677607],[-0.0008875650237314403,-0.0005591971566900611],[0.0009418412228114903,0.0009955757996067405],[-0.00025981260114349425,-0.00011228916991967708]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.5255073308944702,0.18024678528308868,0.3406628966331482],"rotation":[-0.9607170224189758,0.012625760398805141,0.26102519035339355,-0.09343050420284271],"used":true,"bodyHandle":1.625e-321,"linearSpeed":1.2489538675786637e-9,"angularVelocityHistory":[[-0.0002581829612608999,0.0005764299421571195],[-0.0007014928851276636,0.0006578856846317649],[-0.0014434874756261706,0.0023405563551932573],[-0.0013405941426753998,0.0016241163248196244],[-0.0015640734927728772,0.0016872903797775507],[-0.0009340854012407362,0.001267494517378509],[0.00015642021025996655,-0.00019827373034786433],[-0.002824152121320367,0.0031596471089869738],[-0.0003211550647392869,0.00074591557495296],[-0.000026884405087912455,0.00019376215641386807],[-0.0011924621649086475,0.0023205941542983055]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.36470669507980347,0.17429609596729279,0.5535495281219482],"rotation":[0.00009306371794082224,-0.640424907207489,0.0013134111650288105,-0.7680196166038513],"used":true,"bodyHandle":1.63e-321,"linearSpeed":1.2849479686819568e-10,"angularVelocityHistory":[[-0.0003651005099527538,-0.00028665439458563924],[-0.0032982260454446077,0.0016381671885028481],[0.0001132649413193576,-0.0009376056841574609],[-0.001989869400858879,-0.00023139816767070442],[-0.00012703187530860305,0.00000765092954679858],[-0.0012174199800938368,0.0009393048821948469],[0.000388480257242918,-0.0007123948307707906],[-0.0009482960449531674,0.0008734949515201151],[0.00003095472857239656,-0.0009498257422819734],[-0.0012264070101082325,0.0007602478726767004],[-0.00033711487776599824,0.0004363663902040571]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4748428463935852,0.18479491770267487,0.38278406858444214],"rotation":[-0.12009388208389282,-0.009566464461386204,-0.9926814436912537,0.008333180099725723],"used":true,"bodyHandle":1.635e-321,"linearSpeed":4.5192096721556216e-8,"angularVelocityHistory":[[-0.0002461643307469785,0.00004800852184416726],[0.00047543953405693173,-0.0001083787064999342],[-0.00628119520843029,0.0007051624124869704],[-0.005102083086967468,0.0004619501705747098],[-0.0019432043191045523,0.0019616682548075914],[-0.0029155020602047443,0.001928255776874721],[-0.0033736927434802055,0.001009343541227281],[0.0008440972305834293,-0.0007399877649731934],[0.0028854580596089363,0.0003606483223848045],[-0.0008415390620939434,0.00042476001544855535],[-0.0017138905823230743,0.001790807698853314]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.003099227324128151,0.2136995494365692,0.6703442931175232],"rotation":[-0.00843955297023058,-0.22537657618522644,0.008200721815228462,0.9742006659507751],"used":true,"bodyHandle":1.64e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.11983467638492584,0.03337505832314491],[0.012067483738064766,0.08212529867887497],[0.31753742694854736,0.05924859270453453],[0.048186905682086945,-0.0078396275639534],[-0.1470821052789688,-0.12971046566963196],[-0.12243054062128067,-0.39004072546958923],[0.11896663159132004,-0.26341891288757324],[-0.3812050223350525,-0.2004879117012024],[-0.25951048731803894,-0.024587005376815796],[-0.18511737883090973,0.08270516991615295]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3460478186607361,0.17844314873218536,0.6811268925666809],"rotation":[0.9207956790924072,0.05314205214381218,-0.3853081166744232,0.029134828597307205],"used":true,"bodyHandle":1.645e-321,"linearSpeed":1.4272069569155967e-9,"angularVelocityHistory":[[-0.05918178707361221,-0.008974429219961166],[-0.06170089915394783,-0.008751964196562767],[-0.06271133571863174,-0.009316889569163322],[-0.0631941482424736,-0.00923825055360794],[-0.06466314941644669,-0.009072829969227314],[-0.06541449576616287,-0.00906856544315815],[-0.06635644286870956,-0.009227975271642208],[0.37988489866256714,0.09053169935941696],[0.2454374134540558,0.04728119820356369],[0.24071966111660004,0.04511014744639397],[-0.5866685509681702,-0.12772910296916962]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.5516831278800964,0.1794234961271286,0.5316262245178223],"rotation":[0.9483214616775513,0.0009871398797258735,-0.31730759143829346,0.0011141058057546616],"used":true,"bodyHandle":1.65e-321,"linearSpeed":3.600799864088742e-9,"angularVelocityHistory":[[0.00005145787508809008,-0.000012940020496898796],[0.00004459874253370799,-0.00006240983930183575],[0.00004883945803157985,-0.000015622332284692675],[0.00005279597462504171,0.00005838324796059169],[0.0000021479308998095803,-0.0001142173568950966],[0.000038210586353670806,-0.00006839787238277495],[-1.788848180694913e-7,0.000015397205061162822],[-0.000022347241610987112,-0.00014381337678059936],[0.00002922183193732053,-0.00025092391297221184],[-0.000022296719180303626,0.00043790278141386807],[0.00005089724436402321,-0.00008659117884235457]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.2675682008266449,0.17441630363464355,0.7643069624900818],"rotation":[0.0014619427965953946,-0.8393412828445435,-0.0029749819077551365,0.5435946583747864],"used":true,"bodyHandle":1.655e-321,"linearSpeed":6.555053411198919e-16,"angularVelocityHistory":[[-0.0000026683962914830772,0.000026092353436979465],[-4.924131644656882e-7,-0.0000020214251890138257],[2.686535367502074e-7,-4.187776596609183e-7],[3.805299115811067e-7,-0.0000019972499103459995],[-0.000002804115865728818,0.000004226581495458959],[-2.9791806355206063e-7,-5.46150488389685e-7],[0.0000014264377341532963,-0.0000021165094494790537],[-0.000008024751878110692,0.00002916955236287322],[0.000015507961506955326,-0.00008534634980605915],[-0.000015018616068118718,-0.000014850636944174767],[-0.0000050900366659334395,0.0000404313686885871]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.42089536786079407,0.1794496774673462,0.5550307035446167],"rotation":[0.49252673983573914,-0.0015932845417410135,0.8702939748764038,0.001799517311155796],"used":true,"bodyHandle":1.66e-321,"linearSpeed":7.94290308138086e-8,"angularVelocityHistory":[[-0.0006418753764592111,-0.00008996663382276893],[-0.00003779062899411656,0.0007722234004177153],[0.0009430217905901372,-0.0007525573601014912],[-0.001730233198031783,-0.0013267070753499866],[0.0004440497141331434,0.0016033761203289032],[-0.0002945890591945499,0.0003408316115383059],[0.00003060439121327363,0.0007480113417841494],[-0.0015211210120469332,0.0006400832207873464],[-0.0016974651953205466,0.0017375375609844923],[0.0008697709417901933,-0.000292986718704924],[-0.0016245489241555333,-0.001805822248570621]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.5490851998329163,0.17471304535865784,0.3973983824253082],"rotation":[-0.8354974985122681,0.0015303227119147778,0.5494920015335083,-0.0004317709826864302],"used":true,"bodyHandle":1.665e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.00008040820102905855,0.007576043251901865],[0.00013943773228675127,-0.000081700345617719],[-0.0067965686321258545,0.009449592791497707],[-0.05933762714266777,0.03384273126721382],[0.000039386144635500386,0.00001571595566929318],[0.041744768619537354,-0.05678807199001312],[0.0003960762987844646,0.00262152636423707],[-0.00009711115853860974,-0.00008199374133255333],[-0.12899167835712433,0.11245045065879822],[-0.053248029202222824,0.014308752492070198]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00023618806153535843,0.214433953166008,0.6018511652946472],"rotation":[0.007622354198247194,0.5814676284790039,-0.00823816005140543,0.8134921789169312],"used":true,"bodyHandle":1.67e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.2749411165714264,-0.15682366490364075],[0.08664487302303314,0.05148501321673393],[-0.061894740909338,-0.1245075911283493],[0.007163353729993105,-0.17349353432655334],[-0.2240300178527832,-0.02152216248214245],[0.41168636083602905,0.08891576528549194],[0.00028541096253320575,-0.025446224957704544],[-0.11984323710203171,-0.00824753474444151],[-0.14037421345710754,-0.022312967106699944],[0.013837120495736599,-0.039185814559459686]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.2661347985267639,0.1801946461200714,0.7644802927970886],"rotation":[0.0021815861109644175,0.9771608114242554,0.003169143106788397,0.2124663144350052],"used":true,"bodyHandle":1.675e-321,"linearSpeed":1.4034606960879953e-13,"angularVelocityHistory":[[0.000011746238669729792,-0.000029356211598496884],[-0.00000357611588697182,-0.000012474065442802384],[-0.0000065077269937319215,-0.0000030797616545896744],[-5.657368973288612e-8,-0.000014172408555168658],[0.000001460279236198403,-0.00001307403090322623],[-0.000007291926522157155,-0.000005533559033210622],[-0.000011608517525019124,0.0000053302355809137225],[-0.000006295941147982376,0.000015487663404201157],[-0.0000537273044756148,-0.00008300774061353877],[-0.00002121338911820203,-0.000049500566092319787],[-0.00006405670137610286,0.00015469414938706905]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4789881110191345,0.18495731055736542,0.5067216157913208],"rotation":[0.017211956903338432,-0.26016679406166077,0.0038839285261929035,0.9654024243354797],"used":true,"bodyHandle":1.68e-321,"linearSpeed":1.3956798113358256e-7,"angularVelocityHistory":[[-0.0010349575895816088,-0.0012393688084557652],[0.002261129207909107,0.0012560648610815406],[-0.0018259898060932755,-0.0017046959837898612],[0.0012228288687765598,0.0015130700776353478],[-0.0007743217283859849,-0.001990087330341339],[0.001320795388892293,0.0017646831693127751],[-0.0008319869521073997,-0.0001578327501192689],[-0.0004667866451200098,0.00042001946712844074],[0.00032132217893376946,0.00123460846953094],[-0.0011363960802555084,0.0008640551823191345],[-0.0011731130070984364,0.001245513092726469]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4493474066257477,0.18648162484169006,0.5324378609657288],"rotation":[-0.9357163310050964,-0.042127013206481934,-0.3487135171890259,-0.032543081790208817],"used":true,"bodyHandle":1.685e-321,"linearSpeed":7.544155308998668e-8,"angularVelocityHistory":[[0.0020740393083542585,0.0027128641959279776],[0.0013679155381396413,0.011269922368228436],[0.0011896530631929636,0.005287326872348785],[-0.00113557162694633,-0.0001535907795187086],[0.0032158924732357264,0.021247027441859245],[0.005968374665826559,0.029102735221385956],[0.0022443095222115517,-0.010563869960606098],[-0.0030687060207128525,0.010008317418396473],[0.0004483131051529199,0.008630270138382912],[0.0033896223176270723,0.005141397938132286],[0.00043203996028751135,0.00965761300176382]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.5120341181755066,0.18543179333209991,0.670914888381958],"rotation":[-0.006225984543561935,0.5509650111198425,0.008332367986440659,-0.8344634771347046],"used":true,"bodyHandle":1.69e-321,"linearSpeed":8.263629275627815e-7,"angularVelocityHistory":[[0.0033434093929827213,-0.00009376087109558284],[0.00325333746150136,0.000021985148123349063],[0.0033150797244161367,-0.00003687070056912489],[0.002907338785007596,-0.00022197869839146733],[0.002445260062813759,0.0003668420249596238],[0.0015254381578415632,0.0008384126704186201],[0.0008310881094075739,0.000782956718467176],[0.0004953056923113763,0.0010181048419326544],[0.0002447031729388982,0.0011773552978411317],[-0.000026766540031530894,0.0010103033855557442],[-0.00037517829332500696,0.0013769337674602866]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.529904842376709,0.18031226098537445,0.469958633184433],"rotation":[-0.0030592340044677258,0.6365952491760254,0.0016536049079149961,-0.7711902856826782],"used":true,"bodyHandle":1.695e-321,"linearSpeed":8.27379823987357e-9,"angularVelocityHistory":[[-0.0008553903899155557,0.0009614426526241004],[0.0011227680370211601,-0.0013822908513247967],[-0.0005973459919914603,0.0008666785433888435],[0.0007099545910023153,-0.0010137323988601565],[-0.00008693134441273287,0.0003442366432864219],[0.0005928466562181711,-0.0010717849945649505],[-0.0002065956505248323,0.00037044353666715324],[0.0003676932246889919,-0.000549919146578759],[0.0004860909248236567,-0.0012539864983409643],[0.0000014978745639382396,-0.00041224248707294464],[-0.0006625395035371184,0.0002224369818577543]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.3879026770591736,0.17423686385154724,0.4998587965965271],"rotation":[0.16385768353939056,0.0004339065053500235,-0.9864535331726074,0.007729814387857914],"used":true,"bodyHandle":1.7e-321,"linearSpeed":7.228382711091122e-10,"angularVelocityHistory":[[0.0010172202019020915,-0.0035067852586507797],[0.0005773772136308253,-0.0019298313418403268],[-0.0005566021427512169,-0.00053744314936921],[0.002073336858302355,-0.0014604723546653986],[-0.0026503384578973055,-0.0023734956048429012],[-0.002722029574215412,-0.0020792451687157154],[0.00045319568016566336,-0.0008080078987404704],[0.0016178764635697007,0.0006073274416849017],[0.0006450617802329361,-0.0035825101658701897],[0.00180814100895077,0.001289944862946868],[0.0011236739810556173,0.00037066556978970766]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06047354266047478,0.2149464190006256,0.6363385915756226],"rotation":[0.002998166484758258,0.9872338175773621,0.00479601277038455,-0.1591775268316269],"used":true,"bodyHandle":1.705e-321,"linearSpeed":0,"angularVelocityHistory":[[0.12202422320842743,-0.17539820075035095],[0.02794731594622135,0.20227843523025513],[-0.3398496210575104,0.15050582587718964],[0.08235594630241394,-0.04208230599761009],[0.10001832246780396,0.07872598618268967],[0.030938489362597466,0.45525726675987244],[-0.010013984516263008,-0.1547800451517105],[-0.0817546397447586,0.015101252123713493],[0.15300481021404266,-0.04369283840060234],[0.001905868761241436,-0.30410876870155334]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.47935009002685547,0.1792740672826767,0.506314754486084],"rotation":[0.01428730133920908,-0.8780902624130249,-0.009655841626226902,0.4781840741634369],"used":true,"bodyHandle":1.71e-321,"linearSpeed":5.592476203345459e-8,"angularVelocityHistory":[[-0.00008702508785063401,-0.0006240382208488882],[-0.00017035692872013897,0.0007091920706443489],[-0.001200102618895471,-0.00014288630336523056],[-0.00008596049883635715,0.0009485579212196171],[-0.0005925406003370881,-0.0007434968720190227],[-0.00004805655044037849,0.0010930047137662768],[-0.00051462696865201,0.0001223299914272502],[-0.0003516380093060434,0.0002735402376856655],[-0.00013830601528752595,0.0010072439908981323],[-0.0003563250065781176,0.0008198459399864078],[-0.0006311420002020895,0.00018793524941429496]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.29834169149398804,0.17441827058792114,0.563779890537262],"rotation":[0.015158810652792454,-0.0050446647219359875,0.9998721480369568,-0.0006430677603930235],"used":true,"bodyHandle":1.714e-321,"linearSpeed":1.2891739978745978e-14,"angularVelocityHistory":[[0.00005748435069108382,0.00019109556160401553],[0.000026553381758276373,0.00004460055788513273],[0.00009928294457495213,0.000021916092009632848],[0.000038959777157288045,0.00003077257497352548],[-0.000028991413273615763,-0.00011007277498720214],[0.00010896147432504222,-0.00002350476643186994],[-0.00014996141544543207,-0.0003935123677365482],[0.00020361637871246785,0.00021799658134113997],[0.00014649251534137875,0.0003199382917955518],[-0.00012143090134486556,-0.0002674920833669603],[-0.000026113400963367894,0.00019187982252333313]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.05860299617052078,0.21610520780086517,0.7060837745666504],"rotation":[-0.006337845232337713,0.07584264874458313,-0.014952265657484531,-0.9969875812530518],"used":true,"bodyHandle":1.72e-321,"linearSpeed":0,"angularVelocityHistory":[[0.16670432686805725,-0.13910533487796783],[-0.08929240703582764,0.03526900336146355],[-0.12950755655765533,0.10136762261390686],[-0.013815484009683132,-0.07653927057981491],[0.06501990556716919,0.13175220787525177],[-0.1870625913143158,0.2003171592950821],[-0.09745653718709946,0.24140824377536774],[-0.21645060181617737,0.14013411104679108],[-0.07074102759361267,0.009825065732002258],[0.19953526556491852,0.01472755428403616]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.46174004673957825,0.17431099712848663,0.3982434570789337],"rotation":[-0.002619655802845955,0.8670095205307007,-0.0029251149389892817,0.498276025056839],"used":true,"bodyHandle":1.724e-321,"linearSpeed":5.346621938852671e-10,"angularVelocityHistory":[[-0.0000919622543733567,-0.000034510736441006884],[-0.0033916328102350235,0.00047867358080111444],[0.0005810951115563512,-0.0005888047162443399],[0.003872093977406621,-0.0020790572743862867],[-0.0017232473473995924,0.0012626175303012133],[0.0008092568605206907,0.0003369632759131491],[-0.00032585993176326156,0.00006782128184568137],[-0.0006601744098588824,-0.001118385698646307],[-0.003895165864378214,0.0012051495723426342],[-0.00021813908824697137,-0.000475613254820928],[-0.002049531089141965,0.0007157747750170529]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.33496370911598206,0.17999747395515442,0.6056525111198425],"rotation":[0.004799211397767067,-0.6784664988517761,0.0028405701741576195,-0.7346101999282837],"used":true,"bodyHandle":1.73e-321,"linearSpeed":4.212116189350019e-9,"angularVelocityHistory":[[-0.0001506435073679313,-0.0003894958645105362],[-0.0029980887193232775,0.000047422294301213697],[-0.0010583448456600308,-0.00033123794128187],[-0.002005258807912469,0.0001647466269787401],[0.00039237781311385334,0.00019567005801945925],[-0.0017679755110293627,-0.000026565905500319786],[0.000813117774669081,-0.0006150706904008985],[-0.0012032084632664919,-0.00031679708627052605],[0.0009319133241660893,-0.0005709425313398242],[-0.001815417897887528,0.0000546013870916795],[0.00023400386271532625,-0.0005700773908756673]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.17615315318107605,0.17427918314933777,0.8439670205116272],"rotation":[-0.0052391476929187775,0.7032762765884399,0.003417588770389557,-0.7108891010284424],"used":true,"bodyHandle":1.734e-321,"linearSpeed":8.801078075484225e-15,"angularVelocityHistory":[[-0.000017287104128627107,0.0000013536282494897023],[-0.00002140211836376693,0.000004100002570339711],[-0.000020003673853352666,-0.0000036456017369346227],[-0.000018649723642738536,0.000004351096322352532],[-0.000024339344236068428,-0.000004646621164283715],[-0.00002601331470941659,0.0000033596563753235387],[-0.000017092848793254234,-0.000006177215709612938],[-0.0000013533419860323193,-0.00001694044294708874],[-0.00005616317503154278,0.00007459723565261811],[-0.0000049404902711103205,-0.000022452015400631353],[-1.125771973420342e-7,-9.493726338405395e-7]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0007986862328834832,0.2149226814508438,0.7404545545578003],"rotation":[0.007940281182527542,-0.04000693932175636,0.0068216160871088505,0.9991445541381836],"used":true,"bodyHandle":1.74e-321,"linearSpeed":0,"angularVelocityHistory":[[0.05621160939335823,0.16125324368476868],[-0.03050222061574459,-0.07229570299386978],[0.13740357756614685,0.015053129754960537],[0.08672938495874405,0.07292313873767853],[0.17342109978199005,-0.37400686740875244],[0.2598186135292053,0.03751850873231888],[0.09690271317958832,0.012216851115226746],[-0.04133142530918121,0.05158184841275215],[-0.4831949770450592,-0.1351957768201828],[-0.10389593988656998,-0.15850310027599335]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.2559163570404053,0.17439961433410645,0.6548546552658081],"rotation":[-0.002434271154925227,0.7753171920776367,-0.00027156094438396394,0.6315672993659973],"used":true,"bodyHandle":1.744e-321,"linearSpeed":8.995436350274181e-14,"angularVelocityHistory":[[0.0000651129666948691,-0.00018477805133443326],[0.0006521691102534533,0.0011788993142545223],[-0.00002633192161738407,0.000054590083891525865],[0.0013928549597039819,0.0009935232810676098],[0.00020722158660646528,-0.0001703599700704217],[0.00008633149991510436,0.0005843747640028596],[0.0003845345345325768,-0.000013540969121095259],[-0.000368577049812302,0.0005865957937203348],[-0.0008299112087115645,0.0004531743470579386],[-0.0006196988397277892,-0.0015307042049244046],[0.0013035456649959087,0.002098629018291831]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.147096648812294,0.17430506646633148,0.7843148112297058],"rotation":[0.6232784390449524,-0.0014153068186715245,0.7819791436195374,0.005526609253138304],"used":true,"bodyHandle":1.75e-321,"linearSpeed":3.2088204452361856e-16,"angularVelocityHistory":[[-0.000013450115147861652,0.000020935125576215796],[0.000008703726052772254,-0.00000249067238655698],[0.00002223789124400355,-0.000022649814127362333],[-1.3630446460410894e-7,0.000025005698262248188],[0.0000013087878869555425,-0.0000027006562959286384],[2.2406655375561968e-7,0.00003108599048573524],[0.000011762069334508851,-7.980931968631921e-7],[0.000006897846105857752,-0.00002119047348969616],[0.00019699007680173963,0.00010381850734120235],[0.000044638527469942346,-0.0000904079934116453],[-0.00003353751162649132,-0.00009638624032959342]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.2651238739490509,0.17990721762180328,0.6851304173469543],"rotation":[0.005823618266731501,-0.9740734100341797,-0.0064091808162629604,0.22606639564037323],"used":true,"bodyHandle":1.754e-321,"linearSpeed":1.4624713024500445e-13,"angularVelocityHistory":[[-0.000014391807781066746,-0.000002394719103904208],[-0.00001455305300623877,-0.000002285150912939571],[-0.000013405707250058185,-0.000002525547870391165],[-0.000013451229278871324,-0.0000022018118670530384],[-0.000014165649190545082,-0.0000029805160011164844],[-0.00001494960451964289,-0.0000028042725261911983],[-0.000007700821697653737,4.77800838893927e-8],[-0.000014397003724297974,-0.0000034675472306844313],[-0.00001550429624330718,-0.0000012016462278552353],[-0.000014262289369071368,-0.0000031982258406060282],[-0.000014688848750665784,-0.000002785947344818851]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4017525613307953,0.17385992407798767,0.4978380501270294],"rotation":[-0.8567231297492981,-0.0031877709552645683,0.5157487988471985,0.004302095156162977],"used":true,"bodyHandle":1.76e-321,"linearSpeed":2.311157638522721e-10,"angularVelocityHistory":[[0.0006063441396690905,-0.0004435588780324906],[-0.000385462335543707,-0.0013521794462576509],[0.0003912807151209563,0.0017153926892206073],[-0.0008975620730780065,-0.0009495291742496192],[-0.000490209145937115,0.0005067387246526778],[0.00012102342589059845,0.00008750456618145108],[-0.000005474886165757198,-0.00016387944924645126],[-0.001222909428179264,0.0007267359178513288],[-0.0013082792283967137,-0.0014023006660863757],[0.0011396603658795357,0.0008788080886006355],[-0.00040122942300513387,-0.0028535963501781225]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[0.2765427827835083,0.1743052899837494,0.6234517693519592],"rotation":[0.0027628932148218155,0.392538845539093,0.0016389047959819436,0.9197297692298889],"used":true,"bodyHandle":1.764e-321,"linearSpeed":7.456101502966393e-12,"angularVelocityHistory":[[-0.00008640428131911904,0.00005586386032518931],[-0.000009130299986281898,0.0007936550537124276],[0.00014434538024943322,0.0001329338556388393],[-0.00013537515769712627,0.00018029830243904144],[0.00017097403178922832,-0.0001326687342952937],[-0.00009145550575340167,0.00011206619092263281],[0.0002701448684092611,-0.00014118159015197307],[-0.00013760157162323594,-0.00008504118159180507],[-0.00010104543616762385,-0.00007215274672489613],[-0.00014009352889843285,0.0002333543379791081],[-0.000028029235181747936,0.00006557028973475099]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[-0.062079377472400665,0.21466143429279327,0.7055647373199463],"rotation":[0.0028510463889688253,0.47265496850013733,-0.00010465003288118169,-0.8812429308891296],"used":true,"bodyHandle":1.77e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.06776099652051926,-0.49232912063598633],[0.21716898679733276,-0.3001503646373749],[-0.058590441942214966,-0.030439022928476334],[0.02877749688923359,0.03303244709968567],[-0.0047019473277032375,0.34046489000320435],[0.1439560502767563,0.20267526805400848],[0.24957625567913055,-0.15075001120567322],[0.04058593511581421,-0.09971337020397186],[-0.0653928816318512,0.3081507086753845],[-0.029525382444262505,0.12729153037071228]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.04516762122511864,0.17458811402320862,0.8227750658988953],"rotation":[-0.0008397827041335404,0.9590703248977661,-0.000034009484807029366,0.283166766166687],"used":true,"bodyHandle":1.774e-321,"linearSpeed":0,"angularVelocityHistory":[[-5.822210482619994e-7,-0.000006369888524204725],[-6.09041251209419e-7,-0.0000063982615756685846],[-5.147530259819177e-7,-0.000006386636414390523],[-5.246470777819923e-7,-0.000006381397724908311],[-5.146982857695548e-7,-0.000006331221356958849],[-6.767920694983331e-7,-0.00000632422961643897],[-5.969265544081281e-7,-0.00000633474064670736],[-4.651376457331935e-7,-0.000006356098310789093],[-6.241904202397563e-7,-0.00000634114803688135],[-6.00514226789528e-7,-0.0000064135060711123515]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05895688757300377,0.21551039814949036,0.6360819339752197],"rotation":[0.005402791779488325,-0.7194085717201233,0.010191095061600208,-0.6944913268089294],"used":true,"bodyHandle":1.78e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.13313733041286469,0.022952880710363388],[0.24338379502296448,0.06370298564434052],[0.1913301795721054,-0.08522851020097733],[-0.36999720335006714,0.025894666090607643],[-0.1630483716726303,-0.15678074955940247],[-0.1560044288635254,-0.3724009692668915],[-0.3721209466457367,0.39151084423065186],[-0.020674681290984154,0.07056267559528351],[0.2763909101486206,0.1556735783815384],[0.13668052852153778,-0.19278186559677124]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.23148609697818756,0.1854325830936432,0.4548531472682953],"rotation":[-0.4091933071613312,-0.004074320197105408,0.9124265909194946,-0.004677031189203262],"used":true,"bodyHandle":1.784e-321,"linearSpeed":3.3263237430522512e-9,"angularVelocityHistory":[[0.00040785333840176463,0.0004672575742006302],[0.0014810870634391904,0.0005562218721024692],[0.0021622497588396072,-0.00023873204190749675],[0.0010753778042271733,-0.00008861507376423106],[0.0012766330037266016,0.0002827486314345151],[0.0005724917282350361,-0.00013727741315960884],[0.001778989564627409,-0.00012651266297325492],[-0.0009913928806781769,0.0017750271363183856],[0.0009180234046652913,-0.00000628097950539086],[0.000581775326281786,0.0010569634614512324],[0.0007402504561468959,-0.0004436525923665613]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.3722591996192932,0.1802063286304474,0.561446487903595],"rotation":[-0.0017516937805339694,-0.6425639390945435,0.0037640559021383524,0.76622074842453],"used":true,"bodyHandle":1.79e-321,"linearSpeed":4.851297258286212e-10,"angularVelocityHistory":[[-0.00007828066009096801,0.00011839137732749805],[0.000038738427974749357,-0.00077993975719437],[-0.00005421732203103602,-0.000029276288842083886],[-0.00007799235754646361,-0.00030572054674848914],[0.000012266453268239275,-0.0009917274583131075],[0.0005622546304948628,-0.001342147239483893],[0.00015662121586501598,0.00034850501106120646],[-0.00009222242806572467,-0.00030416168738156557],[0.00010392865806352347,-0.0005524345324374735],[0.00019653896742966026,-0.0005797056364826858],[0.00007064547389745712,-0.0002984429011121392]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.328928679227829,0.17471416294574738,0.8073767423629761],"rotation":[-0.9838231801986694,-0.00016542844241485,-0.1791355013847351,-0.0015577732119709253],"used":true,"bodyHandle":1.793e-321,"linearSpeed":0,"angularVelocityHistory":[[-9.583741302776616e-7,-5.987452027511608e-7],[-0.0000010051963954538223,-5.825245921187161e-7],[-9.890828778225114e-7,-5.848414730280638e-7],[-0.0000010310556035619811,-5.987702706988784e-7],[-9.796540325623937e-7,-6.072389737710182e-7],[-0.0000010406251931271981,-5.736008574785956e-7],[-9.99394615064375e-7,-5.905324655941513e-7],[0.05331949517130852,0.14007490873336792],[-0.00008021110988920555,0.00009462281013838947],[-0.0000411999317293521,-0.0001375645661028102]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05957413464784622,0.24415160715579987,0.6349526643753052],"rotation":[0.011887110769748688,-0.9956040978431702,-0.007083304226398468,-0.09263400733470917],"used":true,"bodyHandle":1.8e-321,"linearSpeed":0,"angularVelocityHistory":[[0.02205848880112171,-0.21011124551296234],[-0.025941016152501106,0.0465322770178318],[0.009627487510442734,-0.17452578246593475],[0.5021058917045593,-0.03597172349691391],[-0.11452846229076385,0.1233556941151619],[0.041550859808921814,0.33257338404655457],[0.02573193795979023,0.07135585695505142],[-0.060599151998758316,0.08262017369270325],[-0.08359290659427643,-0.02697845920920372],[-0.10174021869897842,0.45389798283576965]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.11287441104650497,0.18467062711715698,0.7661552429199219],"rotation":[0.010407679714262486,-0.39792123436927795,0.01634814590215683,-0.9172148704528809],"used":true,"bodyHandle":1.803e-321,"linearSpeed":9.429817169704814e-14,"angularVelocityHistory":[[0.00002329896597075276,0.000033466494642198086],[-0.000008098655598587357,0.000024065402612905018],[0.000022251584596233442,0.000010000908332585823],[-0.0000011038514458050486,0.00001928812707774341],[0.000023683052859269083,0.00004056294710608199],[-0.000011845230801554862,0.000028258818929316476],[0.00002184954246331472,0.00002820389454427641],[0.00008771867578616366,0.000014858186659694184],[-0.00007636792724952102,0.00010668795584933832],[0.0000036241324323782464,0.00006467462662840262],[-0.00005444439739221707,0.00005317649993230589]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[-0.4714759886264801,0.17941807210445404,0.38589000701904297],"rotation":[0.9945988059043884,0.0044592819176614285,-0.10335873812437057,0.00838859099894762],"used":true,"bodyHandle":1.81e-321,"linearSpeed":4.911426731204579e-8,"angularVelocityHistory":[[-0.0006673088646493852,0.0004969464498572052],[-0.0015679015778005123,0.002004334470257163],[-0.006442503072321415,-0.0007103356765583158],[-0.0038577739614993334,-0.0006674730102531612],[-0.0024124816991388798,0.002480690833181143],[-0.0030604833737015724,0.002980430843308568],[-0.003725086571648717,0.0009382146527059376],[0.00007598382217111066,-0.0008775670430622995],[0.0016454732976853848,0.0028925961814820766],[-0.0014394413447007537,0.001070033642463386],[-0.0023115805815905333,0.0030554679688066244]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0024719813372939825,0.21552056074142456,0.6687479019165039],"rotation":[0.005286999978125095,-0.5388689041137695,0.0014211313100531697,-0.8423718810081482],"used":true,"bodyHandle":1.813e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.07696086913347244,-0.07180388271808624],[0.05261962488293648,0.10309555381536484],[0.09586270898580551,0.09870172291994095],[0.003613619599491358,0.08275283128023148],[-0.009131820872426033,0.03198403865098953],[-0.11713682860136032,-0.3694310784339905],[-0.11322130262851715,-0.290586918592453],[-0.031943585723638535,-0.005667883437126875],[-0.2279377579689026,0.06349888443946838],[-0.16878198087215424,0.042942922562360764]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.2752115726470947,0.17987270653247833,0.6948540806770325],"rotation":[-0.013573617674410343,-0.49407804012298584,-0.0017114992951974273,-0.8693099021911621],"used":true,"bodyHandle":1.82e-321,"linearSpeed":4.376687194911117e-12,"angularVelocityHistory":[[-0.0002563520974945277,-0.00012698597856797278],[0.00020795135060325265,0.000025325683964183554],[0.0000335646873281803,0.00012575813161674887],[0.0004579694359563291,0.0003131446719635278],[0.00021541530441027135,0.0001667088217800483],[0.00007836286386009306,-0.00005259048339212313],[0.0004277096304576844,0.00031233177287504077],[0.030714208260178566,0.018560413271188736],[0.014874952845275402,0.006241270806640387],[0.01842700131237507,0.01050602551549673],[0.0021606062073260546,0.0027460830751806498]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[-0.3691270351409912,0.17442581057548523,0.5614550113677979],"rotation":[0.0007665508892387152,0.7455246448516846,-0.0032255062833428383,-0.6664697527885437],"used":true,"bodyHandle":1.823e-321,"linearSpeed":1.3278849060024131e-11,"angularVelocityHistory":[[0.00008023292321013287,0.000029278484362293966],[0.00001343311851087492,0.0000487787438032683],[0.00012886920012533665,-0.00002571278855612036],[0.00002517521716072224,-0.000009394751941727009],[0.00010045243834611028,0.0008276232401840389],[0.000015040982361824717,0.0006777865346521139],[0.00008840540976962075,-0.00040532625280320644],[0.00008253783016698435,0.00013921409845352173],[0.00015901366714388132,0.0003923005424439907],[-0.000010932361874438357,0.00015740895469207317],[-0.0000027230164505454013,0.00015163549687713385]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0006565850344486535,0.21668682992458344,0.598693311214447],"rotation":[-0.00015150253602769226,-0.15452344715595245,-0.002353737596422434,-0.9879863262176514],"used":true,"bodyHandle":1.83e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.7211894392967224,-0.015035899356007576],[0.0916762575507164,0.10522614419460297],[-0.1285264641046524,-0.106085404753685],[0.022147810086607933,-0.1795598417520523],[-0.06924967467784882,-0.0030422641430050135],[0.3138340711593628,0.09121573716402054],[0.0366070531308651,-0.022861115634441376],[-0.17741918563842773,-0.023427529260516167],[-0.04611171782016754,0.022962283343076706],[0.06282645463943481,-0.0777481198310852]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.22918695211410522,0.1798437386751175,0.5884343981742859],"rotation":[-0.005655927117913961,0.9773334860801697,0.006012375466525555,-0.2115442454814911],"used":true,"bodyHandle":1.833e-321,"linearSpeed":5.369437407797733e-9,"angularVelocityHistory":[[-0.00026286044158041477,0.00007687765901209787],[0.000035597942769527435,0.00013876790762878954],[0.00014584793825633824,-0.00022368936333805323],[0.000499592162668705,0.00020584090088959783],[0.00005029823660152033,-0.00016895118460524827],[-0.00047093219473026693,-0.00016774405958130956],[-0.00043119557085447013,0.00004329015064286068],[0.001504624611698091,-0.00011469489254523069],[-0.00014883028052281588,0.00011332026770105585],[0.0009164027287624776,0.0003058759612031281],[0.000026952269763569348,0.00019818305736407638]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.5210495591163635,0.18862555921077728,0.7440319061279297],"rotation":[0.026844216510653496,-0.6109486818313599,-0.026867210865020752,0.7907586097717285],"used":true,"bodyHandle":1.84e-321,"linearSpeed":1.8154937227625791e-12,"angularVelocityHistory":[[-0.00019191898172721267,0.00006546597433043644],[0.0002007910661632195,-0.00012287974823266268],[-0.0001810816174838692,0.00006703371764160693],[0.00007263321458594874,-0.00003468704744591378],[-0.0000073421269917162135,-0.00005508746107807383],[-0.000016134690667968243,-0.000023317608793149702],[0.00003365941665833816,-0.000032096148061100394],[0.00002378159115323797,-0.000017102895071730018],[-0.000001091516537599091,-0.00002518662586226128],[-0.00006039947766112164,0.00004372177863842808],[0.00003819230914814398,-0.00002624530316097662]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.22143055498600006,0.1836504489183426,0.6325713992118835],"rotation":[0.5763988494873047,0.058592043817043304,-0.8150627017021179,-0.002016679383814335],"used":true,"bodyHandle":1.843e-321,"linearSpeed":2.803695274884498e-9,"angularVelocityHistory":[[0.0003788139729294926,-0.000048287358367815614],[-0.00026942146359942853,0.000221368478378281],[0.0002568991912994534,-0.0007625474245287478],[-0.0003218728525098413,0.000026177243853453547],[-0.0003141994238831103,-0.00022272452770266682],[-0.0005376771441660821,0.00026715200510807335],[0.0007523156818933785,-0.00081840087659657],[-0.00091886444715783,-0.000022163796529639512],[0.0010049124248325825,-0.0005541001446545124],[-0.00031309688347391784,0.0002923962601926178],[0.0005002538091503084,-0.00026026004343293607]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[0.19219763576984406,0.18451933562755585,0.49750882387161255],"rotation":[-0.024215908721089363,-0.9545711874961853,0.0024633381981402636,-0.2969871759414673],"used":true,"bodyHandle":1.85e-321,"linearSpeed":0.000006410475536179779,"angularVelocityHistory":[[0.08447656035423279,0.09126609563827515],[0.04809674620628357,0.02391510270535946],[0.05104701220989227,0.03381382301449776],[0.03087291680276394,0.0366840586066246],[0.019185353070497513,0.026215601712465286],[0.024745527654886246,0.017148325219750404],[0.03254970163106918,0.034092050045728683],[-0.07236187160015106,-0.1285594403743744],[-0.18768347799777985,0.02225363627076149],[-0.07416919618844986,0.00725785456597805],[-0.10386337339878082,0.0036037166137248278]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05982859805226326,0.21811236441135406,0.6340861320495605],"rotation":[-0.002071145223453641,-0.678047776222229,-0.0015629319241270423,-0.7350132465362549],"used":true,"bodyHandle":1.853e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.10232026875019073,0.00490917032584548],[0.18511132895946503,0.1856217235326767],[0.35123947262763977,-0.26246750354766846],[-0.4908926784992218,-0.14116358757019043],[-0.26107338070869446,-0.47206270694732666],[-0.04913219064474106,-0.06805307418107986],[-0.04246431589126587,0.42032426595687866],[0.018991371616721153,0.108411505818367],[0.22749356925487518,0.15622608363628387],[0.09863916784524918,-0.23895975947380066]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.48228898644447327,0.184385746717453,0.46280723810195923],"rotation":[-0.002051844960078597,0.7648787498474121,-0.012776803225278854,-0.6440443992614746],"used":true,"bodyHandle":1.86e-321,"linearSpeed":1.1379674787872795e-7,"angularVelocityHistory":[[0.005170442629605532,0.00046813266817480326],[-0.01510366890579462,-0.004118879791349173],[0.008157357573509216,0.0017643118044361472],[-0.011835460551083088,-0.0021357310470193624],[0.007038571871817112,0.003320049261674285],[-0.018695229664444923,-0.0005148424534127116],[0.0006566895171999931,-0.003594071138650179],[-0.0036507262848317623,0.00033010003971867263],[0.014966251328587532,0.0010876469314098358],[-0.015367943793535233,-0.0028450717218220234],[0.009412435814738274,-0.0014289052924141288]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.358298659324646,0.17961838841438293,0.5504317879676819],"rotation":[0.001651835860684514,-0.9999982118606567,0.00013071323337499052,0.0009061235468834639],"used":true,"bodyHandle":1.863e-321,"linearSpeed":5.3332759001332215e-9,"angularVelocityHistory":[[-0.0015480564907193184,0.000010042420399258845],[-0.0021832175552845,-0.00024393430794589221],[0.002269256394356489,-0.0003784873988479376],[0.0016639599343761802,0.0011265210341662169],[-0.00020735185535158962,0.0005446724244393408],[-0.00005552487709792331,0.0020347509998828173],[0.0008386460831388831,-0.0003824957530014217],[0.00002124012098647654,0.0008534244261682034],[0.002725685015320778,-0.0015479378635063767],[0.001982258865609765,0.0019391075475141406],[-0.0021990376990288496,-0.00020333613792899996]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.48133552074432373,0.17411737143993378,0.4111231565475464],"rotation":[0.0030120534356683493,0.9766048789024353,-0.00018963904585689306,0.21502017974853516],"used":true,"bodyHandle":1.87e-321,"linearSpeed":1.3452746879834526e-10,"angularVelocityHistory":[[-0.00033201539190486073,0.000018390297555015422],[0.00022976873151492327,0.0007833163253962994],[0.00006332668999675661,-0.0006628885748796165],[-0.00011822261149063706,-0.0005093339714221656],[0.0002465297293383628,0.0008348004193976521],[-0.0001243093574885279,0.000752906606066972],[-0.00002040061190200504,0.000007341580385400448],[0.00020262102771084756,0.00002477163252478931],[0.00002165856676583644,-0.00036851773620583117],[0.000005951831099082483,-0.0007631635526195168],[0.000128482177387923,0.000356661417754367]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[0.17339643836021423,0.1745462417602539,0.7778015732765198],"rotation":[0.002412899862974882,-0.6652742028236389,-0.004584611393511295,0.7465811371803284],"used":true,"bodyHandle":1.873e-321,"linearSpeed":2.7466410854367734e-13,"angularVelocityHistory":[[7.54510779188422e-7,8.014087029550865e-7],[7.312945058401965e-7,6.134250725153834e-7],[7.283339868990879e-7,5.464057721837889e-7],[7.194522595455055e-7,5.801649081149662e-7],[9.015328146233514e-7,8.067417525126075e-7],[9.077784852706827e-7,7.957232810440473e-7],[8.095179282463505e-7,5.338155801837274e-7],[9.185839644487714e-7,8.331684284712537e-7],[9.212738518726837e-7,8.063216228038073e-7],[7.26097255210334e-7,6.305341457846225e-7]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.14032520353794098,0.18531814217567444,0.6092936992645264],"rotation":[-0.8792019486427307,0.009099889546632767,-0.4763604402542114,0.0013245241716504097],"used":true,"bodyHandle":1.877e-321,"linearSpeed":2.9325318178787117e-9,"angularVelocityHistory":[[0.0030876300297677517,0.004302592948079109],[0.003704710630699992,-0.00813954696059227],[0.006841254886239767,0.004836427513509989],[-0.0005781803629361093,-0.00679670600220561],[0.000728389888536185,-0.0011235852725803852],[-0.003914932254701853,0.00029899735818617046],[0.008458186872303486,-0.005147247109562159],[0.009143940173089504,-0.006134620867669582],[-0.0002868803567253053,-0.00286412937566638],[-0.0021095534320920706,-0.0060565113089978695],[0.005908134393393993,-0.00039437474333681166]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.26223909854888916,0.18013161420822144,0.8252743482589722],"rotation":[-0.35757967829704285,-0.003451973432675004,-0.9338752627372742,0.0013706488534808159],"used":true,"bodyHandle":1.88e-321,"linearSpeed":2.3852788824842972e-14,"angularVelocityHistory":[[-0.00004988147338735871,0.000017718168237479404],[0.000008165065082721412,0.0000013404644505499164],[0.0000086993377408362,0.000003709050588440732],[-0.000010724003914219793,-0.0000013382873476075474],[-0.000011622667443589307,-0.00000538726862941985],[-0.000013007071174797602,-0.000012230622814968228],[-0.000012264477845747024,0.000006267569460760569],[-0.000020287319784983993,-0.000019616456484072842],[0.00012479063298087567,0.00004278883716324344],[0.000006899865638843039,-0.000030261007850640453],[-0.00003108690361841582,0.000010050883247458842]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.1171509325504303,0.18377846479415894,0.5746170282363892],"rotation":[0.01023927517235279,0.975710928440094,-0.05070822685956955,0.21286632120609283],"used":true,"bodyHandle":1.887e-321,"linearSpeed":2.5493691085850453e-8,"angularVelocityHistory":[[0.007014074828475714,0.0013886155793443322],[0.002641836181282997,0.005932054948061705],[0.0054325503297150135,-0.00605342723429203],[0.00039907018071971834,0.0005431966856122017],[0.004657995421439409,-0.020846987143158913],[0.007104071788489819,-0.033734917640686035],[-0.20121994614601135,0.15764448046684265],[-0.09477126598358154,0.07173502445220947],[0.011109869927167892,0.012932470999658108],[0.003981014713644981,-0.0019738038536161184],[-0.011445452459156513,0.03584819287061691]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4586716890335083,0.1741480827331543,0.4857080578804016],"rotation":[-0.3459130525588989,-0.00627003563567996,-0.9382262229919434,0.006023536901921034],"used":true,"bodyHandle":1.89e-321,"linearSpeed":2.29496006317775e-10,"angularVelocityHistory":[[-0.00016156000492628664,-0.0025711904745548964],[0.006886237766593695,0.0024007929023355246],[0.0021833740174770355,-0.003707427531480789],[0.002974141389131546,0.004361105617135763],[0.002842340152710676,-0.007538484875112772],[0.0005602529854513705,0.003468316514045],[0.0005987288313917816,-0.005379280541092157],[0.0046801697462797165,-0.0003200181818101555],[-0.004579054657369852,-0.004580054897814989],[0.0062994277104735374,0.0014639180153608322],[-0.0009992086561396718,-0.004372407682240009]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.2059711366891861,0.1743834763765335,0.7793198823928833],"rotation":[0.0025908728130161762,0.9613212943077087,-0.0012201896170154214,-0.27541446685791016],"used":true,"bodyHandle":1.897e-321,"linearSpeed":5.1107908411818906e-15,"angularVelocityHistory":[[-0.00003765472138184123,0.00002990914072142914],[-0.00004199995601084083,-0.0000064462496993655805],[-0.00004954769974574447,-0.000020107296222704463],[-0.00005236365177552216,-0.0000013959639773020172],[-0.000003965785253967624,-0.000010511400432733353],[0.000003745420599443605,-0.00003679411020129919],[0.00004094496034667827,-0.000040474118577549234],[-0.00007831622497178614,0.00019280242850072682],[0.0006191247957758605,-0.00013302465958986431],[0.0009376558591611683,-0.00023164678714238107],[0.00004643960710382089,-0.00009507549839327112]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.24965523183345795,0.18510332703590393,0.7009899020195007],"rotation":[-0.0035317973233759403,0.9336190223693848,0.014442372135818005,0.35795858502388],"used":true,"bodyHandle":1.9e-321,"linearSpeed":6.262424589277177e-13,"angularVelocityHistory":[[-0.000008094842996797524,0.00001441285803593928],[-0.000007713264494668692,0.000014506218576570973],[-0.000004823116341867717,0.000014548275430570357],[-0.000007031094810372451,0.000014179289792082272],[-0.00000693602169121732,0.000014100044609222095],[-0.0000086066411313368,0.000013991494597576093],[-0.00001156661983259255,0.000011181422451045364],[-0.000008188258107111324,0.000012036338375764899],[-0.000008966133464127779,0.000016863315977388993],[-0.0000068443582676991355,0.000013109715837344993],[-0.000008497391718265135,0.000013628667147713713]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.5014033317565918,0.1797281950712204,0.35334017872810364],"rotation":[-0.9474027752876282,0.024610722437500954,-0.3076028525829315,-0.08486934006214142],"used":true,"bodyHandle":1.907e-321,"linearSpeed":8.791381493660649e-10,"angularVelocityHistory":[[-0.00010917137115029618,-0.000062700935814064],[-0.00019280638662166893,0.00008430163870798424],[-0.0002652460534591228,-0.00008378156780963764],[-0.0003167589893564582,0.00037266392610035837],[-0.00028321659192442894,-0.00043497123988345265],[-0.00008670069655636325,-0.00003473461765679531],[-0.00008627426723251119,0.00002189083352277521],[-0.00004417852687765844,-0.000014768638720852323],[-0.000035210152418585494,-0.0002594893448986113],[-0.0003334289067424834,0.00037190906004980206],[0.00010933321755146608,-0.0011488269083201885]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[-0.49489113688468933,0.1776067167520523,0.6718451976776123],"rotation":[-0.5420453548431396,-0.048053134232759476,-0.838527262210846,0.02737981453537941],"used":true,"bodyHandle":1.91e-321,"linearSpeed":4.374065682373764e-11,"angularVelocityHistory":[[0.0019521364010870457,0.0001276486145798117],[-0.00474659213796258,-0.0018830684712156653],[0.003439822234213352,0.0015426541212946177],[-0.001995971193537116,-0.0009732067119330168],[0.000054797146731289104,-0.00002351863804506138],[0.0002502919815015048,0.00004673712464864366],[-0.000038760594179620966,-0.0002967938198707998],[-0.0004818300367332995,-0.00041343277553096414],[-0.0005773828597739339,-0.00041451709694229066],[0.00009194380982080474,0.00035965480492450297],[-0.00094117276603356,-0.0006722871330566704]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.48576897382736206,0.1899050623178482,0.46619585156440735],"rotation":[-0.007384583819657564,-0.25683942437171936,0.010712619870901108,0.9663665294647217],"used":true,"bodyHandle":1.917e-321,"linearSpeed":1.0341243813780607e-7,"angularVelocityHistory":[[0.006258517969399691,0.0012698937207460403],[-0.022794315591454506,-0.014282994903624058],[0.011902272701263428,0.008852052502334118],[-0.014453018084168434,-0.010922342538833618],[0.007870188914239407,0.007621288299560547],[-0.029051531106233597,-0.014298037625849247],[0.0022892409469932318,0.002634648000821471],[-0.006072881165891886,-0.003168081399053335],[0.027167661115527153,0.006898153573274612],[-0.023553092032670975,-0.013483274728059769],[0.016237730160355568,0.004469873383641243]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.059555064886808395,0.21805816888809204,0.7045357823371887],"rotation":[-0.008997596800327301,-0.39269641041755676,0.0017101389821618795,-0.919622540473938],"used":true,"bodyHandle":1.92e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.04794077202677727,-0.38206741213798523],[0.13659529387950897,-0.19422845542430878],[-0.00034607871202751994,0.17462971806526184],[-0.030899913981556892,0.0795784592628479],[-0.0855526253581047,0.42291194200515747],[0.06983530521392822,0.1818275898694992],[0.2524069845676422,-0.1187625303864479],[0.11874894797801971,-0.10136190056800842],[-0.011758090928196907,0.3410997986793518],[0.005361081566661596,0.10433395206928253]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4873465597629547,0.17919360101222992,0.38094595074653625],"rotation":[-0.8946822285652161,0.06738799065351486,0.43971288204193115,-0.04068221151828766],"used":true,"bodyHandle":1.927e-321,"linearSpeed":7.655541058666536e-9,"angularVelocityHistory":[[0.00014281892799772322,-0.0004670803318731487],[-0.00028568998095579445,0.0004049973504152149],[-0.0005619000876322389,-0.0003537868324201554],[-0.0005020730313844979,0.00010792505781864747],[-0.0004725883773062378,-0.0004990865709260106],[-0.0000023497850634157658,-0.00010723117884481326],[-0.000291209202259779,-0.00011330142297083512],[-0.00010013060091296211,0.00003129370816168375],[0.00020858425705228,-0.0003959493478760123],[-0.00039459651452489197,0.000002592400733192335],[0.0008459805976599455,-0.0016139382496476173]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.46540746092796326,0.179376021027565,0.44754552841186523],"rotation":[0.007728005293756723,0.9697039127349854,-0.00016848382074385881,0.24416078627109528],"used":true,"bodyHandle":1.93e-321,"linearSpeed":2.7998265949824358e-8,"angularVelocityHistory":[[-0.0020254701375961304,0.0015493917744606733],[0.00276739033870399,-0.0008871619356796145],[-0.0007727235206402838,-0.0010080307256430387],[0.0018750751623883843,0.00006790150655433536],[0.00002948725341411773,-0.00004401442129164934],[0.0016406617360189557,-0.0014261340256780386],[0.0003846097970381379,-0.0015235258033499122],[0.0011686303187161684,-0.001229486195370555],[0.0008681424660608172,-0.000988166662864387],[-0.0005137725966051221,-0.0016141363885253668],[0.0022148573771119118,0.0023252873215824366]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.04895980283617973,0.1802918165922165,0.8273935317993164],"rotation":[-0.000037173766031628475,0.9235826730728149,0.001840979210101068,-0.3833948075771332],"used":true,"bodyHandle":1.937e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.000012871130820713006,-0.000006348825081659015],[-0.000012940316992171574,-0.000006262135684664827],[-0.00001293133209401276,-0.000006246114025998395],[-0.000012911963494843803,-0.000006177452178235399],[-0.00001300512576563051,-0.000006126652806415223],[-0.00001288197199755814,-0.000006058066446712473],[-0.000013014932846999727,-0.000005960582257102942],[-0.000012980581232113764,-0.000005960607268207241],[-0.000012946974493388552,-0.000005837363914906746],[-0.000013036159543844406,-0.00000586770420341054]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.30781736969947815,0.1799306422472,0.5764108300209045],"rotation":[0.0027985763736069202,-0.9275661706924438,-0.0023339863400906324,0.3736410140991211],"used":true,"bodyHandle":1.94e-321,"linearSpeed":2.472796772181833e-12,"angularVelocityHistory":[[0.00005186528142075986,0.0004968451685272157],[-0.00002404849510639906,-0.0001235850213561207],[0.000045524728193413466,-0.00017720549658406526],[0.00015076920681167394,-0.0002731017884798348],[0.00004145215280004777,-0.00005834440526086837],[0.00016725491150282323,-0.0005665547796525061],[-0.00015485842595808208,-0.0006356775993481278],[0.0003886359336320311,0.0000763502175686881],[0.000004078996880707564,-0.00002069947004201822],[0.00004566164716379717,-0.0005504496512003243],[-0.00007654553337488323,0.000022518202968058176]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[0.16446714103221893,0.17860783636569977,0.8144720196723938],"rotation":[-0.029254861176013947,-0.8168477416038513,-0.06148754805326462,-0.5728203058242798],"used":true,"bodyHandle":1.947e-321,"linearSpeed":9.610841584288822e-11,"angularVelocityHistory":[[0.0000016407203702328843,-0.00001783106017683167],[0.0000019401529698370723,-0.000018628319594427012],[0.0000023264674382517114,-0.000019150016669300385],[0.000002722307272051694,-0.000019809136574622244],[0.0000031018196295917733,-0.00002031018811976537],[0.000003359388301760191,-0.000020868883439106867],[0.0000037621036881319014,-0.00002145543840015307],[0.0000040205368350143544,-0.000022025253201718442],[0.000004602989520208212,-0.00002262059206259437],[0.000004716237071988871,-0.000023025741029414348]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06610449403524399,0.17464253306388855,0.5380487442016602],"rotation":[0.001775560900568962,0.9004005193710327,0.001113486709073186,-0.4350568950176239],"used":true,"bodyHandle":1.95e-321,"linearSpeed":1.2821637535113757e-9,"angularVelocityHistory":[[-0.003019227646291256,-0.003719660686329007],[-0.0043514384888112545,-0.0002485389995854348],[-0.004328745882958174,-0.00194264086894691],[-0.00010711036156862974,-0.0014325926313176751],[-0.001102547743357718,0.0018463126616552472],[-0.002899013226851821,-0.00268752733245492],[-0.00244342302903533,0.00038521201349794865],[0.0031754623632878065,0.006437836680561304],[0.003585661994293332,0.008900533430278301],[-0.001920224167406559,0.005472327582538128],[-0.002565671456977725,-0.0018010190688073635]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.24505482614040375,0.18020634353160858,0.6176196932792664],"rotation":[-0.00039028999162837863,0.9756495356559753,0.0014990108320489526,0.219329833984375],"used":true,"bodyHandle":1.956e-321,"linearSpeed":5.2905242755072475e-12,"angularVelocityHistory":[[0.00004525367694441229,-0.00009017640695674345],[-0.0004009600670542568,0.0011999207781627774],[-0.00007937946065794677,0.00028254042263142765],[0.00020427953859325498,0.0008566566975787282],[0.0000628003544989042,0.001261234749108553],[0.0001535953488200903,0.0009185591479763389],[0.00035927927820011973,-0.00043298446689732373],[-0.00011539024126250297,0.0005055319634266198],[-0.00028373204986564815,0.0009254877804778516],[-0.00021349538292270154,0.001297028036788106],[-0.0005551730864681304,0.0002878546656575054]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.21990768611431122,0.17458343505859375,0.6466934680938721],"rotation":[-0.6230933666229248,-0.0016793315298855305,-0.7821384072303772,0.0033711385913193226],"used":true,"bodyHandle":1.96e-321,"linearSpeed":6.507965277684894e-11,"angularVelocityHistory":[[0.000024200804546126164,0.00007082056254148483],[-0.00022240675752982497,-0.00010857260349439457],[0.000197479355847463,-0.000009737789696373511],[-0.0002492803323548287,-0.000023226673874887638],[-0.00002231288090115413,-0.00007857057062210515],[-0.00009617258183425292,-0.00003439077772782184],[0.00025042062043212354,0.000020184816094115376],[-0.0003032042004633695,-0.00005320431955624372],[0.00030982657335698605,0.00006618625047849491],[-0.0003966119256801903,-0.00007533321331720799],[0.00008659440936753526,-0.000017175521861645393]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.1357133686542511,0.17470847070217133,0.73069167137146],"rotation":[0.38810622692108154,0.0014399612555280328,0.9216132164001465,0.0007450010743923485],"used":true,"bodyHandle":1.966e-321,"linearSpeed":3.180146796767128e-17,"angularVelocityHistory":[[0.000001063336526385683,-6.642139283030701e-7],[0.0000010277721003149054,-6.495286584140558e-7],[0.0000010305114983566455,-7.092206146808167e-7],[0.0000010335780871173483,-6.967168815208424e-7],[0.000001029148506859201,-7.448661563103087e-7],[0.0000010873993687710026,-7.115361313481117e-7],[0.0000010596336323942523,-7.248730184983287e-7],[0.0000010423285630167811,-6.876941256450664e-7],[0.0000010385480209151865,-7.2217147817355e-7],[0.0000010307287539035315,-6.329855750664137e-7]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.325062096118927,0.18005913496017456,0.8071153163909912],"rotation":[0.9361760020256042,-0.0017427396960556507,-0.3515270948410034,-0.0003636251203715801],"used":true,"bodyHandle":1.97e-321,"linearSpeed":1.601214408012594e-13,"angularVelocityHistory":[[0.000036587018257705495,0.000007555641332146479],[-0.0000037228280689305393,0.00000601056171944947],[-0.000020460722225834616,-0.0000014692844843011699],[-0.000008081279702309985,-8.969100804279151e-7],[-0.00003306361031718552,-5.654351298289839e-7],[-0.000016305255485349335,5.087604222353548e-7],[-0.0000201787752303062,-0.0000024301505163748516],[-0.00025561286020092666,-0.0000014888800023982185],[0.00012189544213470072,0.0000353093164449092],[-0.00005662250623572618,-0.00003078152803936973],[-0.00016311940271407366,-0.00004291155710234307]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.36151498556137085,0.17953750491142273,0.4652124047279358],"rotation":[-0.0027454611845314503,-0.13636964559555054,-0.000026135356165468693,-0.9906542301177979],"used":true,"bodyHandle":1.976e-321,"linearSpeed":9.891895655198253e-8,"angularVelocityHistory":[[0.0012513529509305954,0.000013777510503132362],[0.0017562236171215773,-0.002500226255506277],[0.0006175290327519178,0.0006332906777970493],[0.0030002279672771692,-0.002819290617480874],[-0.0009592665010131896,-0.0002578395651653409],[0.0007183045381680131,-0.0017892722971737385],[-0.0013033233117312193,-0.0001699211134109646],[-0.0007398409652523696,0.0009922799654304981],[0.00041196425445377827,0.00047732878010720015],[-0.00043730842298828065,0.002007430186495185],[0.002439848380163312,0.0015243306988850236]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4678899347782135,0.17928673326969147,0.4767921268939972],"rotation":[0.006157261319458485,0.2053671032190323,-0.012663553468883038,-0.9785836935043335],"used":true,"bodyHandle":1.98e-321,"linearSpeed":7.784943420337021e-8,"angularVelocityHistory":[[0.0028214696794748306,-0.0035137387458235025],[0.0002503539144527167,-0.0022202206309884787],[0.0068690660409629345,-0.0006185685633681715],[-0.0054930723272264,0.001267786487005651],[0.011061449535191059,0.0006336357328109443],[-0.0013818591833114624,-0.0007656569359824061],[-0.00003199691855115816,-0.00440024770796299],[0.0006717375363223255,0.0017250056844204664],[0.009198506362736225,-0.0005497944075614214],[-0.0036909058690071106,-0.0005780053907074034],[0.006116835866123438,-0.0002047651942120865]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2973180413246155,0.1798347532749176,0.5548650026321411],"rotation":[0.0020497404038906097,0.5285460948944092,-0.0015264216344803572,-0.8489006757736206],"used":true,"bodyHandle":1.986e-321,"linearSpeed":1.5211190960855538e-9,"angularVelocityHistory":[[-0.00039975211257115006,-0.00025222322437912226],[-0.0015866030007600784,0.0008838299545459449],[-0.00018076947890222073,-0.0015321328537538648],[0.00013780404697172344,-0.0010196336079388857],[-0.00008828507270663977,-0.00026056673959828913],[0.00020947519806213677,-0.0003585447557270527],[-0.0019596696365624666,-0.0005141868605278432],[-0.002197335008531809,-0.0008969201007857919],[-0.001133444719016552,-0.002720093121752143],[-0.0007656352245248854,-0.001359647372737527],[-0.0003631876897998154,-0.0011088690953329206]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.29982829093933105,0.17388275265693665,0.4547984004020691],"rotation":[-0.0020643200259655714,-0.9923973679542542,0.010737301781773567,-0.12258818000555038],"used":true,"bodyHandle":1.99e-321,"linearSpeed":5.696811855488777e-11,"angularVelocityHistory":[[0.0028125429525971413,0.0008513564243912697],[-0.001004938967525959,-0.0002771402068901807],[0.004463064018636942,0.001786033040843904],[-0.0007869999972172081,-0.001551581546664238],[0.0012044664472341537,0.0007646953454241157],[0.0005609579966403544,0.00021150900283828378],[0.003232628805562854,-0.0004582298279274255],[0.000019635412172647193,-0.0016377319116145372],[0.002036668825894594,-0.0019042035564780235],[0.0004570739693008363,-0.0011850661830976605],[0.0029692496173083782,0.0014053642516955733]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.5296951532363892,0.18036091327667236,0.3386008143424988],"rotation":[0.49996912479400635,-0.09272825717926025,-0.8610110878944397,-0.009599030017852783],"used":true,"bodyHandle":1.996e-321,"linearSpeed":7.87064264851781e-11,"angularVelocityHistory":[[0.000041698698623804376,0.00005052981941844337],[-0.0001118900763685815,0.000018872844520956278],[-0.0001394329738104716,-0.00003901543459505774],[-0.00013240166299510747,-0.000017517415471957065],[0.000017661770471022464,-0.000005041727035859367],[0.0000012044127970511909,0.0000028925155675096903],[-0.0000023098850761016365,0.000029600940251839347],[-0.000005452414370665792,0.000013164765732653905],[0.000009008169399749022,-0.000043168758566025645],[-0.00017444857803639024,-0.0000875328405527398],[0.00006033250974724069,-0.00006884150207042694]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.17661745846271515,0.18017150461673737,0.671328067779541],"rotation":[0.0024089121725410223,0.20137088000774384,0.0018994611455127597,-0.9795102477073669],"used":true,"bodyHandle":2e-321,"linearSpeed":1.4906829843874846e-10,"angularVelocityHistory":[[0.000022114272724138573,0.00007988519064383581],[-0.00010951657895930111,-0.000013679827134183142],[-0.00003834255039691925,-0.00020932529878336936],[-0.00014014284533914179,0.0001008350373012945],[0.000017713024135446176,-0.000125837410450913],[-0.00010762549936771393,-0.000025391194867552258],[0.00013811839744448662,-0.00006428116466850042],[-0.00004696967880590819,-0.00007846716471249238],[0.00020534633949864656,0.00018810911569744349],[-0.0002210324164479971,0.000039986465708352625],[0.00012978471932001412,0.00008666779467603192]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.11673181504011154,0.17428112030029297,0.526292085647583],"rotation":[-0.19842012226581573,-0.006072955671697855,0.9800955057144165,-0.002312040887773037],"used":true,"bodyHandle":2.006e-321,"linearSpeed":7.332457591012338e-9,"angularVelocityHistory":[[-0.007368072401732206,-0.0026260490994900465],[-0.004424861166626215,0.007263381499797106],[-0.0033378147054463625,-0.0024379559326916933],[-0.006305110175162554,0.004665957763791084],[-0.003633923130109906,0.0011602647136896849],[-0.003873735200613737,0.0067726019769907],[-0.006776119116693735,-0.004876719322055578],[-0.005517325364053249,0.001771112671121955],[0.003422033740207553,-0.0030437803361564875],[-0.004405814688652754,0.003131018951535225],[-0.005073112435638905,0.0002877480583265424]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.12802854180335999,0.18983089923858643,0.5090422034263611],"rotation":[0.2311294823884964,0.06210597977042198,0.9695791006088257,0.051364559680223465],"used":true,"bodyHandle":2.01e-321,"linearSpeed":9.374079959508894e-7,"angularVelocityHistory":[[0.06535246223211288,-0.17423319816589355],[0.004313756246119738,-0.0032414239831268787],[0.008572363294661045,-0.06534971296787262],[0.029559997841715813,-0.023176871240139008],[0.03182229399681091,-0.058660998940467834],[-0.21862007677555084,0.39408206939697266],[-0.21421130001544952,0.4686765968799591],[-0.35322606563568115,0.576849102973938],[0.19459663331508636,-0.5259746313095093],[0.143530011177063,-0.3338632583618164],[0.030697612091898918,0.033810969442129135]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.46100175380706787,0.18509003520011902,0.5658645033836365],"rotation":[0.0011595106916502118,0.5985059142112732,-0.0010863058269023895,0.8011167645454407],"used":true,"bodyHandle":2.016e-321,"linearSpeed":4.503828453531101e-8,"angularVelocityHistory":[[0.00047589445603080094,-0.00011396253103157505],[0.0004681080754380673,0.0001421767519786954],[0.00008367162809008732,0.0006427734042517841],[0.0000464265322079882,0.0001823612255975604],[0.0006468177889473736,0.00031265331199392676],[0.0003289253800176084,0.0001977580541279167],[0.000009395848792337347,-0.00027815529028885067],[0.0003551087575033307,0.0004030286509077996],[0.0014537941897287965,0.000924743595533073],[-0.0004413143324200064,-0.0003379338304512203],[0.001570934779010713,0.0014889079611748457]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[0.07016976177692413,0.1789790391921997,0.5145643353462219],"rotation":[0.007232997566461563,0.9946402311325073,0.018065286800265312,0.1015484556555748],"used":true,"bodyHandle":2.02e-321,"linearSpeed":1.5720078385291235e-7,"angularVelocityHistory":[[0.0014660945162177086,-0.00039188185473904014],[-0.0051742177456617355,0.0016395801212638617],[0.0053394087590277195,-0.0012287215795367956],[0.0003543792699929327,0.0042081861756742],[0.0006944683264009655,-0.004570730030536652],[-0.0011115334928035736,0.003546326421201229],[0.0006085503264330328,-0.003191364696249366],[-0.008728966116905212,0.003322836710140109],[-0.00378194241784513,-0.005288769491016865],[-0.006550462916493416,-0.0003723622066900134],[-0.0035843888763338327,-0.0027349323499947786]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4073337912559509,0.18410465121269226,0.48035335540771484],"rotation":[-0.875823438167572,-0.026292914524674416,-0.4819139242172241,-0.0009388975449837744],"used":true,"bodyHandle":2.026e-321,"linearSpeed":6.382739448287546e-8,"angularVelocityHistory":[[0.004624738357961178,-0.004380361642688513],[0.0023534956853836775,0.011682471260428429],[0.0021580997854471207,-0.0013202803675085306],[0.005140180233865976,0.0039238836616277695],[-0.0025809784419834614,0.00222222157754004],[-0.0004208321333862841,0.004433420021086931],[-0.0018512754468247294,-0.007318036165088415],[0.002328072674572468,0.0033416340593248606],[0.0018579604802653193,0.000633150280918926],[-0.0001576663344167173,0.005777608137577772],[-0.00029929098673164845,-0.0024354923516511917]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.32236263155937195,0.18021416664123535,0.7403212189674377],"rotation":[0.0012436186661943793,0.9161418080329895,0.0035129592288285494,-0.40083691477775574],"used":true,"bodyHandle":2.03e-321,"linearSpeed":1.4202959739674904e-13,"angularVelocityHistory":[[0.0002049030881607905,-0.00008432707545580342],[0.000021509769794647582,-0.00002786714321700856],[-0.00004096003976883367,-0.00005676836735801771],[-0.000010064215530292131,0.000009741420399222989],[0.00002267711352033075,-0.000013632084119308274],[0.000012452855116862338,-2.9797249112561985e-7],[-0.000014847162674413994,0.00004255844760336913],[-0.0002065305452561006,0.00044575202628038824],[0.0003877646813634783,-0.00002484329706931021],[0.00035822708741761744,0.000006255000243982067],[-0.00047391504631377757,-0.0011434940388426185]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2920023500919342,0.1743815690279007,0.5583685636520386],"rotation":[0.06018674373626709,-0.001600746181793511,-0.9981852769851685,0.0010566039709374309],"used":true,"bodyHandle":2.036e-321,"linearSpeed":4.990799720909757e-13,"angularVelocityHistory":[[0.00204790779389441,-0.002282314468175173],[-0.002232170198112726,0.0015490115620195866],[0.0003906961064785719,-0.0012963443296030164],[-0.002013877499848604,0.0007538674981333315],[0.0011362413642928004,-0.0008080239058472216],[-0.002424760488793254,0.0031698564998805523],[0.0011658943258225918,-0.001803439692594111],[-0.0004437263705767691,0.0021132288966327906],[0.0010301409056410193,-0.0006753001362085342],[-0.0017336271703243256,0.00007691724022151902],[0.001311332918703556,0.0005322772194631398]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.13235680758953094,0.1881616860628128,0.4991825520992279],"rotation":[0.040211256593465805,0.9700204730033875,-0.024866605177521706,0.23837992548942566],"used":true,"bodyHandle":2.04e-321,"linearSpeed":0.000007945607787612471,"angularVelocityHistory":[[-0.38181939721107483,0.08140812069177628],[0.08802037686109543,-0.053310826420784],[0.09606590867042542,-0.08454106748104095],[0.07679831981658936,-0.05599884316325188],[0.05265924707055092,-0.042482100427150726],[0.06043396145105362,-0.03342725709080696],[0.07651121914386749,-0.061040692031383514],[-0.10632120072841644,0.055820733308792114],[-0.15713922679424286,0.09651665389537811],[-0.032950740307569504,0.034396588802337646],[-0.09603002667427063,0.05442206561565399]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.20338626205921173,0.1828496754169464,0.6674691438674927],"rotation":[0.0399712510406971,-0.9930858016014099,-0.02572019211947918,-0.1073373556137085],"used":true,"bodyHandle":2.045e-321,"linearSpeed":1.830547114216973e-12,"angularVelocityHistory":[[-0.007982189767062664,0.0015801520785316825],[0.0017199164722114801,-0.000192067920579575],[-0.00036136622657068074,-0.0013035355368629098],[0.0001518304052297026,0.0008451190660707653],[-0.0000634225070825778,0.0003633215674199164],[-0.007830625399947166,0.0017010183073580265],[0.004428510088473558,-0.0015258325729519129],[-0.007263112813234329,0.0014123902656137943],[0.003217499703168869,-0.0012021837756037712],[0.004383647348731756,-0.0060872710309922695],[0.001631247578188777,0.0010362574830651283]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.14895005524158478,0.1798485815525055,0.7786096930503845],"rotation":[0.43931376934051514,0.0058232988230884075,0.8982502222061157,0.010770982131361961],"used":true,"bodyHandle":2.05e-321,"linearSpeed":3.675972408284015e-14,"angularVelocityHistory":[[-0.0000072005068432190455,-0.0000067465043684933335],[0.000003851933342957636,-0.000006493457931355806],[0.00002087760549329687,0.00004429647742654197],[0.00002320915700693149,-7.751048087811796e-7],[0.00001247144700755598,0.00000862539036461385],[-0.000007241696494020289,0.0000022569736302102683],[7.621881081831816e-7,3.6664067692981916e-7],[0.000060120964917587116,-0.00005550191781367175],[-0.000009456483894609846,0.00010787576320581138],[-0.00004194916255073622,0.00007495280442526564],[0.00003899275543517433,0.000005202527063374873]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.17894655466079712,0.17972752451896667,0.8435450792312622],"rotation":[-0.004119639750570059,0.7701804041862488,-0.0008368950220756233,-0.6378122568130493],"used":true,"bodyHandle":2.055e-321,"linearSpeed":5.871462827779133e-14,"angularVelocityHistory":[[-0.000017678747099125758,1.59097226060112e-7],[-0.000021269404896884225,-0.000013427154044620693],[-0.000019592738681240007,-0.000018558737792773172],[-0.00002734520057856571,0.000009800703992368653],[-0.000032093270419863984,-0.000007701557478867471],[-0.000032815140002639964,0.000002322437694601831],[-0.000028929474865435623,0.000004745780188386561],[-0.000024106744604068808,0.000005500342467712471],[0.00003506476423353888,-0.0000988301180768758],[0.000002631028337418684,-0.000019763860109378584],[-0.00002288877840328496,0.00007860369805712253]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.22344428300857544,0.17438441514968872,0.7149915099143982],"rotation":[0.9926796555519104,-0.003077656263485551,-0.12070591002702713,-0.0027697812765836716],"used":true,"bodyHandle":2.06e-321,"linearSpeed":1.919148446786705e-16,"angularVelocityHistory":[[-8.182983037841041e-7,-5.4878270816516306e-8],[-7.936562269605929e-7,-1.5564021182967736e-8],[-9.233059472535388e-8,2.375609824412095e-7],[-3.148456926282961e-7,4.543280596180921e-8],[-6.006358148624713e-7,-1.4059163788715523e-7],[-5.523592108147568e-7,-2.607612827887351e-7],[0.000001097157110052649,-4.8616485059937986e-8],[-0.0000010457142707309686,9.279671786543986e-8],[-0.0000012732822369798669,-3.629493505741266e-7],[-6.525879712171445e-7,-3.1690530022387975e-7],[-0.0000010867790933843935,-1.7558289755470469e-7]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.40119674801826477,0.19272249937057495,0.465570867061615],"rotation":[0.4939444959163666,-0.04989713057875633,0.8667691349983215,-0.047332458198070526],"used":true,"bodyHandle":2.065e-321,"linearSpeed":1.3767909066944855e-7,"angularVelocityHistory":[[-0.0032421827781945467,0.0012465812033042312],[0.011066194623708725,0.01985313557088375],[-0.00481437286362052,-0.007862405851483345],[-0.001548302941955626,-0.0048111965879797935],[0.0004148451844230294,-0.0015463382005691528],[0.0043457550927996635,0.00780877098441124],[0.005215251352638006,0.006881423760205507],[-0.006041263695806265,-0.0063300970941782],[0.005154777318239212,0.01408356986939907],[-0.01339340303093195,-0.019663561135530472],[0.007411418482661247,0.021847141906619072]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06613099575042725,0.18307361006736755,0.506870448589325],"rotation":[-0.6046609878540039,0.03476553410291672,-0.7952646613121033,0.027026111260056496],"used":true,"bodyHandle":2.07e-321,"linearSpeed":5.371567950141526e-7,"angularVelocityHistory":[[-0.0006910265074111521,-0.004199663642793894],[-0.004532665945589542,0.002632542047649622],[-0.0053429147228598595,0.005852242931723595],[-0.001405665883794427,-0.013870973140001297],[-0.006386947352439165,0.012385796755552292],[-0.0031136085744947195,0.013597667217254639],[-0.005116855259984732,-0.010174205526709557],[-0.011436647735536098,0.0044372715055942535],[-0.00464973971247673,-0.0010123311076313257],[-0.010852644219994545,-0.011502381414175034],[-0.002602537162601948,0.0033408456947654486]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.3696000277996063,0.17421020567417145,0.4481200873851776],"rotation":[-0.0005825097323395312,0.12428882718086243,-0.001731331693008542,-0.9922443628311157],"used":true,"bodyHandle":2.075e-321,"linearSpeed":6.603590626274425e-9,"angularVelocityHistory":[[0.0031557916663587093,-0.003443213179707527],[0.002921114908531308,-0.004343035630881786],[0.0028731452766805887,-0.0029322458431124687],[0.001725769485346973,-0.004392172675579786],[0.002065636683255434,-0.0038683561142534018],[-0.0010732581140473485,-0.0059174769558012486],[0.0008974129450507462,-0.004426921717822552],[0.002098378026857972,-0.0058225300163030624],[0.002695431001484394,-0.004468898754566908],[0.0013032988645136356,-0.006213430315256119],[0.0012521424796432257,-0.0012480714358389378]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.417812317609787,0.17397674918174744,0.4417021870613098],"rotation":[-0.000596001511439681,-0.47735288739204407,-0.002347787842154503,0.8787083625793457],"used":true,"bodyHandle":2.08e-321,"linearSpeed":1.784546424069793e-10,"angularVelocityHistory":[[0.0012524394551292062,-0.004384638741612434],[0.0027014424558728933,0.00015391276974696666],[0.0005008985172025859,-0.001906227320432663],[0.003072442254051566,-0.00022529892157763243],[-0.002048560418188572,0.0014015675988048315],[-0.0005174757679924369,0.00021499398280866444],[0.0004887494724243879,-0.0005390207516029477],[0.0013688658364117146,0.00047625895240344107],[0.0020831567235291004,-0.0009894638787955046],[0.0021476123947650194,0.0009691203595139086],[0.0011250864481553435,0.0008202629978768528]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[-0.222810760140419,0.17446982860565186,0.7217985391616821],"rotation":[0.6990488767623901,0.0016003780765458941,0.715071976184845,0.00041890612919814885],"used":true,"bodyHandle":2.085e-321,"linearSpeed":2.0205535534518179e-13,"angularVelocityHistory":[[-0.00010762779857032001,-0.00008247564255725592],[0.00007591949542984366,-0.0002786304976325482],[0.000032185722375288606,-0.0004095852782484144],[0.00015002118016127497,-0.0000682787285768427],[0.00013555165787693113,-0.0000771187842474319],[0.00007155169441830367,-0.000010504880265216343],[-0.0001037581532727927,-0.0002590403310023248],[-0.007563191466033459,0.013449552468955517],[-0.001241911668330431,0.0025100777857005596],[-0.0018191360868513584,0.004572062287479639],[-0.00023659625730942935,0.0006686581182293594]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.24715223908424377,0.17443059384822845,0.5965904593467712],"rotation":[-0.4907706677913666,-0.0007796247373335063,0.8712868690490723,-0.001638511079363525],"used":true,"bodyHandle":2.09e-321,"linearSpeed":3.617281437853615e-14,"angularVelocityHistory":[[-0.00010621221736073494,0.00020984788716305047],[0.00029901060042902827,0.0002878563245758414],[-0.00010371312964707613,0.00026495353085920215],[0.0010463505750522017,-0.0004447090614121407],[0.0002197857975261286,-0.0006202145596034825],[-0.0001326976780546829,0.0007053763256408274],[0.0003431160293985158,-0.0010587185388430953],[-0.00017337349709123373,0.00034860119922086596],[-0.0007275933166965842,0.0013941904762759805],[-0.00005695940490113571,-0.00028254688368178904],[0.0008716394659131765,-0.00008775801688898355]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.2400132268667221,0.18020954728126526,0.5330144166946411],"rotation":[0.3196360766887665,-0.0013736162800341845,0.9475369453430176,-0.0021563819609582424],"used":true,"bodyHandle":2.095e-321,"linearSpeed":1.674520570560411e-8,"angularVelocityHistory":[[0.009448359720408916,-0.007785548456013203],[-0.00328834168612957,0.001009698142297566],[0.005472133401781321,-0.0045980592258274555],[-0.005725862458348274,0.006075327284634113],[0.004886823706328869,-0.001460969215258956],[-0.0032979378011077642,0.0027366208378225565],[0.005337226204574108,-0.0037971835117787123],[0.0020586077589541674,-0.004788178484886885],[0.006135997828096151,0.0012487216154113412],[-0.012892902828752995,0.01644035242497921],[0.003448506584390998,-0.004228044301271439]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.05858248844742775,0.24605408310890198,0.7062531113624573],"rotation":[-0.00013483881775755435,-0.9888520240783691,-0.012431657873094082,0.14838138222694397],"used":true,"bodyHandle":2.1e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.08310229331254959,0.09102184325456619],[-0.19404537975788116,-0.036255475133657455],[0.14508302509784698,0.13347767293453217],[0.041110534220933914,0.199175164103508],[0.15079957246780396,0.23653124272823334],[0.20023664832115173,0.0972394347190857],[0.018935691565275192,-0.017228281125426292],[-0.07028134912252426,0.06253718584775925],[-0.037456728518009186,0.06055521219968796],[0.060140158981084824,-0.07797900587320328]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.18899895250797272,0.18525564670562744,0.8247853517532349],"rotation":[0.004018506966531277,-0.7494093775749207,-0.002669740468263626,0.6620892882347107],"used":true,"bodyHandle":2.105e-321,"linearSpeed":3.923088237576473e-13,"angularVelocityHistory":[[-0.00003945436401409097,-0.000002490978431524127],[-0.00003489009031909518,-0.00002887853406718932],[-0.000028668275263044052,-0.00003522876068018377],[-0.00001652107312111184,0.000031937008316162974],[-0.00003262531754444353,-0.0000020738807506859303],[-0.00003420866414671764,-0.000010562027455307543],[-0.000050419104809407145,0.00002300995765835978],[-0.000035943117836723104,0.000033212501875823364],[0.000029918199288658798,-0.0003750744217541069],[0.00006045047121006064,-0.000009278761353925802],[-0.00004316042031859979,0.00022838202130515128]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.48596668243408203,0.18012121319770813,0.7629786729812622],"rotation":[0.0021808110177516937,0.9833649396896362,0.00154512794688344,0.18162111937999725],"used":true,"bodyHandle":2.11e-321,"linearSpeed":7.208547683217483e-12,"angularVelocityHistory":[[0.0000582277680223342,-0.0003767860180232674],[0.0001687559997662902,0.00038475319161079824],[-0.00011021913087461144,-0.0003973469720222056],[0.00006501774623757228,0.00022079212067183107],[0.000009500805390416645,-0.000029372537028393708],[-0.000026634475943865255,0.000018338803783990443],[0.00003942965850001201,0.00003856763942167163],[0.000029093567718518898,0.00007491520955227315],[0.00014512786583509296,0.00016986645641736686],[0.0001169545212178491,-0.0002464214921928942],[0.00007125337288016453,0.00007097773777786642]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.1475892812013626,0.17939729988574982,0.7168810367584229],"rotation":[0.003182837972417474,0.99107825756073,0.0016125607071444392,0.133233442902565],"used":true,"bodyHandle":2.115e-321,"linearSpeed":2.4548784622731593e-14,"angularVelocityHistory":[[0.000009194432095682714,-0.00016473999130539596],[-0.0000028227711936779087,0.0002682384802028537],[0.000005942398729530396,0.00004410789188113995],[-0.000011931195331271738,0.0000044153366616228595],[0.0000025416559310542652,-0.0000331947194354143],[0.0000269657375611132,0.00001828705171647016],[-0.000013637215488415677,0.0001794440031517297],[0.00001704942769720219,-0.0004201015399303287],[0.00008909308962756768,0.0014255651040002704],[-0.00000639972631688579,0.00016304045857395977],[0.000047358749725390226,-0.00003201808794983663]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3945525586605072,0.17925316095352173,0.4971989393234253],"rotation":[-0.9077802300453186,-0.01822303794324398,-0.4190497100353241,0.000568430230487138],"used":true,"bodyHandle":2.12e-321,"linearSpeed":7.312048498832801e-8,"angularVelocityHistory":[[0.0024769550655037165,-0.00221844925545156],[0.0023866582196205854,0.004296923987567425],[0.002666707383468747,0.0011052974732592702],[0.0020141915883868933,0.0018200093181803823],[0.0006489019142463803,0.0009007590706460178],[-0.003012375207617879,-0.004008742514997721],[-0.0005761266220360994,-0.003641933435574174],[0.0013245507143437862,0.004032454453408718],[0.0024832177441567183,0.001465955632738769],[0.001789456931874156,0.003109552199020982],[0.0008629709482192993,0.0005728554097004235]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2776773273944855,0.18002735078334808,0.6232104897499084],"rotation":[-0.004663032945245504,0.4471513330936432,-0.0005656291614286602,-0.8944459557533264],"used":true,"bodyHandle":2.124e-321,"linearSpeed":4.0147543218934805e-10,"angularVelocityHistory":[[-0.00009258571662940085,0.00006341563130263239],[-0.00004461711796466261,0.000151033018482849],[0.000025106903194682673,0.00005074526052339934],[-0.00012141314800828695,-0.0001745275512803346],[0.00004460277341422625,0.0001247573527507484],[-0.00023758749011904,0.00016711307398509234],[0.00007058091432554647,0.0003928695514332503],[0.0003526495420373976,-0.0001337315479759127],[0.00005005633283872157,-0.00014856961206533015],[-0.00013816790306009352,-0.00025847021606750786],[0.00012424690066836774,-0.0000756389563321136]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.41983938217163086,0.17872287333011627,0.43973255157470703],"rotation":[-0.8576846122741699,-0.0000792983773862943,0.5141574144363403,0.004375141113996506],"used":true,"bodyHandle":2.13e-321,"linearSpeed":1.3471790640614058e-8,"angularVelocityHistory":[[-0.0021750705782324076,-0.004901420325040817],[0.004074985161423683,0.0025065026711672544],[0.0005158528219908476,-0.001398577936924994],[0.003157093422487378,-0.0013401792384684086],[-0.0013159116497263312,0.004968472756445408],[-0.0017820104258134961,0.0031762768048793077],[-0.0019759698770940304,-0.0020933065097779036],[0.00340394489467144,0.0006947651272639632],[0.0012394579825922847,-0.0007191444747149944],[0.0026894949842244387,0.0013791059609502554],[-0.0004031556600239128,-0.0010111700976267457]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.300587922334671,0.1801082044839859,0.4931553900241852],"rotation":[-0.0030484329909086227,0.0954369381070137,0.002912819152697921,-0.9954265356063843],"used":true,"bodyHandle":2.134e-321,"linearSpeed":3.7593185486145284e-10,"angularVelocityHistory":[[0.0023244048934429884,0.00231549353338778],[-0.002562972018495202,0.0010598491644486785],[0.0018021699506789446,-0.0002414135233266279],[-0.00031582877272740006,0.0008527060272172093],[0.0020511297043412924,-0.0006230897852219641],[0.00036500467103905976,0.0011271057883277535],[0.0012124560307711363,0.0009478194988332689],[0.0029257661662995815,-0.000035539214877644554],[0.0022673627827316523,0.00338653102517128],[0.0027218544855713844,0.0016107553383335471],[0.002654783194884658,0.002706629689782858]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[0.1379677653312683,0.17956428229808807,0.6068487167358398],"rotation":[0.004773296881467104,0.9486703872680664,0.005823254585266113,-0.3161769211292267],"used":true,"bodyHandle":2.14e-321,"linearSpeed":1.312517276182082e-9,"angularVelocityHistory":[[-0.006626232992857695,0.010537462309002876],[0.009655775502324104,-0.010900076478719711],[0.00036672543501481414,0.0086789196357131],[-0.001699550892226398,-0.004692369606345892],[0.0004994086339138448,-0.00005987604890833609],[0.0010915370658040047,-0.003317758673802018],[0.010477403178811073,-0.005849920678883791],[0.00970602035522461,-0.0067416951060295105],[0.003288666717708111,-0.004422457423061132],[0.004322883673012257,-0.008551457896828651],[0.004559399094432592,-0.0001655225205468014]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.12818221747875214,0.17423713207244873,0.5984950065612793],"rotation":[0.3570612967014313,-0.012682190164923668,-0.9339948296546936,-0.0003335285291541368],"used":true,"bodyHandle":2.144e-321,"linearSpeed":1.5120304677670943e-10,"angularVelocityHistory":[[-0.002075802767649293,0.003215341828763485],[0.0013295630924403667,-0.0009247318375855684],[0.0019633485935628414,0.0018336226930841804],[0.0027927712071686983,0.0013501114444807172],[-0.0003256318159401417,-0.0012716634664684534],[-0.0044188061729073524,0.004363972693681717],[0.005784547422081232,-0.005193785298615694],[0.0015411300119012594,0.0034371863584965467],[0.0033406352158635855,0.0012013877276331186],[-0.0031211087480187416,0.006089009810239077],[0.0023535953368991613,-0.0039004189893603325]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.17983269691467285,0.17396433651447296,0.5468634366989136],"rotation":[0.5666138529777527,-0.0074071395210921764,-0.8239498734474182,0.0005701757618226111],"used":true,"bodyHandle":2.15e-321,"linearSpeed":3.6306369389932226e-10,"angularVelocityHistory":[[-0.001463480875827372,0.0020104076247662306],[0.0006832923390902579,-0.002280069747939706],[-0.0017672310350462794,0.0010215890360996127],[0.015398429706692696,-0.00563325360417366],[0.0023038501385599375,-0.000020894131012028083],[0.014286058954894543,0.003939089365303516],[0.0038134127389639616,0.0012004211312159896],[0.002451278967782855,-0.0016233635833486915],[0.0006681600352749228,-0.0036017121747136116],[0.0032700076699256897,-0.0011419224319979548],[0.001621622359380126,0.00036246306262910366]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.12552253901958466,0.18539924919605255,0.44851481914520264],"rotation":[0.0010144158732146025,0.9702772498130798,0.0014784772647544742,0.24198928475379944],"used":true,"bodyHandle":2.154e-321,"linearSpeed":7.461490454730337e-7,"angularVelocityHistory":[[0.04663601517677307,-0.0015393538633361459],[0.025710251182317734,0.0039020967669785023],[0.030773142352700233,-0.0023311388213187456],[0.09433867782354355,-0.004364699125289917],[0.023253142833709717,-0.0023210758809000254],[0.05146981403231621,-0.001900025992654264],[0.034476056694984436,0.0028611980378627777],[-0.11446086317300797,-0.013871975243091583],[-0.0750303715467453,-0.0024763657711446285],[-0.06495947390794754,-0.01603296585381031],[-0.04204792529344559,-0.0008990414789877832]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.44577866792678833,0.17409566044807434,0.4576062858104706],"rotation":[0.40520429611206055,-0.0023669328074902296,0.9142083525657654,0.0051876697689294815],"used":true,"bodyHandle":2.16e-321,"linearSpeed":1.8427714304028717e-9,"angularVelocityHistory":[[-0.000621867657173425,0.00028359235147945583],[0.00011108672333648428,-0.001902804826386273],[-0.0006976546137593687,0.0022038589231669903],[-0.0008321898058056831,-0.001401699148118496],[-0.00037397746928036213,0.00045754676102660596],[0.00010162727267015725,-0.0011134870583191514],[0.0001802965853130445,-0.000676149851642549],[-0.0006044888286851346,0.00021010119235143065],[-0.001009813160635531,-0.0030745307449251413],[0.0006943725165911019,0.000745534838642925],[-0.0012515084818005562,-0.0026605480816215277]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.13665632903575897,0.18898503482341766,0.5495940446853638],"rotation":[-0.6921237111091614,0.056766945868730545,0.7195430397987366,-0.00003744704008568078],"used":true,"bodyHandle":2.164e-321,"linearSpeed":7.803108221757907e-8,"angularVelocityHistory":[[0.02982165664434433,-0.01978515461087227],[0.008116007782518864,0.013705071061849594],[0.00875867810100317,-0.013432977721095085],[0.00035435956669971347,-0.00929927360266447],[0.004901040345430374,-0.023871423676609993],[0.004198374692350626,-0.02993251383304596],[0.03333349898457527,-0.0020144544541835785],[0.0047799632884562016,-0.018883423879742622],[0.0008792370208539069,-0.1901247203350067],[-0.015065672807395458,-0.10674233734607697],[-0.02082677371799946,0.018463384360074997]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.21329814195632935,0.17425312101840973,0.5306037664413452],"rotation":[0.004213189706206322,-0.7254794239997864,0.002568099182099104,0.6882261037826538],"used":true,"bodyHandle":2.17e-321,"linearSpeed":5.276144178206579e-10,"angularVelocityHistory":[[-0.00017037343059200794,-0.0015640922356396914],[-0.0005980590358376503,-0.0005195916164666414],[-0.0010590731399133801,-0.0012120690662413836],[0.0007358533330261707,-0.000984151498414576],[-0.0013155045453459024,-0.0008135960670188069],[-0.005423210095614195,0.0007119734073057771],[0.001295191701501608,-0.0011674832785502076],[-0.0034551164135336876,0.005288737826049328],[0.00035051192389801145,-0.000642947037704289],[-0.0014417482307180762,0.006233976222574711],[-0.0033570677042007446,-0.0012646728428080678]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.5262033343315125,0.18975424766540527,0.6998103260993958],"rotation":[-0.051807451993227005,-0.9756084680557251,-0.053247466683387756,-0.20656439661979675],"used":true,"bodyHandle":2.174e-321,"linearSpeed":0.00002958739510419654,"angularVelocityHistory":[[-0.0011526931775733829,0.009676418267190456],[-0.0011892733164131641,0.009477730840444565],[-0.0009508472285233438,0.009320913814008236],[-0.00036089777131564915,0.009801257401704788],[0.003565786639228463,0.011871597729623318],[0.008980275131762028,0.01537878904491663],[0.013512777164578438,0.01906534843146801],[0.01582416333258152,0.021060431376099586],[0.01725178211927414,0.022186102345585823],[0.019187455996870995,0.02383537031710148],[0.021590519696474075,0.025849001482129097]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.18586422502994537,0.19084766507148743,0.8328779935836792],"rotation":[-0.0027176279108971357,-0.851301908493042,-0.0074415626004338264,-0.5246163010597229],"used":true,"bodyHandle":2.18e-321,"linearSpeed":2.8224823337042916e-13,"angularVelocityHistory":[[-0.000020453595425351523,0.00005632059765048325],[-0.000015891882867435925,-0.000046969696995802224],[-0.000037729791074525565,-0.00005343225711840205],[-0.000025113882657024078,0.00003456833292148076],[-0.00003200447463314049,-0.0000013419684137261356],[-0.000011541230378497858,-0.00005060501644038595],[-0.000034879438317148015,0.00002130763095919974],[-0.00007928489503683522,0.00013469542318489403],[0.0000319050122925546,-0.0006161555647850037],[0.00004362904655863531,-0.000025859266315819696],[0.000005612540917354636,0.00011732080747606233]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4764750599861145,0.18486975133419037,0.4452083110809326],"rotation":[0.3076821267604828,-0.00433776481077075,0.9514080286026001,0.011651869863271713],"used":true,"bodyHandle":2.184e-321,"linearSpeed":5.671221083890399e-8,"angularVelocityHistory":[[-0.002223873743787408,-0.0010667905444279313],[0.003079575253650546,0.0021816561929881573],[-0.002240763744339347,-0.0011009704321622849],[0.002476139459758997,0.0008372410666197538],[-0.00046420784201473,0.00012443718151189387],[0.001336584216915071,0.0015864026499912143],[0.000048246514779748395,0.00011418770009186119],[0.0005200006999075413,0.0007851021946407855],[0.0001227847533300519,0.001340141287073493],[-0.0009581628837622702,-0.001299036666750908],[0.0011155310785397887,0.000871934462338686]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00033639741013757885,0.2164658159017563,0.7369242906570435],"rotation":[-0.005775856785476208,-0.18962135910987854,-0.012985114939510822,0.9817544221878052],"used":true,"bodyHandle":2.19e-321,"linearSpeed":0,"angularVelocityHistory":[[0.13302141427993774,0.11452077329158783],[0.017178842797875404,-0.08015495538711548],[0.1645488440990448,0.015253676101565361],[0.08485269546508789,0.09730224311351776],[0.14721904695034027,-0.5005168914794922],[0.2570743262767792,0.04204678535461426],[0.16185437142848969,0.03653788939118385],[-0.0876593366265297,0.09147470444440842],[-0.33145853877067566,-0.03306904435157776],[-0.11423839628696442,-0.09743695706129074]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.32741448283195496,0.17971837520599365,0.5106040835380554],"rotation":[-0.7385041117668152,0.002618021098896861,0.6742423176765442,-0.001454016542993486],"used":true,"bodyHandle":2.194e-321,"linearSpeed":5.003272149685104e-10,"angularVelocityHistory":[[0.000009683522876002826,-0.0000050863436626968905],[-0.00001930812322825659,0.000006912414846738102],[0.000007027719220786821,0.000003304314759589033],[0.000012059497748850845,0.0000031522574772679945],[0.000005854506071045762,-0.0000036695219023386016],[0.000006979992122069234,0.000008162961421476211],[0.000020896413843729533,-0.000009947643775376491],[-0.000008303204594994895,0.00000985379665507935],[-0.000015590834664180875,0.000020037427020724863],[-0.0000017352222130284645,0.000008237423571699765],[0.00002853324076568242,-0.000013465172742144205]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2660152018070221,0.17439256608486176,0.5029557347297668],"rotation":[0.144491046667099,-0.0008284873329102993,0.9895015954971313,0.002867407165467739],"used":true,"bodyHandle":2.2e-321,"linearSpeed":2.685549478894999e-9,"angularVelocityHistory":[[0.0015541419852524996,-0.0009195214952342212],[-0.0022002742625772953,0.0008363836677744985],[0.0006809074548073113,-0.00006057178325136192],[-0.001681905472651124,-0.0005319283227436244],[0.0005332794971764088,0.00015605619410052896],[-0.0008869784069247544,0.00043035714770667255],[0.0006974615971557796,-0.00019197505025658756],[-0.004030114971101284,-0.0006261846283450723],[0.0010466254316270351,-0.00003244799518142827],[-0.0033214108552783728,0.0019257977837696671],[0.0010907223913818598,0.00016154132026713341]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.37859949469566345,0.17412900924682617,0.3967282176017761],"rotation":[0.6131868362426758,-0.004739520605653524,-0.7899234890937805,0.0005496156518347561],"used":true,"bodyHandle":2.204e-321,"linearSpeed":6.276662882505375e-11,"angularVelocityHistory":[[-0.00019671277550514787,-0.00040012382669374347],[-0.00024869441404007375,-0.00041012707515619695],[-0.00004897899998468347,0.0000661457161186263],[0.0002185025514336303,-0.0006914191180840135],[0.000014739247490069829,0.001066658296622336],[0.00013149769802112132,0.00037238525692373514],[-3.9315293065556034e-7,0.0000814666273072362],[-0.00005040436371928081,-0.0004168848099652678],[-0.00012343926937319338,-0.000385546445613727],[0.000022260990590439178,-0.00032878544880077243],[0.00011449679004726931,0.0002936767996288836]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.15995706617832184,0.1742127537727356,0.7191290855407715],"rotation":[-0.6943055391311646,0.0001926572440424934,0.7196688055992126,0.004078902769833803],"used":true,"bodyHandle":2.21e-321,"linearSpeed":1.7492435550811492e-16,"angularVelocityHistory":[[0.000018541097233537585,-0.0001095786938094534],[0.000026678244466893375,0.000015777726730448194],[-0.000030274342861957848,-0.00009186282841255888],[0.000005587070518231485,0.00005500892802956514],[-0.000017110900444095023,-0.00003477292921161279],[-0.0000075713792284659576,-0.000013840206520399079],[-0.000008448252629023045,0.000024074715838651173],[-0.00006202159420354292,0.0001262452860828489],[0.00021412667410913855,-0.0004151380271650851],[0.00009283552935812622,-0.00024941310402937233],[-0.00008693345444044098,0.00014540845586452633]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.42099106311798096,0.18827831745147705,0.4568043351173401],"rotation":[0.017609335482120514,-0.8961759805679321,0.037068840116262436,0.44179680943489075],"used":true,"bodyHandle":2.213e-321,"linearSpeed":9.005461805767777e-8,"angularVelocityHistory":[[0.0015457385452464223,-0.0032721245661377907],[0.0013655286747962236,0.00968401413410902],[0.0013703767908737063,-0.00036120141157880425],[-0.0015448486665263772,0.006167036481201649],[-0.0009059138246811926,0.009535875171422958],[-0.005265077110379934,0.00965122040361166],[-0.0009166219970211387,-0.004419615492224693],[-0.005514868535101414,0.002686756430193782],[0.0015214030863717198,-0.0013413396663963795],[-0.005444752983748913,0.0064844610169529915],[-0.0049891225062310696,-0.00047013009316287935]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4113672375679016,0.1837625652551651,0.49693870544433594],"rotation":[0.025641024112701416,-0.04491748660802841,0.013740954920649529,0.9985670447349548],"used":true,"bodyHandle":2.22e-321,"linearSpeed":3.9835149391588576e-8,"angularVelocityHistory":[[-0.002297336468473077,0.0037095132283866405],[-0.0005773098673671484,0.002086271531879902],[0.0004112161404918879,-0.0034966031089425087],[-0.0008025997667573392,0.0019375230185687542],[0.00000840960638015531,0.002580868313089013],[-0.000871622352860868,-0.000902397558093071],[-0.0007668613689020276,0.0016530314460396767],[-0.0006951690884307027,-0.001578585128299892],[-0.00030817839433439076,-0.00004006227754871361],[0.0010589482262730598,0.0005266104126349092],[-0.004533200990408659,0.0035473008174449205]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[-0.35443130135536194,0.185062438249588,0.37448233366012573],"rotation":[-0.6166934967041016,0.005452741403132677,0.787036120891571,-0.015284503810107708],"used":true,"bodyHandle":2.223e-321,"linearSpeed":1.9803258067258137e-9,"angularVelocityHistory":[[-0.00023687163775321096,0.00085591955576092],[-0.00048195276758633554,-0.0001132172328652814],[-0.0008217498543672264,0.00011527027527336031],[-0.0002489191829226911,0.0006710703601129353],[-0.000049204729293705896,-0.000310994015308097],[-0.0007824705098755658,0.0006406682077795267],[0.00000405016498916666,0.00036560045555233955],[0.00026866127154789865,0.0004726205952465534],[-0.0002476769732311368,0.00020293350098654628],[0.00038826055242680013,-0.00005076469824416563],[-0.000035525816201698035,-0.0004914990277029574]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[-0.1767389327287674,0.17929454147815704,0.5463563203811646],"rotation":[0.39308732748031616,-0.016347739845514297,-0.9193379282951355,-0.005734136328101158],"used":true,"bodyHandle":2.23e-321,"linearSpeed":1.0651767273544774e-8,"angularVelocityHistory":[[-0.012298419140279293,0.00718095526099205],[-0.014975540339946747,0.0038553348276764154],[-0.008529037237167358,0.006574014667421579],[0.03221419081091881,-0.015569036826491356],[0.03108132630586624,-0.0030827983282506466],[0.06273779273033142,-0.014305471442639828],[0.025409122928977013,0.002096867188811302],[0.027305282652378082,-0.003050256287679076],[0.03249074146151543,0.009884119033813477],[0.021758265793323517,0.004210939630866051],[-0.0077347587794065475,-0.0038167997263371944]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4177147150039673,0.17416349053382874,0.4034106135368347],"rotation":[-0.005106746684759855,-0.7452237010002136,-0.0008717919699847698,-0.6667944192886353],"used":true,"bodyHandle":2.233e-321,"linearSpeed":2.2074379994453772e-10,"angularVelocityHistory":[[0.00022565791732631624,0.001489912741817534],[0.000116957031423226,-0.0015195219311863184],[0.0007458043983206153,0.001282410346902907],[-0.00009127795055974275,-0.0003534541465342045],[-0.000055509608500869945,-0.00004894076118944213],[0.00031719982507638633,-0.0007938827038742602],[-0.0003686708805616945,-0.0005273446440696716],[0.00018719125364441425,-0.0001907321420731023],[0.0009065859485417604,-0.00045423346455208957],[0.0010726480977609754,0.001007606741040945],[0.0012057088315486908,-0.0006863364833407104]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2384767085313797,0.18149274587631226,0.7916049361228943],"rotation":[0.44616788625717163,0.018255848437547684,-0.894633948802948,-0.015194044448435307],"used":true,"bodyHandle":2.24e-321,"linearSpeed":8.958314369304258e-14,"angularVelocityHistory":[[-0.00000498827012052061,0.000004323317625676282],[-0.000005312419034453342,0.000005010827862861333],[-0.000006631021278735716,0.000004450222149898764],[-0.0000064407622630824335,0.000004280411758372793],[-0.000006326023594738217,0.0000048761289690446574],[-0.000005015189799451036,0.000005111101472721202],[-4.296270788017864e-7,0.0000046352447498065885],[-0.0000051090341912640724,0.0000043848722270922735],[-0.000005452915502246469,0.0000034523525300755864],[-0.000005020240678277332,0.000004665635515266331],[-0.000004269467808626359,0.000005018096544517903]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.23197489976882935,0.17423982918262482,0.4562041461467743],"rotation":[-0.28629270195961,-0.0033101120498031378,-0.9581363797187805,-0.0003936902212444693],"used":true,"bodyHandle":2.243e-321,"linearSpeed":1.4266758338287915e-11,"angularVelocityHistory":[[0.00029141685809008777,0.0002200305025326088],[-0.0001962319074664265,0.00035495113115757704],[0.000103327191027347,0.000011843945685541257],[0.000019268882169853896,-0.00021163345081731677],[0.0003644591197371483,0.0003494069678708911],[-0.0002928916655946523,0.00005206774585531093],[0.0003558766911737621,-0.00023440313816536218],[-0.00020816241158172488,0.0011691134423017502],[0.00005919820978306234,-0.0007820453029125929],[-0.0003990506229456514,0.0007334395195357502],[-0.00028507347451522946,-0.00013830595707986504]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.32698771357536316,0.17414887249469757,0.5119742751121521],"rotation":[-0.44106364250183105,0.0029772226698696613,0.8974705934524536,0.0007340819574892521],"used":true,"bodyHandle":2.25e-321,"linearSpeed":4.5011165715025e-12,"angularVelocityHistory":[[-0.000015340634490712546,0.00001280755259358557],[-0.0000021917871890764218,-0.000003714904323715018],[0.0000023231766590470215,4.186062483313435e-7],[-0.000010118970749317668,0.000012893637176603079],[-4.966827304997423e-7,-0.000001098080019801273],[-0.00000608918253419688,0.0000018825343204298406],[-0.000010416437362437136,-0.0000029697559966734843],[0.0000033830121992650675,-0.0000024661178485985147],[-0.000011170159268658608,-0.0000044293233258940745],[-0.0000019310048173792893,-0.000016478856196044944],[0.000007994914085429627,-0.000002907959924414172]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.36144015192985535,0.17389240860939026,0.3694401681423187],"rotation":[-0.9851322174072266,0.00010259563714498654,0.17106114327907562,0.015890667214989662],"used":true,"bodyHandle":2.253e-321,"linearSpeed":5.077797082031021e-9,"angularVelocityHistory":[[0.00006235469481907785,0.0010870983824133873],[-0.0007818480371497571,-0.0010401291074231267],[0.0008433519979007542,0.0008514731889590621],[-0.00027463401784189045,-0.000622569874394685],[-0.00009391010826220736,0.0006948554655537009],[-0.0007405222277157009,-0.0011773562291637063],[-0.0009288075962103903,0.0009876250987872481],[-0.00005062425771029666,-0.000837194558698684],[0.0003887179773300886,0.0003974408027715981],[0.00021365830616559833,-0.0008436077041551471],[-0.0007924343808554113,0.0006731271278113127]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[-0.21124622225761414,0.18012741208076477,0.7879701852798462],"rotation":[0.9713817834854126,-0.00018449276103638113,0.23752298951148987,0.0004200754628982395],"used":true,"bodyHandle":2.26e-321,"linearSpeed":3.2340567761673764e-14,"angularVelocityHistory":[[-0.00002346074143133592,-0.0000027646096896205563],[-0.0000034601034712977707,0.0000057686056607053615],[-0.000034301723644603044,0.000020178367776679806],[0.00001708290983515326,-0.00003175794336129911],[-0.000027461472200229764,-0.000014965429727453738],[0.00003510163151076995,-0.00005720813351217657],[0.00014309606922324747,0.000011961798008996993],[0.000016207162843784317,-0.000013782125279249158],[-0.00011716329026967287,0.0002536670072004199],[-0.000040526781958760694,0.00009704056719783694],[0.0002708342217374593,0.000010914528502325993]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3514377772808075,0.1787431687116623,0.4497261345386505],"rotation":[-0.9821560978889465,-0.0006813225918449461,0.18783392012119293,-0.009342615492641926],"used":true,"bodyHandle":2.263e-321,"linearSpeed":0.0000013838412928449364,"angularVelocityHistory":[[0.09571956098079681,0.09764792025089264],[0.0346582792699337,0.137289360165596],[-0.2381635159254074,-0.17814430594444275],[0.032069820910692215,-0.17444367706775665],[0.17693208158016205,-0.06427609175443649],[0.02770833671092987,-0.04546558856964111],[-0.06324494630098343,-0.08591314405202866],[-0.014748354442417622,-0.08353249728679657],[-0.0581328421831131,0.3097798824310303],[0.04294883459806442,0.17026503384113312],[0.11495692282915115,-0.007744621951133013]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.22980719804763794,0.17803806066513062,0.756279706954956],"rotation":[-0.05681266263127327,-0.28165045380592346,-0.001991613768041134,-0.9578315615653992],"used":true,"bodyHandle":2.27e-321,"linearSpeed":3.533973169901508e-13,"angularVelocityHistory":[[0.00002016212238231674,0.00005814874384668656],[0.000019405701095820405,0.0000614506279816851],[0.000017511198166175745,0.00005502114072442055],[0.0000214285719266627,0.00005533178773475811],[0.000018593946151668206,0.00006111945549491793],[0.000020348967154859565,0.0000629425048828125],[0.000014941142580937594,0.00007249724876601249],[0.00002002453948080074,0.00006325367576209828],[0.000018742182874120772,0.000054954147344687954],[0.00001988252734008711,0.000059361431340221316],[0.00002211349601566326,0.00005946191231487319]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06746762990951538,0.1742178052663803,0.4923306405544281],"rotation":[-0.14260047674179077,0.006591645535081625,-0.9897555708885193,-0.002347173634916544],"used":true,"bodyHandle":2.273e-321,"linearSpeed":7.062570499439245e-10,"angularVelocityHistory":[[-0.002211968880146742,-0.0017965177539736032],[-0.002389491768553853,0.0008403311367146671],[-0.00005108710683998652,-0.0028339079581201077],[-0.0020666758064180613,0.002842103596776724],[-0.0022497891914099455,-0.0027534067630767822],[0.00019206224533263594,0.001943271025083959],[-0.003090820973739028,-0.0026256013661623],[-0.0018964289920404553,0.0008189412183128297],[-0.0005734773585572839,-0.000956796167884022],[-0.0022301068529486656,0.0020526230800896883],[-0.0034685409627854824,-0.0013068439438939095]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.35905736684799194,0.18901149928569794,0.4918755888938904],"rotation":[0.08751585334539413,0.11760647594928741,-0.9838133454322815,0.10305757820606232],"used":true,"bodyHandle":2.28e-321,"linearSpeed":2.847429932397637e-8,"angularVelocityHistory":[[0.0008507097372785211,-0.0025454966817051172],[-0.0057725487276911736,-0.004622867330908775],[0.0008502986165694892,0.006324516609311104],[-0.0014766575768589973,0.0010036546736955643],[-0.004720611032098532,0.004992501810193062],[-0.002524634124711156,-0.0005864022532477975],[-0.0009203837253153324,-0.003442790126428008],[0.0009412590879946947,0.001091523445211351],[0.0015175833832472563,-0.004413112998008728],[0.0050096032209694386,0.003729567863047123],[-0.0014223766047507524,-0.006097601260989904]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.179477721452713,0.17441505193710327,0.4849569499492645],"rotation":[0.3772055208683014,-0.00241451826877892,0.9261230826377869,-0.0024727494455873966],"used":true,"bodyHandle":2.283e-321,"linearSpeed":2.443594386008097e-9,"angularVelocityHistory":[[-0.000054869458836037666,0.0012163727078586817],[0.0007503597298637033,0.0011948735918849707],[0.0015813978388905525,0.00031927943928167224],[-0.0006228521815501153,0.0017572491196915507],[0.000003464402425379376,0.0004874215228483081],[0.001029298291541636,-0.001262787962332368],[0.0017601257422938943,-0.003756870748475194],[0.001587062026374042,-0.004379063379019499],[-0.0017319178441539407,0.004535977263003588],[-0.0003010951622854918,-0.0002318537444807589],[-0.00041580674587748945,0.0004366545763332397]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.41236457228660583,0.18466635048389435,0.3976615369319916],"rotation":[-0.016583919525146484,0.9796652793884277,-0.013344506733119488,0.1995064616203308],"used":true,"bodyHandle":2.288e-321,"linearSpeed":3.792131128402328e-8,"angularVelocityHistory":[[0.0011157019762322307,0.004340453539043665],[0.002233792096376419,0.007183435373008251],[-0.0025403944309800863,0.0030908482149243355],[0.001168172457255423,0.0040793814696371555],[-0.001161294523626566,0.003263788763433695],[-0.00026625447208061814,0.0044702100567519665],[-0.00031182673410512507,0.0011910323519259691],[0.0034388808999210596,0.004103262443095446],[0.0014383181696757674,0.004594313446432352],[0.0035701743327081203,0.003721887245774269],[0.0003228776913601905,0.0007860051700845361]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4215502440929413,0.17972080409526825,0.4039332866668701],"rotation":[0.00627720495685935,-0.6535495519638062,-0.0057123322039842606,0.7568361163139343],"used":true,"bodyHandle":2.29e-321,"linearSpeed":1.3709378841256886e-8,"angularVelocityHistory":[[0.0004922409425489604,0.0031878415029495955],[-0.0005084886797703803,-0.0034482390619814396],[0.0009203489171341062,0.0009875944815576077],[-0.0005844925763085485,-0.0017171668587252498],[-0.00043435272527858615,-0.0010895561426877975],[-0.0004095312615390867,-0.0020327477250248194],[-0.0009473987738601863,-0.0017831522272899747],[0.00045921237324364483,0.0006938687874935567],[0.0004105516418348998,-0.0005088247125968337],[0.0011407302226871252,0.0020204626489430666],[-0.0011724268551915884,-0.000029813721994287334]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.2174055427312851,0.18008433282375336,0.7268327474594116],"rotation":[0.798021137714386,0.001699006068520248,-0.6026197075843811,0.0029610400088131428],"used":true,"bodyHandle":2.297e-321,"linearSpeed":1.0438055773905196e-13,"angularVelocityHistory":[[0.000017746597222867422,-0.00003628367994679138],[0.00010876001033466309,-0.0001249028427992016],[0.000058981659094570205,-0.00015029519272502512],[0.00012441615399438888,-0.00005047221202403307],[0.000208338227821514,-0.000021307942006387748],[0.00007600316894240677,-0.0000419182724726852],[-0.000691185356117785,-0.000193756990483962],[-0.0010176696814596653,0.0010696997633203864],[0.0000876165067893453,-0.0011498617241159081],[-0.0003705797716975212,-0.00048260565381497145],[0.000002763591282928246,7.464714144589379e-7]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05914317071437836,0.21830907464027405,0.7050362825393677],"rotation":[-0.0032644483726471663,-0.1070408895611763,-0.007854084484279156,-0.9942181706428528],"used":true,"bodyHandle":2.3e-321,"linearSpeed":0,"angularVelocityHistory":[[0.15928255021572113,0.00921773910522461],[0.033003661781549454,0.3196842074394226],[-0.19258703291416168,0.018855592235922813],[-0.07625532895326614,-0.001118195941671729],[-0.021491076797246933,0.033873025327920914],[-0.20389729738235474,0.23174898326396942],[-0.0949104055762291,0.2135608196258545],[-0.208362877368927,0.1538001447916031],[-0.09883877635002136,-0.03624619171023369],[0.22549022734165192,-0.10449444502592087]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.37908992171287537,0.17949917912483215,0.39612722396850586],"rotation":[-0.004140486940741539,-0.7910308241844177,0.014384245499968529,0.6115931272506714],"used":true,"bodyHandle":2.307e-321,"linearSpeed":3.362679129651497e-9,"angularVelocityHistory":[[-0.0009929485386237502,-0.0005724339280277491],[-0.0004549607983790338,-0.0005757354083471],[-0.00030300329672172666,0.000017625665350351483],[-0.0013719642302021384,-0.001402893802151084],[0.0005029886960983276,0.0011983898002654314],[-0.0005856186617165804,-0.0001364970376016572],[0.0002131413493771106,-0.0003876776318065822],[0.0010641795815899968,-0.000008747540050535463],[-0.0004088645800948143,-0.0009922878816723824],[-0.0001790766982594505,-0.0009627650142647326],[-0.0020495171193033457,-0.0026687548961490393]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[0.4222296476364136,0.18514525890350342,0.42187362909317017],"rotation":[0.8092370629310608,-0.0019563015084713697,0.5873630046844482,-0.011666657403111458],"used":true,"bodyHandle":2.31e-321,"linearSpeed":4.168737405957608e-8,"angularVelocityHistory":[[-0.0015154698630794883,0.0009833195945248008],[-0.0008963763830251992,-0.002151685766875744],[-0.0002884474233724177,0.0008060263935476542],[-0.0016375789418816566,0.0017623021267354488],[-0.0009821741841733456,-0.0016269807238131762],[0.00011444128176663071,-0.0020013691391795874],[-0.0013758057029917836,-0.0029303948394954205],[0.0018856697715818882,0.001523661194369197],[0.0008246258366852999,-0.0009723615949042141],[0.0011823696549981833,0.004620895721018314],[-0.0034362641163170338,-0.003450548741966486]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.15208692848682404,0.18518424034118652,0.720988929271698],"rotation":[0.9993320107460022,-0.003010916756466031,-0.036413177847862244,0.0007782612810842693],"used":true,"bodyHandle":2.317e-321,"linearSpeed":8.916921601997224e-14,"angularVelocityHistory":[[-0.000003804908374149818,-0.0002722718345467001],[0.00004541422822512686,0.00026847654953598976],[-0.000007774132427584846,-0.000004498099315242143],[-0.000018977436411660165,0.00003506671782815829],[0.0000027019732442568056,0.0000042507381294853985],[0.00006710854358971119,0.00007558998913737014],[-0.000026377181711723097,0.00008949031325755641],[-0.0000266335755441105,-0.0008063066052272916],[0.00032682096934877336,0.0013972616288810968],[0.000018255639588460326,0.000024447954274364747],[0.0001478619669796899,0.0002984012244269252]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.3591926693916321,0.18167737126350403,0.39036890864372253],"rotation":[-0.76114821434021,-0.04046113044023514,0.6443296074867249,0.06209302693605423],"used":true,"bodyHandle":2.32e-321,"linearSpeed":2.796998514528016e-7,"angularVelocityHistory":[[0.0001967457210412249,-0.0006261157686822116],[0.0011476596118882298,-0.00215938501060009],[0.0002693370042834431,0.00007218064274638891],[-0.0010557792847976089,-0.0007570512243546546],[-0.0010061960201710463,-0.002756407717242837],[0.00084191735368222,0.006263114511966705],[0.001865240978077054,-0.0032686882186681032],[-0.0008597522974014282,-0.0024848557077348232],[0.0014330091653391719,-0.001294864108785987],[0.002802681876346469,0.00305823958478868],[0.0030337462667375803,0.0031899602618068457]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.1807020753622055,0.18019145727157593,0.4852825403213501],"rotation":[0.0030209266114979982,-0.34567132592201233,0.0004582511028274894,0.9383506178855896],"used":true,"bodyHandle":2.327e-321,"linearSpeed":5.399864350236244e-9,"angularVelocityHistory":[[-0.00019708872423507273,-0.00003969299723394215],[0.0019987826235592365,-0.0011181820882484317],[0.0008316424791701138,-0.0007296178373508155],[-0.0018529243534430861,0.00039103475864976645],[-0.000506535405293107,0.00009930648957379162],[-0.0012175877345725894,0.0005828640423715115],[0.00004482928852667101,-0.000018199696569354273],[0.0017960072727873921,-0.000619481026660651],[-0.0017077779630199075,0.0015088393120095134],[-0.0006735905772075057,0.0005194823606871068],[0.0004419039760250598,-0.000716295326128602]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.300778865814209,0.17985007166862488,0.6370578408241272],"rotation":[0.00648826640099287,-0.4948166608810425,0.0021256678737699986,-0.868970513343811],"used":true,"bodyHandle":2.33e-321,"linearSpeed":4.450805608787706e-12,"angularVelocityHistory":[[0.0002635003183968365,0.0002659930323716253],[-0.00009248306014342234,0.0003050061350222677],[-0.00016782936290837824,0.00017452106112614274],[-0.00032872662995941937,-0.0002700690529309213],[-0.00046754837967455387,-0.0006061468156985939],[-0.0003629033744800836,-0.0001502168015576899],[-0.000487828889163211,-0.0010423981584608555],[-0.0007317468989640474,0.0003807252214755863],[0.00012868580233771354,0.0010950530413538218],[-0.00019036947924178094,-0.0006536957807838917],[0.000034694916394073516,0.0002809204743243754]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[-0.25420770049095154,0.17426039278507233,0.5168793797492981],"rotation":[-0.003964540082961321,0.7707155346870422,-0.0027497182600200176,0.6371611952781677],"used":true,"bodyHandle":2.337e-321,"linearSpeed":3.2911196850866135e-13,"angularVelocityHistory":[[0.000013048219443589915,-0.0000032679238302080194],[-0.000006312088316917652,-0.0000033069957225961844],[-0.00003144866423099302,0.000023339227482210845],[-0.000006358719474519603,4.9935488277697e-7],[0.0000028937781735294266,-0.0000045363012759480625],[-0.000006577994099643547,-0.000010863300303753931],[-0.00001407977379130898,0.000002867555394914234],[-0.000005734184924222063,0.00000913383064471418],[0.000011783503396145534,0.000007320859822357306],[-0.00001551576133351773,0.000007451621968357358],[0.00002209311605838593,-0.000010938388186332304]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.06592807918787003,0.18813058733940125,0.5140283107757568],"rotation":[-0.9467592239379883,-0.016523048281669617,0.31841689348220825,0.044548410922288895],"used":true,"bodyHandle":2.34e-321,"linearSpeed":6.395950487934045e-7,"angularVelocityHistory":[[-0.00006682526873191819,-0.0060598705895245075],[0.0009415289969183505,0.002773405984044075],[-0.0011918800882995129,0.007869870401918888],[0.00029399312916211784,-0.017564836889505386],[-0.00045630490058101714,0.01360659021884203],[0.00022739736596122384,0.01530433353036642],[-0.0011417793575674295,-0.011470387689769268],[-0.005679207853972912,0.008476747199892998],[-0.002418852411210537,-0.00022856728173792362],[-0.004665851593017578,-0.012859024107456207],[-0.0027221674099564552,0.0031965544912964106]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.2411479949951172,0.1802353858947754,0.5567634105682373],"rotation":[0.6249081492424011,-0.0013174847699701786,-0.7806949615478516,-0.001823064056225121],"used":true,"bodyHandle":2.347e-321,"linearSpeed":7.389707044594748e-11,"angularVelocityHistory":[[0.000018936951164505444,0.00009409263293491676],[-0.000004015632384835044,0.00004462823198991828],[-8.183695285879367e-7,0.00006744411803083494],[-0.000003934095275326399,0.000051684630307136104],[-0.000021582545741694048,-0.00003552216730895452],[-0.0000034771562695823377,-0.00002104402483382728],[0.000021615140212816186,-0.00007934998575365171],[0.00001651996535656508,0.000048216930736089125],[0.000015887029803707264,-0.000022315805836115032],[-0.0000016178260011656675,-0.000025287396056228317],[0.000013307883818924893,0.0001269652129849419]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.3138088583946228,0.17738811671733856,0.42803052067756653],"rotation":[0.037193503230810165,-0.1822894662618637,0.0229848213493824,-0.9822722673416138],"used":true,"bodyHandle":2.35e-321,"linearSpeed":1.7650734037646239e-7,"angularVelocityHistory":[[0.007705391850322485,0.008174188435077667],[-0.0041170138865709305,-0.006888560485094786],[0.012200326658785343,0.007410705555230379],[-0.0036960009019821882,-0.006202260497957468],[0.006116826087236404,0.002669988200068474],[-0.0013842309126630425,0.001583685982041061],[0.006641361862421036,-0.0007204290595836937],[-0.00517280213534832,-0.0002711675188038498],[0.004820246249437332,0.0021008518524467945],[0.0019455946749076247,0.006925767287611961],[0.008096356876194477,0.0045530106872320175]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3505355715751648,0.17356614768505096,0.44973456859588623],"rotation":[0.0016913260333240032,-0.9903802871704102,0.003238086588680744,0.13832388818264008],"used":true,"bodyHandle":2.357e-321,"linearSpeed":5.763083269739978e-9,"angularVelocityHistory":[[0.010544927790760994,0.00788142904639244],[0.00702457083389163,0.002783288015052676],[-0.023278694599866867,-0.02700934372842312],[-0.0022833056282252073,-0.023458076640963554],[-0.007889524102210999,-0.011009297333657742],[-0.0033037755638360977,-0.009378550574183464],[0.00028921509510837495,0.0008314785081893206],[-0.0019013619748875499,-0.006245962809771299],[0.013393992558121681,0.03921006619930267],[0.01971818320453167,0.00166491256095469],[-0.0025261009577661753,0.014872582629323006]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3420862555503845,0.18963071703910828,0.44652697443962097],"rotation":[-0.019466763362288475,0.12169089168310165,0.003781435312703252,0.9923699498176575],"used":true,"bodyHandle":2.36e-321,"linearSpeed":0.000013715590415656076,"angularVelocityHistory":[[0.1226431131362915,0.12317445129156113],[0.041803013533353806,0.1952504813671112],[-0.3052769601345062,-0.18698398768901825],[0.05255686491727829,-0.24236808717250824],[0.2509894371032715,-0.11037963628768921],[0.0380917564034462,-0.05447889119386673],[-0.08495400846004486,-0.10609976947307587],[-0.015587642788887024,-0.11426787078380585],[-0.0883570984005928,0.42997777462005615],[0.05262124538421631,0.227980375289917],[0.16397620737552643,-0.05418051779270172]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.1820448338985443,0.17433035373687744,0.4248287081718445],"rotation":[-0.1953728348016739,-0.0035865604877471924,-0.9807189702987671,0.002625874010846019],"used":true,"bodyHandle":2.367e-321,"linearSpeed":4.825925050891234e-11,"angularVelocityHistory":[[0.0005102187860757113,-0.00035547150764614344],[-0.0007124140975065529,-0.0003134218277409673],[0.000409892963944003,-0.00030032111681066453],[-0.0001694850652711466,-0.0007745962939225137],[-0.001498646684922278,-0.0002650498354341835],[-0.0004799107846338302,0.00032164916046895087],[0.00023382014478556812,0.00010994059994118288],[-0.0039047780446708202,0.005819187965244055],[-0.002065963577479124,0.00018649754929356277],[-0.001708412659354508,0.003744155867025256],[-0.0005024917190894485,0.0002812899474520236]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.2304433137178421,0.17975038290023804,0.4535072445869446],"rotation":[0.8731648325920105,0.004104082006961107,0.4873962104320526,-0.0033400815445929766],"used":true,"bodyHandle":2.37e-321,"linearSpeed":2.5572050332046885e-9,"angularVelocityHistory":[[0.0006029298529028893,0.0005195487174205482],[0.0005079746479168534,0.0002585798501968384],[0.001373054925352335,-0.0003760521358344704],[0.0009020155994221568,-0.0007297926349565387],[0.0011708417441695929,0.0001995768107008189],[-0.00039391391328535974,-0.0003853382950183004],[0.0013482094509527087,-0.0003625683893915266],[-0.0017553671495988965,0.0011963526485487819],[0.0006155555602163076,-0.0005849723238497972],[-0.0010615075007081032,-0.0000029069265110592823],[-0.0003201750514563173,-0.0005008987500332296]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[-0.15683060884475708,0.1741829365491867,0.6493194103240967],"rotation":[0.8988996148109436,0.008162879385054111,0.43807506561279297,-0.001746287802234292],"used":true,"bodyHandle":2.376e-321,"linearSpeed":5.191247471313735e-14,"angularVelocityHistory":[[0.003898029215633869,-0.0004985348205082119],[-0.0012260961811989546,-0.00016912314458750188],[-0.0014820609940215945,0.000008679103302711155],[0.0031378285493701696,-0.0010521874064579606],[0.0006420077406801283,-0.0004424282524269074],[0.0013123451499268413,-0.000038597929233219475],[-0.001675630221143365,-0.00003931366154574789],[0.0036876490339636803,-0.0004210257320664823],[-0.00390643673017621,0.0006239243666641414],[-0.0021329999435693026,-0.002800736343488097],[0.001325898221693933,-0.0005964775336906314]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[0.2454405277967453,0.18019999563694,0.47199052572250366],"rotation":[0.0019436248112469912,0.737995445728302,-0.00152540672570467,-0.6748011112213135],"used":true,"bodyHandle":2.38e-321,"linearSpeed":2.1155921388020273e-8,"angularVelocityHistory":[[-0.00043669622391462326,0.0005160454311408103],[-0.0009841410210356116,0.0005862012621946633],[0.0004378682351671159,-0.0004087252600584179],[-0.001210361602716148,-0.0009082684991881251],[0.0009671909501776099,0.0030187657102942467],[0.0002920639526564628,0.003229430876672268],[0.0004636090307030827,-0.0006195929017849267],[0.005746880546212196,0.017679447308182716],[-0.010971611365675926,-0.017480172216892242],[0.00021533934341277927,0.00840082485228777],[0.00007066571561153978,0.0008757588220760226]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.16935713589191437,0.17403525114059448,0.4894288182258606],"rotation":[-0.00123547890689224,-0.9742972254753113,-0.0030340938828885555,0.225242480635643],"used":true,"bodyHandle":2.386e-321,"linearSpeed":0.000003089846017809257,"angularVelocityHistory":[[0.010834814049303532,-0.0023790469858795404],[0.0048167165368795395,0.003990120254456997],[0.003999410197138786,0.0014623336028307676],[0.0031942047644406557,0.0018570866668596864],[0.003357148729264736,-0.0007546035340055823],[0.0005830468726344407,0.006466158665716648],[-0.00126893469132483,-0.006137097720056772],[-0.02189585566520691,0.006942169275134802],[-0.0036088074557483196,-0.0088282385841012],[-0.018931005150079727,-0.0019262024434283376],[-0.000835721381008625,-0.003595776157453656]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.22303955256938934,0.17440950870513916,0.4624987840652466],"rotation":[0.0016608346486464143,0.36007243394851685,0.001772488933056593,-0.9329211711883545],"used":true,"bodyHandle":2.39e-321,"linearSpeed":2.026539383551457e-8,"angularVelocityHistory":[[0.0027350152377039194,-0.0011494513601064682],[-0.0022679490502923727,0.00009113657870329916],[0.003541327314451337,0.0012969450326636434],[-0.0032315135467797518,-0.0011348846601322293],[0.0018849566113203764,0.0003931316314265132],[-0.002443079138174653,-0.0008279858157038689],[0.0010150307789444923,0.0003714006161317229],[-0.01007799245417118,-0.005382433999329805],[0.00003330394611111842,-0.0010789844673126936],[-0.006988564506173134,-0.0030284577514976263],[-0.00005594877075054683,-0.00003534286224748939]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3059900104999542,0.1742110252380371,0.622890830039978],"rotation":[-0.004863122012466192,-0.3519783318042755,0.00020733622659463435,0.9359954595565796],"used":true,"bodyHandle":2.396e-321,"linearSpeed":1.0263899830578783e-14,"angularVelocityHistory":[[0.00004575924322125502,0.00024006178136914968],[0.00026702083414420485,0.00025989150162786245],[0.00004338768485467881,0.0001643183786654845],[-0.00003667357304948382,0.00022251489281188697],[-0.00009429008059669286,-0.0003325850993860513],[-0.000021143579942872748,0.00034674807102419436],[-0.00021894517703913152,-0.00046055985148996115],[-0.00041599871474318206,0.0009780628606677055],[0.00007173521589720622,0.0007969599100761116],[-0.000423668505391106,0.00017122339340858161],[0.00012299172522034496,0.0002589372161310166]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.06016292795538902,0.21681219339370728,0.6355143785476685],"rotation":[-0.0020553721114993095,0.9971706867218018,-0.0011943618301302195,0.07513264566659927],"used":true,"bodyHandle":2.4e-321,"linearSpeed":0,"angularVelocityHistory":[[0.03599949926137924,-0.14909960329532623],[0.02937663160264492,0.19642837345600128],[-0.19670429825782776,0.1801009178161621],[0.10942884534597397,-0.03712225332856178],[0.07103609293699265,0.07398413866758347],[-0.05146760493516922,0.7023001313209534],[0.0120993135496974,-0.19850437343120575],[-0.08158822357654572,0.012427756562829018],[0.19299058616161346,-0.016769230365753174],[0.03043205477297306,-0.2323080599308014]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.001957046100869775,0.2186957597732544,0.6723559498786926],"rotation":[-0.0034223287366330624,-0.5219070315361023,0.0011971641797572374,0.8529946804046631],"used":true,"bodyHandle":2.406e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.07590947300195694,-0.08523360639810562],[0.008409500122070312,0.10381448268890381],[0.06672670692205429,0.1331646591424942],[0.026250379160046577,0.15429501235485077],[-0.14480546116828918,-0.15474693477153778],[-0.10176342725753784,-0.2745327651500702],[0.028147419914603233,-0.26836496591567993],[-0.24749623239040375,-0.17805099487304688],[-0.23743648827075958,-0.03548453003168106],[-0.10145657509565353,0.2518922686576843]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.18516641855239868,0.18163791298866272,0.6089608073234558],"rotation":[-0.021391117945313454,0.992029070854187,-0.016740309074521065,0.12304671853780746],"used":true,"bodyHandle":2.41e-321,"linearSpeed":7.638173867269321e-11,"angularVelocityHistory":[[0.007755707949399948,-0.0026731675025075674],[0.006121231708675623,-0.0031462223269045353],[0.0011437592329457402,0.0021518233697861433],[0.004453470464795828,-0.0007512732408940792],[0.007615344133228064,0.00044401013292372227],[0.0023894060868769884,-0.006133479997515678],[0.006204467266798019,0.002466455101966858],[0.003990418743342161,-0.003687691641971469],[0.003916172776371241,0.00006587399548152462],[0.0020175722893327475,0.0038750821258872747],[0.0034133160952478647,-0.001055631204508245]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0008395647164434195,0.21922211349010468,0.6002875566482544],"rotation":[0.005002360790967941,0.050959669053554535,-0.008418584242463112,0.9986526370048523],"used":true,"bodyHandle":2.416e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.7903223037719727,0.19364671409130096],[0.05951427295804024,0.15578033030033112],[-0.09673583507537842,-0.09945043921470642],[-0.040915459394454956,-0.2547757625579834],[-0.1026601493358612,0.006287639960646629],[0.22357574105262756,0.10606662184000015],[0.058051347732543945,-0.10147139430046082],[-0.1941675990819931,0.024459989741444588],[0.010658510960638523,0.056990016251802444],[0.16273272037506104,-0.12883850932121277]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06025051698088646,0.21957215666770935,0.6363884210586548],"rotation":[-0.0019488747930154204,0.9739656448364258,-0.0015789787285029888,0.2266818881034851],"used":true,"bodyHandle":2.42e-321,"linearSpeed":0,"angularVelocityHistory":[[0.12144850939512253,-0.16839662194252014],[0.09054487198591232,0.19788473844528198],[-0.1748005449771881,0.18768596649169922],[0.1118616908788681,-0.01393092144280672],[0.14081498980522156,0.07410034537315369],[-0.006148437969386578,0.5402573347091675],[-0.03482507914304733,-0.20563063025474548],[-0.07473420351743698,0.010514741763472557],[0.10488930344581604,-0.05811551585793495],[0.011404040269553661,-0.304317444562912]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.22986160218715668,0.1744023859500885,0.5871660709381104],"rotation":[0.00025921655469574034,-0.39595016837120056,0.000610414135735482,0.9182717204093933],"used":true,"bodyHandle":2.426e-321,"linearSpeed":2.1418484662917497e-10,"angularVelocityHistory":[[-0.0001174017961602658,0.00001909993625304196],[-0.00018013214867096394,-0.00013284945453051478],[0.00021856854436919093,-0.00014867076242808253],[-0.00018557965813670307,0.000048759109631646425],[0.00009030076034832746,-0.00006699351069983095],[-0.00016013221465982497,0.00013034850417170674],[0.00022163329413160682,-0.0002022253320319578],[-0.0001566337450640276,-0.00006946119538042694],[0.00011850691225845367,0.00015091299428604543],[-0.000329237780533731,0.00022765822359360754],[-0.000046399760321946815,0.00011795606405939907]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[0.0004620252875611186,0.24504178762435913,0.6020141243934631],"rotation":[-0.005777537357062101,-0.9682148694992065,-0.011923814192414284,0.24976859986782074],"used":true,"bodyHandle":2.43e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.21688003838062286,-0.1823078989982605],[-0.03210285305976868,-0.09487747400999069],[0.12335900217294693,-0.16525112092494965],[0.2975867986679077,0.06950709968805313],[0.07602997869253159,0.1524040251970291],[0.03873959928750992,0.019492244347929955],[0.19117434322834015,0.01736786775290966],[0.07158158719539642,-0.10256287455558777],[0.1156100183725357,0.020799264311790466],[0.2730989456176758,0.35954198241233826]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.329772025346756,0.17427365481853485,0.5056124329566956],"rotation":[0.0007670962950214744,0.2415589690208435,0.002657938515767455,0.9703822135925293],"used":true,"bodyHandle":2.436e-321,"linearSpeed":2.873743332626436e-10,"angularVelocityHistory":[[0.0014338375767692924,0.0009199634660035372],[-0.0014148826012387872,0.0027349942829459906],[0.001319408300332725,-0.00035204479354433715],[-0.0006531726685352623,-0.0007798961014486849],[-0.00015998371236491948,-0.0002963624137919396],[-0.0004173001798335463,0.0011689829407259822],[-0.0011125330347567797,-0.001123717869631946],[0.00006478471186710522,-0.00019919865007977933],[0.0016440651379525661,-0.0014239525189623237],[0.0009641754440963268,0.0005719150649383664],[0.002543281065300107,0.0006525953649543226]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.42118361592292786,0.1792573779821396,0.49138501286506653],"rotation":[0.01910567283630371,-0.12969641387462616,0.004815427586436272,0.9913579821586609],"used":true,"bodyHandle":2.44e-321,"linearSpeed":7.063981418960525e-9,"angularVelocityHistory":[[-0.0016688144532963634,0.00035850590211339295],[-0.0007783003966324031,0.00018524144252296537],[0.00025681155966594815,0.0012245727702975273],[-0.0005080283735878766,-0.0006732453475706279],[-0.0013029411202296615,0.0019062572391703725],[-0.0005236013676039875,-0.00016204331768676639],[-0.0006817551329731941,0.0007199106621555984],[-0.00009624670929042622,0.00018612033454701304],[-0.0016492990544065833,-0.001826091087423265],[0.0014942492125555873,0.0017778461333364248],[-0.003492706222459674,-0.004039208870381117]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.34916719794273376,0.18413479626178741,0.45061585307121277],"rotation":[-0.011488846503198147,-0.2501489222049713,0.00744249764829874,0.9681105613708496],"used":true,"bodyHandle":2.446e-321,"linearSpeed":0.0000032628118925905216,"angularVelocityHistory":[[0.0958234965801239,0.09629911184310913],[0.03661005198955536,0.136932834982872],[-0.23245687782764435,-0.16971294581890106],[0.0350419320166111,-0.16782782971858978],[0.17986483871936798,-0.06319872289896011],[0.021989159286022186,-0.04701446741819382],[-0.06322737038135529,-0.08547697216272354],[-0.013950792141258717,-0.0824953094124794],[-0.05341673642396927,0.2977340817451477],[0.04578092321753502,0.1688893735408783],[0.11708132922649384,-0.012546759098768234]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.25206539034843445,0.1854144185781479,0.40600818395614624],"rotation":[0.0011357307666912675,-0.37859609723091125,-0.0005747179384343326,-0.9255611300468445],"used":true,"bodyHandle":2.45e-321,"linearSpeed":5.619639345364478e-8,"angularVelocityHistory":[[-0.0002807783312164247,0.008151715621352196],[-0.005367003846913576,-0.01579088158905506],[0.0019402258330956101,0.006284621078521013],[-0.0008629764197394252,-0.002212814288213849],[0.00132167583797127,0.005322999320924282],[-0.004089559894055128,-0.01655803620815277],[0.0018263842212036252,0.0026060123927891254],[-0.005283362697809935,-0.004745714366436005],[-0.003152180928736925,0.0038045416586101055],[-0.01148449257016182,-0.018324267119169235],[0.00833259616047144,0.00823711697012186]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05777135491371155,0.22044749557971954,0.704369843006134],"rotation":[-0.002868273062631488,-0.10956048220396042,-0.010868393816053867,-0.9939165711402893],"used":true,"bodyHandle":2.456e-321,"linearSpeed":0,"angularVelocityHistory":[[0.148534893989563,-0.026452606543898582],[0.0030389062594622374,0.23393310606479645],[-0.14734673500061035,0.12537240982055664],[-0.02282576635479927,-0.0023195806425064802],[0.10023540258407593,0.08590025454759598],[-0.2182852029800415,0.2005658745765686],[-0.09427404403686523,0.2934488356113434],[-0.21225057542324066,0.11185329407453537],[-0.1322125345468521,-0.03157714009284973],[0.17826686799526215,0.014799915254116058]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.1266362965106964,0.17427951097488403,0.5125280618667603],"rotation":[0.0009863791055977345,-0.6103305816650391,-0.001846788451075554,0.7921440601348877],"used":true,"bodyHandle":2.46e-321,"linearSpeed":7.035487225206185e-10,"angularVelocityHistory":[[0.0031322322320193052,-0.0010121986269950867],[0.0023602452129125595,0.0006149428663775325],[0.004715282935649157,-0.0008768833358772099],[0.009866318665444851,-0.002941457089036703],[0.003236498450860381,0.003188604721799493],[0.00796961598098278,0.00820396188646555],[0.00411759689450264,0.0006716598873026669],[-0.0011220448650419712,-0.002327205613255501],[0.005059779155999422,0.0020819613710045815],[0.0022656291257590055,0.007279939949512482],[0.005609533283859491,0.006172443274408579]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.12586869299411774,0.1797999143600464,0.5112969279289246],"rotation":[-0.15562646090984344,-0.00019653441268019378,-0.9877903461456299,-0.007110925391316414],"used":true,"bodyHandle":2.465e-321,"linearSpeed":3.4372944316765515e-9,"angularVelocityHistory":[[0.0024166267830878496,0.008684460073709488],[0.010469391010701656,0.012394271790981293],[-0.000762896437663585,-0.006561634596437216],[0.009569529443979263,-0.002881919266656041],[0.008142868056893349,0.007628960534930229],[0.008265825919806957,0.004625174682587385],[0.005472904536873102,0.006406944710761309],[-0.0021584623027592897,-0.007463407702744007],[0.013196186162531376,0.008780540898442268],[0.015458482317626476,0.01469316054135561],[0.011713077314198017,0.016533678397536278]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0674324482679367,0.17387127876281738,0.47678884863853455],"rotation":[0.00533314747735858,0.13239283859729767,0.0044719683937728405,0.9911729097366333],"used":true,"bodyHandle":2.47e-321,"linearSpeed":6.332809952904978e-11,"angularVelocityHistory":[[0.000177027250174433,0.0029799831099808216],[-0.0021883591543883085,-0.0019206461729481816],[-0.002461374970152974,0.0007692631334066391],[0.0012472778325900435,0.0025421713944524527],[-0.003978744149208069,-0.001964002614840865],[-0.0018014939269050956,-0.000022741260181646794],[-0.0024449483025819063,0.0011241617612540722],[-0.002567618153989315,-0.004295930732041597],[-0.00027386457077227533,0.00023706017236690968],[-0.002247715136036277,0.0023330191615968943],[-0.0013685760786756873,-0.002009272575378418]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.006370509974658489,0.20128370821475983,0.3438846170902252],"rotation":[-0.8827325105667114,-0.023511728271842003,0.46808406710624695,0.033581338822841644],"used":true,"bodyHandle":2.475e-321,"linearSpeed":2.653082838764533e-9,"angularVelocityHistory":[[0.0077393134124577045,0.0008827759302221239],[0.007609750609844923,0.001301621668972075],[0.002231484977528453,-0.0000784625590313226],[0.0021645959932357073,0.0006719109951518476],[-0.008346082642674446,-0.0010734177194535732],[0.00161783117800951,0.0003292671754024923],[0.009251910261809826,0.001779097248800099],[-0.008332619443535805,-0.00007451406418113038],[0.0024550894740968943,0.0008835360058583319],[-0.004036219324916601,-0.00030672430875711143],[-0.0024352860637009144,-0.0011824974790215492]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.12489952147006989,0.17413170635700226,0.44898363947868347],"rotation":[-0.2683798670768738,0.0019084656378254294,0.9633112549781799,0.000049678510549711064],"used":true,"bodyHandle":2.48e-321,"linearSpeed":7.002091921681906e-10,"angularVelocityHistory":[[0.0038553504273295403,0.0011615518014878035],[0.001478858757764101,0.0004350476374384016],[0.005104783456772566,0.0016286715399473906],[0.005999771412461996,0.0038703978061676025],[0.0013423223281279206,0.0003886717604473233],[0.0015212788712233305,0.004057874903082848],[0.0005550779169425368,0.0012609796831384301],[-0.019819095730781555,0.00005353922097128816],[-0.008436695672571659,-0.0011571701616048813],[-0.005489469971507788,0.003699907334521413],[-0.005675435531884432,-0.0019338753772899508]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.13760021328926086,0.17412738502025604,0.6096526384353638],"rotation":[0.004736137110739946,0.9601449966430664,0.0016270112246274948,0.2794573903083801],"used":true,"bodyHandle":2.485e-321,"linearSpeed":1.423234778685515e-12,"angularVelocityHistory":[[-0.00035029780701734126,-0.0011865838896483183],[-0.005626912694424391,0.003482712199911475],[0.0008421257371082902,-0.002399042947217822],[-0.0022068701218813658,0.0049034906551241875],[0.00034029484959319234,0.0015042498707771301],[-0.0004931753501296043,0.00010036915773525834],[-0.0050398074090480804,0.002635893877595663],[-0.006586064118891954,0.0013380120508372784],[0.0031393191311508417,-0.000035422464861767367],[-0.0031267344020307064,0.004694401752203703],[-0.0018299751682206988,-0.0007031356799416244]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.3630155324935913,0.17824818193912506,0.378089040517807],"rotation":[0.4811457097530365,0.04413480684161186,-0.8748471140861511,-0.03454534336924553],"used":true,"bodyHandle":2.49e-321,"linearSpeed":8.808208961005816e-8,"angularVelocityHistory":[[-0.00007147251017158851,0.0009153420687653124],[-0.0010473279980942607,-0.0006390420021489263],[0.00039804549305699766,0.00012563809286803007],[-0.0002841271925717592,-0.0008590440265834332],[0.00011630911467364058,0.0005145597388036549],[-0.00032802639179863036,0.00030684765079058707],[0.0020700697787106037,-0.00029936531791463494],[-0.00018259092757944018,-0.0008795073954388499],[0.0007330342195928097,-0.0004590251774061471],[-0.00048458611126989126,-0.0010733016533777118],[0.0020782947540283203,0.0009480146691203117]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.31779944896698,0.174285888671875,0.3937799334526062],"rotation":[0.00248610763810575,-0.39886170625686646,-0.004035541322082281,-0.9169988036155701],"used":true,"bodyHandle":2.495e-321,"linearSpeed":8.842588575995905e-11,"angularVelocityHistory":[[0.00003133046629955061,-0.000065785956394393],[0.00005784858876722865,0.000004093447387276683],[-0.0000028988931717321975,0.000031043826311361045],[0.0000312363808916416,-0.0001434990408597514],[0.00009169364057015628,7.579037060168048e-7],[0.0003523997438605875,-0.00007407155499095097],[0.0000991457563941367,-0.00011302079656161368],[-0.000016400897948187776,-0.00008750214328756556],[0.000013602161743619945,-0.00017607570043765008],[0.0000798131077317521,0.000051016595534747466],[0.00018779592937789857,-0.00021755986381322145]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[-0.06781721115112305,0.1791304349899292,0.4791315197944641],"rotation":[0.00009664271783549339,-0.9718337655067444,-0.01690072752535343,-0.23506049811840057],"used":true,"bodyHandle":2.5e-321,"linearSpeed":4.770171034113473e-8,"angularVelocityHistory":[[0.001290035666897893,0.00206008180975914],[-0.004154252354055643,-0.0008980518323369324],[-0.0031282780691981316,0.0018913284875452518],[-0.0012100684689357877,-0.0007731172954663634],[-0.004399334546178579,0.0013895557494834065],[-0.0015982806216925383,0.0031845218036323786],[-0.004458377603441477,-0.0032000164501369],[-0.008031037636101246,-0.006129547953605652],[-0.004275965970009565,-0.0006691866437904537],[-0.00586562417447567,-0.002913096686825156],[-0.00019841747416649014,-0.0012695479672402143]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.25693413615226746,0.1741742342710495,0.4129297137260437],"rotation":[-0.00413532555103302,0.35362252593040466,0.0005440206150524318,-0.935378909111023],"used":true,"bodyHandle":2.505e-321,"linearSpeed":4.368987668029908e-9,"angularVelocityHistory":[[0.00557336350902915,0.0015056462725624442],[0.002859674161300063,-0.008489064872264862],[0.006072316784411669,0.003392226994037628],[-0.001002739300020039,-0.004435092210769653],[0.00803354475647211,0.0032012169249355793],[-0.0019485816592350602,-0.003997304476797581],[0.009095746092498302,0.0012629542034119368],[-0.0012401678832247853,-0.004194294568151236],[0.00282032391987741,0.0018073609098792076],[0.002151006832718849,-0.002076146425679326],[0.003528882283717394,0.002570198383182287]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.18710163235664368,0.17596806585788727,0.605977475643158],"rotation":[-0.40779435634613037,-0.024018147960305214,-0.9127250909805298,0.007734027225524187],"used":true,"bodyHandle":2.51e-321,"linearSpeed":5.6265751560532234e-11,"angularVelocityHistory":[[0.006713042967021465,-0.0015729928854852915],[0.009455926716327667,-0.0017269200179725885],[0.000038780934119131416,0.00215689605101943],[0.007626119535416365,-0.0011819546343758702],[0.00785884726792574,-0.001929293037392199],[0.00558107765391469,-0.006154780741780996],[0.0012253837194293737,0.0010864061769098043],[0.005423945840448141,-0.0039602783508598804],[0.004155445843935013,0.0007987763965502381],[-0.000705090700648725,0.004498428199440241],[0.007891908288002014,-0.0017999376868829131]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.11206107586622238,0.1779194176197052,0.5751297473907471],"rotation":[0.6947134733200073,-0.04860643297433853,-0.7174718976020813,0.01564078964293003],"used":true,"bodyHandle":2.515e-321,"linearSpeed":1.0302701755814553e-8,"angularVelocityHistory":[[0.00852070190012455,-0.0017786466050893068],[0.004506763070821762,0.0027489084750413895],[0.012733225710690022,-0.0049587516114115715],[0.02026461809873581,0.00631059892475605],[0.008062240667641163,-0.017910528928041458],[0.010040689259767532,-0.028590960428118706],[-0.17832612991333008,0.16645878553390503],[-0.08972496539354324,0.09143504500389099],[0.037450890988111496,0.023640837520360947],[0.0008169463835656643,0.002783652162179351],[-0.011586619541049004,0.027869556099176407]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.29024654626846313,0.1744104027748108,0.44706621766090393],"rotation":[-0.003011063439771533,0.9004150032997131,-0.0002422767720418051,-0.4350213408470154],"used":true,"bodyHandle":2.52e-321,"linearSpeed":1.1631363779580003e-11,"angularVelocityHistory":[[0.000026242520107189193,0.00004726950646727346],[0.00008276099106296897,0.00020398701599333435],[0.000023163805963122286,0.00012760289246216416],[-0.00004299600550439209,0.00001534033981442917],[0.000016243773643509485,0.00017891987226903439],[0.000009702345778350718,0.0000600622188358102],[0.000008938580322137568,-0.00019463464559521526],[0.000001498885922046611,0.00042572649545036256],[0.0001336068962700665,-0.0010245823068544269],[-0.000012232328117534053,0.000275145226623863],[0.000026842777515412308,-0.00004591461402014829]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.26788589358329773,0.17972823977470398,0.5039300322532654],"rotation":[0.006909149698913097,-0.9255175590515137,0.006698260549455881,-0.37858232855796814],"used":true,"bodyHandle":2.525e-321,"linearSpeed":2.5778502049582813e-10,"angularVelocityHistory":[[-0.000010787911378429271,0.00006981743354117498],[-0.000026137147870031185,0.0000479449809063226],[-0.000020892701286356896,0.00004180223913863301],[-0.000009702287570689805,0.00002767578735074494],[-0.00003371047569089569,-0.000011062408702855464],[-0.000007511217518185731,0.0000109793227238697],[0.000030271914511104114,-0.00005106731623527594],[0.000004854371127294144,0.000017321272025583312],[0.000020989395125070587,-0.00003588257095543668],[0.00000901233397598844,-0.000020651406885008328],[-5.74017235521751e-7,0.00008493031782563776]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[-0.1217331513762474,0.17968127131462097,0.44694527983665466],"rotation":[0.7846962809562683,-0.00024033112276811153,-0.6198788285255432,-0.0013495427556335926],"used":true,"bodyHandle":2.53e-321,"linearSpeed":3.5154851612057875e-7,"angularVelocityHistory":[[0.023846372961997986,-0.003657806199043989],[0.01657695509493351,0.0005563004524447024],[0.019496051594614983,-0.0017810569843277335],[0.044082581996917725,-0.0022237319499254227],[0.010784598998725414,-0.0012401404092088342],[0.01908084936439991,-0.001138141262345016],[0.006183166056871414,-0.0010894263396039605],[-0.05989806726574898,0.012455242685973644],[-0.03340306878089905,0.003404921153560281],[-0.030308399349451065,0.0030565490014851093],[-0.03274181857705116,0.00391831761226058]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.31845754384994507,0.17997634410858154,0.3945242166519165],"rotation":[-0.9791819453239441,-0.005431815981864929,0.20285478234291077,-0.004804306197911501],"used":true,"bodyHandle":2.535e-321,"linearSpeed":2.1082093723848626e-9,"angularVelocityHistory":[[-0.00019854819402098656,-0.00012629733828362077],[-0.0004562401445582509,-0.0003631221188697964],[-0.0004378312441986054,-0.00025545217795297503],[-0.0003873602254316211,0.00008767888357397169],[-0.00010325666517019272,0.00034594250610098243],[-0.00020991850760765374,0.00025876672589220107],[-0.00009498608415015042,-0.00009610379493096843],[-0.00011831508891191334,0.00011353637819411233],[-0.00023869622964411974,-0.0003287150466348976],[0.0002713055582717061,-0.0004874083970207721],[-0.0007055075839161873,-0.0006340366671793163]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.19801686704158783,0.17440903186798096,0.40377601981163025],"rotation":[-0.6773508787155151,0.000419358053477481,-0.7356599569320679,0.0001809074601624161],"used":true,"bodyHandle":2.54e-321,"linearSpeed":6.966763234514496e-10,"angularVelocityHistory":[[0.0033522385638207197,0.005739070940762758],[-0.0014420797815546393,0.0008625106420367956],[0.003786964574828744,0.008750543929636478],[-0.003715388709679246,0.001965508796274662],[0.0029482401441782713,0.0035000320058315992],[-0.00011748565157176927,-0.0010281122522428632],[0.0012093638069927692,0.007853121496737003],[-0.004030556418001652,0.0014188122004270554],[-0.000879752857144922,0.004475768655538559],[-0.005171847529709339,-0.0025202028919011354],[0.002384345745667815,0.0057542286813259125]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2565150260925293,0.17960992455482483,0.41300609707832336],"rotation":[0.36472222208976746,0.0005467376322485507,0.9311150312423706,-0.0014542483258992434],"used":true,"bodyHandle":2.544e-321,"linearSpeed":3.917904983972067e-8,"angularVelocityHistory":[[-0.00608168775215745,0.000007970386832312215],[0.0024120965972542763,-0.005248712375760078],[-0.003815023461356759,-0.001352241262793541],[-0.001518680714070797,-0.004108855035156012],[-0.007290696259588003,0.0003610096755437553],[0.0011307068634778261,-0.0056014955043792725],[-0.006698021199554205,-0.002515956060960889],[-0.00820126011967659,-0.0057778870686888695],[-0.005130711942911148,-0.000514380109962076],[-0.006645573768764734,-0.005707449745386839],[0.003736843355000019,-0.0017336547607555985]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.1988196223974228,0.17742006480693817,0.6675142645835876],"rotation":[0.5618751049041748,0.007651269435882568,0.8257975578308105,-0.047917213290929794],"used":true,"bodyHandle":2.55e-321,"linearSpeed":1.4829141503425067e-12,"angularVelocityHistory":[[-0.0057082525454461575,0.0031628466676920652],[-0.0004305942275095731,0.00017715747526381165],[-0.0011973552173003554,-0.0010994659969583154],[-0.00039283165824599564,0.0015205171657726169],[-0.0008143649902194738,0.00039467192254960537],[-0.007591371890157461,0.00293038715608418],[0.004341963678598404,-0.0011717078741639853],[-0.005682669579982758,0.002605155576020479],[0.0003714383637998253,-0.000381243706215173],[0.004126684740185738,-0.00731032295152545],[0.00008971153874881566,0.0016308571211993694]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.17923535406589508,0.18005570769309998,0.42423200607299805],"rotation":[-0.003899800358340144,0.8149343729019165,-0.0002902284904848784,0.5795400142669678],"used":true,"bodyHandle":2.554e-321,"linearSpeed":3.0391135838247585e-8,"angularVelocityHistory":[[-0.0005121579160913825,-0.0008695672149769962],[-0.0009262191597372293,-0.0009433528175577521],[0.0011422726092860103,-0.002137131989002228],[0.0035943707916885614,-0.006852277554571629],[0.000006232255145732779,-0.004939820617437363],[0.0025668798480182886,-0.0036443588323891163],[-0.0009835157543420792,-0.0008465737337246537],[0.005181684158742428,-0.015089122578501701],[-0.0047041429206728935,0.002474959706887603],[0.0029078719671815634,-0.004182913340628147],[-0.0004787447687704116,-0.0011308827670291066]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06827612966299057,0.17428046464920044,0.4179472327232361],"rotation":[0.47604939341545105,0.005275697447359562,-0.8794024586677551,-0.000629221205599606],"used":true,"bodyHandle":2.56e-321,"linearSpeed":3.6420866311166246e-13,"angularVelocityHistory":[[-0.000011759602784877643,-0.0008570643840357661],[0.00042530105565674603,-0.00163086352404207],[-0.0017848978750407696,0.0015146812656894326],[0.000839448650367558,-0.00007649711187696084],[0.0009514138218946755,0.00016575604968238622],[-0.00026788157992996275,0.0001217624667333439],[-0.00028688693419098854,0.0010079533094540238],[-0.001339874230325222,-0.0018354842904955149],[0.0009659152710810304,-0.00104396918322891],[0.0023861215449869633,0.0002908873721025884],[-0.0017924397252500057,-0.0005087470053695142]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[-0.19666321575641632,0.17441491782665253,0.36770084500312805],"rotation":[-0.7131977677345276,0.0018346994183957577,0.7009552121162415,-0.0026939590461552143],"used":true,"bodyHandle":2.564e-321,"linearSpeed":8.603148422455296e-10,"angularVelocityHistory":[[0.00013359618606045842,-0.0010923075024038553],[-0.0004164495039731264,-0.0002789717400446534],[0.0019708292093127966,0.0010466378880664706],[0.0009846886387094855,0.0009616887546144426],[0.0007226894376799464,-0.0022036770824342966],[-0.0009963909396901727,0.0012369578471407294],[0.0008792506414465606,0.0011580203427001834],[-0.0002706947852857411,0.0035241676960140467],[0.0004177519876975566,0.0014097229577600956],[-0.00021958618890494108,0.0010609542950987816],[-0.0002901110565289855,-0.000623648171313107]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[-0.06705734133720398,0.18568062782287598,0.4406447410583496],"rotation":[0.0010918918997049332,-0.8705564737319946,0.0006791448104195297,0.4920669496059418],"used":true,"bodyHandle":2.57e-321,"linearSpeed":2.0587683002557418e-8,"angularVelocityHistory":[[0.0006915332633070648,0.0012124261120334268],[-0.0024458521511405706,0.0006558033055625856],[0.0016699469415470958,0.0023568321485072374],[-0.0007144211558625102,-0.007066343445330858],[0.005482363514602184,0.004919281229376793],[0.0024943449534475803,0.004462952259927988],[0.00046911693061701953,0.0008132433285936713],[0.0015577517915517092,-0.004238073714077473],[0.00406748428940773,0.0005098220426589251],[0.005825716536492109,-0.000307094567688182],[-0.0007709526689723134,0.002082676626741886]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.1732170283794403,0.1774948388338089,0.5543268322944641],"rotation":[0.052407149225473404,-0.8380441665649414,0.002994783455505967,0.5430713295936584],"used":true,"bodyHandle":2.574e-321,"linearSpeed":2.076055862778793e-7,"angularVelocityHistory":[[0.002070558024570346,-0.006668764166533947],[-0.0002101169666275382,-0.004387266002595425],[-0.003757414873689413,-0.009199523366987705],[-0.010267795994877815,-0.0006296953069977462],[0.0030772394966334105,-0.010222511366009712],[0.003037806134670973,-0.010295243933796883],[0.002875137608498335,-0.004246554337441921],[-0.0011360968928784132,0.0012903157621622086],[-0.0010843271156772971,-0.0015952471876516938],[-0.006946085952222347,0.006097299046814442],[-0.002658666344359517,-0.006225142627954483]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.1689932942390442,0.17951135337352753,0.49157214164733887],"rotation":[-0.7862116694450378,0.0026500639505684376,0.6178984045982361,0.008104825392365456],"used":true,"bodyHandle":2.58e-321,"linearSpeed":0.0000023133784745089146,"angularVelocityHistory":[[0.030217325314879417,0.0578242726624012],[0.024746736511588097,0.014614291489124298],[0.02563410997390747,0.01793377660214901],[0.01610678806900978,0.018934689462184906],[0.011928508058190346,0.011998532339930534],[0.014703826978802681,0.013097577728331089],[0.014171293005347252,0.015200668014585972],[-0.04501427337527275,-0.05664653703570366],[-0.06960487365722656,0.022815262898802757],[-0.032490357756614685,0.0001680584391579032],[-0.041360028088092804,0.00593574158847332]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.36511409282684326,0.18868066370487213,0.4155466854572296],"rotation":[0.05833343416452408,-0.5329296588897705,-0.05000728741288185,0.8426638841629028],"used":true,"bodyHandle":2.584e-321,"linearSpeed":1.161815957457955e-7,"angularVelocityHistory":[[-0.0007768023642711341,0.001384660485200584],[-0.00006773216591682285,-0.009510034695267677],[-0.0014033926418051124,-0.0013081131037324667],[0.000009971905456040986,-0.011031483300030231],[-0.002269021701067686,0.0006001158617436886],[-0.0017685379134491086,-0.0009885594481602311],[-0.0011355715105310082,-0.0016700606793165207],[-0.002249675104394555,-0.002422954188659787],[0.0000021461530650412897,-0.0023397132754325867],[-0.0017715698340907693,-0.002819699700921774],[0.0015017243567854166,-0.0010878302855417132]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3382294774055481,0.18149103224277496,0.32273516058921814],"rotation":[-0.008399075828492641,0.997988760471344,0.018671756610274315,0.059993211179971695],"used":true,"bodyHandle":2.59e-321,"linearSpeed":1.3109084415034918e-10,"angularVelocityHistory":[[0.000006520457191072637,0.00017259469314012676],[-0.00005003379192203283,0.00021418604592327029],[-0.00019241606059949845,-0.00006953084812266752],[-0.00019592417811509222,-0.00005143737871549092],[0.00005906089791096747,0.00008262160554295406],[0.00005990933641442098,0.000002644425194375799],[-0.00007127640856197104,0.00016876994050107896],[-0.00009531224350212142,-0.00008430362504441291],[-0.000013155985470802989,0.00006446301995310932],[-0.0003878533316310495,0.000009767459232534748],[-0.0005664617056027055,-0.00009439089626539499]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[-0.2889825999736786,0.18018707633018494,0.44624531269073486],"rotation":[0.0017033610492944717,-0.9280420541763306,-0.000490396108943969,0.37247103452682495],"used":true,"bodyHandle":2.594e-321,"linearSpeed":1.852656833022974e-9,"angularVelocityHistory":[[-0.00001999765299842693,0.0001439946936443448],[-0.000037283032725099474,0.00033448016620241106],[0.00004819132300326601,0.00007358794391620904],[0.0000693879192112945,-0.00022068944235797971],[0.000006506606496259337,0.0003667621349450201],[0.00004219337643007748,-0.000055973643611650914],[0.00002941999446193222,0.000008791769687377382],[0.0000973245405475609,-0.00038106058491393924],[0.00022393623657990247,-0.0002586191112641245],[0.00015703057579230517,-0.0004341736785136163],[0.000050931485020555556,-0.0002785030519589782]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3494836688041687,0.17459645867347717,0.343932181596756],"rotation":[-0.9813289046287537,0.00024729821598157287,-0.19233058393001556,-0.0015448867343366146],"used":true,"bodyHandle":2.6e-321,"linearSpeed":1.426074996886565e-11,"angularVelocityHistory":[[-0.00016478425823152065,0.000013505073184205685],[-0.00025620669475756586,0.000005223933840170503],[0.00003037908027181402,-0.00003275167546235025],[0.00016016929293982685,0.00035680155269801617],[0.00008017774962354451,-0.0000590833842579741],[0.0002136824041372165,-0.00026648311177268624],[0.00017354280862491578,-0.00010907748219324276],[0.0001744618930388242,0.00006410716014215723],[-0.00011486436414998025,-0.000007273958544828929],[0.00003174971789121628,-0.00006516489520436153],[-0.0005814157193526626,0.000027725523978006095]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[-0.07460438460111618,0.1874176561832428,0.28251051902770996],"rotation":[-0.025047602131962776,0.9513965845108032,0.03252529725432396,0.3052198886871338],"used":true,"bodyHandle":2.604e-321,"linearSpeed":1.428953511300494e-8,"angularVelocityHistory":[[0.02429584227502346,-0.022636329755187035],[0.013807851821184158,0.006336089223623276],[0.01459513045847416,-0.02863008715212345],[0.01798061653971672,0.012968781404197216],[-0.03083435259759426,-0.01901216246187687],[-0.14240321516990662,0.11380330473184586],[-0.11298613995313644,-0.02693839929997921],[-0.0056215375661849976,-0.01817411370575428],[-0.06521327048540115,0.029974741861224174],[-0.05128354951739311,-0.014947352930903435],[-0.014094254933297634,-0.01899079792201519]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[0.07051026076078415,0.18566206097602844,0.4713735282421112],"rotation":[-0.00020801171194761992,-0.05239849537611008,-0.0002411048044450581,0.998626172542572],"used":true,"bodyHandle":2.61e-321,"linearSpeed":9.44155992850006e-8,"angularVelocityHistory":[[-0.0017796201864257455,-0.005740098189562559],[-0.000006806289093219675,-0.0017123910365626216],[-0.003385101445019245,-0.0023550756741315126],[-0.0011188535718247294,0.0026284854393452406],[-0.001979470020160079,-0.00806096475571394],[-0.0016156351193785667,0.005061888601630926],[0.0022025653161108494,0.0006199379567988217],[-0.0019084216328337789,0.005228215828537941],[0.0009178239270113409,-0.009225268848240376],[-0.001711051445454359,0.00012756646901834756],[-0.005684651900082827,0.000640036363620311]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.13304291665554047,0.1744328737258911,0.3884093761444092],"rotation":[0.003616077359765768,-0.7132700681686401,0.000741119496524334,0.7008795142173767],"used":true,"bodyHandle":2.614e-321,"linearSpeed":3.733249726369394e-11,"angularVelocityHistory":[[-0.00047776277642697096,-0.0007403912604786456],[0.0008333123405463994,-0.0000328421920130495],[0.0009300665115006268,0.0007355510606430471],[0.001076055341400206,0.00037441711174324155],[-0.0027348813600838184,-0.0014880389207974076],[0.0007503233500756323,0.00000804693809186574],[-0.0013532632729038596,-0.0005735278828069568],[0.0007338980794884264,0.0003039338917005807],[-0.001215750235132873,0.0017404909012839198],[-0.00003745406138477847,0.002882593311369419],[-0.000194553766050376,-0.000568378483876586]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.13414894044399261,0.17396292090415955,0.39358314871788025],"rotation":[0.0018586644437164068,-0.23521995544433594,-0.0014081706758588552,0.9719393253326416],"used":true,"bodyHandle":2.62e-321,"linearSpeed":1.4380084541055997e-9,"angularVelocityHistory":[[-0.0004799512098543346,-0.0029192911460995674],[-0.00042496397509239614,-0.0007133904146030545],[0.0010397485457360744,-0.00032617166289128363],[-0.0012737957295030355,-0.0014973345678299665],[0.0010937092592939734,-0.0032562860287725925],[-0.0016930510755628347,-0.0021853644866496325],[-0.0032699406147003174,-0.004127637483179569],[-0.0006945586064830422,-0.001129551907069981],[-0.0014980698470026255,-0.00024289560678880662],[-0.00014960122643969953,-0.005025048274546862],[-0.001664829789660871,0.00020842658705078065]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[0.1996278315782547,0.18016904592514038,0.43275871872901917],"rotation":[0.0018506310880184174,-0.26043611764907837,0.0006923546898178756,-0.9654890298843384],"used":true,"bodyHandle":2.623e-321,"linearSpeed":1.2341215769437377e-8,"angularVelocityHistory":[[0.002511068480089307,-0.011079579591751099],[0.0021042146254330873,0.009223257191479206],[0.0037406168412417173,-0.0022070377599447966],[-0.002298385603353381,0.005273418501019478],[0.003932486288249493,-0.005079431924968958],[0.003163269255310297,0.008121871389448643],[0.0016525627579540014,0.0013585040578618646],[-0.0023915423080325127,0.007369791157543659],[0.0051782215014100075,-0.00554367620497942],[0.0006981028127484024,0.005700476001948118],[-0.0009184195660054684,-0.0022340782452374697]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.012957602739334106,0.1875569373369217,0.28200700879096985],"rotation":[0.09110333025455475,-0.6970050930976868,0.04617268592119217,0.709755003452301],"used":true,"bodyHandle":2.63e-321,"linearSpeed":3.0121287388208976e-7,"angularVelocityHistory":[[-0.4747404158115387,-0.0404345728456974],[0.7865601181983948,0.029756618663668633],[1.900673508644104,0.1929742842912674],[-0.23423127830028534,-0.018030991777777672],[-2.0014548301696777,-0.2163611501455307],[-0.618651270866394,-0.13389544188976288],[-0.2747730612754822,-2.067167282104492],[2.781949520111084,0.9289401173591614],[0.39126816391944885,0.24440257251262665],[-1.0283275842666626,-0.05127610266208649],[-1.013168454170227,-0.05953700840473175]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.33664071559906006,0.18746523559093475,0.3181147277355194],"rotation":[0.9931538701057434,0.011079087853431702,-0.11525130271911621,-0.015488642267882824],"used":true,"bodyHandle":2.633e-321,"linearSpeed":1.0333858349534387e-10,"angularVelocityHistory":[[-0.00036600386374630034,-0.000008260571121354587],[0.00039885391015559435,0.0001817616866901517],[0.000019246432202635333,0.00006345894507830963],[-0.00004991863897885196,-0.00006630933785345405],[0.00011755431478377432,0.00017646698688622564],[0.00007460445340257138,-0.000023080290702637285],[0.00033425920992158353,0.00027288435376249254],[-0.0000157948124979157,-0.0001161392210633494],[0.00006129684334155172,0.00018076345440931618],[-0.0004019121406599879,-0.00008568017074139789],[-0.000143019191455096,-0.00003913947148248553]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[0.06672625988721848,0.17441391944885254,0.43200016021728516],"rotation":[-0.8232772350311279,-0.000008509457984473556,-0.5676267743110657,0.003792188595980406],"used":true,"bodyHandle":2.64e-321,"linearSpeed":8.577026070404757e-11,"angularVelocityHistory":[[-0.0013857706217095256,-0.001269931555725634],[0.0008699135505594313,-0.0015359133249148726],[-0.0008343609515577555,-0.00013022066559642553],[-0.0035876596812158823,0.0008383694803342223],[-0.005048902705311775,-0.001883006887510419],[-0.0010685032466426492,0.0007618231466040015],[-0.0005343974917195737,-0.00022193444601725787],[-0.004668967332690954,-0.0005091149942018092],[0.0007510918076150119,-0.0007958020432852209],[-0.0051054637879133224,0.0010372836841270328],[-0.005696459207683802,-0.0012234734604135156]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[0.14023631811141968,0.18391259014606476,0.42892026901245117],"rotation":[-0.8986400365829468,0.020309578627347946,-0.43785300850868225,-0.017839571461081505],"used":true,"bodyHandle":2.643e-321,"linearSpeed":1.9522953002924304e-7,"angularVelocityHistory":[[0.004336961079388857,-0.0033856797963380814],[0.002125030616298318,0.0003045745543204248],[-0.008385296911001205,0.0009858041303232312],[0.004128474276512861,-0.00207917601801455],[0.0018087526550516486,0.000210747224627994],[-0.0007743482128717005,0.0013946969993412495],[-0.0035689896903932095,0.00027313653845340014],[0.009846456348896027,-0.0018208519322797656],[-0.0072578564286231995,0.0025978374760597944],[0.003920798655599356,-0.000051363298553042114],[0.002969715278595686,0.002739840652793646]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.1731523871421814,0.18323743343353271,0.5550652742385864],"rotation":[0.05596764385700226,0.029212983325123787,-0.9970019459724426,0.04473575949668884],"used":true,"bodyHandle":2.65e-321,"linearSpeed":4.274159667668893e-7,"angularVelocityHistory":[[0.0014936092775315046,-0.007689311634749174],[-0.0032838722690939903,-0.006857718341052532],[-0.003471188712865114,-0.009659402072429657],[-0.01355903223156929,-0.0011379438219591975],[0.003676436375826597,-0.01214446872472763],[0.0032411755528301,-0.011215011589229107],[0.0024375389330089092,-0.005516550503671169],[-0.0034262172412127256,-0.0010802717879414558],[-0.0010821310570463538,-0.0028337209951132536],[-0.00932072289288044,0.005313774570822716],[-0.0006602568901143968,-0.0056295935064554214]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.13242200016975403,0.18018338084220886,0.38610976934432983],"rotation":[-0.9988377690315247,-0.0033805263228714466,0.04794616252183914,0.003593506757169962],"used":true,"bodyHandle":2.653e-321,"linearSpeed":2.0374719421296885e-9,"angularVelocityHistory":[[-0.004294292069971561,-0.0009191829012706876],[0.00017817584739532322,0.0006289195152930915],[0.0006670595030300319,0.0045105754397809505],[0.0012359673855826259,0.002335373777896166],[-0.0005865318817086518,-0.002010639989748597],[0.0008333154837600887,0.0005146210314705968],[0.004629859235137701,0.0029033476021140814],[0.0006965120555832982,0.0008317586616612971],[-0.000348212372045964,0.0009504853514954448],[0.0007388771045953035,0.002200009999796748],[-0.0011538920225575566,-0.0009397678077220917]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[-0.17163240909576416,0.1765979379415512,0.3141736686229706],"rotation":[-0.9565339088439941,0.004264100920408964,-0.28998327255249023,0.030566781759262085],"used":true,"bodyHandle":2.66e-321,"linearSpeed":8.494181089647997e-11,"angularVelocityHistory":[[-0.0005903849378228188,-0.0005453275516629219],[0.0006568465032614768,-0.0007109058788046241],[0.00017824152018874884,0.004021454602479935],[0.0006794192595407367,0.0004043187072966248],[-0.0022296616807579994,0.002782728523015976],[0.00008381505904253572,0.00005656613575411029],[0.00012102627079002559,0.0012380869593471289],[-0.0003646344703156501,0.0003382705326657742],[0.00042070102063007653,-0.0014775043819099665],[-0.0007160336244851351,0.00036170866223983467],[0.0006528765079565346,-0.0013892576098442078]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.23071631789207458,0.17416773736476898,0.3527028560638428],"rotation":[-0.0011249799281358719,-0.7897053360939026,0.00035849917912855744,-0.6134852170944214],"used":true,"bodyHandle":2.663e-321,"linearSpeed":1.2873043962319604e-10,"angularVelocityHistory":[[0.0010484176455065608,0.0001573222252773121],[-0.001908282982185483,-0.0009256425546482205],[0.0037464776542037725,0.0009484421461820602],[0.00014341837959364057,-0.00028214132180437446],[0.0008970012422651052,0.0017868232680484653],[-0.0012589716352522373,0.0003608306869864464],[0.003862258978188038,-0.0004626688314601779],[0.000028704780561383814,-0.0008195019909180701],[0.001781072118319571,0.0002139209391316399],[-0.0013262456050142646,-0.0001691463403403759],[0.002458069007843733,0.00005507302557816729]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.10188456624746323,0.17906278371810913,0.38402941823005676],"rotation":[-0.8390616178512573,-0.034601546823978424,0.542267382144928,-0.026913754642009735],"used":true,"bodyHandle":2.67e-321,"linearSpeed":7.264553864130672e-8,"angularVelocityHistory":[[-0.004211857914924622,0.0029394193552434444],[0.0016739615239202976,-0.0025066726375371218],[0.0029052956961095333,0.0008811705047264695],[-0.0017581820720806718,0.00018704532703850418],[-0.009437059052288532,0.0013675271766260266],[0.0034177005290985107,-0.002297355094924569],[0.002277151681482792,-0.019896691665053368],[0.00727741327136755,0.019358482211828232],[-0.00951573345810175,0.0066308570094406605],[-0.005643289536237717,0.0012622589711099863],[-0.008697615005075932,0.0059991744346916676]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.14043447375297546,0.17917177081108093,0.4316748082637787],"rotation":[0.7363518476486206,-0.01235303282737732,-0.6764479875564575,-0.007165494374930859],"used":true,"bodyHandle":2.673e-321,"linearSpeed":2.4546669739489944e-7,"angularVelocityHistory":[[0.004225138109177351,-0.006937953177839518],[0.0036437122616916895,-0.00092944351490587],[-0.004429686814546585,-0.00044805699144490063],[0.006494162604212761,-0.0035476803313940763],[-0.000008020614586712327,-0.00311480974778533],[-0.0035821949131786823,0.0005244821077212691],[-0.0012750097084790468,-0.0028669030871242285],[0.006008144002407789,-0.0036776880733668804],[-0.004036686848849058,-0.002704884624108672],[-0.0017922301776707172,-0.0019239934626966715],[0.0016063515795394778,-0.0014536578673869371]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.23544993996620178,0.17987844347953796,0.3573143482208252],"rotation":[-0.0008790833526290953,0.7274860143661499,0.0030234951991587877,-0.6861152648925781],"used":true,"bodyHandle":2.68e-321,"linearSpeed":2.3478172517414518e-8,"angularVelocityHistory":[[-0.00013974633475299925,0.0005503394640982151],[0.0012466817861422896,-0.00004501774674281478],[0.0011765890521928668,-0.0009398024412803352],[0.0007599066593684256,0.0019328611670061946],[0.0006410382338799536,0.0023957735393196344],[-0.0009109777747653425,-0.0033858183305710554],[0.0020238785073161125,-0.0026017630007117987],[0.00039765742258168757,0.0012887390330433846],[-0.004304025322198868,0.0009950018720701337],[0.0018415912054479122,-0.0018145625945180655],[0.0022774895187467337,-0.0018653555307537317]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.16847766935825348,0.18770772218704224,0.4256511628627777],"rotation":[0.0119816605001688,0.13534174859523773,0.028395870700478554,-0.9903194904327393],"used":true,"bodyHandle":2.683e-321,"linearSpeed":8.685125030561478e-8,"angularVelocityHistory":[[0.008656422607600689,0.012242676690220833],[0.004804567899554968,-0.002488177502527833],[-0.011018243618309498,0.012262451462447643],[0.007555605378001928,0.0009922250173985958],[0.0009577994351275265,0.010901197791099548],[-0.0004187235317658633,-0.0018465922912582755],[-0.00978823285549879,0.011438212357461452],[0.018622273579239845,0.0015355811920017004],[-0.007454472593963146,0.010982519015669823],[0.002752679865807295,-0.0035983133129775524],[0.005822553765028715,0.007097272202372551]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.03818538412451744,0.18176992237567902,0.27782145142555237],"rotation":[-0.09802273660898209,0.01365150697529316,-0.9950882792472839,0.002117492724210024],"used":true,"bodyHandle":2.69e-321,"linearSpeed":5.786612214027378e-8,"angularVelocityHistory":[[-0.01557388436049223,-0.02096642553806305],[-0.0061658830381929874,0.04287044703960419],[-0.015003709122538567,0.02495848387479782],[-0.006930448580533266,-0.02156471274793148],[-0.014654392376542091,-0.02308863028883934],[0.00939980335533619,0.0038461179938167334],[0.39268913865089417,0.5132279396057129],[-0.13759422302246094,-0.39295563101768494],[-0.038188137114048004,-0.15032556653022766],[-0.04590880125761032,-0.09282615780830383],[0.02270607464015484,-0.06159490346908569]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.1074669137597084,0.18211543560028076,0.22644850611686707],"rotation":[-0.00407886877655983,-0.07178304344415665,-0.00215573119930923,0.9974095821380615],"used":true,"bodyHandle":2.693e-321,"linearSpeed":2.889072909207069e-9,"angularVelocityHistory":[[-0.008112546056509018,0.0020041640382260084],[-0.0014692924451082945,-0.002189354971051216],[-0.011532428674399853,-0.005074758548289537],[-0.001358611392788589,-0.003088825149461627],[-0.003554799361154437,-0.005349710118025541],[0.010561784729361534,0.00859939306974411],[0.004917257931083441,0.005073619075119495],[-0.0010913023725152016,-0.0005915120127610862],[0.00036309967981651425,-0.004163733683526516],[-0.0028734796214848757,0.0052561573684215546],[0.0004353711847215891,-0.004084153100848198]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.2112036645412445,0.18270449340343475,0.25918394327163696],"rotation":[0.9977863430976868,-0.00246216868981719,-0.06644117832183838,0.001349731464870274],"used":true,"bodyHandle":2.7e-321,"linearSpeed":2.718616119829344e-10,"angularVelocityHistory":[[0.00045828710426576436,0.0005117271211929619],[0.000286599388346076,-0.0009373988141305745],[-0.001730067771859467,0.0020315051078796387],[-0.0011976966634392738,0.003586794715374708],[-0.000542477413546294,0.0010814249981194735],[-0.0007494923775084317,0.0007958841742947698],[-0.0006203896482475102,0.0001906008255900815],[0.0008248190861195326,-0.0006103736814111471],[-0.0009256901103071868,0.00044156648800708354],[0.000057482415286358446,-0.0004555318155325949],[-0.0000036344449654279742,-0.0015945702325552702]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[-0.04909783974289894,0.17651399970054626,0.2156936377286911],"rotation":[0.00808832235634327,0.5760917663574219,0.0001445248199161142,0.8173449635505676],"used":true,"bodyHandle":2.703e-321,"linearSpeed":1.7275590204654086e-10,"angularVelocityHistory":[[0.006021857261657715,0.00045673028216697276],[0.0034314633812755346,0.0012935982085764408],[0.004960047081112862,-0.0005249861860647798],[-0.02216937206685543,0.0041814143769443035],[-0.019357891753315926,-0.006367555353790522],[-0.013590872287750244,-0.00101585709489882],[-0.0060135070234537125,0.00327482121065259],[-0.011705777607858181,-0.0027748611755669117],[-0.005728444550186396,0.0005842142854817212],[-0.003749784082174301,-0.005390376318246126],[-0.003113574581220746,-0.0022692237980663776]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[0.09815941751003265,0.18479874730110168,0.2829410433769226],"rotation":[0.033414311707019806,-0.35272881388664246,0.01649957336485386,-0.9349832534790039],"used":true,"bodyHandle":2.707e-321,"linearSpeed":3.2120937076050466e-8,"angularVelocityHistory":[[-0.003253345377743244,-0.003508261637762189],[-0.004193051718175411,-0.005117778666317463],[-0.00018664594972506166,-0.0023327586241066456],[-0.005640534218400717,-0.004858402535319328],[-0.007947161793708801,-0.00896642729640007],[-0.006610257085412741,-0.003683735616505146],[0.007888177409768105,0.005166444927453995],[-0.008460639975965023,-0.008636107668280602],[0.0029733714181929827,-0.0013303853338584304],[0.0054436344653368,-0.0017444967525079846],[0.001119057647883892,-0.00044384135981090367]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.006097576580941677,0.19076193869113922,0.22069600224494934],"rotation":[-0.3733454644680023,0.010630576871335506,0.926802933216095,0.0391964316368103],"used":true,"bodyHandle":2.71e-321,"linearSpeed":9.461159925368386e-9,"angularVelocityHistory":[[0.029042262583971024,0.0006661571096628904],[0.0291379913687706,0.0013433670392259955],[0.024771764874458313,-0.0012329996097832918],[-0.4433073401451111,-0.0015077033312991261],[-0.03512820228934288,-0.02228846773505211],[-0.08070946484804153,-0.01881103403866291],[-0.07267458736896515,-0.006308497861027718],[-0.055724628269672394,-0.017280198633670807],[-0.03865053877234459,-0.007012265734374523],[-0.025411086156964302,-0.00030319628422148526],[-0.048354607075452805,-0.0026900426018983126]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.16632474958896637,0.17455938458442688,0.34147557616233826],"rotation":[-0.8466165661811829,0.0013782971072942019,-0.532195508480072,0.0025250238832086325],"used":true,"bodyHandle":2.717e-321,"linearSpeed":1.0991131948705464e-12,"angularVelocityHistory":[[0.000889170856680721,0.0011724595678970218],[-0.000763980729971081,0.00007965380791574717],[0.0014845437835901976,-0.0009699691436253488],[-0.0012847004691138864,0.0008146457257680595],[0.0004646353772841394,0.0015312451869249344],[0.0005421403329819441,-0.000022323618395603262],[0.0006493394612334669,0.0014589359052479267],[-0.0008705685031600296,0.0004516220651566982],[0.0003651657316368073,0.0015621205093339086],[-0.0003080436435993761,0.0006336339865811169],[0.0000063563020376022905,0.0011252500116825104]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.11055576056241989,0.18585330247879028,0.5559582710266113],"rotation":[-0.061440665274858475,-0.6970481276512146,-0.01623661443591118,-0.7142025828361511],"used":true,"bodyHandle":2.72e-321,"linearSpeed":0.000010946190948422621,"angularVelocityHistory":[[0.02969539538025856,0.05519059672951698],[-0.00860857404768467,-0.006532172206789255],[0.012898948043584824,0.03312716260552406],[0.004416303709149361,0.017207838594913483],[0.006432497873902321,0.01897960528731346],[-0.0010813880944624543,-0.005700810346752405],[-0.001702320296317339,0.01840762235224247],[-0.004901188891381025,-0.006596122868359089],[-0.019540011882781982,-0.02808596007525921],[-0.018578076735138893,-0.020311998203396797],[-0.009097612462937832,-0.006439432967454195]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2970609962940216,0.18449126183986664,0.36782360076904297],"rotation":[-0.001319453353062272,0.7912607192993164,-0.009817761369049549,-0.6113985776901245],"used":true,"bodyHandle":2.727e-321,"linearSpeed":0.0000011542528198353762,"angularVelocityHistory":[[0.006467987317591906,-0.00021499599097296596],[-0.029892660677433014,0.023615485057234764],[0.02460169419646263,-0.01631479524075985],[-0.0037973998114466667,-0.00402554078027606],[0.003636277513578534,0.006182425189763308],[-0.02481781132519245,0.021276118233799934],[0.022503409534692764,-0.014064665883779526],[0.0009843178559094667,-0.005174293648451567],[0.013594267889857292,-0.0009710275335237384],[-0.021671507507562637,0.024604136124253273],[0.017016446217894554,-0.018063994124531746]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.23114578425884247,0.17639115452766418,0.3193437159061432],"rotation":[-0.08945059031248093,0.02888689935207367,-0.9955716133117676,-0.0011542985448613763],"used":true,"bodyHandle":2.73e-321,"linearSpeed":7.317086922038459e-11,"angularVelocityHistory":[[0.0000774915752117522,-0.000379404635168612],[-0.00010683653090381995,0.00026819034246727824],[0.00047062334488146007,-0.0002338200865779072],[0.0001910896535264328,-0.0005438438383862376],[-0.0006563569186255336,0.00024855873198248446],[-0.00015102856559678912,0.00011765550880227238],[0.00022998849453870207,-0.00021344130800571293],[-0.00006296073115663603,0.0003718392108567059],[-0.0008433476905338466,0.0008305561495944858],[0.0008690521353855729,-0.0004549357108771801],[0.0000992950372165069,0.0002075142547255382]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[-0.2069968432188034,0.17696288228034973,0.26746997237205505],"rotation":[-0.2029164880514145,0.0014943636488169432,0.9791927337646484,0.0020467552822083235],"used":true,"bodyHandle":2.737e-321,"linearSpeed":2.81929187843549e-12,"angularVelocityHistory":[[-0.0005337357870303094,0.0003441042499616742],[-0.0005757100298069417,0.0003972287231590599],[0.002664076630026102,0.0005857519572600722],[0.00004161443575867452,0.0016285803867504],[0.001211352995596826,-0.00022867036750540137],[-0.000821561727207154,0.00012669313582591712],[-0.00039034488145262003,-0.0004192386695649475],[0.0020252536050975323,-0.0004776434216182679],[-0.000036313296732259914,0.0000288623123196885],[0.000527343014255166,-0.00013903445506002754],[0.004837267566472292,-0.002482582116499543]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.03830873593688011,0.18693837523460388,0.28152838349342346],"rotation":[0.5262765288352966,0.015715427696704865,-0.8501577377319336,-0.0042120725847780704],"used":true,"bodyHandle":2.74e-321,"linearSpeed":6.676164061847658e-8,"angularVelocityHistory":[[-0.017340872436761856,-0.018522771075367928],[-0.002664407016709447,0.040611978620290756],[-0.003740543033927679,0.024305230006575584],[-0.005730919539928436,-0.017656220123171806],[-0.014909790828824043,-0.021563854068517685],[0.012253876775503159,-0.0029759216122329235],[0.3527866303920746,1.038344144821167],[-0.16476251184940338,-0.3641055226325989],[-0.05100153014063835,-0.15503928065299988],[-0.048101168125867844,-0.07698114216327667],[0.0030207207892090082,-0.05899929627776146]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.3349752426147461,0.1763530820608139,0.3167833685874939],"rotation":[0.018351074308156967,-0.8218495845794678,-0.01789560355246067,0.5691276788711548],"used":true,"bodyHandle":2.747e-321,"linearSpeed":9.426090391094077e-9,"angularVelocityHistory":[[-0.000310039846226573,-0.00031558756018057466],[0.002481811912730336,-0.002452502027153969],[-0.001162712462246418,0.0006345113506540656],[-0.0002121278375852853,-0.0003992499550804496],[-0.0015499243745580316,-0.0015974689740687609],[0.000927172543015331,-0.0008792604203335941],[-0.00020555367518682033,0.0002366684639127925],[-0.0016843705670908093,0.0004198238893877715],[-0.001172307995148003,-0.0006444265018217266],[0.0004695372190326452,-0.0013638018863275647],[-0.00017215033585671335,0.00023047612921800464]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.16847752034664154,0.18764354288578033,0.2099539041519165],"rotation":[-0.6255942583084106,0.0011513996869325638,-0.7801189422607422,-0.006699747405946255],"used":true,"bodyHandle":2.75e-321,"linearSpeed":1.6189807759364378e-8,"angularVelocityHistory":[[0.005958696827292442,-0.0010304771130904555],[-0.005729085300117731,0.000621839368250221],[0.01078520156443119,-0.0015568194212391973],[0.015318438410758972,-0.009724540635943413],[-0.012827535159885883,0.004773175343871117],[-0.018212923780083656,-0.005483902990818024],[0.0034897630102932453,-0.003327727084979415],[0.0024269488640129566,0.0032238138373941183],[-0.016240132972598076,0.006299133412539959],[-0.0038366387598216534,0.0009423547307960689],[-0.01028646994382143,-0.0000195987886399962]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.29347965121269226,0.1900973916053772,0.3611263334751129],"rotation":[0.009630910120904446,-0.9050207138061523,0.005433527287095785,-0.42522382736206055],"used":true,"bodyHandle":2.757e-321,"linearSpeed":0.00000403752101763026,"angularVelocityHistory":[[0.000028765112801920623,0.008702123537659645],[-0.04256477579474449,0.02266618050634861],[0.013786913827061653,-0.02173149213194847],[-0.013045212253928185,-0.005007189232856035],[0.0005770691786892712,0.010936294682323933],[-0.03885234519839287,0.024675773456692696],[0.010108520276844501,-0.01965741626918316],[-0.008530689403414726,-0.0059075867757201195],[0.001472022500820458,0.009524240158498287],[-0.03934752941131592,0.02889404632151127],[0.01710863970220089,-0.015604417771100998]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2953653335571289,0.1882774829864502,0.300148069858551],"rotation":[0.5126205086708069,-0.012643472291529179,0.8584840297698975,-0.008095906116068363],"used":true,"bodyHandle":2.76e-321,"linearSpeed":2.0594640515182443e-8,"angularVelocityHistory":[[-0.0009899098658934236,-0.0002317174366908148],[-0.004141443409025669,-0.001150279538705945],[0.0002191797102568671,0.0015488257631659508],[-0.006793168839067221,-0.0037764525040984154],[-0.001937745837494731,0.00034212652826681733],[-0.005581977777183056,-0.0007916117901913822],[0.0023670450318604708,0.0006436764961108565],[-0.004292537923902273,-0.003556752111762762],[-0.0001439874613424763,-0.0005638923030346632],[-0.006834352854639292,-0.001375226303935051],[0.0012300319503992796,0.0008383978856727481]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[0.04096619784832001,0.17668941617012024,0.259531706571579],"rotation":[-0.0021681447979062796,-0.643509030342102,-0.003691710066050291,-0.7654264569282532],"used":true,"bodyHandle":2.767e-321,"linearSpeed":1.1557837787933377e-10,"angularVelocityHistory":[[-0.001893885200843215,0.002176659880205989],[0.00310748559422791,0.0018311432795599103],[-0.009962115436792374,-0.0022539091296494007],[-0.0035206391476094723,-0.0035395484883338213],[-0.004371179733425379,-0.0018325967248529196],[0.001749176881276071,0.008022057823836803],[-0.011563018895685673,-0.019015178084373474],[-0.014389747753739357,0.04079103842377663],[-0.003353466745465994,0.0027577776927500963],[-0.0037811340298503637,0.0021776051726192236],[0.0074325865134596825,0.001244060229510069]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[-0.16601040959358215,0.17654827237129211,0.2185605764389038],"rotation":[-0.8132950663566589,0.0021785947028547525,-0.5818469524383545,-0.0006559438770636916],"used":true,"bodyHandle":2.77e-321,"linearSpeed":1.4354368865997925e-10,"angularVelocityHistory":[[-0.0013339854776859283,0.0011596990516409278],[0.0014573289081454277,-0.002152384491637349],[0.0008690195973031223,0.0010677000973373652],[-0.002627988811582327,0.0009736672509461641],[0.002205434488132596,0.0028158589266240597],[0.0027392886113375425,0.0002843906113412231],[-0.0007623214623890817,0.0031050825491547585],[0.002520370064303279,-0.001120382803492248],[0.001482605468481779,-0.0010773093672469258],[0.0031548875849694014,0.0003292160399723798],[0.002038510050624609,0.0014422822277992964]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[0.3360497057437897,0.18198354542255402,0.3170674443244934],"rotation":[0.013832250609993935,-0.930188000202179,-0.01649899035692215,0.3664515018463135],"used":true,"bodyHandle":2.777e-321,"linearSpeed":7.96082854325266e-9,"angularVelocityHistory":[[-0.0029983671847730875,0.0035109752789139748],[0.0010588264558464289,-0.0020568338222801685],[-0.0012083497131243348,0.003577160881832242],[0.00033237217576242983,0.0012070261873304844],[-0.0032006879337131977,0.003267988096922636],[-0.000778138404712081,-0.001861770637333393],[0.0009510301169939339,0.0026300407480448484],[-0.0009218009072355926,0.0007915309979580343],[-0.001550725195556879,0.0029092642944306135],[0.0005898880772292614,-0.001183576532639563],[0.0005018793744966388,0.00269032409414649]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.23176062107086182,0.1821340024471283,0.31895026564598083],"rotation":[0.6050347685813904,0.01920655556023121,-0.7956970930099487,-0.020740197971463203],"used":true,"bodyHandle":2.78e-321,"linearSpeed":2.3412081710928372e-8,"angularVelocityHistory":[[0.0005583990714512765,-0.00032688843202777207],[-0.00023777376918587834,0.0003208010457456112],[-0.00025422454928047955,0.00022425164934247732],[-0.0002295620070071891,0.000011144200470880605],[0.0002599906292743981,-0.00003818034383584745],[0.000014578202353732195,-0.00006238107744138688],[-0.00009172159479930997,-0.000018435781385051087],[-0.0003771419287659228,-0.0000786365126259625],[0.000007764478141325526,-0.00002824747934937477],[0.001236121985130012,-0.0009413384250365198],[-0.000008463379344902933,-0.00022156504564918578]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.15906096994876862,0.1872568279504776,0.26259857416152954],"rotation":[-0.7858653664588928,0.008990680798888206,0.6183003187179565,-0.006287571974098682],"used":true,"bodyHandle":2.787e-321,"linearSpeed":1.2539732929876112e-7,"angularVelocityHistory":[[0.0013784959446638823,-0.0009233097080141306],[-0.001148661132901907,0.0004320605657994747],[0.0015270124422386289,-0.0017188601195812225],[-0.0005085985758341849,0.0024641973432153463],[0.0030256013851612806,0.003422050504013896],[-0.0014558712719008327,-0.0007706840406171978],[0.0008172621019184589,-0.0018815789371728897],[-0.0010408541420474648,0.00402640039101243],[-0.0006582615897059441,-0.0031949758995324373],[-0.0008231966639868915,0.001386091811582446],[0.0007049877312965691,-0.00066559569677338]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.16026349365711212,0.18187524378299713,0.2738804817199707],"rotation":[0.009881692938506603,0.731335461139679,-0.004189943894743919,-0.6819334626197815],"used":true,"bodyHandle":2.79e-321,"linearSpeed":3.2132719325030147e-8,"angularVelocityHistory":[[0.0005497040692716837,0.00039852724876254797],[-0.0009333078050985932,0.0001607779267942533],[0.002199625363573432,-0.00009089419472729787],[-0.0008758233161643147,0.001061952207237482],[0.002501818584278226,-0.00007949412247398868],[-0.0023825233802199364,-0.00035768988891504705],[0.001772054354660213,0.002605372341349721],[-0.002468415768817067,0.000011263496162428055],[-0.0005409379955381155,-0.0021964998450130224],[-0.0003388419281691313,-0.00018096138956025243],[0.00009366424637846649,-0.00015320432430598885]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[-0.13414087891578674,0.18529050052165985,0.26917901635169983],"rotation":[0.7830575108528137,0.059213656932115555,-0.618863582611084,-0.017955809831619263],"used":true,"bodyHandle":2.796e-321,"linearSpeed":1.3543515242596536e-9,"angularVelocityHistory":[[0.21693533658981323,-0.31483834981918335],[0.14087532460689545,-0.22370338439941406],[-0.1327461153268814,0.2075340449810028],[-0.05773509666323662,0.10463447868824005],[-0.08095457404851913,0.12326391041278839],[-0.08681744337081909,0.12231508642435074],[-0.0713278278708458,0.10340449213981628],[-0.04819553717970848,0.06760640442371368],[0.23709316551685333,-0.333179771900177],[0.2102786898612976,-0.32663601636886597],[0.1313011646270752,-0.2211485356092453]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.09945347160100937,0.1770317405462265,0.266596257686615],"rotation":[-0.003751381766051054,0.0358426459133625,-0.0019706557504832745,0.9993484616279602],"used":true,"bodyHandle":2.8e-321,"linearSpeed":9.919302973502386e-10,"angularVelocityHistory":[[-0.0004711766669061035,-0.00005170774238649756],[0.0001568961888551712,-0.0006199181661941111],[-0.0012171027483418584,0.0006417213007807732],[0.0017034785123541951,0.0014348221011459827],[0.00025435470161028206,-0.0013585902052000165],[-0.0007718190900050104,-0.0011438056826591492],[0.0066993278451263905,0.0010029081022366881],[-0.0038905020337551832,0.0010669545736163855],[-0.0034473708365112543,-0.0005685242358595133],[0.005027271807193756,-0.0013053291477262974],[-0.00021336991630960256,0.000023106058506527916]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[-0.11451112478971481,0.1818963885307312,0.32882794737815857],"rotation":[-0.9818174242973328,-0.006203046999871731,0.18804390728473663,0.025209272280335426],"used":true,"bodyHandle":2.806e-321,"linearSpeed":6.871421554328143e-10,"angularVelocityHistory":[[0.005287403706461191,0.004451766610145569],[0.0006997928721830249,0.009794743731617928],[0.0031628916040062904,-0.0026717795990407467],[0.0005437782965600491,0.0015470513608306646],[-0.00144871324300766,0.007638432551175356],[-0.001142646186053753,0.003964859992265701],[-0.012775746174156666,0.008045234717428684],[0.000645086751319468,-0.0010134464828297496],[-0.001986859133467078,0.0035864589735865593],[0.0010904191294685006,-0.004453666508197784],[0.0003335082728881389,0.0003373171202838421]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[-0.16723740100860596,0.1820293813943863,0.2154979407787323],"rotation":[-0.003765110159292817,-0.4123343229293823,-0.0032301777973771095,0.9110190272331238],"used":true,"bodyHandle":2.81e-321,"linearSpeed":8.635069774875176e-9,"angularVelocityHistory":[[0.0027053833473473787,-0.0006135883741080761],[-0.002389395609498024,-0.0016136083286255598],[0.007046792656183243,-0.0018295393092557788],[0.0057497876696288586,-0.008087636902928352],[-0.005066731479018927,0.0034617797937244177],[-0.007706062868237495,-0.002440411364659667],[0.00163558020722121,0.0006668816204182804],[0.002439611591398716,0.0000313434393319767],[-0.007087848614901304,0.0017211231170222163],[-0.00045569351641461253,0.00047667277976870537],[-0.003823761595413089,0.0003462316526565701]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[-0.07195732742547989,0.18185651302337646,0.28052446246147156],"rotation":[0.02830268256366253,-0.21807795763015747,0.027415068820118904,0.9751355648040771],"used":true,"bodyHandle":2.816e-321,"linearSpeed":3.9458256714818764e-9,"angularVelocityHistory":[[0.009359857998788357,-0.002745830686762929],[0.012111343443393707,0.0067274062894284725],[0.013192658312618732,-0.00519071239978075],[-0.013909378089010715,0.0035524542909115553],[-0.060863789170980453,-0.010975191369652748],[-0.08103076368570328,0.023121654987335205],[-0.06963234394788742,-0.06845355778932571],[-0.036626484245061874,0.009085102938115597],[-0.07250221073627472,0.04663532227277756],[-0.010162711143493652,-0.004656179342418909],[-0.016810161992907524,-0.014431752264499664]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[-0.10803729295730591,0.18733590841293335,0.20998123288154602],"rotation":[0.1759321242570877,-0.011155154556035995,-0.9843391180038452,0.00006130102701717988],"used":true,"bodyHandle":2.82e-321,"linearSpeed":1.9251505797857904e-8,"angularVelocityHistory":[[-0.010763290338218212,-0.0019551091827452183],[-0.006960329599678516,-0.0031653642654418945],[-0.010278734378516674,-0.005012426991015673],[-0.004863540176302195,0.00035359960747882724],[0.0017245382769033313,0.0026916321367025375],[0.006645697634667158,0.0025811593513935804],[0.002456298563629389,0.005315419286489487],[0.003913820721209049,0.002445259829983115],[-0.00511572603136301,-0.007028378080576658],[-0.007102206349372864,0.004238081630319357],[-0.002406505635008216,-0.0005053703207522631]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.17211346328258514,0.1744784116744995,0.6822768449783325],"rotation":[0.000060064689023420215,-0.6301408410072327,0.003561320947483182,-0.7764726877212524],"used":true,"bodyHandle":2.826e-321,"linearSpeed":4.1721619517974015e-12,"angularVelocityHistory":[[-0.00001850580156315118,0.000018825518054654822],[-0.000016197131117223762,-0.000008419807272730395],[0.0000809735429356806,-0.000018109125448972918],[-0.000047991081373766065,-0.00002368993045820389],[0.0000050414560064382385,-0.00008138494740705937],[-0.0000616116012679413,0.00001728945062495768],[-0.0000258270520134829,-0.00000600491375735146],[-0.00021498864225577563,0.00000264993786913692],[0.0000798758483142592,0.000028081298296456225],[-0.00006106046930653974,-0.00001827072264859453],[0.00004152820838498883,0.00001076213266060222]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[-0.28506243228912354,0.18252281844615936,0.2755063474178314],"rotation":[-0.0005106693715788424,-0.7342366576194763,0.001778782345354557,-0.6788910031318665],"used":true,"bodyHandle":2.83e-321,"linearSpeed":5.57713882265331e-9,"angularVelocityHistory":[[-0.0007999786175787449,-0.0006626200047321618],[0.0007014703005552292,0.00024984381161630154],[-0.0004599059757310897,-0.0007340596639551222],[-0.00020793575095012784,-0.0007146619609557092],[0.00002591422526165843,-0.00026151505880989134],[-0.0001298439019592479,-0.00021627215028274804],[-0.0001591875043231994,-0.00017511274199932814],[0.00008917926606955007,0.00006657123594777659],[0.0001047228870447725,-0.00013340047735255212],[-0.00023137140669859946,-0.00013425122597254813],[-0.00025555503088980913,-0.00012272434832993895]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.2824366092681885,0.17708228528499603,0.20971150696277618],"rotation":[0.0022248809691518545,-0.7864431738853455,0.0009129255195148289,-0.6176578998565674],"used":true,"bodyHandle":2.836e-321,"linearSpeed":1.090264822940766e-11,"angularVelocityHistory":[[0.000015052603885123972,0.0000880862062331289],[-0.0003602536453399807,-0.00004687101682065986],[-0.000048855265049496666,0.00019016541773453355],[0.00006306444993242621,-0.00007320004078792408],[-0.00012192146095912904,0.00015300368249882013],[-0.00005022664481657557,-0.00009267509449273348],[0.00020806513202842325,0.00005846482963534072],[-0.00004401117257657461,-0.0000830810095067136],[3.90365045177532e-7,0.00011803460074588656],[-0.00001802680162654724,-0.00023962742125149816],[0.0001414636499248445,-0.000023818591216695495]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.06953880190849304,0.18812745809555054,0.2150101214647293],"rotation":[-0.0034196057822555304,0.5460425615310669,0.00018111482495442033,-0.8377504944801331],"used":true,"bodyHandle":2.84e-321,"linearSpeed":2.6279085044161504e-9,"angularVelocityHistory":[[-0.0004322253225836903,-0.001207362161949277],[0.0021209854166954756,-0.0010105789406225085],[-0.001252932706847787,-0.0013233365025371313],[-0.00040238758083432913,0.008454634808003902],[-0.0032608220353722572,-0.0034681723918765783],[0.004087135661393404,-0.0012140987673774362],[0.0006756465299986303,-0.0010086015099659562],[0.005746764596551657,0.006494265515357256],[-0.0024826230946928263,-0.003662216244265437],[-0.0019298495026305318,-0.00009442401642445475],[0.0009717492503114045,0.000557806808501482]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.258171021938324,0.1827329397201538,0.21489481627941132],"rotation":[-0.9945821762084961,-0.005855236668139696,0.10371415317058563,-0.00391965638846159],"used":true,"bodyHandle":2.846e-321,"linearSpeed":2.0513298563542697e-9,"angularVelocityHistory":[[0.00028445085627026856,0.00001189000340673374],[-0.000022540270947501995,-0.00006732907786499709],[-0.00001066845561581431,-0.0005619374569505453],[-0.0000945003775996156,-0.00047729696962051094],[0.000011941579941776581,0.00017516434309072793],[0.00024085832410492003,0.000003212375077055185],[0.00003521401959005743,0.00013091199798509479],[0.00020687718642875552,-0.00005556119867833331],[-0.00004384917701827362,0.00021491714869625866],[0.000194530060980469,-0.0006217772024683654],[-0.000050275702960789204,-0.0007515170727856457]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[-0.015256419777870178,0.24766190350055695,0.1443600207567215],"rotation":[-0.7149165868759155,-0.002030459465458989,-0.6992058753967285,0.0010797394206747413],"used":true,"bodyHandle":2.85e-321,"linearSpeed":0.0032094194021790026,"angularVelocityHistory":[[0.0006329509778879583,0.0037269487511366606],[-0.0001703564339550212,-0.0009540896862745285],[0.00045589255751110613,0.0019184367265552282],[-0.0004253906081430614,0.00592883350327611],[0.0034132488071918488,0.010439084842801094],[0.0016602191608399153,-0.0025965331587940454],[-0.0024784121196717024,-0.009491577744483948],[0.0063416301272809505,0.01672256551682949],[-0.000530735997017473,-0.003790875431150198],[0.0037861948367208242,0.00009604881051927805],[0.014400187879800797,-0.00029396015452221036]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.13312992453575134,0.18223564326763153,0.33163365721702576],"rotation":[-0.02592574991285801,-0.9873417615890503,-0.025171618908643723,-0.1544361710548401],"used":true,"bodyHandle":2.856e-321,"linearSpeed":4.63278115328692e-9,"angularVelocityHistory":[[-0.0016188336303457618,0.001071983017027378],[0.0014447878347709775,-0.0028186519630253315],[0.00007627675222465768,-0.00044807163067162037],[-0.0004492284788284451,0.0002712012210395187],[-0.006001496687531471,0.007381643168628216],[0.00250615063123405,0.00021693615417461842],[-0.013757978565990925,0.010955058969557285],[0.009554143063724041,-0.0028638793155550957],[0.0014847948914393783,0.0001880146883195266],[-0.003710436634719372,0.01063419971615076],[-0.0009085839847102761,0.006929889786988497]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.19612200558185577,0.17692093551158905,0.210804745554924],"rotation":[0.9869062304496765,0.002901520812883973,0.16126887500286102,-0.00012001712457276881],"used":true,"bodyHandle":2.86e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.0005398656358011067,-0.0008026532013900578],[-0.00009086987120099366,-0.00014077605737838894],[0.000423848774516955,0.00020921653776895255],[-0.0003617523470893502,-0.0005699801840819418],[-0.0004974444163963199,-0.0005200376035645604],[-0.0001840724580688402,-0.0002740324707701802],[0.00004099843863514252,0.00011814146273536608],[-0.0004616237129084766,-0.0003778762766160071],[0.0000681502788211219,-0.000030924828024581075],[-0.0001416639133822173,-0.0005705595831386745],[-0.00041335602873004973,-0.0006529405363835394]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.14529982209205627,0.24745002388954163,0.139381542801857],"rotation":[-0.8202266097068787,0.002918023383244872,-0.5720311999320984,0.0001670748897595331],"used":true,"bodyHandle":2.866e-321,"linearSpeed":0.0032164288302356588,"angularVelocityHistory":[[0.005727758165448904,-0.0007253038347698748],[0.010709233582019806,0.0000022873202851769747],[0.0037507927045226097,-0.000014464323612628505],[0.0015310001326724887,-0.00005901769327465445],[0.00225786492228508,-0.000025134313546004705],[0.005093996413052082,-0.000051488037570379674],[0.009369944222271442,-0.00007732040830887854],[0.015053552575409412,-0.00007239745173137635],[0.021864376962184906,-0.0000863457316881977],[0.029530540108680725,-0.00022176869970280677],[0.040070563554763794,-0.00044138109660707414]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.25042489171028137,0.17699666321277618,0.25917544960975647],"rotation":[-0.6565648913383484,-0.003021096345037222,-0.7542598843574524,0.0023425957188010216],"used":true,"bodyHandle":2.87e-321,"linearSpeed":2.2214477741864617e-12,"angularVelocityHistory":[[-0.000378231838112697,0.00006476446287706494],[0.00007595225906698033,0.00032860884675756097],[0.00017501953698229045,0.00018071284284815192],[0.0015178247122094035,-0.0006309238960966468],[-0.0007061747601255774,0.0004198180977255106],[0.0012128627859055996,-0.0006630708230659366],[0.0005747105460613966,0.000052667648560600355],[0.0007945852121338248,-0.0006504746270366013],[-0.0004661053535528481,-0.0002446818689350039],[0.0013185522984713316,-0.0005610088701359928],[-0.00022421417816076428,-0.000006289367775025312]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06874676793813705,0.1799643635749817,0.41805797815322876],"rotation":[0.9999890327453613,0.001414157566614449,0.0008253887644968927,-0.004377672914415598],"used":true,"bodyHandle":2.875e-321,"linearSpeed":6.068767018781554e-9,"angularVelocityHistory":[[0.0007996803615242243,-0.0014594924869015813],[-0.0007837623124942183,-0.00042104607564397156],[-0.00039549701614305377,0.002363060135394335],[0.0019196532666683197,-0.002901728032156825],[-0.00022233698109630495,0.0005338130285963416],[-0.0006255311891436577,0.002350501948967576],[-0.00006806231249356642,-0.00021846062736585736],[-0.0029090160969644785,-0.002834450453519821],[-0.001582135446369648,0.000006663853582722368],[0.0010446601081639528,-0.0002963911392726004],[0.001903850818052888,-0.00039205068605951965]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[-0.010527065023779869,0.247446209192276,0.08554397523403168],"rotation":[-0.00007941650983411819,-0.8175333142280579,0.0024517904967069626,0.5758760571479797],"used":true,"bodyHandle":2.88e-321,"linearSpeed":0.0032169928341292723,"angularVelocityHistory":[[0.00027951854281127453,-0.0019084052182734013],[0.000336284312652424,0.005513123702257872],[0.0021073485258966684,0.0020395037718117237],[0.004272018559277058,0.005946553312242031],[0.025933656841516495,0.032958824187517166],[-0.0018419965635985136,0.06476402282714844],[0.004378175362944603,0.06785779446363449],[0.02954385057091713,0.01881984807550907],[-0.011552263982594013,-0.0357261523604393],[0.0006074658595025539,-0.00973701011389494],[0.009124080650508404,-0.003975667059421539]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.013119769282639027,0.18259812891483307,0.20970958471298218],"rotation":[0.0043130661360919476,0.82271409034729,0.0022900858893990517,-0.5684343576431274],"used":true,"bodyHandle":2.885e-321,"linearSpeed":8.395713794675936e-9,"angularVelocityHistory":[[0.001657052431255579,0.0015767632285133004],[0.003495993558317423,0.006647436413913965],[0.0029992766212671995,-0.0011053320486098528],[-0.015316423028707504,0.00007945688412291929],[-0.00213454058393836,-0.003475944045931101],[-0.001426337519660592,-0.00040375557728111744],[-0.0007606452563777566,0.006242333445698023],[0.012684376910328865,-0.0023183205630630255],[0.00001624750620976556,-0.002159534255042672],[-0.0048621054738759995,-0.0021858816035091877],[0.0021367871668189764,0.0014749662950634956]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.28999948501586914,0.1880248636007309,0.27577632665634155],"rotation":[0.0020442449022084475,0.8919527530670166,0.0020076967775821686,-0.45211946964263916],"used":true,"bodyHandle":2.89e-321,"linearSpeed":3.0579921686881723e-9,"angularVelocityHistory":[[-0.0005131926154717803,-0.0004031255666632205],[0.0007856282172724605,0.00041843982762657106],[-0.0007111511076800525,-0.0007798500009812415],[-0.0001304419565713033,-0.0009972465923056006],[0.00006585304072359577,-0.0002592933306004852],[-0.0002379241632297635,-0.0006429465720430017],[-0.00026494060875847936,-0.00031374936224892735],[0.0002743449585977942,-0.0004968162393197417],[0.0001688323391135782,-0.0002764066739473492],[-0.0007783570908941329,-0.00036155895213596523],[-0.0004942692467011511,-0.00019670103210955858]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[0.2159784734249115,0.2484983652830124,0.17167997360229492],"rotation":[0.012748089618980885,-0.03363189473748207,0.0018279720097780228,-0.9993513226509094],"used":true,"bodyHandle":2.895e-321,"linearSpeed":0.003210131921937545,"angularVelocityHistory":[[-0.03389386087656021,0.005320348311215639],[0.001960777211934328,-0.002858127932995558],[-0.0012841459829360247,0.002164941281080246],[0.0009495817357674241,-0.001032201456837356],[0.0003216259938199073,-0.002799364272505045],[0.0017399108037352562,-0.004861480090767145],[-0.001007196377031505,0.0007506267866119742],[-0.0009525179630145431,0.008507185615599155],[-0.0028568333946168423,0.0016371509991586208],[0.00027379696257412434,-0.0003554682189133018],[0.001829584944061935,0.0003281459503341466]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.28336963057518005,0.18735434114933014,0.2135014533996582],"rotation":[0.005474363919347525,0.0810437873005867,0.0005582160665653646,-0.996695339679718],"used":true,"bodyHandle":2.9e-321,"linearSpeed":0.0000013424645008083625,"angularVelocityHistory":[[0.07478051632642746,0.02618793025612831],[0.05373580381274223,0.01814623549580574],[-0.16571055352687836,-0.04943036288022995],[-0.05941915139555931,-0.03278398886322975],[-0.04387454688549042,-0.011234024539589882],[-0.06102081388235092,-0.01540427003055811],[-0.046330805867910385,-0.008922277018427849],[-0.032469358295202255,-0.003410783363506198],[-0.034333545714616776,-0.004461383447051048],[-0.02756204456090927,-0.0027305507101118565],[0.11014769971370697,0.04355257749557495]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.19744667410850525,0.1827239990234375,0.20990657806396484],"rotation":[0.41772839426994324,0.001347346231341362,-0.9085659980773926,0.003004644764587283],"used":true,"bodyHandle":2.905e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.0011181660229340196,-0.0008760322234593332],[-0.00002472836058586836,-0.0001375520514557138],[0.0002643511106725782,-0.000683750375173986],[-0.0005164153408259153,-0.0005396550404839218],[-0.001908972510136664,-0.0011344323866069317],[0.0007975908229127526,-0.0003470734809525311],[-0.0008268589153885841,-0.0006924731424078345],[0.00000414169244322693,-0.0006217262125574052],[-0.001210379763506353,-0.0011020597303286195],[-0.00020621411385945976,-0.0006407155888155103],[-0.001724695903249085,-0.00122543191537261]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06173954904079437,0.2530529797077179,0.06402204185724258],"rotation":[0.6787896156311035,-0.0021774601191282272,0.7343160510063171,-0.00444568507373333],"used":true,"bodyHandle":2.91e-321,"linearSpeed":0.0029830236639318704,"angularVelocityHistory":[[-0.0035606599412858486,-0.007879781536757946],[0.001568008679896593,0.0018928236095234752],[-0.007104708347469568,-0.0046663302928209305],[-0.003160752821713686,-0.009336886927485466],[0.007545726373791695,0.006205020472407341],[-0.004390928894281387,0.002158032963052392],[-0.46953579783439636,0.07726780325174332],[0.012775049544870853,-0.04121899604797363],[-0.00290333922021091,-0.03606933355331421],[0.003603038378059864,-0.035022370517253876],[-0.001352229155600071,-0.024226292967796326]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.04428282380104065,0.24772140383720398,0.1426997184753418],"rotation":[-0.001786168897524476,0.5510835647583008,0.000009585556654201355,0.8344481587409973],"used":true,"bodyHandle":2.915e-321,"linearSpeed":0.0032111859011176636,"angularVelocityHistory":[[0.00001111907113227062,0.000007697797627770342],[0.000008520905794284772,0.000007154438208090141],[0.000006545054020534735,0.000006895978003740311],[0.000005284196504362626,0.000005078295089333551],[0.05079098045825958,-0.05649706348776817],[0.032395604997873306,-0.0032484615221619606],[-0.36884623765945435,-0.04820704832673073],[0.03585435450077057,0.003720911918208003],[0.013971313834190369,-0.00038984380080364645],[0.019567523151636124,-0.0004908635746687651],[0.02493779920041561,-0.0006819903501309454]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06066301092505455,0.24732288718223572,0.06412699818611145],"rotation":[0.5141919255256653,0.0041833012364804745,-0.8576624393463135,-0.0020505087450146675],"used":true,"bodyHandle":2.92e-321,"linearSpeed":0.0032280218501715445,"angularVelocityHistory":[[-0.00039468289469368756,0.005496762227267027],[0.00039859017124399543,0.006962107494473457],[-0.0008354397141374648,-0.00004164233905612491],[-0.004414303228259087,0.00598146440461278],[0.012798321433365345,0.00982324592769146],[-0.006347668822854757,-0.005628779996186495],[-0.062023479491472244,0.08905092626810074],[0.011253882199525833,0.03919978067278862],[-0.008452321402728558,0.007677396759390831],[-0.00045661701005883515,-0.005536670796573162],[0.00969702284783125,-0.0014944057911634445]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.20788957178592682,0.2530398368835449,0.1387593150138855],"rotation":[0.5988146066665649,-0.006740472745150328,0.8008545637130737,0.0027522605378180742],"used":true,"bodyHandle":2.925e-321,"linearSpeed":0.0028122881901042184,"angularVelocityHistory":[[-0.005113609600812197,-0.0013718042755499482],[0.004990015644580126,-0.0004761774616781622],[0.002349168062210083,0.00206256122328341],[0.00028106296667829156,-0.005280270241200924],[-0.004647171590477228,-0.009106028825044632],[0.0021443248260766268,-0.001962592825293541],[0.0013243621215224266,-0.0023162965662777424],[0.0018287296406924725,-0.005352179519832134],[0.0015893160598352551,0.0021834333892911673],[-0.00008577647531637922,-0.0015021383296698332],[-0.0005723544745706022,-0.002124778926372528]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.07272318005561829,0.2530202567577362,0.13252943754196167],"rotation":[0.0003181366773787886,-0.18222542107105255,-0.0012334530474618077,-0.983255922794342],"used":true,"bodyHandle":2.93e-321,"linearSpeed":0.00298562666351053,"angularVelocityHistory":[[0.00791961420327425,-0.0024955803528428078],[0.007287182379513979,0.0000242496080318233],[0.01183855626732111,0.0021573107223957777],[0.011015821248292923,-0.002689243061468005],[-0.002649141475558281,0.004037490580230951],[0.007064694073051214,-0.0023606454487890005],[-0.016425883397459984,-0.018966276198625565],[-0.0009345953003503382,-0.0054202997125685215],[0.015056426636874676,-0.01274558063596487],[0.007458545733243227,-0.009974967688322067],[0.0059243314899504185,-0.005398731678724289]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.10384798049926758,0.24742193520069122,0.13649986684322357],"rotation":[0.7989516854286194,0.002077060518786311,0.6013884544372559,-0.0019331516232341528],"used":true,"bodyHandle":2.935e-321,"linearSpeed":0.0032282696311583194,"angularVelocityHistory":[[0.0001654882071306929,-0.0003171167627442628],[-0.000004664554126065923,-0.000007786676178511698],[-0.0002794711908791214,0.0020865434780716896],[-0.00005813588359160349,-0.0005253964336588979],[-0.00005280995537759736,0.0002779143105726689],[-0.000012984740351384971,-0.0000292333588731708],[0.0035363875795155764,0.0004348094225861132],[0.012009842321276665,0.0015029048081487417],[0.019331641495227814,0.0032663599122315645],[0.026486238464713097,0.004552491940557957],[0.03525508940219879,0.004670498892664909]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.21724039316177368,0.24748143553733826,0.11240334063768387],"rotation":[-0.0030665751546621323,-0.5641952157020569,0.00033287593396380544,-0.8256356120109558],"used":true,"bodyHandle":2.94e-321,"linearSpeed":0.0032200159694250824,"angularVelocityHistory":[[-0.04102624952793121,-0.006335495039820671],[0.0007014431757852435,0.005626416299492121],[0.0010327970376238227,0.002933438867330551],[-0.0000587968788750004,-0.003162490902468562],[-0.00021657189063262194,-0.00680274423211813],[0.000049311744078295305,0.0058639170601964],[-0.00004180816176813096,0.0032114197965711355],[0.06413251161575317,-0.05982936918735504],[-0.0018531258683651686,-0.0011492135236039758],[0.0014969726325944066,0.0006281927926465869],[0.001076029846444726,-0.0005236908909864724]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.13316509127616882,0.18792223930358887,0.2101522982120514],"rotation":[0.9965252876281738,0.004295505583286285,0.08314143121242523,0.0025255801156163216],"used":true,"bodyHandle":2.945e-321,"linearSpeed":9.968050489237505e-9,"angularVelocityHistory":[[-0.0024021167773753405,0.000942797982133925],[0.002249034820124507,-0.0000052122868510195985],[-0.002190505852922797,0.000348990666680038],[0.002771924715489149,0.00010926202958216891],[-0.0027386879082769156,-0.00032491597812622786],[0.002136284252628684,0.00012295617489144206],[-0.0022734678350389004,-0.00031249591847881675],[0.0017274775309488177,0.0008175312541425228],[-0.002078041899949312,0.0007717996486462653],[0.0017591419164091349,0.00029648756026290357],[-0.001769885653629899,0.0005966724711470306]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.07174687087535858,0.25875216722488403,0.09522319585084915],"rotation":[0.002050088020041585,-0.8269613981246948,-0.0003277052892372012,-0.5622548460960388],"used":true,"bodyHandle":2.95e-321,"linearSpeed":0.0029846551470907113,"angularVelocityHistory":[[0.004895000718533993,-0.009521354921162128],[0.0007535798940807581,0.00829013530164957],[0.0038611129857599735,-0.0021153553389012814],[-0.0019210311584174633,0.0017764940857887268],[-0.008840342983603477,0.02154083177447319],[0.0071477447636425495,-0.00764103140681982],[-0.09899618476629257,-0.04188593477010727],[0.002614604076370597,-0.03244614973664284],[0.005779819563031197,-0.03629962354898453],[0.0026253904215991497,-0.03589651361107826],[0.001083039678633213,-0.02584274671971798]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.21283085644245148,0.25345179438591003,0.07836546748876572],"rotation":[-0.8129323124885559,0.0002573058009147644,0.5823580026626587,-0.00030129242804832757],"used":true,"bodyHandle":2.955e-321,"linearSpeed":0.002826308851129395,"angularVelocityHistory":[[-0.00035112787736579776,-0.003189419163390994],[-0.0024738425854593515,-0.0050230612978339195],[0.000526716816239059,-0.0010185783030465245],[-0.0022034384310245514,-0.010051993653178215],[0.002092603128403425,-0.0024682283401489258],[-0.0009958469308912754,-0.0049881162121891975],[-0.002505558542907238,-0.0019818872679024935],[-0.00035955733619630337,-0.003692908678203821],[-0.0025798948481678963,-0.0003608970146160573],[-0.0004175329813733697,-0.0011492378544062376],[-0.0018785777501761913,-0.0026107910089194775]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.15895260870456696,0.2473587989807129,0.08362513780593872],"rotation":[-0.3927740454673767,0.0023295688442885876,-0.9196251034736633,-0.0035640967544168234],"used":true,"bodyHandle":2.96e-321,"linearSpeed":0.003231268539103147,"angularVelocityHistory":[[0.003945805132389069,-0.00774035882204771],[-0.001173113938421011,0.005085481330752373],[0.0018797211814671755,-0.011014094576239586],[0.00003948132507503033,0.003668031422421336],[0.012670964933931828,0.030502693727612495],[-0.002375573618337512,-0.007017195224761963],[0.00334662152454257,0.013588975183665752],[0.00793733075261116,0.02698042243719101],[-0.000826273753773421,-0.008466343395411968],[0.01456043217331171,0.0031836871057748795],[0.03382011502981186,0.006709031295031309]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2698964476585388,0.24744340777397156,0.1424897462129593],"rotation":[0.0004970954614691436,0.02576172724366188,-0.0027696522884070873,-0.9996641278266907],"used":true,"bodyHandle":2.964e-321,"linearSpeed":0.0032102496406045873,"angularVelocityHistory":[[-0.0012943611945956945,-0.013703945092856884],[0.002467826474457979,-0.00013870518887415528],[0.0010661332635208964,-0.0029108573216944933],[0.09857290238142014,-0.009286543354392052],[0.001778546953573823,-0.000396020885091275],[0.000634519150480628,-0.0007045164238661528],[0.004877924919128418,-0.0005644031334668398],[0.0034434006083756685,-0.0037950717378407717],[0.0013223554706200957,-0.0020203380845487118],[0.015491083264350891,-0.0011611876543611288],[0.03926050290465355,-0.0023364387452602386]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.2700020670890808,0.2580066919326782,0.12038952112197876],"rotation":[0.004026488400995731,-0.959815263748169,-0.00035610079066827893,0.2806035280227661],"used":true,"bodyHandle":2.97e-321,"linearSpeed":0.0028768302357239438,"angularVelocityHistory":[[0.002876709681004286,0.020268702879548073],[-0.0013470539124682546,0.023939158767461777],[-0.0008145482279360294,-0.014746175147593021],[0.004017666447907686,-0.005740396678447723],[-0.019645413383841515,0.01477440632879734],[-0.0007461789646185935,0.009008755907416344],[-0.0038593311328440905,0.004349020775407553],[0.005678226239979267,-0.031025409698486328],[0.008670531213283539,0.0007908361149020493],[0.0063499766401946545,0.00929544772952795],[-0.026356548070907593,0.003244503168389201]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.1633470207452774,0.25298380851745605,0.04020566865801811],"rotation":[0.9440212845802307,-0.007819106802344322,-0.32974886894226074,0.005323018413037062],"used":true,"bodyHandle":2.974e-321,"linearSpeed":0.002845312699847095,"angularVelocityHistory":[[0.004904779605567455,0.0021018502302467823],[0.0013231990160420537,0.0037776650860905647],[0.004428130574524403,-0.011714533902704716],[0.002784658456221223,0.0019455181900411844],[0.006286105141043663,0.0026008756831288338],[0.00848914124071598,-0.0004037735634483397],[0.00661876518279314,0.0033365744166076183],[0.00399687560275197,0.002416192088276148],[-0.00009091106039704755,0.0036504529416561127],[-0.0006694384501315653,-0.00014292891137301922],[0.003741540713235736,0.0027954622637480497]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.2647397816181183,0.24734202027320862,0.14446020126342773],"rotation":[-0.48236319422721863,-0.003897399175912142,-0.875962495803833,-0.0004921585787087679],"used":true,"bodyHandle":2.98e-321,"linearSpeed":0.003194845561986431,"angularVelocityHistory":[[-0.0005264924257062376,0.0030609930399805307],[-0.0018186264205724,0.0001814412826206535],[-0.0006189207197166979,0.005385490600019693],[0.002320412779226899,0.00106047501321882],[-0.00016088418487925082,-0.002088744193315506],[-0.0003650722501333803,-0.003048404585570097],[0.0009238519705832005,0.004373782314360142],[0.0006765106227248907,0.002143467077985406],[0.0013986567500978708,0.0030719104688614607],[0.04015312343835831,-0.0011043002596125007],[0.07248378545045853,-0.001165643916465342]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.15890757739543915,0.25821420550346375,0.02026021108031273],"rotation":[-0.4059472978115082,0.01603040099143982,0.9137539267539978,0.0018788621528074145],"used":true,"bodyHandle":2.984e-321,"linearSpeed":0.0028357361120895153,"angularVelocityHistory":[[0.004601774271577597,0.002785306889563799],[-0.006432566326111555,0.01586022414267063],[0.009844337590038776,-0.01476486586034298],[0.0016462544444948435,0.004689518362283707],[0.003080841852352023,-0.000652357644867152],[0.0070064677856862545,0.0030495673418045044],[0.0033515659160912037,-0.0003553536080289632],[0.004050862975418568,0.00267013069242239],[-0.0009292750619351864,0.004213655833154917],[0.002445913152769208,-0.0032799015752971172],[0.00555627653375268,0.001649464131332934]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.16668082773685455,0.2585490047931671,0.08452487736940384],"rotation":[-0.0006304948474280536,0.1058255210518837,0.0024997249711304903,-0.9943813681602478],"used":true,"bodyHandle":2.99e-321,"linearSpeed":0.002899882221106674,"angularVelocityHistory":[[0.0017283757915720344,-0.001148186274804175],[0.006731693632900715,0.011982419528067112],[0.011660594493150711,-0.003681072499603033],[0.011609475128352642,-0.00025776337133720517],[0.008153209462761879,0.0037580644711852074],[0.006701963488012552,0.009019452147185802],[0.009167290292680264,-0.012883024290204048],[-0.01338174007833004,-0.08500510454177856],[-0.010940910317003727,-0.028428591787815094],[0.016619499772787094,-0.004673434887081385],[0.005792713258415461,-0.004144757054746151]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.10540719330310822,0.2531309723854065,0.1373993158340454],"rotation":[-0.27117055654525757,0.0004733818641398102,-0.9625275731086731,0.002634274773299694],"used":true,"bodyHandle":2.994e-321,"linearSpeed":0.0029589354030439964,"angularVelocityHistory":[[0.00003054491389775649,-0.001126874703913927],[0.000434131536167115,-0.0006450671353377402],[0.00035930468584410846,0.000012730129128613044],[0.00015793621423654258,0.0006349385366775095],[0.0005923720309510827,-0.00023914665507618338],[0.0002514420775696635,0.0003100602771155536],[0.0002350732684135437,0.00007812517287675291],[0.000570038566365838,0.00020860647782683372],[0.0003622040676418692,0.00009966640209313482],[0.00027659398620016873,0.0004900130443274975],[0.00035026887780986726,0.00044321001041680574]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.2063596546649933,0.24739256501197815,0.12047005444765091],"rotation":[-0.24987925589084625,-0.0028206524439156055,0.9682669043540955,0.0034105812665075064],"used":true,"bodyHandle":3e-321,"linearSpeed":0.003224490458522511,"angularVelocityHistory":[[0.0020662012975662947,0.0019414382986724377],[0.0032670311629772186,0.004437378607690334],[-0.00029965065186843276,0.005619654431939125],[-0.0021993634290993214,-0.00042455634684301913],[0.0021732875611633062,0.010183620266616344],[0.0015457432018592954,0.0021482340525835752],[0.0010878111934289336,0.01276234071701765],[-0.0017506885342299938,0.004419086966663599],[-0.0000755146611481905,-0.00018011362408287823],[0.015442799776792526,-0.0004239658883307129],[0.02817779965698719,0.002067380817607045]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.12003440409898758,0.24748419225215912,0.008283332921564579],"rotation":[0.8866493701934814,-0.001590405940078199,0.462429404258728,-0.0030883527360856533],"used":true,"bodyHandle":3.004e-321,"linearSpeed":0.0032214323467923646,"angularVelocityHistory":[[-0.0004558802756946534,0.000012177831195003819],[-0.0022102375514805317,-0.0023590698838233948],[0.007241744082421064,0.013340817764401436],[0.002099644625559449,0.0019591599702835083],[-0.01860237307846546,-0.02456480823457241],[-0.012726005166769028,-0.019156672060489655],[0.00044844215153716505,0.00025417449069209397],[0.00046156736789271235,0.011434799991548061],[-0.00017568544717505574,0.0002952523063868284],[-0.0004543712711893022,0.00041558442171663046],[-0.00001611242441867944,0.00038978562224656343]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.26990506052970886,0.24764204025268555,0.08302851766347885],"rotation":[-0.8582344055175781,0.0020366294775158167,0.513248085975647,-0.002415143419057131],"used":true,"bodyHandle":3.01e-321,"linearSpeed":0.0032216181392625354,"angularVelocityHistory":[[-0.0056608873419463634,0.0009169333497993648],[0.0019477730384096503,0.00023526536824647337],[0.000046883971663191915,0.00006262960960157216],[-0.09999285638332367,0.020022468641400337],[0.0013204481219872832,0.0007106527336873114],[-0.00009665612742537633,0.000051696973969228566],[0.0041606067679822445,-0.0002520948473829776],[-0.00011404537508497015,-0.00009012046211864799],[-0.000027441021302365698,0.0005480299587361515],[0.006289218552410603,0.001041232724674046],[0.016410456970334053,0.0030794665217399597]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.002042582258582115,0.25311365723609924,0.0313398502767086],"rotation":[-0.6660920977592468,0.004053875803947449,-0.7458577752113342,0.0009896104456856847],"used":true,"bodyHandle":3.014e-321,"linearSpeed":0.0029567497930269694,"angularVelocityHistory":[[0.00003393976658117026,-0.0029314840212464333],[0.0002954574301838875,0.0010074625024572015],[0.0010130285518243909,0.00013865201617591083],[0.004020570311695337,0.019160617142915726],[0.0006851088255643845,-0.0000802141148597002],[0.001469525508582592,-0.0010340592125430703],[0.0010147698922082782,-0.0010250943014398217],[0.0007715707179158926,-0.0008244124474003911],[0.0006037019193172455,-0.0006424150778912008],[0.0012696977937594056,-0.00030405985307879746],[0.0010265916353091598,-0.0003667439450509846]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.16695940494537354,0.25284644961357117,0.08602797985076904],"rotation":[-0.0023250544909387827,-0.9270076155662537,0.0005653414991684258,-0.3750346899032593],"used":true,"bodyHandle":3.02e-321,"linearSpeed":0.002898011400134366,"angularVelocityHistory":[[0.0025483008939772844,0.0004850609111599624],[0.019360851496458054,0.013675663620233536],[0.009624682366847992,-0.0018234422896057367],[0.008270971477031708,-0.007942350581288338],[0.005416432861238718,0.0026105183642357588],[0.021407190710306168,0.011548235081136227],[0.010953273624181747,-0.0059034563601017],[0.012285251170396805,-0.20257577300071716],[0.017414355650544167,0.0408330038189888],[0.01198137179017067,0.0005780970677733421],[0.0037674347404390574,0.0014208193169906735]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06071045994758606,0.25284940004348755,0.02493606135249138],"rotation":[-0.00021054473472759128,-0.8454980850219727,-0.0015752242179587483,0.5339760184288025],"used":true,"bodyHandle":3.024e-321,"linearSpeed":0.0029526630008367997,"angularVelocityHistory":[[-0.007187281269580126,-0.010848162695765495],[-0.006268921308219433,-0.005315781570971012],[-0.005701570771634579,-0.0033921897411346436],[-0.10566236078739166,0.009909377433359623],[-0.007416099309921265,-0.0024268499109894037],[-0.00579054607078433,-0.0017293443670496345],[-0.004548682831227779,-0.0014935166109353304],[-0.003591148415580392,-0.00121481588575989],[-0.002836013212800026,-0.0009694474283605814],[-0.002203357173129916,-0.0008476791554130614],[-0.001765057328157127,-0.0006466271006502211]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.10654760897159576,0.2477087378501892,0.02498604543507099],"rotation":[-0.6037639379501343,-0.001152867916971445,-0.797161340713501,0.0011999128619208932],"used":true,"bodyHandle":3.03e-321,"linearSpeed":0.003228828447940656,"angularVelocityHistory":[[5.146861212779186e-7,-0.000008772934961598366],[6.153845788503531e-7,-0.000003014477897522738],[5.319794240676856e-7,-0.000004305295078665949],[5.432682996797666e-7,-0.000005656836947309785],[6.812975925640785e-7,-0.0000054958636610535905],[5.814518431179749e-7,-0.000004360424554761266],[0.0012114235432818532,0.000164051991305314],[0.0025427197106182575,0.006719404831528664],[0.007803569082170725,-0.005770805757492781],[-0.001749700983054936,-0.006172139663249254],[0.008424367755651474,-0.0007952224113978446]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0009744006092660129,0.24741347134113312,0.0315108560025692],"rotation":[0.250770628452301,-0.0034788353368639946,0.9680401086807251,0.000500011199619621],"used":true,"bodyHandle":3.034e-321,"linearSpeed":0.0032230298170008312,"angularVelocityHistory":[[0.002368007553741336,0.0025880977045744658],[0.0008792065782472491,0.0004255095846019685],[0.00005826343476655893,-0.000011075614565925207],[0.012353476136922836,0.0237696822732687],[0.00006652560114162043,0.00013082144141662866],[0.00016247016901616007,-0.00004874874139204621],[0.00013180638779886067,-0.00010055635357275605],[0.0011920635588467121,0.00003171062417095527],[0.014368632808327675,0.0011057427618652582],[0.025123493745923042,0.001994958147406578],[0.035177573561668396,0.002931429073214531]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.2177940458059311,0.24756909906864166,0.05568443611264229],"rotation":[-0.8920835852622986,0.001327601494267583,0.4518680274486542,-0.0005522619467228651],"used":true,"bodyHandle":3.04e-321,"linearSpeed":0.0032232263466234214,"angularVelocityHistory":[[-0.0006377904792316258,-0.006958100013434887],[-0.0002727748069446534,-0.002305681351572275],[0.0019334176322445273,-0.002212864113971591],[0.002555397804826498,0.0022350382059812546],[0.00487205246463418,0.012503058649599552],[0.0011036093346774578,-0.0006573563441634178],[0.0028328944463282824,0.0026387502439320087],[0.00035153861972503364,0.001373989274725318],[0.002625030232593417,0.001587426639162004],[0.016994137316942215,0.0021556313149631023],[0.03011937625706196,-0.001294428831897676]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2701985538005829,0.25306236743927,0.025026096031069756],"rotation":[-0.9861372709274292,0.003481178777292371,-0.16589169204235077,0.0010288901394233108],"used":true,"bodyHandle":3.043e-321,"linearSpeed":0.0029159511702558237,"angularVelocityHistory":[[0.010211512446403503,-0.03918379172682762],[0.02134271152317524,-0.035591740161180496],[-0.07658087462186813,-0.13210313022136688],[-0.07935412973165512,-0.01861817203462124],[0.0014266257639974356,0.003310785163193941],[-0.051687564700841904,-0.044449612498283386],[-0.0034232232719659805,-0.006887038238346577],[-0.0013034821022301912,-0.00947735458612442],[0.013061502948403358,0.13131259381771088],[0.005703039932996035,-0.00775142852216959],[0.0016413892153650522,-0.0022705423180013895]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.12230908870697021,0.25326770544052124,0.012527067214250565],"rotation":[-0.0014774685259908438,-0.7315815091133118,-0.0025013049598783255,-0.6817477345466614],"used":true,"bodyHandle":3.05e-321,"linearSpeed":0.0031182844209060477,"angularVelocityHistory":[[-0.004373209085315466,-0.0007948160055093467],[-0.0030097670387476683,0.0013898388715460896],[-0.005786437075585127,0.013002307154238224],[-0.00774004589766264,-0.001393076847307384],[-0.08983208984136581,-0.027550144121050835],[-0.0571310855448246,0.05796712636947632],[0.033760275691747665,0.002828360302373767],[0.03839506581425667,0.010352007113397121],[0.02433428354561329,0.005771729163825512],[0.018009701743721962,0.003966306336224079],[0.01550244353711605,0.003103738185018301]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.21177130937576294,0.25692275166511536,0.038141727447509766],"rotation":[-0.3225388824939728,-0.023839464411139488,0.944495677947998,0.0576908141374588],"used":true,"bodyHandle":3.053e-321,"linearSpeed":0.00294579372638103,"angularVelocityHistory":[[-0.1546292006969452,-0.1924407035112381],[-0.014002887532114983,-0.032876886427402496],[0.156251922249794,0.017012866213917732],[-0.3380250632762909,-0.5130480527877808],[-0.18921729922294617,-0.2651582658290863],[0.08797045052051544,-0.049780409783124924],[-0.022642090916633606,-0.013465079478919506],[-0.023774748668074608,-0.008375766687095165],[-0.13087160885334015,-0.05733140558004379],[0.10353341698646545,0.060780324041843414],[0.061507660895586014,0.044299811124801636]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.26971864700317383,0.24716129899024963,0.08539450168609619],"rotation":[-0.8275716304779053,-0.0009268998401239514,-0.5613449215888977,0.004018148873001337],"used":true,"bodyHandle":3.06e-321,"linearSpeed":0.0032319039961601764,"angularVelocityHistory":[[-0.012258186005055904,-0.007865664549171925],[-0.0003446528280619532,-0.0005318251205608249],[0.0013647957239300013,0.009495843201875687],[-0.0018226850079372525,-0.002071211114525795],[-0.00566290644928813,0.003480666084215045],[-0.0010506021790206432,-0.001336651504971087],[-0.0059466902166605,-0.0009122767369262874],[0.010612946934998035,0.005554662086069584],[0.0007983193499967456,0.003263619961217046],[0.01166194211691618,0.002065264154225588],[0.009066333994269371,0.004459106829017401]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.21278966963291168,0.2529008686542511,-0.010303652845323086],"rotation":[0.004553203471004963,0.6797313094139099,0.005739996209740639,-0.7334246039390564],"used":true,"bodyHandle":3.063e-321,"linearSpeed":0.004260011698946176,"angularVelocityHistory":[[0.005037563852965832,0.01763714663684368],[-0.00011705652286764234,0.014009653590619564],[-0.01040276512503624,0.0008035710779950023],[-0.00019854299898725003,0.00171826989389956],[0.001873442088253796,0.004232124425470829],[-0.00026738038286566734,0.004390509333461523],[-0.0007872608257457614,0.005892787128686905],[0.0014670321252197027,0.012895232066512108],[-0.02271750383079052,0.05692220851778984],[0.0018091133097186685,0.004932135343551636],[0.0020858279895037413,0.021458929404616356]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.061451006680727005,0.24741145968437195,0.02402927540242672],"rotation":[-0.48295775055885315,-0.0030291613657027483,0.8756358623504639,0.002095932839438319],"used":true,"bodyHandle":3.07e-321,"linearSpeed":0.00322531278608111,"angularVelocityHistory":[[0.028206510469317436,0.0027320950757712126],[0.008923140354454517,0.0009603707585483789],[0.00251179002225399,0.00008589297794969752],[-0.06664916127920151,0.12411269545555115],[-0.0005865225102752447,-0.00023689067165832967],[-0.00041586230508983135,-0.00018382855341769755],[-0.00032738244044594467,-0.00013582815881818533],[-0.0002444917627144605,-0.00011971660569543019],[-0.00019779620924964547,-0.00009549714013701305],[-0.00014942882989998907,-0.00007069810817483813],[-0.00012550994870252907,-0.00007432619167957455]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.21196435391902924,0.2565189301967621,-0.042869932949543],"rotation":[-0.7427525520324707,-0.04367230460047722,0.6667624711990356,-0.04288497194647789],"used":true,"bodyHandle":3.073e-321,"linearSpeed":0.002947389568747726,"angularVelocityHistory":[[0.15898963809013367,0.009778919629752636],[0.08605233579874039,0.04162455350160599],[-0.20436187088489532,0.029820259660482407],[-0.1141137182712555,0.027465080842375755],[-0.10530900210142136,0.028012217953801155],[0.09080346673727036,0.0270864088088274],[0.14757005870342255,0.03476835787296295],[0.13777276873588562,0.03772027790546417],[0.13431516289710999,0.03928389027714729],[0.09435451775789261,0.03825530782341957],[-0.2232469767332077,0.018274862319231033]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.04664256423711777,0.24741609394550323,-0.06238243728876114],"rotation":[0.01670583337545395,0.003068777499720454,-0.999855101108551,-0.0011290223337709904],"used":true,"bodyHandle":3.08e-321,"linearSpeed":0.0032241108995207457,"angularVelocityHistory":[[0.004599130712449551,0.0016152041498571634],[0.0004659401602111757,-0.0008047381415963173],[0.00032405235106125474,-0.0005441064131446183],[0.00028812664095312357,-0.00042420474346727133],[0.00019253719074185938,-0.0003511536924634129],[0.00014147997717373073,-0.00027454347582533956],[0.00015517231076955795,-0.00021685316460207105],[0.00008331423305207863,-0.00016651107580401003],[0.00012250899453647435,-0.0004154514754191041],[0.00006231205043150112,-0.00014036017819307745],[0.000030062137739150785,-0.00010165711864829063]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.20996111631393433,0.24739399552345276,-0.04436391964554787],"rotation":[-0.003322967328131199,-0.9985414147377014,0.002139196265488863,0.05384543538093567],"used":true,"bodyHandle":3.083e-321,"linearSpeed":0.0032293188697786923,"angularVelocityHistory":[[0.0032796417362987995,-0.02790251560509205],[0.00018706587434280664,-0.01135833840817213],[0.0005537564866244793,0.0004869631084147841],[0.0016632294282317162,-0.019542159512639046],[0.00030075028189457953,-0.014228316023945808],[-0.0003183114458806813,-0.0029154785443097353],[0.0036250667180866003,-0.001895825145766139],[0.001166652305983007,-0.00895969569683075],[0.002967862179502845,-0.007284063845872879],[0.0024364653509110212,0.0008701250189915299],[0.0016297770198434591,-0.002863185480237007]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.08736599236726761,0.25829827785491943,-0.042192887514829636],"rotation":[0.036323465406894684,-0.0014186016051098704,0.999334454536438,0.0030243019573390484],"used":true,"bodyHandle":3.09e-321,"linearSpeed":0.002837807462044287,"angularVelocityHistory":[[-0.008673219010233879,0.03386259824037552],[-0.023515529930591583,0.023006316274404526],[-0.01974751614034176,0.019860249012708664],[-0.05685501545667648,-0.059998154640197754],[-0.01270396076142788,0.013355974107980728],[-0.03631657734513283,-0.10269246250391006],[0.001566113904118538,-0.10438621044158936],[-0.0030865089502185583,-0.08879263699054718],[-0.0036192999687045813,-0.07127734273672104],[-0.0032818180043250322,-0.05755741149187088],[-0.0028540249913930893,-0.04642365872859955]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.052028805017471313,0.24742725491523743,0.000025516957975924015],"rotation":[-0.4711545705795288,-0.0011526994640007615,-0.8820477724075317,0.0019132766174152493],"used":true,"bodyHandle":3.093e-321,"linearSpeed":0.003224847068300887,"angularVelocityHistory":[[0.00006830490019638091,0.0002495878143236041],[0.00015379313845187426,0.000019850982425850816],[0.00011877499491674826,0.000012875297215941828],[0.00011109178012702614,-0.0000036611966152122477],[0.000094044124125503,-0.0000020653753836086253],[0.0000447305865236558,-0.000001464157207919925],[0.04460897669196129,0.011175346560776234],[-0.010838883928954601,0.040844548493623734],[0.0012179336044937372,-0.0025925394147634506],[0.00046327870222739875,-0.004230891820043325],[0.00017636014672461897,-0.003799269674345851]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.27000150084495544,0.25133028626441956,0.02369683049619198],"rotation":[-0.9921883940696716,-0.0007206277223303914,-0.11720729619264603,0.04270930588245392],"used":true,"bodyHandle":3.1e-321,"linearSpeed":0.002991100720395585,"angularVelocityHistory":[[-0.03644942864775658,0.18740753829479218],[-0.02573336288332939,0.035724520683288574],[-0.09437601268291473,-0.07969611138105392],[0.023214489221572876,0.00812180433422327],[-0.06537705659866333,0.16446001827716827],[-0.011547498404979706,0.017638735473155975],[-0.09512525796890259,-0.30366823077201843],[0.09194880723953247,-0.2847996652126312],[0.03934500366449356,-0.25366178154945374],[0.05857234075665474,-0.12477968633174896],[0.126250222325325,0.2973237633705139]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.1501581072807312,0.25823497772216797,-0.04250643774867058],"rotation":[-0.26211071014404297,-0.003502914682030678,0.9649865031242371,0.009310754016041756],"used":true,"bodyHandle":3.103e-321,"linearSpeed":0.0031985477616192056,"angularVelocityHistory":[[0.08925191313028336,0.00852952804416418],[0.029653191566467285,0.047618310898542404],[0.020158637315034866,0.03020584210753441],[0.01443240325897932,0.025887461379170418],[0.007477420847862959,0.015745433047413826],[0.009458309039473534,0.017681129276752472],[0.01420203223824501,0.010959342122077942],[0.010268121026456356,0.010785127058625221],[0.02720753848552704,0.009813372045755386],[0.021505510434508324,0.011352750472724438],[0.01007790770381689,0.0072183506563305855]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.08459653705358505,0.24713218212127686,-0.04171998053789139],"rotation":[0.29359421133995056,-0.00033626335789449513,0.9559300541877747,-0.00024022690195124596],"used":true,"bodyHandle":3.11e-321,"linearSpeed":0.0032397717951318994,"angularVelocityHistory":[[-0.0026662484742701054,0.0025421821046620607],[-0.0019774006213992834,0.0015976267168298364],[-0.0016483127838000655,0.001302693272009492],[0.06664813309907913,0.05027848482131958],[-0.0006186271784827113,0.0007056792383082211],[0.06265050172805786,-0.03682848438620567],[0.004867651034146547,-0.008067899383604527],[0.004067652393132448,-0.006957785692065954],[0.003304478246718645,-0.005667999852448702],[0.002698690863326192,-0.004542054142802954],[0.0022027306258678436,-0.0036626674700528383]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.04829173907637596,0.2531488835811615,-0.0028041834011673927],"rotation":[-0.6512429118156433,-0.0018352949991822243,-0.7588669657707214,0.0004192860214971006],"used":true,"bodyHandle":3.113e-321,"linearSpeed":0.002986367136507971,"angularVelocityHistory":[[0.0005977325490675867,0.0008783527882769704],[-0.0002786539262160659,0.00042805689736269414],[-0.0003018298593815416,0.0004080805229023099],[-0.00026717892615124583,0.0003633491287473589],[-0.00021940596343483776,0.0003154771984554827],[-0.00019674291252158582,0.00026182871079072356],[-0.6282861232757568,-0.07972653210163116],[-0.08559300750494003,0.07045663148164749],[-0.02267325110733509,-0.0313090942800045],[-0.014694610610604286,-0.024889640510082245],[-0.010932201519608498,-0.02032148838043213]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.2694297134876251,0.2558322846889496,0.03626112639904022],"rotation":[-0.8398189544677734,0.02118760533630848,-0.5408512353897095,0.04165486618876457],"used":true,"bodyHandle":3.12e-321,"linearSpeed":0.002916540605148461,"angularVelocityHistory":[[-0.01837214082479477,0.1926323026418686],[-0.0106847258284688,0.034159883856773376],[-0.03414851054549217,-0.0927380621433258],[0.017739951610565186,0.008375721052289009],[-0.011212480254471302,0.16527529060840607],[-0.009069612249732018,0.01998881623148918],[-0.04327378422021866,-0.3039449453353882],[0.06772638857364655,-0.289223849773407],[0.04892827942967415,-0.2581847012042999],[0.035372987389564514,-0.12856553494930267],[0.07082361727952957,0.3166393041610718]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.21447452902793884,0.2531757354736328,-0.07342194765806198],"rotation":[-0.9575033187866211,-0.002146732294932008,0.28841063380241394,0.001475824392400682],"used":true,"bodyHandle":3.122e-321,"linearSpeed":0.002982525921635101,"angularVelocityHistory":[[-0.03367806598544121,-0.12220045924186707],[0.0032754219137132168,-0.015919409692287445],[-0.08715718239545822,0.11610669642686844],[-0.013366064988076687,-0.01664045639336109],[-0.019656967371702194,-0.005976818036288023],[-0.015670929104089737,-0.001408579875715077],[-0.01218943390995264,-0.0014030862366780639],[-0.009366171434521675,-0.0010877593886107206],[0.014032973907887936,0.02647280879318714],[-0.004810998681932688,-0.0009165546507574618],[-0.003348538652062416,-0.002610549796372652]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.26998385787010193,0.24743136763572693,-0.10234305262565613],"rotation":[0.0015938231954351068,0.09185029566287994,0.0017018570797517896,-0.9957700967788696],"used":true,"bodyHandle":3.127e-321,"linearSpeed":0.003232067771562533,"angularVelocityHistory":[[-5.690955049431068e-7,0.00024094611580949277],[-0.0004384924250189215,0.00003385585659998469],[0.001082808361388743,0.0006424866733141243],[0.00245336489751935,0.0015782838454470038],[-0.000016556810805923305,0.0000982720812316984],[-0.000768621452152729,-0.0002790403086692095],[-0.000014902516340953298,0.000036467794416239485],[-0.000009444605893804692,0.00007162227848311886],[0.0023414744064211845,0.0004047997354064137],[-0.000014401493899640627,-0.00006657336780335754],[-0.00003621967334765941,0.000034749518817989156]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.26864728331565857,0.26374465227127075,0.10526825487613678],"rotation":[-0.001239451696164906,0.9617895483970642,0.002320667030289769,0.2737770974636078],"used":true,"bodyHandle":3.13e-321,"linearSpeed":0.00287750393702641,"angularVelocityHistory":[[0.03209605813026428,0.012043142691254616],[0.00668864231556654,0.017675410956144333],[0.001813727430999279,-0.008686560206115246],[0.007350096013396978,-0.0071067591197788715],[0.008322885259985924,0.006792590953409672],[0.0051841395907104015,0.004333393648266792],[-0.004897590726613998,0.0068847439251840115],[0.012601134367287159,-0.03298504278063774],[0.0031638583168387413,0.002464096527546644],[0.015436653979122639,0.0034453810658305883],[-0.021126098930835724,0.0033075311221182346]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.04635823145508766,0.25319668650627136,-0.0631755143404007],"rotation":[-0.2637043595314026,-0.0036889011971652508,0.9645945429801941,0.0019192936597391963],"used":true,"bodyHandle":3.137e-321,"linearSpeed":0.0029560276353565542,"angularVelocityHistory":[[-0.00272620702162385,-0.0045988112688064575],[-0.0015858853003010154,-0.0036461942363530397],[-0.0009403260191902518,-0.0028527916874736547],[-0.0005299249896779656,-0.002590479329228401],[-0.00037037316360510886,-0.0020961749833077192],[-0.00024558775476180017,-0.0016541634686291218],[-0.00016185440472327173,-0.0013518049381673336],[-0.00008455518400296569,-0.0008752016583457589],[-0.0001196729062939994,-0.0015894437674432993],[0.00009119263995671645,-0.0007160389795899391],[0.000059939000493614,-0.0005169322830624878]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0990893542766571,0.2473759949207306,-0.034695450216531754],"rotation":[-0.0011666014324873686,-0.31791266798973083,-0.002731545828282833,-0.9481152892112732],"used":true,"bodyHandle":3.14e-321,"linearSpeed":0.0032236860699049598,"angularVelocityHistory":[[0.0028778119012713432,-0.005375120788812637],[0.003418498206883669,-0.006153957452625036],[0.0027030257042497396,-0.0007114278851076961],[0.0008127717883326113,-0.0033163034822791815],[0.0007940997020341456,-0.0030391921754926443],[0.0001906269317260012,-0.002104663522914052],[0.0032097897492349148,-0.0070348638109862804],[-0.07186106592416763,0.061065562069416046],[-0.00015180582704488188,-0.0023939493112266064],[0.0007780173909850419,-0.00022626182180829346],[0.0004595233767759055,-0.0004963647807016969]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.15878133475780487,0.24754473567008972,-0.036641933023929596],"rotation":[-0.00016394547128584236,0.17305885255336761,0.0021013207733631134,-0.9849092364311218],"used":true,"bodyHandle":3.147e-321,"linearSpeed":0.003219870227107886,"angularVelocityHistory":[[-0.0025268399622291327,-0.009157609194517136],[-0.0029941147658973932,-0.003993144258856773],[-0.0017584009328857064,-0.006100562866777182],[-0.0006374287768267095,-0.004842661786824465],[-0.0028238315135240555,-0.005708977580070496],[-0.0005323615041561425,-0.002266176976263523],[0.001808942761272192,-0.0025285191368311644],[0.0008648394141346216,-0.013015593402087688],[0.0001856288727140054,-0.003328329883515835],[0.0007318506250157952,-0.0005288140382617712],[0.0013556007761508226,0.00312280491925776]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.024601606652140617,0.25310075283050537,-0.03309051692485809],"rotation":[0.003845059312880039,0.4869656264781952,-0.0025100442580878735,0.8734089732170105],"used":true,"bodyHandle":3.15e-321,"linearSpeed":0.002952766012322601,"angularVelocityHistory":[[0.0004467890248633921,0.000010209618267253973],[0.00032144939177669585,0.000022698188331560232],[0.00022451386030297726,0.000027006881282432005],[0.0001779485319275409,0.000015872492440394126],[0.00013252651842776686,8.786073522060178e-7],[0.00011651754903141409,-0.000001951678086697939],[0.0000790496778790839,-0.000004479443305172026],[0.0008559807320125401,-0.0004052268632221967],[0.0004977211938239634,-0.000037929497921140864],[0.00045649352250620723,0.000002259069106003153],[0.0004775904235430062,0.000023804472220945172]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.11184712499380112,0.25852131843566895,-0.03363180160522461],"rotation":[0.3798655569553375,0.002186642726883292,-0.9249810576438904,-0.010362096130847931],"used":true,"bodyHandle":3.157e-321,"linearSpeed":0.0028956331849868937,"angularVelocityHistory":[[0.0018968862714245915,0.004429740831255913],[0.0035278552677482367,0.001103643444366753],[0.006488149985671043,0.0021049079950898886],[0.0015124285127967596,0.0010471487184986472],[0.0027832984924316406,-0.00038004317320883274],[-0.0004316883278079331,-0.0020388972479850054],[0.00820837914943695,0.0008584500756114721],[0.004377427976578474,0.0014033920597285032],[0.011443832889199257,-0.003161679022014141],[0.001734427991323173,-0.0023902766406536102],[0.002086907858029008,-0.0023035856429487467]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06362035870552063,0.2531222403049469,-0.0980720967054367],"rotation":[0.0023565515875816345,0.7189192175865173,-0.0018365844152867794,0.6950871348381042],"used":true,"bodyHandle":3.16e-321,"linearSpeed":0.0029505611378483486,"angularVelocityHistory":[[-0.0034006242640316486,-0.0058717261999845505],[-0.002438847441226244,-0.004962672013789415],[-0.0020711796823889017,-0.00364202493801713],[0.010964872315526009,-0.0053741405718028545],[-0.0011057753581553698,-0.001627515652216971],[-0.010739690624177456,0.0028454868588596582],[-0.0001121053282986395,-0.0009883100865408778],[0.0010304285679012537,-0.0017853740137070417],[0.0006520862225443125,-0.001285064616240561],[0.0005198403378017247,-0.0010018990142270923],[0.0004722815938293934,-0.0007872423739172518]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.1822284758090973,0.25299298763275146,0.011998333968222141],"rotation":[0.9999802112579346,-0.004162434954196215,0.00369951780885458,-0.002921381965279579],"used":true,"bodyHandle":3.167e-321,"linearSpeed":0.003007667088174473,"angularVelocityHistory":[[0.001356141990981996,0.006770651787519455],[0.0025147367268800735,0.018581591546535492],[0.019405648112297058,0.0033712757285684347],[-0.0728541910648346,0.006090428214520216],[-0.03814464807510376,0.010958326980471611],[-0.013894886709749699,0.0060625202022492886],[0.003613928100094199,-0.0115309227257967],[-0.0009446617914363742,-0.012733790092170238],[-0.024073606356978416,0.052118152379989624],[0.015761341899633408,0.024313537403941154],[0.009280489757657051,0.007472300436347723]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.004648435860872269,0.2581789791584015,-0.09654206037521362],"rotation":[0.8584927916526794,-0.0030770443845540285,0.5128075480461121,0.003001362783834338],"used":true,"bodyHandle":3.17e-321,"linearSpeed":0.002831253919337664,"angularVelocityHistory":[[0.037837885320186615,0.03002195432782173],[0.030470676720142365,0.023221945390105247],[0.024366319179534912,0.01594502292573452],[0.01978297531604767,0.012479583732783794],[0.01588757149875164,0.009315802715718746],[0.01322293933480978,0.009455394931137562],[0.012524557299911976,0.004288407042622566],[0.009666833095252514,0.006560467649251223],[0.008336687460541725,0.0030631753616034985],[0.006704861763864756,0.002584467176347971],[0.0054033552296459675,0.001927518635056913]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.26872971653938293,0.25971558690071106,0.05720631778240204],"rotation":[0.03531489148736,0.5444786548614502,0.028789417818188667,0.8375362157821655],"used":true,"bodyHandle":3.177e-321,"linearSpeed":0.002920495899341901,"angularVelocityHistory":[[-0.046418696641922,0.1392792910337448],[-0.01956271007657051,0.03624014928936958],[-0.06633201241493225,-0.0918046087026596],[0.023960532620549202,0.003976869396865368],[-0.029820220544934273,0.1165766641497612],[-0.017413781955838203,0.014902101829648018],[-0.08333726972341537,-0.36328303813934326],[0.043071500957012177,-0.30006563663482666],[0.010955890640616417,-0.2772514820098877],[0.019121132791042328,-0.14217813313007355],[0.024218542501330376,0.3402603566646576]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.26986783742904663,0.25820910930633545,-0.10008861869573593],"rotation":[-0.0032501802779734135,0.46454867720603943,-0.0028093205764889717,-0.8855371475219727],"used":true,"bodyHandle":3.18e-321,"linearSpeed":0.002849440534432584,"angularVelocityHistory":[[0.001088180229999125,-0.0434596985578537],[0.005224208347499371,0.03033808246254921],[-0.1651712954044342,0.26172369718551636],[-0.0035653894301503897,-0.01773810386657715],[0.015196187421679497,0.007701927796006203],[0.011543556116521358,0.010948331095278263],[0.010462367907166481,0.01703604683279991],[0.007568934466689825,0.00904993899166584],[-0.025280792266130447,0.011801172979176044],[0.012908955104649067,0.007236939389258623],[-0.013084826059639454,-0.00008523594442522153]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.28095200657844543,0.17443633079528809,0.3446427881717682],"rotation":[-0.0005548864719457924,-0.004133985377848148,0.003358257934451103,0.9999856352806091],"used":true,"bodyHandle":3.187e-321,"linearSpeed":1.3136048072444555e-11,"angularVelocityHistory":[[-0.00001547905230836477,-0.00009668297570897266],[-0.00008155945397447795,-0.000002160242047466454],[0.00002263849637529347,0.00010400178871350363],[0.00003009285865118727,-0.00010164071136387065],[0.000015406429156428203,0.000007737405212537851],[0.000042420317186042666,0.00004564094706438482],[-0.000021765095880255103,0.000022198066290002316],[-0.00003734573692781851,-0.000006474165274994448],[-0.00009698687790660188,-0.00002644449341460131],[0.00006892267992952839,-0.000017703301637084223],[-0.0001690059871179983,-0.00026479543885216117]],"sleepCandidateFrames":5,"pendingImpulse":null},{"position":[-0.19522476196289062,0.18010282516479492,0.3662506937980652],"rotation":[-0.003797669429332018,-0.4641643166542053,0.001999462489038706,0.8857386708259583],"used":true,"bodyHandle":3.19e-321,"linearSpeed":2.9260902669160834e-8,"angularVelocityHistory":[[-0.0009901262819766998,-0.0013015876756981015],[0.002102495403960347,0.0007513631717301905],[0.004039153456687927,-0.00023758287716191262],[0.0007215673686005175,0.0003175443271175027],[-0.0013015998993068933,-0.0005280132754705846],[0.0011702674673870206,0.000907784968148917],[0.002422343473881483,0.00039759185165166855],[0.003141226479783654,-0.000022948561309021898],[-0.00029177661053836346,-0.0013073330046609044],[0.0012385973241180182,-0.000059402074839454144],[0.0029700198210775852,0.0008268486708402634]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[-0.11539056897163391,0.1759624034166336,0.332011878490448],"rotation":[0.025637058541178703,-0.13976755738258362,-0.0032379315234720707,0.9898471236228943],"used":true,"bodyHandle":3.197e-321,"linearSpeed":1.2049162295477284e-11,"angularVelocityHistory":[[-0.002255696337670088,-0.0007125525735318661],[0.001461828127503395,-0.0004421524645294994],[0.00029999285470694304,-0.0004092894960194826],[0.002458958188071847,0.0008810002473182976],[-0.008403932675719261,0.012726826593279839],[0.001179932034574449,0.002244902541860938],[-0.0016723338048905134,-0.001721987733617425],[0.0005535944364964962,0.0015694554895162582],[0.0006058370927348733,0.00020157970720902085],[0.00051598233403638,0.0020112229976803064],[-0.0006027761264704168,-0.0001918761699926108]],"sleepCandidateFrames":2,"pendingImpulse":null},{"position":[-0.06100538745522499,0.17475759983062744,0.2734096050262451],"rotation":[0.017270293086767197,-0.0895945206284523,-0.003871095133945346,0.9958210587501526],"used":true,"bodyHandle":3.2e-321,"linearSpeed":7.308941461648481e-13,"angularVelocityHistory":[[0.0013524395180866122,0.00028499317704699934],[0.00030614997376687825,0.000007981622729857918],[0.005914695560932159,0.002601094776764512],[-0.012902802787721157,-0.008129321970045567],[-0.00720976060256362,-0.0010257952380925417],[-0.008802669122815132,-0.016905872151255608],[-0.0028804480098187923,0.014397748745977879],[-0.0006870813085697591,-0.002886759815737605],[-0.0027679523918777704,0.0023745172657072544],[-0.005558221600949764,-0.0035571425687521696],[-0.0014422802487388253,0.0025306129828095436]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[-0.015457643195986748,0.17590457201004028,0.3426811695098877],"rotation":[0.03332153707742691,-0.09983568638563156,-0.0012479318538680673,0.9944450259208679],"used":true,"bodyHandle":3.206e-321,"linearSpeed":1.9113446200614807e-11,"angularVelocityHistory":[[0.005583302583545446,-0.003699842607602477],[0.003475033678114414,0.00029866365366615355],[-0.001169503782875836,-0.001637341920286417],[0.0008865965064615011,-0.0007192135672084987],[-0.005500793922692537,0.0032721145544201136],[-0.0009660079958848655,0.0009292074828408659],[-0.006378563586622477,0.00737789086997509],[-0.0006674413452856243,0.0007980720838531852],[0.005326013080775738,-0.0022659485694020987],[-0.0035908338613808155,0.004907059948891401],[-0.0036509688943624496,0.0009635636233724654]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.046489275991916656,0.175588458776474,0.34329110383987427],"rotation":[0.03233113884925842,-0.03333558514714241,-0.0048264204524457455,0.9989094734191895],"used":true,"bodyHandle":3.21e-321,"linearSpeed":5.596755490915223e-10,"angularVelocityHistory":[[0.013022927567362785,-0.009831232950091362],[0.017439698800444603,-0.0057260445319116116],[0.0076408772729337215,-0.0033866455778479576],[0.001960420748218894,-0.000749494880437851],[-0.006431723479181528,0.007222160696983337],[-0.0042262449860572815,-0.00037533833528868854],[0.007941681891679764,0.006953236181288958],[-0.02155345119535923,0.009836466051638126],[0.0027489764615893364,0.002530540805310011],[-0.010271797887980938,0.011004766449332237],[-0.006842436268925667,0.0035314951092004776]],"sleepCandidateFrames":3,"pendingImpulse":null},{"position":[0.10921423137187958,0.1778143346309662,0.3253823518753052],"rotation":[0.03289841488003731,-0.07714270800352097,-0.03471408784389496,0.9958723187446594],"used":true,"bodyHandle":3.216e-321,"linearSpeed":1.0519879194024673e-8,"angularVelocityHistory":[[-0.00025015787105076015,0.0003178482293151319],[0.0019444924546405673,-0.005300169810652733],[-0.00020031190069857985,-0.0010146889835596085],[0.0033710175193846226,-0.0005670202663168311],[-0.0042770323343575,0.004017589148133993],[0.0026372799184173346,-0.002107384614646435],[-0.0019309259951114655,0.01267901062965393],[-0.00012939552834723145,-0.005644540768116713],[-0.0022964628878980875,0.003454374149441719],[0.002078510820865631,0.008924945257604122],[0.00039783609099686146,0.009709348902106285]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2113792896270752,0.1777212768793106,0.30340489745140076],"rotation":[-0.011339212767779827,0.4562200903892517,-0.0031733629293739796,0.8897890448570251],"used":true,"bodyHandle":3.22e-321,"linearSpeed":6.465676174009979e-10,"angularVelocityHistory":[[0.00030251091811805964,0.00002009918898693286],[-0.0016697715036571026,-0.0001126286806538701],[-0.0002163219323847443,0.0010459147160872817],[0.0000890088704181835,-0.000426814571255818],[-0.0006018152344040573,-0.000359886180376634],[-0.0017452542670071125,0.00047582844854332507],[-0.0012869598576799035,-0.000416908209444955],[-0.0001817047450458631,-0.0021680521313101053],[-0.0010173668852075934,0.0007445025257766247],[-0.0011696104193106294,0.00031635694904252887],[-0.0010111304000020027,0.001084849121980369]],"sleepCandidateFrames":1,"pendingImpulse":null},{"position":[0.27473363280296326,0.17657367885112762,0.3130197525024414],"rotation":[0.016034340485930443,-0.4344758689403534,-0.008495314046740532,0.9005006551742554],"used":true,"bodyHandle":3.226e-321,"linearSpeed":1.8207659708521922e-10,"angularVelocityHistory":[[-0.0003278144577052444,0.0010548466816544533],[-0.0012666869442909956,-0.0011814963072538376],[0.0008797927293926477,0.000982549274340272],[-0.0028686290606856346,0.00043839451973326504],[-0.00018832660862244666,0.0004674901720136404],[-0.002359663136303425,-0.00032907549757510424],[0.0006918093422427773,0.0006799265975132585],[-0.0020642762538045645,0.0006645270041190088],[-0.00008650845848023891,0.0012445406755432487],[-0.00332435080781579,-0.00011248979717493057],[0.0008037987281568348,0.0009583141072653234]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.27452710270881653,0.1821254938840866,0.3125918507575989],"rotation":[0.01466793566942215,0.11326136440038681,-0.00061935861594975,0.9934567809104919],"used":true,"bodyHandle":3.23e-321,"linearSpeed":1.6400250264509793e-8,"angularVelocityHistory":[[0.0003292362089268863,0.00007127158460207283],[0.00010026826203102246,0.0008131878566928208],[0.0003983547503594309,0.0009138159221038222],[-0.005236129276454449,-0.00006603371730307117],[-0.00022356168483383954,-0.0000017915884882313549],[-0.0006443287711590528,0.0034816472325474024],[0.0017973259091377258,0.00009020370634971187],[-0.0047492580488324165,-0.0009591395501047373],[-0.0004360739258117974,-0.00002994048008986283],[-0.002242550952360034,0.0012909765355288982],[0.0007676357636228204,-0.0009370472398586571]],"sleepCandidateFrames":4,"pendingImpulse":null},{"position":[0.14917206764221191,0.24715673923492432,-0.04400252550840378],"rotation":[-0.003095014952123165,-0.10825208574533463,0.004855537787079811,-0.9941068291664124],"used":true,"bodyHandle":3.236e-321,"linearSpeed":0.0032500346234294567,"angularVelocityHistory":[[-0.0015454180538654327,0.003858833573758602],[0.001166309928521514,0.002960013225674629],[0.0005567122134380043,0.002865709364414215],[0.0005074843647889793,0.0020165916066616774],[0.00037792723742313683,0.0012214933522045612],[0.0003684273106046021,0.0012741392711177468],[0.0002563533780630678,0.0017378743505105376],[-0.00775044783949852,-0.011337821371853352],[0.00028884768835268915,0.001114597194828093],[0.002420633565634489,0.000987572013400495],[0.000061000013374723494,0.00046593183651566505]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.17976076900959015,0.2472905069589615,0.008782675489783287],"rotation":[0.0016599862137809396,0.9626040458679199,-0.0009605315281078219,0.27090537548065186],"used":true,"bodyHandle":3.24e-321,"linearSpeed":0.0032286432042279243,"angularVelocityHistory":[[0.0018805023282766342,0.0010370219824835658],[0.0015749026788398623,0.00489305704832077],[-0.017194092273712158,0.015605280175805092],[0.00632869778200984,0.005633364897221327],[0.005934590939432383,0.0028023954946547747],[-0.00601153913885355,-0.012372471392154694],[0.001582703203894198,0.0002791355946101248],[-0.0005094143562018871,-0.0017206314951181412],[-0.005304044112563133,0.01977246254682541],[-0.00011948936298722401,-0.0018868253100663424],[0.0003783171996474266,-0.00034266492002643645]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.25677433609962463,0.2530519664287567,-0.037911511957645416],"rotation":[0.0022244530264288187,-0.28081631660461426,0.0020177927799522877,0.9597567915916443],"used":true,"bodyHandle":3.246e-321,"linearSpeed":0.0029125891659620607,"angularVelocityHistory":[[0.0516587533056736,0.026570439338684082],[0.025274869054555893,-0.008997706696391106],[0.022491158917546272,-0.0385875478386879],[0.00781764555722475,-0.019090497866272926],[0.006400357466191053,-0.016503682360053062],[0.0316031277179718,-0.008028707467019558],[0.025786517187952995,0.000006131388090580003],[0.018160291016101837,-0.0011590657522901893],[0.021358152851462364,-0.007042148616164923],[0.005940163973718882,-0.012843900360167027],[-0.00649972353130579,-0.012316791340708733]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.14912168681621552,0.2525761127471924,-0.04321452975273132],"rotation":[-0.0009038216667249799,0.61138516664505,0.010835573077201843,-0.7912583947181702],"used":true,"bodyHandle":3.25e-321,"linearSpeed":0.003200680591673606,"angularVelocityHistory":[[0.047919850796461105,0.010802485048770905],[0.01588038168847561,0.02723904512822628],[0.010709979571402073,0.01643863506615162],[0.007574756164103746,0.01411376241594553],[0.008418098092079163,0.017033880576491356],[0.004932588431984186,0.009906097315251827],[0.007648569066077471,0.00676101166754961],[-0.001184183987788856,0.005419038701802492],[0.014737811870872974,0.008367927744984627],[0.014052602462470531,0.008154298178851604],[0.004941197577863932,0.004147898871451616]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.2664007544517517,0.25314509868621826,-0.10235650837421417],"rotation":[0.5401639938354492,-0.001090755220502615,-0.8415588140487671,-0.0005604035104624927],"used":true,"bodyHandle":3.256e-321,"linearSpeed":0.0029713488149036432,"angularVelocityHistory":[[-0.0011758997570723295,-0.00023522636911366135],[-0.0019604687113314867,-0.0005812671151943505],[0.0009125667274929583,-0.000016953081285464577],[-0.0025771402288228273,-0.0005085394950583577],[-0.0003979231114499271,0.00013185689749661833],[-0.0021044148597866297,-0.0004977468634024262],[-0.0002865266869775951,-0.0000099556000350276],[-0.00019067829998675734,0.000008861675269145053],[0.00311683164909482,0.0005267138476483524],[0.00001617217822058592,-0.000015604377040290274],[-0.00017485651187598705,0.000013979257346363738]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.2703203856945038,0.25137218832969666,-0.03994095325469971],"rotation":[0.05894574895501137,0.3599199652671814,-0.016385775059461594,-0.9309750199317932],"used":true,"bodyHandle":3.26e-321,"linearSpeed":0.0029554700528727947,"angularVelocityHistory":[[-0.6933676600456238,2.754641532897949],[0.06764369457960129,-1.8426799774169922],[-0.3418521285057068,-0.9187635183334351],[-0.07702846825122833,1.7088758945465088],[-0.37694063782691956,2.016312599182129],[0.10959789901971817,-2.8350203037261963],[-0.21564175188541412,-1.4718177318572998],[0.14838379621505737,1.7752870321273804],[-0.38082587718963623,3.095808982849121],[0.2589584290981293,-1.9474142789840698],[-0.272342324256897,-1.4546949863433838]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.09699290245771408,0.24725714325904846,-0.09660127758979797],"rotation":[0.2723231613636017,0.004510711412876844,-0.9621917009353638,0.002624227898195386],"used":true,"bodyHandle":3.266e-321,"linearSpeed":0.0032346707352717803,"angularVelocityHistory":[[0.005313107743859291,-0.010536586865782738],[-0.0008342956425622106,0.0025176224298775196],[0.004833976272493601,-0.010701267048716545],[0.001910204766318202,0.007178334519267082],[0.001788500347174704,0.005426191724836826],[0.0024003286380320787,0.006845824420452118],[-0.00034446895006112754,-0.00021165616635698825],[0.00010145146370632574,0.00033310955041088164],[0.0018998273881152272,-0.011468113400042057],[0.0009971652179956436,0.00290318438783288],[0.0017751709092408419,-0.0005251378752291203]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.2701353132724762,0.25250086188316345,-0.10013816505670547],"rotation":[-0.1215466633439064,0.0006202913937158883,-0.9925773739814758,0.004005969502031803],"used":true,"bodyHandle":3.27e-321,"linearSpeed":0.0028323616102203662,"angularVelocityHistory":[[0.011299854144454002,-0.05395117774605751],[0.038200493901968,0.01289321482181549],[-0.02438412979245186,0.03992113843560219],[0.001338652684353292,-0.009636751376092434],[0.0071637798100709915,0.0019460123730823398],[0.013791396282613277,0.006752992048859596],[0.011865024454891682,0.00962718203663826],[0.026113035157322884,0.0013256625970825553],[-0.024536672979593277,-0.012025945819914341],[0.07375269383192062,0.003707341616973281],[-0.008584780618548393,0.003211249364539981]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.21458181738853455,0.24741432070732117,-0.07616551220417023],"rotation":[-0.6433573961257935,-0.0033172701951116323,0.765557587146759,-0.0013805413618683815],"used":true,"bodyHandle":3.276e-321,"linearSpeed":0.0032283063612151535,"angularVelocityHistory":[[0.038823310285806656,-0.0009661767981015146],[-0.00021059034042991698,-0.0007684676093049347],[0.04912803694605827,-0.027192827314138412],[0.002634740201756358,-0.00365729839541018],[0.0012641121866181493,-0.002937830053269863],[0.0011722113704308867,-0.002958402968943119],[0.0008920227992348373,-0.001670178142376244],[0.0007203039131127298,-0.0012617212487384677],[0.016134049743413925,0.02934635803103447],[0.0008519913535565138,-0.0010237384121865034],[0.0005934191285632551,-0.0006119295139797032]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.12403729557991028,0.24738697707653046,-0.0958004966378212],"rotation":[-0.0013559103244915605,0.7471761703491211,0.002797250635921955,0.6646186709403992],"used":true,"bodyHandle":3.28e-321,"linearSpeed":0.003226865743631829,"angularVelocityHistory":[[0.003979571629315615,-0.01741238497197628],[0.0014256939757615328,0.0018708526622503996],[0.0009808227187022567,0.0016053932486101985],[0.0008755880407989025,0.001135005964897573],[0.0005765209207311273,0.0011671537067741156],[0.0004529855796135962,0.0006934213452041149],[0.0003422205045353621,0.0005419980152510107],[0.0003097871958743781,0.00040939325117506087],[0.00016040491755120456,0.000327384244883433],[0.00015088067448232323,0.0002590219664853066],[0.00015083339530974627,0.00022242130944505334]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.12877558171749115,0.25828105211257935,-0.09655405580997467],"rotation":[0.0010333865648135543,0.8652319312095642,0.006967509165406227,-0.501322329044342],"used":true,"bodyHandle":3.286e-321,"linearSpeed":0.002881641704580958,"angularVelocityHistory":[[-0.012524059973657131,-0.046100880950689316],[-0.008773691952228546,-0.0030376561917364597],[-0.0009052763343788683,0.00219160714186728],[-0.00191195507068187,-0.004894819110631943],[-0.00016083904483821243,-0.0033288991544395685],[0.0015574212884530425,-0.003152834717184305],[-0.0005123374867253006,-0.0012551707914099097],[-0.0001396919396938756,-0.0010334390681236982],[-0.0005898079252801836,-0.010262833908200264],[0.004221178591251373,-0.0027778560761362314],[0.004224838223308325,0.0004434725851751864]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.18430033326148987,0.24742726981639862,-0.09703893959522247],"rotation":[-0.0019280549604445696,-0.016111982986330986,0.0024452125653624535,0.9998653531074524],"used":true,"bodyHandle":3.29e-321,"linearSpeed":0.003207550586842908,"angularVelocityHistory":[[0.005285449326038361,0.0036123169120401144],[0.0006216933252289891,0.0023433424066752195],[0.0005000120727345347,0.001878220122307539],[0.0010096861515194178,0.002717585302889347],[0.0009945434285327792,0.0003920098242815584],[0.0001473500597057864,0.003648861777037382],[0.0001964043767657131,0.001974321436136961],[0.0006084642955102026,0.0002895138750318438],[0.0003572236455511302,0.004452231340110302],[-0.00007205377914942801,0.002154035959392786],[-0.00015699661162216216,0.0011627072235569358]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.02330205775797367,0.24741141498088837,-0.032945416867733],"rotation":[-0.0012516824062913656,-0.8319164514541626,-0.0033985318150371313,0.5548889636993408],"used":true,"bodyHandle":3.295e-321,"linearSpeed":0.0032179245466733377,"angularVelocityHistory":[[0.000001871436779765645,-0.00005741725180996582],[0.000005432345460576471,-0.000038944079278735444],[-0.000013642350495501887,-0.00002690677865757607],[-0.0000035205484891775995,-0.000024873785150703043],[-0.00001933576277224347,-0.00001943181996466592],[-0.0000038516323002113495,-0.000014490190551441628],[0.003093516919761896,-0.0002191267703892663],[0.011393570341169834,-0.0008383457898162305],[0.019394418224692345,-0.0013332070084288716],[0.027655653655529022,-0.00189141184091568],[0.03657843917608261,-0.0025546522811055183]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.15729281306266785,0.24726229906082153,-0.0966930165886879],"rotation":[-0.9139461517333984,0.005460825748741627,-0.40579843521118164,-0.000552091165445745],"used":true,"bodyHandle":3.3e-321,"linearSpeed":0.003230965435548739,"angularVelocityHistory":[[-0.05643630772829056,-0.059932637959718704],[0.0014868261059746146,0.0021340716630220413],[0.001457967096939683,-0.011299987323582172],[-0.0015651681460440159,0.005365428049117327],[-0.001717385253868997,0.00360452220775187],[-0.002378879813477397,0.005365867167711258],[0.0004862204659730196,-0.00007117196946637705],[-0.00008981316204881296,0.0004510892031248659],[0.00044145993888378143,0.018454495817422867],[-0.0009851697832345963,0.0013624666025862098],[-0.001809495035558939,0.0007787946960888803]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.18517325818538666,0.2531423568725586,-0.09703046828508377],"rotation":[0.2482306957244873,-0.0018472677329555154,-0.9686955809593201,0.002631877548992634],"used":true,"bodyHandle":3.305e-321,"linearSpeed":0.002886856087521472,"angularVelocityHistory":[[-0.010248679667711258,0.050481297075748444],[-0.011360947042703629,0.019064486026763916],[-0.009033991023898125,0.015524494461715221],[-0.008178179152309895,0.013045363128185272],[-0.007013116497546434,0.010743971914052963],[-0.00816240906715393,0.00894297007471323],[-0.0023828865960240364,0.00588627764955163],[-0.0026128722820430994,0.0051824552938342094],[-0.0044050030410289764,0.004586682189255953],[-0.0008388236165046692,0.003002983285114169],[-0.00021881211432628334,0.0020374550949782133]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0034570684656500816,0.24712547659873962,-0.0963907465338707],"rotation":[0.004906781017780304,0.8766719102859497,-0.00032126650330610573,-0.4810635447502136],"used":true,"bodyHandle":3.31e-321,"linearSpeed":0.003230532070918172,"angularVelocityHistory":[[0.003954603336751461,0.008443592116236687],[0.001803177990950644,0.003021347802132368],[0.0012804345460608602,0.0019136789487674832],[0.0009818910621106625,0.0018097858410328627],[0.0007109579164534807,0.0011459460947662592],[0.001097288099117577,0.0052740611135959625],[0.0006493266555480659,0.0009662084630690515],[0.0005788291455246508,0.00011701634502969682],[0.0003156492894049734,0.000529615965206176],[0.00017093059432227165,0.00036360573722049594],[0.00013081399083603173,0.0002866796276066452]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.12380405515432358,0.25316038727760315,-0.0972118228673935],"rotation":[-0.8215852975845337,-0.003967689350247383,0.5700716972351074,0.000040676652133697644],"used":true,"bodyHandle":3.315e-321,"linearSpeed":0.0029756608620882014,"angularVelocityHistory":[[-0.023792123422026634,0.06361961364746094],[-0.025764726102352142,0.026054581627249718],[-0.020723728463053703,0.02221834659576416],[-0.016296179965138435,0.017776556313037872],[-0.012942353263497353,0.013811619020998478],[-0.01013037096709013,0.011005963198840618],[-0.007851057685911655,0.008166631683707237],[-0.006134580820798874,0.00658574141561985],[-0.004895313642919064,0.0052037849090993404],[-0.0038223096635192633,0.004104930441826582],[-0.0029757488518953323,0.0032493239268660545]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.157074436545372,0.2528168261051178,-0.09680674225091934],"rotation":[-0.005494474433362484,-0.8530787229537964,-0.006960925180464983,0.521706759929657],"used":true,"bodyHandle":3.32e-321,"linearSpeed":0.002879514839791138,"angularVelocityHistory":[[-0.02725234441459179,-0.08336096256971359],[-0.006584466435015202,-0.002253053244203329],[-0.01266312412917614,-0.048067618161439896],[-0.0035871772561222315,-0.00413161376491189],[-0.0021064237225800753,-0.003818592056632042],[-0.0012032254599034786,-0.0028643226251006126],[-0.00013511633733287454,-0.0015553563134744763],[-0.00026149145560339093,-0.0012129934038966894],[-0.0004969225265085697,0.010729938745498657],[0.0026547221932560205,-0.0021534704137593508],[0.002318751532584429,-0.00012741399405058473]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00013346094056032598,0.2194356620311737,0.7405517101287842],"rotation":[0.017921404913067818,-0.31919264793395996,-0.0014273308916017413,0.9475193023681641],"used":true,"bodyHandle":3.325e-321,"linearSpeed":0,"angularVelocityHistory":[[0.03153679892420769,0.16238483786582947],[0.03630409389734268,-0.04594392701983452],[0.09009220451116562,-0.07770123332738876],[0.096213698387146,0.04257449880242348],[-0.06358591467142105,-0.17217548191547394],[0.25641679763793945,0.015520747750997543],[0.1831665188074112,-0.022308360785245895],[0.09014711529016495,0.06005070358514786],[-0.05250724405050278,0.23834232985973358],[-0.08982258290052414,-0.0014966102316975594]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06274538487195969,0.21898460388183594,0.7054202556610107],"rotation":[0.008770283311605453,0.2804298400878906,0.003577400464564562,-0.9598278403282166],"used":true,"bodyHandle":3.33e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.006715165451169014,-0.4331265389919281],[0.12112673372030258,-0.2952973246574402],[-0.03655293583869934,0.012270894832909107],[0.04904238507151604,0.11857124418020248],[0.05221496522426605,0.44797971844673157],[0.11786128580570221,0.22812390327453613],[0.23679348826408386,-0.18407553434371948],[-0.033184412866830826,-0.042331721633672714],[-0.0822300910949707,0.33315569162368774],[0.009867988526821136,0.0411524698138237]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.061937447637319565,0.21982823312282562,0.6340457797050476],"rotation":[-0.0071573457680642605,0.7552098631858826,-0.0013490993296727538,-0.6554425358772278],"used":true,"bodyHandle":3.335e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.09306775033473969,0.004295206628739834],[0.1886134147644043,0.10070881992578506],[0.2681489586830139,-0.10325737297534943],[-0.488729327917099,0.1782808005809784],[-0.2619430422782898,-0.14517274498939514],[0.1942087709903717,-0.03432243689894676],[-0.17318381369113922,0.3522990345954895],[-0.002560204826295376,0.05363505706191063],[0.21567393839359283,0.15032707154750824],[0.09806914627552032,-0.17878371477127075]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0013384680496528745,0.22042734920978546,0.6677665114402771],"rotation":[0.012749123387038708,-0.3139273226261139,0.000979103846475482,-0.9493609070777893],"used":true,"bodyHandle":3.34e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.09513070434331894,-0.11667483299970627],[0.07148125767707825,0.11682260781526566],[0.20022742450237274,0.21665889024734497],[-0.02440847083926201,0.08845079690217972],[-0.0825868621468544,-0.026919590309262276],[-0.08047192543745041,-0.45490652322769165],[-0.07392988353967667,-0.3615723252296448],[-0.06145815923810005,-0.011949598789215088],[-0.21016661822795868,-0.057640690356492996],[-0.15901726484298706,0.20661525428295135]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0008872990729287267,0.22200098633766174,0.5990091562271118],"rotation":[-0.0013477265601977706,0.5636885762214661,0.014992737211287022,-0.8258501887321472],"used":true,"bodyHandle":3.345e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.7416126132011414,0.006125339772552252],[0.04696100577712059,0.13012084364891052],[-0.044468626379966736,-0.07526279985904694],[0.04348704591393471,-0.32436591386795044],[-0.14498791098594666,0.018437208607792854],[0.27138853073120117,0.10868534445762634],[0.09201650321483612,-0.06115572154521942],[-0.20597589015960693,0.04070911183953285],[-0.004896324593573809,0.07494112849235535],[0.11193312704563141,-0.059746917337179184]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05884644761681557,0.22268864512443542,0.6359792351722717],"rotation":[0.007073719520121813,0.7899429798126221,-0.002852695994079113,-0.6131327748298645],"used":true,"bodyHandle":3.35e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.12015492469072342,-0.022280937060713768],[0.19111166894435883,0.10486045479774475],[0.32896625995635986,-0.26138627529144287],[-0.4787016212940216,-0.04665835201740265],[-0.47392547130584717,-0.08108368515968323],[0.09134925156831741,-0.21848244965076447],[0.016452737152576447,0.3107478618621826],[-0.019746948033571243,0.05011356994509697],[0.1793459951877594,0.14304104447364807],[0.09918426722288132,-0.2168371081352234]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0596008226275444,0.22143195569515228,0.7043049931526184],"rotation":[-0.0023640342988073826,0.45398929715156555,0.011795664206147194,-0.890925943851471],"used":true,"bodyHandle":3.355e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.11613508313894272,-0.2983861267566681],[0.20077338814735413,-0.27149373292922974],[0.03385773301124573,0.10537160187959671],[0.022017482668161392,0.11727353930473328],[0.030736085027456284,0.36488693952560425],[0.08776891976594925,0.22806420922279358],[0.2434925138950348,-0.1639297604560852],[0.06116729602217674,-0.034950293600559235],[-0.03574131429195404,0.2910245358943939],[-0.023134347051382065,0.023404913023114204]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0009270482696592808,0.22207535803318024,0.7375514507293701],"rotation":[0.0074226995930075645,-0.9332794547080994,-0.0029668761417269707,-0.35906192660331726],"used":true,"bodyHandle":3.36e-321,"linearSpeed":0,"angularVelocityHistory":[[0.044277939945459366,0.16482487320899963],[0.026352044194936752,-0.062103837728500366],[0.1432468295097351,-0.04245401918888092],[0.0762060284614563,0.0739801749587059],[-0.062061622738838196,-0.18625982105731964],[0.24987372756004333,0.05843877047300339],[0.12732641398906708,0.0369025357067585],[0.05357865244150162,0.06370295584201813],[-0.22951319813728333,0.1432751566171646],[-0.17211057245731354,-0.15107522904872894]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05956371873617172,0.2230907380580902,0.7064642906188965],"rotation":[0.006830093450844288,-0.9804584980010986,-0.004930037539452314,-0.19654546678066254],"used":true,"bodyHandle":3.365e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.0058680688962340355,-0.0026752541307359934],[-0.058425936847925186,0.04124006628990173],[-0.1258440762758255,0.18364110589027405],[0.0271967351436615,0.11782192438840866],[0.20177605748176575,0.1153135746717453],[-0.14812158048152924,0.17610971629619598],[-0.20766595005989075,0.16002045571804047],[-0.20706240832805634,0.06196046993136406],[-0.13750052452087402,-0.019945567473769188],[0.18138810992240906,-0.04802800714969635]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.059700507670640945,0.22174465656280518,0.6348668336868286],"rotation":[0.006087779067456722,0.662059485912323,0.006954312790185213,0.7493942975997925],"used":true,"bodyHandle":3.37e-321,"linearSpeed":0,"angularVelocityHistory":[[0.06617150455713272,-0.16421593725681305],[0.08244035392999649,0.1605241298675537],[-0.19798721373081207,0.18660277128219604],[0.1571679711341858,-0.006614091340452433],[0.10269903391599655,0.08721159398555756],[-0.007410729769617319,0.6723296642303467],[0.051147885620594025,-0.15651798248291016],[-0.11672857403755188,0.050276439636945724],[0.09887004643678665,0.04098909720778465],[-0.006055717822164297,-0.2111438661813736]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.002768412698060274,0.22244341671466827,0.6707308888435364],"rotation":[-0.01023088488727808,-0.85112464427948,-0.005642215721309185,0.524833619594574],"used":true,"bodyHandle":3.374e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.044657573103904724,-0.15621112287044525],[0.1957792043685913,0.03835172578692436],[0.06465308368206024,0.1132388636469841],[-0.10402815043926239,0.15450513362884521],[-0.012018511071801186,-0.025773240253329277],[-0.09328897297382355,-0.5761495232582092],[-0.20640787482261658,-0.35189470648765564],[-0.05760013684630394,0.25600889325141907],[-0.1671481430530548,-0.13397659361362457],[-0.12182271480560303,0.19322288036346436]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00024701468646526337,0.22397136688232422,0.6012709736824036],"rotation":[-0.009440339170396328,-0.9906030893325806,-0.01444255094975233,0.13567547500133514],"used":true,"bodyHandle":3.38e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.6312640309333801,-0.11863119155168533],[0.09268493205308914,0.10164032131433487],[-0.10250105708837509,-0.07211669534444809],[0.16119138896465302,-0.2987304925918579],[-0.09522529691457748,0.024983782321214676],[0.2546359896659851,0.13501566648483276],[0.09530793130397797,-0.059224795550107956],[-0.16698035597801208,0.025104714557528496],[-0.014482127502560616,0.10598239302635193],[0.1419854760169983,-0.10265447944402695]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.061042290180921555,0.2234451025724411,0.6351262331008911],"rotation":[0.006658174097537994,-0.8299942016601562,-0.006466376595199108,0.5576947927474976],"used":true,"bodyHandle":3.384e-321,"linearSpeed":0,"angularVelocityHistory":[[0.13541190326213837,-0.18829765915870667],[0.11520957201719284,0.14629434049129486],[-0.10579244047403336,0.08062464743852615],[0.18194572627544403,-0.0010236767120659351],[0.05392012000083923,0.10469555109739304],[-0.0769832581281662,0.6279917359352112],[0.006600719876587391,-0.16087928414344788],[-0.15451297163963318,0.022818326950073242],[0.07183808833360672,0.05788657069206238],[-0.05607197433710098,-0.1450250744819641]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05835080146789551,0.22593839466571808,0.7048478722572327],"rotation":[0.008287860080599785,-0.9989741444587708,-0.004562110640108585,0.04428450018167496],"used":true,"bodyHandle":3.39e-321,"linearSpeed":0,"angularVelocityHistory":[[0.03271761164069176,0.038040876388549805],[-0.0784597396850586,0.2733423411846161],[-0.12534327805042267,0.17050400376319885],[0.05222934111952782,0.06293001770973206],[0.6625857949256897,-0.07113196700811386],[-0.1670975536108017,0.21900318562984467],[-0.2256188839673996,0.25660333037376404],[-0.2064303755760193,0.10390930622816086],[-0.1356692910194397,-0.04283388704061508],[0.21115437150001526,0.06062636524438858]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0006457539857365191,0.22435596585273743,0.7402347326278687],"rotation":[-0.00819613691419363,-0.8939407467842102,-0.015343795530498028,-0.44784751534461975],"used":true,"bodyHandle":3.394e-321,"linearSpeed":0,"angularVelocityHistory":[[0.014482486993074417,0.12236648797988892],[0.021915892139077187,-0.07424420118331909],[0.09121468663215637,-0.08675602078437805],[0.08136621117591858,0.02213769406080246],[-0.012467493303120136,-0.1033860594034195],[0.24031317234039307,-0.0416124165058136],[0.18174757063388824,0.004883419256657362],[0.06924226880073547,0.08441957831382751],[-0.13845129311084747,0.10920222103595734],[-0.0846734568476677,-0.10563221573829651]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06170226261019707,0.2234882116317749,0.7048730254173279],"rotation":[-0.0006234891479834914,0.44577500224113464,0.012328032404184341,-0.8950598835945129],"used":true,"bodyHandle":3.4e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.023091061040759087,-0.3631458580493927],[0.16812460124492645,-0.27816635370254517],[-0.054395850747823715,-0.03179910406470299],[0.05793364718556404,0.11078440397977829],[0.07943784445524216,0.3700422942638397],[0.08068259060382843,0.194578617811203],[0.24138957262039185,-0.16049352288246155],[-0.07241587340831757,-0.1348196566104889],[-0.04079984501004219,0.3255673050880432],[0.021962882950901985,0.04027369245886803]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.059987641870975494,0.2242891788482666,0.6350264549255371],"rotation":[-0.004349968861788511,0.8622493147850037,0.002911774441599846,-0.5064569115638733],"used":true,"bodyHandle":3.404e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.10722332447767258,-0.0731659084558487],[0.16885705292224884,-0.02160021662712097],[0.2546907067298889,-0.3193162977695465],[-0.4392836391925812,-0.06600088626146317],[-0.4712674617767334,-0.024448875337839127],[0.3236115276813507,0.03001892752945423],[0.32260873913764954,0.35251739621162415],[-0.014526404440402985,0.015244528651237488],[0.1096738874912262,0.13366293907165527],[0.0970747247338295,-0.19727182388305664]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0004562404938042164,0.22512304782867432,0.6705431342124939],"rotation":[0.00259936205111444,0.3608238399028778,-0.013401247560977936,-0.9325340390205383],"used":true,"bodyHandle":3.41e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.007996018044650555,-0.1240314319729805],[0.10122878849506378,0.08226948976516724],[0.07306840270757675,0.18103572726249695],[-0.06641016155481339,0.16501131653785706],[-0.05839032307267189,-0.033247336745262146],[-0.10936009138822556,-0.5687922239303589],[-0.11743918806314468,-0.4413963556289673],[0.2134726345539093,0.5809604525566101],[-0.1975153535604477,-0.09086395055055618],[-0.14277246594429016,0.27305227518081665]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.000582072651013732,0.22621536254882812,0.6015178561210632],"rotation":[0.018261699005961418,0.9280999302864075,0.020295530557632446,0.3713288903236389],"used":true,"bodyHandle":3.414e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.5511958599090576,-0.10362179577350616],[0.030395181849598885,0.04188442975282669],[-0.09314922243356705,-0.06571952998638153],[0.09791064262390137,-0.17765162885189056],[-0.015677694231271744,0.0430624894797802],[0.25561100244522095,0.096234031021595],[0.11392895877361298,-0.006778162904083729],[-0.11829095333814621,0.0012130182003602386],[0.08387099951505661,0.041585057973861694],[0.2822926640510559,-0.1296582818031311]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06074763834476471,0.22711791098117828,0.6345435976982117],"rotation":[-0.00629765959456563,0.6492104530334473,-0.0017259411979466677,-0.7605808973312378],"used":true,"bodyHandle":3.42e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.14050719141960144,-0.0513523668050766],[0.15546318888664246,-0.0013866713270545006],[0.2641955614089966,-0.2253056764602661],[-0.3192947804927826,-0.11563945561647415],[-0.4214155673980713,-0.06690521538257599],[0.2988090515136719,0.01938110962510109],[0.3709324300289154,0.3430323600769043],[-0.023348268121480942,0.012689972296357155],[-0.02361004799604416,0.11536069959402084],[-0.04192391410470009,-0.14864635467529297]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.060310881584882736,0.2258039116859436,0.706014096736908],"rotation":[0.0016951275756582618,0.23534192144870758,0.012214762158691883,-0.9718343615531921],"used":true,"bodyHandle":3.424e-321,"linearSpeed":0,"angularVelocityHistory":[[0.08219943940639496,-0.41049259901046753],[0.2691667377948761,-0.31576281785964966],[0.07688342779874802,-0.03125372529029846],[0.04635551571846008,0.04520759731531143],[0.0351020023226738,0.037296149879693985],[0.09598308056592941,0.17547470331192017],[0.17529097199440002,-0.1424829661846161],[-0.15307274460792542,-0.24357111752033234],[-0.02202782966196537,0.25522366166114807],[-0.03821314126253128,-0.04682821035385132]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0001362014445476234,0.22659657895565033,0.7385721206665039],"rotation":[-0.0031524491496384144,-0.981623113155365,-0.014296907931566238,-0.19026733934879303],"used":true,"bodyHandle":3.43e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.022043073549866676,0.08268005400896072],[0.02840542607009411,-0.06911097466945648],[0.011992599815130234,-0.13169121742248535],[0.05256816744804382,0.032647352665662766],[-0.03877437487244606,-0.08532287180423737],[0.17762555181980133,-0.1051405668258667],[0.2628127932548523,-0.010551094077527523],[0.07935884594917297,0.1267533302307129],[-0.006418961100280285,0.24179059267044067],[-0.11290919780731201,-0.0913752093911171]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05769769847393036,0.22790326178073883,0.704815685749054],"rotation":[-0.002513323910534382,-0.44603294134140015,-0.00919249001890421,-0.8949657678604126],"used":true,"bodyHandle":3.434e-321,"linearSpeed":0,"angularVelocityHistory":[[0.012391074560582638,0.020273229107260704],[-0.07030942291021347,0.2406761795282364],[-0.1429366022348404,0.14367258548736572],[0.027891626581549644,0.09698596596717834],[0.2212809920310974,0.1582159847021103],[-0.15119215846061707,0.21481506526470184],[-0.2564804255962372,0.19158095121383667],[-0.20668385922908783,0.0679265633225441],[-0.1263110190629959,-0.01650981605052948],[0.17908093333244324,-0.038277946412563324]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.059748727828264236,0.22661180794239044,0.6366344690322876],"rotation":[0.001661569345742464,-0.7442938089370728,0.00030289689311757684,0.6678500771522522],"used":true,"bodyHandle":3.44e-321,"linearSpeed":0,"angularVelocityHistory":[[0.16675852239131927,-0.20916642248630524],[0.11119350045919418,0.15288859605789185],[-0.15361341834068298,0.07020994275808334],[0.26559463143348694,-0.041857220232486725],[0.043187469244003296,0.07679424434900284],[-0.026024367660284042,0.6828556656837463],[-0.009478081949055195,-0.12103359401226044],[-0.12772542238235474,0.03949064016342163],[0.0053452374413609505,0.042129673063755035],[-0.04098333418369293,-0.163509339094162]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0007855512085370719,0.22716359794139862,0.6673597693443298],"rotation":[-0.016547752544283867,-0.9634233117103577,-0.010762539692223072,0.2672562897205353],"used":true,"bodyHandle":3.444e-321,"linearSpeed":0,"angularVelocityHistory":[[0.010663269087672234,-0.11705876886844635],[-0.017185654491186142,0.11363773047924042],[0.031855933368206024,0.19538304209709167],[-0.15071959793567657,0.18455122411251068],[0.017693504691123962,0.02204652689397335],[-0.09398145228624344,-0.6227698922157288],[-0.25121960043907166,-0.3961155116558075],[0.09545419365167618,0.4273947775363922],[-0.12838362157344818,-0.18119876086711884],[-0.16922208666801453,0.25886502861976624]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00017935938376467675,0.22929106652736664,0.599380373954773],"rotation":[-0.00868179090321064,-0.9496011137962341,0.010035412386059761,-0.31317973136901855],"used":true,"bodyHandle":3.45e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.6073257327079773,-0.08783766627311707],[0.08379928022623062,-0.04905332252383232],[-0.08963137865066528,-0.03614770993590355],[0.180673748254776,-0.3138175308704376],[-0.025869837030768394,0.07549841701984406],[0.21017363667488098,0.10624375939369202],[0.1556861698627472,-0.050664715468883514],[-0.12306137382984161,0.0010260386625304818],[0.1045164093375206,0.057649627327919006],[0.18603670597076416,-0.07791221141815186]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.060156721621751785,0.2282179445028305,0.6366141438484192],"rotation":[0.004229657351970673,-0.18588852882385254,-0.002327954862266779,0.9825589656829834],"used":true,"bodyHandle":3.454e-321,"linearSpeed":0,"angularVelocityHistory":[[0.12577451765537262,-0.17868909239768982],[0.061184246093034744,0.12978465855121613],[-0.15178056061267853,0.0943930596113205],[0.12305518984794617,-0.010321466252207756],[0.05507871136069298,0.04852082207798958],[0.07345566153526306,0.6464243531227112],[0.025987572968006134,-0.16103915870189667],[-0.12950550019741058,0.05616668239235878],[0.18220378458499908,0.03605246916413307],[-0.005366246681660414,-0.1941460520029068]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05911354720592499,0.23066647350788116,0.7060171961784363],"rotation":[0.00040121300844475627,-0.5143817067146301,-0.006613785866647959,-0.8575357794761658],"used":true,"bodyHandle":3.46e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.13857346773147583,0.10978744179010391],[-0.1282048523426056,0.07312723994255066],[-0.008305600844323635,0.219202920794487],[0.06875699013471603,0.12725064158439636],[0.05985032021999359,0.32981303334236145],[-0.0851435512304306,0.19164571166038513],[-0.2053813636302948,0.11169350892305374],[-0.19237567484378815,0.07775088399648666],[-0.11690107733011246,-0.0008256936562247574],[0.13113145530223846,-0.04792317375540733]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0011133550433441997,0.22921687364578247,0.7395305037498474],"rotation":[-0.011797011829912663,-0.5804821848869324,-0.010431976057589054,-0.8141205906867981],"used":true,"bodyHandle":3.463e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.033075783401727676,0.10821354389190674],[0.0486043319106102,-0.05015549436211586],[-0.01887119747698307,-0.1522270292043686],[0.06194726750254631,0.044351741671562195],[-0.06590147316455841,-0.09278140217065811],[0.24791742861270905,-0.12025976926088333],[0.26943281292915344,-0.03246162086725235],[0.07168452441692352,0.08637378364801407],[-0.17503899335861206,0.13184800744056702],[-0.08219822496175766,-0.001916648936457932]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.059518638998270035,0.22847582399845123,0.7061546444892883],"rotation":[0.011540046893060207,0.250071257352829,0.018189189955592155,-0.9679877161979675],"used":true,"bodyHandle":3.47e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.09849505126476288,-0.35382598638534546],[0.2563270330429077,-0.33273229002952576],[0.1550382375717163,-0.10645827651023865],[0.030336502939462662,0.015945039689540863],[0.08821132034063339,0.06042563542723656],[0.09270494431257248,0.11707348376512527],[0.13406702876091003,-0.08781169354915619],[-0.20620551705360413,-0.16636793315410614],[-0.04426560550928116,0.04065436124801636],[-0.014775114133954048,-0.1320652961730957]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.059434156864881516,0.22942215204238892,0.6349825859069824],"rotation":[0.0087972367182374,0.8718317151069641,0.004294212441891432,-0.4897076487541199],"used":true,"bodyHandle":3.473e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.11464761942625046,-0.056971050798892975],[0.1809612214565277,-0.1128181517124176],[0.16877742111682892,-0.2619944214820862],[-0.3398685157299042,-0.12741407752037048],[-0.3778414726257324,-0.0636211708188057],[0.22944623231887817,0.10314320772886276],[0.259915828704834,0.39182141423225403],[-0.011446229182183743,0.13449494540691376],[0.07788556069135666,0.13489606976509094],[0.0633167251944542,0.006271090358495712]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0008570694481022656,0.23004961013793945,0.6714664101600647],"rotation":[0.0011393741006031632,0.2567872405052185,0.022508973255753517,-0.9662051796913147],"used":true,"bodyHandle":3.48e-321,"linearSpeed":0,"angularVelocityHistory":[[0.005166344344615936,-0.11932939291000366],[0.029787158593535423,0.09223759919404984],[-0.07333792746067047,0.12223531305789948],[-0.1451607048511505,0.17044572532176971],[-0.06030451878905296,0.020264601334929466],[-0.02825586125254631,-0.7042467594146729],[-0.15753930807113647,-0.32512158155441284],[0.11685340851545334,0.6003599166870117],[-0.23723605275154114,-0.14358055591583252],[-0.17167209088802338,0.2938069999217987]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00017273917910642922,0.2311376929283142,0.6011149287223816],"rotation":[0.012219049967825413,0.5588366985321045,-0.004989956505596638,0.829172670841217],"used":true,"bodyHandle":3.483e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.5635811686515808,-0.1414032131433487],[0.04545664042234421,-0.04862499609589577],[-0.11789437383413315,0.015657939016819],[0.22769610583782196,-0.13579830527305603],[0.05540992692112923,0.04842701554298401],[0.2624332904815674,0.1306077390909195],[0.11357642710208893,-0.057171955704689026],[-0.14568191766738892,0.03545574098825455],[0.15220917761325836,0.08750934153795242],[0.2866032123565674,-0.10857003927230835]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.060068678110837936,0.2325727343559265,0.635442852973938],"rotation":[-0.009809239767491817,0.8965519666671753,-0.007471669930964708,-0.4427669644355774],"used":true,"bodyHandle":3.49e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.17642535269260406,-0.0676773190498352],[0.1061459556221962,-0.1374865174293518],[0.15016838908195496,-0.2376834601163864],[-0.2677138149738312,-0.13531742990016937],[-0.46474429965019226,-0.008251742459833622],[0.2510497570037842,0.0918385311961174],[0.46723341941833496,0.2847333252429962],[-0.008778526447713375,0.007401935290545225],[0.00022345499019138515,0.13094735145568848],[-0.009908957406878471,-0.10374179482460022]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06146237626671791,0.23115572333335876,0.7038559913635254],"rotation":[0.0030693665612488985,0.16123506426811218,0.011549696326255798,-0.9868436455726624],"used":true,"bodyHandle":3.493e-321,"linearSpeed":0,"angularVelocityHistory":[[0.04669264331459999,-0.4539097845554352],[0.2690012753009796,-0.3063974380493164],[0.10488031804561615,-0.010494663380086422],[0.03360855206847191,0.0673481822013855],[0.09850961714982986,0.06705804169178009],[0.10595764964818954,0.19064553081989288],[0.1526506394147873,-0.0946260616183281],[-0.25584113597869873,-0.29244402050971985],[0.008322018198668957,0.1237812340259552],[-0.02917899750173092,-0.13301321864128113]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00047190324403345585,0.23175029456615448,0.7396436333656311],"rotation":[-0.002749378327280283,-0.9278595447540283,-0.010205385275185108,-0.37277984619140625],"used":true,"bodyHandle":3.5e-321,"linearSpeed":0,"angularVelocityHistory":[[0.02129761129617691,0.1702938824892044],[0.04638126865029335,-0.02232513763010502],[0.004283719230443239,-0.10507755726575851],[0.08172347396612167,0.11089903116226196],[-0.062167227268218994,-0.16720739006996155],[0.258664071559906,-0.036835700273513794],[0.30813276767730713,0.06653060764074326],[0.063906729221344,0.13285133242607117],[-0.02086075209081173,0.30329883098602295],[-0.15503323078155518,-0.03332339972257614]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05806105211377144,0.23338152468204498,0.7048529982566833],"rotation":[-0.0019468937534838915,-0.8679832816123962,-0.004078904166817665,-0.496572881937027],"used":true,"bodyHandle":3.503e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.13346002995967865,0.11095456033945084],[-0.06957323104143143,0.11429151892662048],[0.04158749058842659,0.25091418623924255],[0.015456462278962135,0.1732114851474762],[0.07227574288845062,0.3068045675754547],[0.07046442478895187,0.1272098422050476],[-0.19647984206676483,0.03485631197690964],[-0.16100525856018066,0.0623718798160553],[-0.0651690885424614,0.027048232033848763],[0.11916816979646683,-0.07794468104839325]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.060932133346796036,0.23106174170970917,0.6354855895042419],"rotation":[0.001015538815408945,-0.872158944606781,-0.005986723583191633,0.4891849458217621],"used":true,"bodyHandle":3.51e-321,"linearSpeed":0,"angularVelocityHistory":[[0.1948365867137909,-0.25328487157821655],[0.12849673628807068,0.10989774763584137],[-0.00663782237097621,0.030269194394350052],[0.24388422071933746,-0.017429910600185394],[0.03396279737353325,0.049516063183546066],[-0.03606004640460014,0.6400944590568542],[0.03050178661942482,-0.11205925792455673],[-0.1748443990945816,0.044854212552309036],[0.012504329904913902,0.025396153330802917],[-0.08054134249687195,-0.13144105672836304]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0010659554973244667,0.23261520266532898,0.6672418117523193],"rotation":[-0.00733209028840065,-0.8994373679161072,0.0015595240984112024,0.4369853734970093],"used":true,"bodyHandle":3.513e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.004088987596333027,-0.11918427050113678],[-0.004193800967186689,0.13513317704200745],[-0.12071749567985535,-0.0016485153464600444],[-0.16024203598499298,0.11790087819099426],[-0.24966086447238922,-0.04189248010516167],[-0.11058642715215683,-0.7506844401359558],[-0.26390111446380615,-0.479091614484787],[0.16163668036460876,0.7103808522224426],[-0.15890231728553772,-0.17351752519607544],[-0.17723730206489563,0.2763819694519043]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0005813784664496779,0.23345686495304108,0.6012510657310486],"rotation":[-0.0009706371929496527,-0.7683860659599304,-0.019380668178200722,-0.6396923065185547],"used":true,"bodyHandle":3.52e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.4790804088115692,-0.09912829101085663],[0.09444364160299301,-0.0905381441116333],[-0.1404798924922943,0.07855139672756195],[0.22228530049324036,-0.10836821049451828],[0.08070778846740723,0.07500778883695602],[0.22266247868537903,0.08960789442062378],[0.14947381615638733,-0.0594298392534256],[-0.10242217779159546,-0.0066026546992361546],[0.18336914479732513,0.07578277587890625],[0.18852314352989197,0.19054998457431793]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05942977964878082,0.23368531465530396,0.6369079351425171],"rotation":[-0.0008658713195472956,-0.4241122901439667,-0.0017536592204123735,0.9056074619293213],"used":true,"bodyHandle":3.523e-321,"linearSpeed":0,"angularVelocityHistory":[[0.095199815928936,-0.21366344392299652],[0.13097965717315674,0.08010410517454147],[-0.13719376921653748,0.024636223912239075],[0.2464342564344406,0.011828036047518253],[-0.09428539127111435,0.08002451062202454],[-0.01042335294187069,0.6504406332969666],[0.013915513642132282,-0.047642748802900314],[-0.1673760563135147,0.10027367621660233],[0.04241487383842468,0.005833582021296024],[-0.04660143330693245,-0.17579826712608337]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05821841210126877,0.23565225303173065,0.7046651840209961],"rotation":[0.005551361478865147,-0.9907541275024414,-0.005975888576358557,-0.13542397320270538],"used":true,"bodyHandle":3.53e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.1182299554347992,0.09927347302436829],[-0.1321202665567398,0.06144585460424423],[0.08462131023406982,0.18560276925563812],[0.00592177314683795,0.191451296210289],[0.12021735310554504,0.24928730726242065],[0.01530960388481617,0.28355148434638977],[-0.20721516013145447,0.1910615712404251],[-0.19462467730045319,0.08246029913425446],[-0.1091010570526123,0.01038726419210434],[0.11449097841978073,-0.050943903625011444]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.000058029108913615346,0.23387116193771362,0.7387571930885315],"rotation":[-0.014688437804579735,-0.1766684651374817,0.0017179124988615513,-0.9841593503952026],"used":true,"bodyHandle":3.533e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.02398878149688244,0.14457760751247406],[0.04615512862801552,-0.03279866650700569],[0.004814074374735355,-0.12611626088619232],[0.060357075184583664,0.07881326973438263],[-0.08537774533033371,-0.12172803282737732],[0.21720415353775024,-0.12181084603071213],[0.3441045880317688,-0.08054419606924057],[0.166534423828125,0.11546026170253754],[0.0532200001180172,0.2999657988548279],[-0.07892632484436035,0.011165344156324863]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.057802971452474594,0.23327825963497162,0.7057317495346069],"rotation":[-0.00261162337847054,-0.03180356323719025,0.0229791272431612,-0.9992265105247498],"used":true,"bodyHandle":3.538e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.0499032586812973,-0.38601452112197876],[0.22410355508327484,-0.30750811100006104],[0.13032136857509613,-0.0451534166932106],[0.03480116277933121,0.02389228716492653],[0.07809054106473923,0.06818350404500961],[0.09775593131780624,0.14812694489955902],[0.18461406230926514,-0.09614390134811401],[-0.2036140412092209,-0.1749182492494583],[0.0070633962750434875,0.058311011642217636],[-0.03084009885787964,-0.1149839535355568]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06054741516709328,0.23392581939697266,0.6355590224266052],"rotation":[-0.0030389311723411083,0.8294835090637207,0.003487703390419483,-0.5585119724273682],"used":true,"bodyHandle":3.54e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.1461842954158783,-0.05112684518098831],[0.1334085762500763,-0.10790487378835678],[0.028676467016339302,-0.36405149102211],[-0.3876418471336365,-0.14145642518997192],[-0.3474615514278412,-0.06366939842700958],[0.25169286131858826,-0.05511863902211189],[0.4074917733669281,0.294956237077713],[-0.003232499584555626,0.0036566746421158314],[-0.04173280671238899,0.1416790932416916],[-0.04994261637330055,0.010295353829860687]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.001694982754997909,0.2351500391960144,0.6707283854484558],"rotation":[-0.0028763071168214083,-0.05915594846010208,0.026747455820441246,-0.9978861808776855],"used":true,"bodyHandle":3.547e-321,"linearSpeed":0,"angularVelocityHistory":[[0.041669074445962906,-0.09761792421340942],[-0.029610909521579742,0.15748196840286255],[-0.04584793373942375,0.04679572954773903],[-0.19117368757724762,0.11781943589448929],[0.004796000197529793,-0.01200476661324501],[-0.17980632185935974,-0.7443722486495972],[-0.2827202379703522,-0.4293566346168518],[0.20059843361377716,0.3166414499282837],[-0.09592074900865555,-0.34882116317749023],[-0.15301646292209625,0.022610219195485115]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.000003734370693564415,0.2357724905014038,0.6016161441802979],"rotation":[0.03709474578499794,0.769800066947937,0.003600915428251028,0.6371960043907166],"used":true,"bodyHandle":3.55e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.4850345849990845,-0.11789759248495102],[0.05912863835692406,0.019668539986014366],[-0.07410930097103119,0.007703182753175497],[0.03557724878191948,0.057232338935136795],[0.026544392108917236,0.016142267733812332],[0.17890958487987518,0.10754562169313431],[0.19234377145767212,-0.0863892138004303],[0.0013956358889117837,-0.05750298872590065],[0.01301551517099142,0.045117951929569244],[0.13093999028205872,0.07587391138076782]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.060271285474300385,0.23637661337852478,0.635234534740448],"rotation":[-0.007578391581773758,0.5765206217765808,0.0003135578881483525,-0.8170474767684937],"used":true,"bodyHandle":3.557e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.08343776315450668,-0.05087943375110626],[0.09294162690639496,-0.2642451226711273],[0.0654519572854042,-0.32558107376098633],[-0.27391156554222107,-0.07578782737255096],[-0.34190237522125244,-0.06399891525506973],[0.26813817024230957,0.17025333642959595],[0.47968393564224243,0.2973487675189972],[0.0073157912120223045,-0.005122436210513115],[0.024067873135209084,0.14430324733257294],[-0.036342769861221313,-0.1697510927915573]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0601312592625618,0.23661480844020844,0.7055166959762573],"rotation":[0.0029879221692681313,-0.5627282857894897,0.013855998404324055,-0.8265203237533569],"used":true,"bodyHandle":3.56e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.06053585559129715,-0.36938801407814026],[0.2251758724451065,-0.34780043363571167],[0.1247372105717659,-0.12687014043331146],[0.07835608720779419,-0.08903829753398895],[0.1289384961128235,-0.06704162806272507],[0.09312713146209717,0.25208213925361633],[0.008443559519946575,0.038405511528253555],[-0.3328203856945038,-0.2048339992761612],[-0.0578036792576313,0.014219989068806171],[-0.15892547369003296,-0.28961390256881714]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0002973977825604379,0.23732483386993408,0.7402235865592957],"rotation":[-0.00859801098704338,-0.17623014748096466,-0.0010165777057409286,-0.9843109250068665],"used":true,"bodyHandle":3.567e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.06566119939088821,0.07231442630290985],[0.016422003507614136,0.007674374617636204],[-0.06351251900196075,-0.12697209417819977],[0.019458822906017303,0.07085619866847992],[-0.13116934895515442,0.05054103210568428],[0.09271478652954102,-0.22758018970489502],[0.36992037296295166,0.0708804726600647],[0.15201154351234436,0.14748530089855194],[0.07911013811826706,0.3179379999637604],[-0.08783651143312454,0.008864805102348328]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05924149230122566,0.23799307644367218,0.7043793797492981],"rotation":[-0.004501016810536385,-0.9166229367256165,-0.005540488753467798,-0.3996891975402832],"used":true,"bodyHandle":3.57e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.15318511426448822,0.10380493849515915],[-0.10590742528438568,0.09832721203565598],[0.11838759481906891,0.2456253170967102],[-0.016182100400328636,0.16536866128444672],[0.11104457825422287,0.20488455891609192],[0.08039306104183197,0.14885729551315308],[-0.12261819839477539,0.060440197587013245],[-0.18143509328365326,0.11088398098945618],[-0.08929590880870819,0.05173606798052788],[0.12969820201396942,-0.08858520537614822]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05960877612233162,0.23637831211090088,0.6364828944206238],"rotation":[0.009636219590902328,-0.8894582390785217,0.0003117232408840209,0.4569146931171417],"used":true,"bodyHandle":3.577e-321,"linearSpeed":0,"angularVelocityHistory":[[0.21705593168735504,-0.2501700818538666],[0.08936095237731934,0.049687422811985016],[0.0005749117117375135,-0.10557318478822708],[0.30301621556282043,-0.04669114947319031],[-0.05481695383787155,0.07068659365177155],[-0.01946830004453659,0.6064728498458862],[0.03001048043370247,-0.07128477096557617],[-0.10355141758918762,0.09402178972959518],[-0.026264093816280365,-0.0029601629357784986],[-0.12476778775453568,0.16917824745178223]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0001711645454633981,0.23754063248634338,0.6683539152145386],"rotation":[-0.02156057022511959,-0.7343133091926575,-0.02408704161643982,0.6780405044555664],"used":true,"bodyHandle":3.58e-321,"linearSpeed":0,"angularVelocityHistory":[[0.007887355983257294,-0.09774649143218994],[-0.05671781674027443,0.1620558649301529],[-0.120546355843544,0.010099133476614952],[-0.14201019704341888,0.1208970844745636],[0.1063673347234726,0.06888243556022644],[-0.15339574217796326,-0.7599458694458008],[-0.15708620846271515,-0.3078710436820984],[0.39727768301963806,0.18142308294773102],[-0.03462482988834381,-0.4746142327785492],[-0.17495888471603394,0.13974349200725555]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00018705060938373208,0.23819562792778015,0.6052647829055786],"rotation":[-0.013699782080948353,-0.9812507629394531,-0.008925574831664562,-0.19204065203666687],"used":true,"bodyHandle":3.587e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.5206012725830078,-0.07190641760826111],[0.07163765281438828,-0.03896641731262207],[-0.09676265716552734,0.026964522898197174],[0.2584066689014435,-0.13755479454994202],[0.10555972903966904,0.04936322942376137],[0.20737823843955994,0.10137371718883514],[0.17886684834957123,-0.062131118029356],[-0.028760453686118126,-0.0384732261300087],[0.29171237349510193,0.05427808314561844],[0.24903978407382965,-0.03875948488712311]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06104964390397072,0.23868690431118011,0.6361565589904785],"rotation":[-0.013100879266858101,-0.9882518649101257,0.00019662272825371474,-0.15227119624614716],"used":true,"bodyHandle":3.59e-321,"linearSpeed":0,"angularVelocityHistory":[[0.12076940387487411,-0.25186893343925476],[0.09850895404815674,0.015959715470671654],[-0.030125141143798828,-0.23858453333377838],[0.29777655005455017,0.014147886075079441],[-0.14426402747631073,0.09722089767456055],[-0.004007388837635517,0.5524278879165649],[-0.025385921820998192,0.019241368398070335],[-0.08419686555862427,0.12018954008817673],[-0.0740581750869751,-0.004740768112242222],[-0.1902877241373062,0.06800032407045364]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05879228189587593,0.24072672426700592,0.7039955258369446],"rotation":[0.004272454418241978,-0.9960052967071533,-0.007853128015995026,0.08884543925523758],"used":true,"bodyHandle":3.597e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.1698792427778244,0.10059275478124619],[-0.1418115645647049,0.05521467700600624],[0.11472851037979126,0.24584093689918518],[0.004177256487309933,0.22019851207733154],[0.005848918575793505,0.28688254952430725],[0.10091477632522583,0.2029082328081131],[-0.1167672798037529,0.08589398115873337],[-0.12698113918304443,0.09636451303958893],[-0.07904176414012909,0.09014391899108887],[0.0765405222773552,-0.06554973125457764]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00035716648562811315,0.23936308920383453,0.7391250729560852],"rotation":[-0.004720652010291815,-0.19553783535957336,-0.0022204529959708452,-0.9806821942329407],"used":true,"bodyHandle":3.6e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.0875139981508255,0.08743177354335785],[0.04142865538597107,-0.010968063026666641],[-0.05067404359579086,-0.1343226134777069],[0.029116472229361534,0.06783965229988098],[-0.11449025571346283,-0.06567217409610748],[0.13065515458583832,-0.23503898084163666],[0.35263657569885254,-0.06420215219259262],[0.18588998913764954,0.1344660371541977],[0.034467168152332306,0.31770196557044983],[-0.060112789273262024,0.04293098673224449]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05999040976166725,0.23921950161457062,0.7042920589447021],"rotation":[-0.002013777382671833,-0.8946471810340881,0.013299478217959404,-0.44657063484191895],"used":true,"bodyHandle":3.607e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.07341045141220093,-0.3097137212753296],[0.1789902299642563,-0.3239527940750122],[0.15226848423480988,-0.16202807426452637],[0.06141417473554611,-0.08709682524204254],[0.1003681868314743,-0.034425340592861176],[0.09717332571744919,0.1989716738462448],[-0.08918248862028122,-0.0312227550894022],[-0.32984599471092224,-0.2588473856449127],[-0.059991784393787384,0.039157621562480927],[-0.05663151293992996,-0.22659221291542053]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0610087513923645,0.2400936335325241,0.6352303624153137],"rotation":[-0.0038922789972275496,0.5849583745002747,0.0020407678093761206,-0.8110513687133789],"used":true,"bodyHandle":3.61e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.10439249128103256,-0.05148741975426674],[0.03523186966776848,-0.32497408986091614],[-0.04053942486643791,-0.28761202096939087],[-0.15250076353549957,-0.07183024287223816],[-0.0810595452785492,-0.1177777647972107],[0.22919154167175293,0.12606392800807953],[0.5605956315994263,0.13733166456222534],[0.014646965079009533,-0.051489170640707016],[-0.04425147920846939,0.08645353466272354],[-0.0825759619474411,-0.013994135893881321]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0020387808326631784,0.24057985842227936,0.6718454360961914],"rotation":[0.004971806425601244,0.2736882269382477,0.018806232139468193,-0.9616217017173767],"used":true,"bodyHandle":3.617e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.019251694902777672,-0.10411882400512695],[-0.013168242760002613,0.11146137863397598],[-0.17067287862300873,-0.03475041687488556],[-0.20241421461105347,0.06550561636686325],[0.10953501611948013,-0.01574363186955452],[-0.11581028252840042,-0.65036940574646],[-0.14190152287483215,-0.12067466974258423],[0.2853770852088928,0.36055222153663635],[-0.07779838144779205,-0.336806058883667],[-0.16526830196380615,0.157284215092659]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0008064400753937662,0.24195562303066254,0.6005796790122986],"rotation":[0.0066183689050376415,0.9020043611526489,0.01084851287305355,-0.4315398335456848],"used":true,"bodyHandle":3.62e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.26707741618156433,-0.14427119493484497],[0.10671919584274292,-0.0033873843494802713],[0.036443259567022324,-0.11416850984096527],[0.28693559765815735,-0.07963663339614868],[0.09849634021520615,0.03226225823163986],[0.27216485142707825,-0.009172001853585243],[0.21981550753116608,-0.04195043817162514],[-0.004710381850600243,-0.06975143402814865],[0.289546936750412,-0.02856244333088398],[0.3861721158027649,-0.03650016710162163]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.060900624841451645,0.2420354187488556,0.6355205774307251],"rotation":[-0.0017538664396852255,0.43993905186653137,0.0010140803642570972,-0.8980253338813782],"used":true,"bodyHandle":3.626e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.13461419939994812,-0.0529387965798378],[-0.025307461619377136,-0.3130907714366913],[-0.04543037712574005,-0.32302728295326233],[-0.08261295408010483,-0.08904293924570084],[-0.023794343695044518,-0.156727135181427],[0.1499047726392746,0.15091325342655182],[0.5602982640266418,0.058644481003284454],[0.025063730776309967,-0.05237342789769173],[-0.02637338638305664,0.038022782653570175],[-0.07788892090320587,0.018858764320611954]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05966061353683472,0.2417725920677185,0.7042026519775391],"rotation":[-0.008255811408162117,-0.9504007697105408,0.006931121461093426,-0.3108411729335785],"used":true,"bodyHandle":3.63e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.08896110951900482,-0.32616108655929565],[0.233854278922081,-0.34804674983024597],[0.16355158388614655,-0.13779579102993011],[0.06509999930858612,-0.06922606378793716],[0.13232722878456116,-0.058699917048215866],[0.11905872076749802,0.23730796575546265],[0.08114629983901978,-0.02719748206436634],[-0.2757152318954468,-0.202616885304451],[-0.06109008565545082,0.016826007515192032],[-0.14445538818836212,-0.2380179911851883]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0008236045832745731,0.24232110381126404,0.7402676343917847],"rotation":[-0.0025980747304856777,-0.41149404644966125,-0.0028707869350910187,-0.9114041328430176],"used":true,"bodyHandle":3.636e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.06296513974666595,0.05736213177442551],[0.018039636313915253,-0.007630475796759129],[-0.07798546552658081,-0.14349007606506348],[0.031987886875867844,0.039883460849523544],[-0.11326561123132706,-0.009792094118893147],[0.06506867706775665,-0.20903094112873077],[0.28809428215026855,-0.12223402410745621],[0.1727350503206253,0.0987938866019249],[0.07778239250183105,0.29642075300216675],[-0.06977369636297226,0.026414334774017334]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05817434936761856,0.24361374974250793,0.7061406970024109],"rotation":[-0.008319881744682789,-0.7713376879692078,-0.008023412898182869,-0.6363211274147034],"used":true,"bodyHandle":3.64e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.11924590915441513,0.13061505556106567],[-0.1482262760400772,0.07081090658903122],[0.15039128065109253,0.20562034845352173],[-0.0030815089121460915,0.1392536163330078],[0.09921085834503174,0.1566607505083084],[0.11613546311855316,0.10165467858314514],[-0.08280529081821442,0.015491408295929432],[-0.10023792833089828,0.030499082058668137],[-0.04235193133354187,0.02857910469174385],[0.08617224544286728,-0.0572417750954628]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00035269439104013145,0.24325592815876007,0.6683217287063599],"rotation":[-0.021885506808757782,-0.7887106537818909,-0.019093863666057587,0.6140781044960022],"used":true,"bodyHandle":3.646e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.025060482323169708,-0.053024277091026306],[-0.09116244316101074,0.18115724623203278],[-0.2463415265083313,-0.04941155016422272],[-0.22338639199733734,0.07985088974237442],[0.021569998934864998,0.0807998850941658],[-0.12804926931858063,-0.5763481855392456],[-0.10105568915605545,-0.13802756369113922],[0.3694164454936981,0.12249862402677536],[-0.05851912498474121,-0.511644721031189],[-0.10860421508550644,0.025315742939710617]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0006136753945611417,0.2443201094865799,0.7392390966415405],"rotation":[-0.0015192409045994282,-0.7208148241043091,-0.0035672825761139393,-0.6931168437004089],"used":true,"bodyHandle":3.65e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.07254403084516525,0.015371197834610939],[0.0009979535825550556,0.010624540969729424],[-0.09873293340206146,-0.1423805207014084],[0.03104539029300213,0.044965799897909164],[-0.1212952509522438,0.06580093502998352],[-0.012483241967856884,-0.22261415421962738],[0.35092291235923767,-0.09343425184488297],[0.18612857162952423,0.08219297975301743],[0.10795560479164124,0.3074038326740265],[-0.038779888302087784,0.06503231078386307]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05985699221491814,0.24455906450748444,0.7043578028678894],"rotation":[-0.003020916599780321,-0.92586350440979,0.01219506561756134,-0.377649188041687],"used":true,"bodyHandle":3.656e-321,"linearSpeed":0,"angularVelocityHistory":[[0.02477346546947956,-0.2876497805118561],[0.20186908543109894,-0.33398014307022095],[0.18841616809368134,-0.15686064958572388],[0.07830141484737396,-0.06410595029592514],[0.13936790823936462,-0.015924643725156784],[0.08933509886264801,0.20814640820026398],[-0.1314283162355423,-0.059384699910879135],[-0.3955785930156708,-0.2548598051071167],[-0.03591468185186386,0.0522940568625927],[-0.08738354593515396,-0.23676805198192596]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05968112125992775,0.24594150483608246,0.6348515748977661],"rotation":[-0.0005399520159699023,-0.7621020674705505,-0.0021048837807029486,-0.647453248500824],"used":true,"bodyHandle":3.66e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.032343052327632904,-0.021551450714468956],[0.05249682441353798,-0.4589407742023468],[-0.020123666152358055,-0.2790588140487671],[-0.0548708438873291,-0.04958890751004219],[-0.11369459331035614,-0.07487883418798447],[0.11856745928525925,0.13692423701286316],[0.49760377407073975,0.06329797953367233],[-0.024931836873292923,-0.018066510558128357],[-0.03922196850180626,0.0799090638756752],[-0.11513325572013855,-0.017451677471399307]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.002581910463050008,0.24667908251285553,0.6709668636322021],"rotation":[-0.015723099932074547,-0.3516291677951813,0.02788248099386692,-0.935591995716095],"used":true,"bodyHandle":3.666e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.07097364962100983,0.0007362726028077304],[-0.14453937113285065,0.25670021772384644],[-0.36463791131973267,-0.005145036615431309],[-0.29238125681877136,0.025001350790262222],[0.013804897665977478,-0.022306986153125763],[-0.11944758147001266,-0.46976470947265625],[-0.08036471158266068,-0.145921528339386],[0.34269753098487854,-0.12518556416034698],[0.032351166009902954,-0.6169257164001465],[-0.08887995779514313,-0.043802253901958466]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00047405954683199525,0.24785350263118744,0.6021450161933899],"rotation":[0.008362040854990482,0.9999646544456482,-0.0003878286515828222,0.0007117529748938978],"used":true,"bodyHandle":3.67e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.23957009613513947,-0.14658355712890625],[-0.06914741545915604,-0.1797824651002884],[0.11561772227287292,-0.2241893708705902],[0.3896184265613556,0.10443253815174103],[0.05434311181306839,0.023213854059576988],[0.06336675584316254,-0.02907719276845455],[0.1980772167444229,0.000034153115848312154],[0.07099080085754395,-0.11728208512067795],[0.21016521751880646,-0.00449034571647644],[0.29316097497940063,0.238830104470253]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.060064684599637985,0.2484024465084076,0.6356340646743774],"rotation":[-0.000737550319172442,-0.949146568775177,-0.0022580944932997227,-0.31482553482055664],"used":true,"bodyHandle":3.676e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.1689499020576477,-0.12205390632152557],[-0.01438084989786148,-0.34781327843666077],[-0.06481068581342697,-0.20637939870357513],[0.09472963958978653,-0.052494265139102936],[0.1368718147277832,-0.11228690296411514],[0.11025366187095642,0.08917498588562012],[0.6075050234794617,0.13215272128582],[0.05020011216402054,-0.040848784148693085],[-0.008897372521460056,0.05213974416255951],[-0.07695025205612183,0.04636630043387413]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0596981942653656,0.2475207895040512,0.7034791111946106],"rotation":[-0.012913297861814499,-0.9340752363204956,0.004124689381569624,0.35681870579719543],"used":true,"bodyHandle":3.68e-321,"linearSpeed":0,"angularVelocityHistory":[[0.005509123206138611,-0.2806435823440552],[0.14580242335796356,-0.3526921272277832],[0.17734631896018982,-0.27027076482772827],[0.11076471954584122,-0.12595024704933167],[0.10298935323953629,-0.04875502362847328],[0.12719152867794037,0.2849193215370178],[-0.1270936280488968,0.07888832688331604],[-0.342245876789093,-0.15063989162445068],[-0.1118272989988327,0.045081574469804764],[-0.17337749898433685,-0.3171800971031189]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0002585396287031472,0.24746635556221008,0.7395169138908386],"rotation":[0.003485876601189375,-0.9876539707183838,-0.0032204510644078255,-0.15657959878444672],"used":true,"bodyHandle":3.686e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.07371573895215988,-0.005818650592118502],[0.0021455534733831882,0.016995536163449287],[-0.09514787793159485,-0.1387435346841812],[0.028209391981363297,0.062265537679195404],[-0.12446411699056625,0.09747498482465744],[-0.05778760090470314,-0.15657570958137512],[0.22263306379318237,-0.12168074399232864],[0.15228255093097687,0.008610132150352001],[0.09048892557621002,0.20774798095226288],[-0.07092813402414322,0.06320392340421677]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.058223724365234375,0.2489359825849533,0.7040483355522156],"rotation":[-0.0022158913780003786,-0.9972356557846069,-0.012840289622545242,-0.07315221428871155],"used":true,"bodyHandle":3.69e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.11721634864807129,0.12980897724628448],[-0.19663883745670319,0.018075503408908844],[0.16080613434314728,0.18496477603912354],[0.04346909746527672,0.13641418516635895],[0.14441482722759247,0.14361104369163513],[0.18370163440704346,0.05788423493504524],[-0.031602684408426285,0.005746274255216122],[-0.06269044429063797,0.0515235997736454],[-0.01609582081437111,0.04000215604901314],[0.06675407290458679,-0.08212856948375702]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.060048915445804596,0.24759969115257263,0.6359740495681763],"rotation":[0.018594615161418915,-0.768426775932312,0.006900097709149122,0.6396302580833435],"used":true,"bodyHandle":3.696e-321,"linearSpeed":0,"angularVelocityHistory":[[0.04235542193055153,-0.20365269482135773],[-0.017135392874479294,0.00831741001456976],[-0.011862454935908318,-0.18729299306869507],[0.5146869421005249,-0.032311324030160904],[-0.10826817899942398,0.10744210332632065],[0.030740955844521523,0.5002557039260864],[-0.0260848980396986,0.16679580509662628],[-0.03992259502410889,0.10011911392211914],[-0.07604948431253433,-0.014823258854448795],[-0.1262272745370865,0.4803912043571472]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.39994069933891296,0.16994532942771912,0.7698679566383362],"rotation":[-0.006959692109376192,0.00730334734544158,0.004763058852404356,0.9999377727508545],"used":true,"bodyHandle":3.7e-321,"linearSpeed":0,"angularVelocityHistory":[[0.013132949359714985,0.006960790138691664],[0.013374291360378265,0.010509150102734566],[0.022062789648771286,0.036187902092933655],[0.027183720842003822,-0.004685833118855953],[-0.019405890256166458,-0.02125123143196106],[-0.01454829704016447,0.00025793578242883086],[0.03235616534948349,0.01076988223940134],[0.009458829648792744,-0.005661672912538052],[0.004809276666492224,-0.007840728387236595],[0.0031666315626353025,-0.004883803892880678]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4002704620361328,0.16950088739395142,0.7706426978111267],"rotation":[0.0026418156921863556,-0.007085351273417473,0.0002298902254551649,0.999971330165863],"used":true,"bodyHandle":3.705e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.021346447989344597,-0.01875043474137783],[0.018332695588469505,0.02169993706047535],[-0.035571299493312836,0.050201140344142914],[0.037938442081213,-0.03683933615684509],[-0.0707511380314827,0.028800779953598976],[0.015668608248233795,0.033479779958724976],[0.019489901140332222,-0.022395674139261246],[-0.05268436297774315,-0.012238000519573689],[0.04424641281366348,-0.05812891945242882],[0.021160339936614037,-0.021873239427804947]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0004529549041762948,0.24883399903774261,0.6680976748466492],"rotation":[0.0022278910037130117,-0.2638392150402069,-0.02386642061173916,0.9642687439918518],"used":true,"bodyHandle":3.71e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.048737239092588425,0.01995363086462021],[-0.11139838397502899,0.21147246658802032],[-0.3108615577220917,-0.09906838834285736],[-0.26870042085647583,-0.021034706383943558],[-0.12564697861671448,0.01712573878467083],[-0.14870305359363556,-0.37628790736198425],[-0.11192800104618073,-0.10875105857849121],[0.33014073967933655,-0.3199840784072876],[0.047553326934576035,-0.5680367350578308],[-0.0673769935965538,-0.146211177110672]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3980124294757843,0.17173072695732117,0.7696467638015747],"rotation":[-0.004755519796162844,0.004138832446187735,0.0007002341444604099,0.9999798536300659],"used":true,"bodyHandle":3.715e-321,"linearSpeed":0,"angularVelocityHistory":[[0.0065735806711018085,0.006309635937213898],[0.018612729385495186,0.016787096858024597],[0.02010071463882923,0.046067994087934494],[0.029270464554429054,-0.004284742288291454],[-0.0068677267991006374,-0.02059837430715561],[-0.06515698879957199,0.013141101226210594],[0.013164283707737923,0.036528799682855606],[0.015896640717983246,-0.016693921759724617],[0.02706107124686241,-0.035430699586868286],[0.020018169656395912,-0.03451426327228546]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.39927181601524353,0.17202000319957733,0.7693176865577698],"rotation":[-0.006961893755942583,0.011896430514752865,-0.0035360665060579777,0.9998987317085266],"used":true,"bodyHandle":3.72e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.014660045504570007,-0.02279466576874256],[0.02152322605252266,0.015896374359726906],[0.01226726919412613,-0.017825379967689514],[0.11307699978351593,-0.29976850748062134],[-0.031431734561920166,0.0565166138112545],[0.014911075122654438,0.041144467890262604],[0.04337698221206665,-0.02383134514093399],[-0.024879200384020805,-0.030871136114001274],[-0.008707240223884583,-0.014537530951201916],[0.00143482256680727,-0.025560412555933]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.40089789032936096,0.17346681654453278,0.7694283127784729],"rotation":[-0.005618243478238583,0.015226448886096478,0.0034378122072666883,0.9998623728752136],"used":true,"bodyHandle":3.725e-321,"linearSpeed":0,"angularVelocityHistory":[[0.012546251527965069,-0.0014137545367702842],[0.03670133650302887,-0.01995323970913887],[0.0025348339695483446,0.029474947601556778],[0.06347495317459106,0.007341168820858002],[-0.025491870939731598,-0.013009748421609402],[-0.019936122000217438,0.011202785186469555],[0.008326796814799309,0.03849838301539421],[0.038552895188331604,-0.01782691292464733],[0.05025346949696541,-0.01975168101489544],[0.01974612846970558,-0.044099144637584686]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.001885381294414401,0.2503637671470642,0.602370023727417],"rotation":[-0.006160157732665539,-0.9173921942710876,-0.012811882421374321,0.39773043990135193],"used":true,"bodyHandle":3.73e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.18467523157596588,-0.141483873128891],[0.008010925725102425,-0.1102953553199768],[0.10431315749883652,-0.13561458885669708],[0.31338948011398315,0.07317835837602615],[0.0694359540939331,0.13424445688724518],[0.10488618165254593,-0.05435377359390259],[0.2299650013446808,-0.011025380343198776],[0.06891433149576187,-0.08731808513402939],[0.15394827723503113,-0.033286333084106445],[0.28043216466903687,0.31405091285705566]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.39984843134880066,0.1733742356300354,0.7697916030883789],"rotation":[0.009446656331419945,0.0061906264163553715,0.010598661378026009,0.9998800754547119],"used":true,"bodyHandle":3.735e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.05981820076704025,-0.05676833540201187],[0.07794693857431412,0.06388401240110397],[0.04121863469481468,-0.047238219529390335],[0.11541531980037689,0.03221858665347099],[0.23634031414985657,0.31654438376426697],[0.02273530326783657,0.1128728911280632],[0.033235371112823486,-0.028045563027262688],[-0.0171582642942667,0.008477379567921162],[0.06046416983008385,-0.043444257229566574],[0.004819513764232397,-0.04777926951646805]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.060055848211050034,0.2513759434223175,0.6359862685203552],"rotation":[0.011483673006296158,-0.867760956287384,0.006383335683494806,0.49680814146995544],"used":true,"bodyHandle":3.74e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.01085460465401411,-0.13166214525699615],[-0.1052057221531868,0.049789898097515106],[-0.08914714306592941,-0.1320560723543167],[0.4016319215297699,-0.10903395712375641],[-0.037278927862644196,0.11499891430139542],[-0.031031407415866852,0.33581528067588806],[-0.0678391084074974,0.1520799696445465],[-0.0584406815469265,0.06907866150140762],[-0.11088509112596512,-0.05271020904183388],[0.005490115378051996,0.6870923638343811]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4013040065765381,0.17457836866378784,0.7691160440444946],"rotation":[-0.005763990338891745,0.016345342621207237,0.0008417696226388216,0.9998494386672974],"used":true,"bodyHandle":3.745e-321,"linearSpeed":0,"angularVelocityHistory":[[0.03549272567033768,0.015479566529393196],[0.014357976615428925,0.018655169755220413],[0.04507726803421974,0.006069414783269167],[0.011391370557248592,0.007808031979948282],[-0.05203855410218239,-0.03862384706735611],[-0.026114480569958687,0.0114371282979846],[-0.10043569654226303,0.024016020819544792],[0.033848438411951065,-0.032822925597429276],[-0.002209814265370369,-0.05589183047413826],[-0.0021866082679480314,-0.05034603178501129]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.39895081520080566,0.17503558099269867,0.7700800895690918],"rotation":[-0.0030328191351145506,0.012925093993544579,-0.009255407378077507,0.9998690485954285],"used":true,"bodyHandle":3.75e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.026501057669520378,-0.032689809799194336],[0.03140409663319588,-0.03129863366484642],[-0.07886503636837006,0.007378580514341593],[0.0505620501935482,0.0598452091217041],[0.1307668387889862,0.03302036598324776],[0.0069741141051054,0.04776463285088539],[0.025105377659201622,-0.10311966389417648],[-0.05205339938402176,-0.03424392640590668],[-0.13308221101760864,-0.21242016553878784],[-0.0030448033940047026,-0.02112279273569584]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05950295552611351,0.2520092725753784,0.7047808170318604],"rotation":[-0.014711443334817886,-0.6308764815330505,-0.0025219530798494816,-0.7757397294044495],"used":true,"bodyHandle":3.755e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.16748787462711334,0.04599097743630409],[-0.16243921220302582,-0.02869947999715805],[0.1442277878522873,0.1371673047542572],[0.029515812173485756,0.03847487270832062],[0.09325078874826431,-0.0024918990675359964],[0.12999139726161957,0.03062186762690544],[0.029214926064014435,-0.07610870897769928],[-0.02150852605700493,-0.04143219813704491],[0.003925208002328873,-0.0031599439680576324],[0.05559331178665161,-0.09794223308563232]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4014640152454376,0.17728082835674286,0.7682966589927673],"rotation":[-0.0013895409647375345,0.02554769441485405,0.004673543386161327,0.9996617436408997],"used":true,"bodyHandle":3.76e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.025011669844388962,0.013109478168189526],[-0.0026417679619044065,0.0774771049618721],[0.06138285994529724,0.10109367966651917],[-0.09316898882389069,0.06589695811271667],[-0.0925225168466568,-0.007266751024872065],[-0.1019035056233406,0.026420118287205696],[-0.05274565517902374,0.12567515671253204],[-0.08308223634958267,-0.035077955573797226],[0.11608680337667465,0.040916893631219864],[0.05681299418210983,0.006113056559115648]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.398831307888031,0.17669270932674408,0.7699400782585144],"rotation":[0.0007660789415240288,0.02760923281311989,-0.00962153822183609,0.9995721578598022],"used":true,"bodyHandle":3.765e-321,"linearSpeed":0,"angularVelocityHistory":[[0.07413129508495331,-0.20243088901042938],[0.054114408791065216,-0.0034074019640684128],[-0.1721850484609604,-0.081475630402565],[-0.15546388924121857,-0.11658229678869247],[-0.04862299561500549,0.11728543788194656],[0.13952647149562836,-0.19146870076656342],[0.1784590482711792,-0.20131303369998932],[-0.030415039509534836,-0.07220736145973206],[-0.017688129097223282,-0.14594781398773193],[0.058772362768650055,-0.0665917843580246]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0004487531550694257,0.2503357529640198,0.7402268648147583],"rotation":[0.0032335214782506227,-0.6106993556022644,-0.007188089191913605,-0.7918232679367065],"used":true,"bodyHandle":3.77e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.06475643068552017,-0.03545866161584854],[0.006568028591573238,0.02274218015372753],[-0.08682754635810852,-0.12958256900310516],[0.019297007471323013,0.053574834018945694],[-0.08636179566383362,0.10981713980436325],[-0.06654676049947739,-0.17783160507678986],[0.21247956156730652,-0.0980023741722107],[0.19369859993457794,0.022522171959280968],[0.06947984546422958,0.21191686391830444],[-0.06218976527452469,0.09146083891391754]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.401048868894577,0.180378258228302,0.7690951228141785],"rotation":[-0.0010838521411642432,0.03621320426464081,-0.003511785063892603,0.9993373155593872],"used":true,"bodyHandle":3.775e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.14565938711166382,0.05152149498462677],[-0.10452152043581009,0.13385935127735138],[-0.07971764355897903,0.16133344173431396],[-1.0594006776809692,0.026424501091241837],[-0.10349106788635254,-0.002696652663871646],[0.007358934264630079,0.02896389178931713],[-0.04014839977025986,0.12051769345998764],[-0.04250840097665787,-0.1255103051662445],[0.11746241897344589,0.053592175245285034],[0.07651190459728241,0.013731786049902439]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05920613929629326,0.2503760755062103,0.7042235136032104],"rotation":[-0.012469514273107052,-0.9526919722557068,0.0029031846206635237,0.3036677837371826],"used":true,"bodyHandle":3.78e-321,"linearSpeed":0,"angularVelocityHistory":[[0.049557436257600784,-0.24238479137420654],[0.0783143863081932,-0.27002424001693726],[0.13015586137771606,-0.20717673003673553],[0.12210223078727722,-0.1263921707868576],[0.07041773200035095,-0.056488215923309326],[0.07705295830965042,0.26718494296073914],[-0.28396734595298767,-0.0011623267782852054],[-0.26397842168807983,-0.1505356729030609],[-0.1729779988527298,0.04755115881562233],[-0.23514387011528015,-0.24435508251190186]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.39856162667274475,0.17863290011882782,0.7710462212562561],"rotation":[-0.004346293862909079,0.01937926933169365,-0.008175227791070938,0.9997693300247192],"used":true,"bodyHandle":3.785e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.12411075830459595,-0.06789229065179825],[-0.20874102413654327,0.13344918191432953],[0.00938514806330204,-0.15368928015232086],[-0.5851765275001526,-0.08052542805671692],[-0.04559981822967529,-0.005757065489888191],[-0.060973651707172394,-0.2444131225347519],[-0.0979301780462265,-0.18751823902130127],[-0.0499580055475235,-0.10213416814804077],[-0.015927614644169807,-0.01979803666472435],[-0.08336947113275528,-0.1148238554596901]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.060424238443374634,0.25188252329826355,0.6353470683097839],"rotation":[0.005585686303675175,-0.8635820746421814,-0.004956289194524288,-0.5041529536247253],"used":true,"bodyHandle":3.79e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.12086351960897446,-0.07769668847322464],[0.02325320430099964,-0.19288459420204163],[-0.05643484368920326,-0.2142045497894287],[0.018859587609767914,-0.03109264001250267],[0.030591070652008057,-0.0960526093840599],[0.1265736073255539,0.11836559325456619],[0.5309455990791321,0.07341228425502777],[0.01664569228887558,-0.027472900226712227],[-0.03513718396425247,0.05069414898753166],[-0.10980461537837982,0.04961360991001129]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4017765522003174,0.17820589244365692,0.7690472602844238],"rotation":[-0.0009699513902887702,0.04717852175235748,0.004509087186306715,0.9988758563995361],"used":true,"bodyHandle":3.794e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.06501073390245438,0.0432007722556591],[-0.048801716417074203,0.08184007555246353],[0.048300597816705704,0.16632460057735443],[-0.21586766839027405,-0.009805792942643166],[-0.11313614249229431,0.017193907871842384],[0.004004283342510462,0.0012103462358936667],[-0.03961861878633499,0.1354215443134308],[-0.05565356835722923,-0.01698147878050804],[0.08209969103336334,0.06925644725561142],[0.05794026330113411,-0.004805923905223608]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.39941665530204773,0.18163838982582092,0.7697150707244873],"rotation":[-0.007945548743009567,0.020462334156036377,-0.01591973938047886,0.9996322393417358],"used":true,"bodyHandle":3.8e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.06717835366725922,-0.05120468512177467],[-0.08687886595726013,0.01815897971391678],[-0.07149351388216019,-0.07729652523994446],[-0.5831305980682373,-0.009702020324766636],[-0.011182540096342564,-0.08977888524532318],[-0.045412398874759674,-0.2825492322444916],[-0.1242302656173706,-0.09021979570388794],[0.0008458507945761085,-0.1957760453224182],[-0.0020428025163710117,-0.03403938189148903],[-0.11169923841953278,-0.19079160690307617]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0005172747769393027,0.2526055872440338,0.6685893535614014],"rotation":[-0.02322547696530819,-0.7056849002838135,0.0150606082752347,-0.7079848647117615],"used":true,"bodyHandle":3.804e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.03223324567079544,-0.04334463179111481],[-0.09991920739412308,0.1891985833644867],[-0.33295947313308716,-0.1065770760178566],[-0.21920044720172882,-0.04067665711045265],[-0.038795311003923416,0.046361640095710754],[-0.13929453492164612,-0.4489534795284271],[-0.12713223695755005,-0.0801917314529419],[0.3573901057243347,-0.19677980244159698],[-0.013639661483466625,-0.5676127672195435],[-0.08046314865350723,-0.026195505633950233]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4016963243484497,0.18441447615623474,0.7695837020874023],"rotation":[0.004108865279704332,0.04720247909426689,-0.00207211310043931,0.9988747239112854],"used":true,"bodyHandle":3.81e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.10142739117145538,0.08998245000839233],[-0.10403028130531311,0.1141340509057045],[-0.08896273374557495,0.17310942709445953],[-0.4596071243286133,0.0372626893222332],[-0.2505856156349182,0.011533139273524284],[0.03755074739456177,0.05018966272473335],[-0.012619834393262863,0.08435160666704178],[0.006386452354490757,-0.08899056911468506],[0.15460047125816345,0.05140164494514465],[0.07544583827257156,0.02483511157333851]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.39852482080459595,0.18001379072666168,0.7705533504486084],"rotation":[-0.0020545381121337414,0.005890883971005678,-0.008895579725503922,0.9999409317970276],"used":true,"bodyHandle":3.814e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.025641784071922302,-0.1326284408569336],[0.018942061811685562,0.11012322455644608],[-0.27080345153808594,-0.21508505940437317],[-0.2568615972995758,0.03323577716946602],[-0.0039426363073289394,-0.1539595127105713],[-0.0984627828001976,-0.202781543135643],[-0.06556905806064606,-0.2046472132205963],[-0.0028292813804000616,-0.19865092635154724],[-0.09546754509210587,-0.10606636106967926],[-0.003090724814683199,-0.11908705532550812]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0012583981733769178,0.25337228178977966,0.6028861403465271],"rotation":[-0.008135803043842316,0.14850640296936035,0.00600440613925457,-0.9888597130775452],"used":true,"bodyHandle":3.82e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.05486662685871124,-0.1949416548013687],[-0.08804724365472794,-0.1105942502617836],[0.14645476639270782,-0.1900295615196228],[0.2834490239620209,0.07654958963394165],[0.08147385716438293,0.20913267135620117],[-0.020297782495617867,-0.08498936146497726],[0.19347921013832092,0.05997240170836449],[0.06144263595342636,-0.06802740693092346],[0.06855054199695587,-0.021294109523296356],[0.25671055912971497,0.42801007628440857]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4022158980369568,0.181970477104187,0.7705183625221252],"rotation":[0.0034827080089598894,0.04388870298862457,-0.0034011914394795895,0.9990245699882507],"used":true,"bodyHandle":3.824e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.15212154388427734,0.07087793201208115],[-0.12431349605321884,0.1096058115363121],[-0.13510717451572418,0.1577378809452057],[-0.4195496439933777,-0.008223765529692173],[-0.25954002141952515,-0.030367305502295494],[-0.003004241967573762,0.08532758057117462],[-0.021792098879814148,0.1039118617773056],[0.02412521280348301,-0.14145393669605255],[0.05123285576701164,-0.012838424183428288],[0.05002214014530182,0.02165958285331726]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.3987073600292206,0.18353164196014404,0.7698506116867065],"rotation":[-0.0010457431199029088,-0.005006646271795034,-0.012334841303527355,0.999910831451416],"used":true,"bodyHandle":3.83e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.12284702062606812,-0.10549983382225037],[-0.20636598765850067,0.09906542301177979],[0.019672788679599762,-0.139528289437294],[-0.42184188961982727,-0.08880482614040375],[0.22862115502357483,-0.2729783356189728],[-0.08599872887134552,-0.30290159583091736],[-0.11051709949970245,-0.16728658974170685],[0.00838969275355339,-0.11242366582155228],[-0.033740948885679245,0.01889568194746971],[-0.01297774538397789,-0.03282462805509567]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.059432122856378555,0.254900187253952,0.6358588337898254],"rotation":[-0.005873851012438536,-0.27031412720680237,-0.008411657065153122,-0.9627175331115723],"used":true,"bodyHandle":3.834e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.054885633289813995,-0.10468462109565735],[0.010224118828773499,-0.34323394298553467],[0.09625421464443207,-0.10274195671081543],[0.11794708669185638,0.03482576459646225],[0.11742157489061356,-0.11244267225265503],[0.11417042464017868,0.0876731351017952],[0.49210864305496216,-0.026489613577723503],[0.02233799360692501,0.001088274409994483],[-0.0025704798754304647,0.06733647733926773],[-0.043673839420080185,0.07099772989749908]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.40193411707878113,0.18473121523857117,0.7693226933479309],"rotation":[0.009010803885757923,0.0476667545735836,-0.003693775273859501,0.9988157749176025],"used":true,"bodyHandle":3.84e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.12031048536300659,0.06070006266236305],[-0.16788876056671143,0.11466334760189056],[-0.1231776773929596,0.19347846508026123],[-0.4816657602787018,0.015374772250652313],[-0.18086637556552887,-0.018229316920042038],[0.03196783736348152,0.039018288254737854],[-0.047877393662929535,0.05387026071548462],[0.04029528424143791,-0.04057745262980461],[0.16801807284355164,0.034084685146808624],[0.049627579748630524,0.01988769695162773]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4003797471523285,0.18482623994350433,0.7715712785720825],"rotation":[-0.023955710232257843,0.014002209529280663,-0.008721590042114258,0.9995769262313843],"used":true,"bodyHandle":3.844e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.13938792049884796,-0.04056686535477638],[-0.09034133702516556,0.05546974018216133],[0.09899866580963135,-0.14733867347240448],[-0.6623312830924988,0.02435150556266308],[0.27164575457572937,0.029463201761245728],[-0.0800991877913475,-0.2421906739473343],[-0.05276109278202057,-0.1233549639582634],[-0.007868229411542416,-0.08823329210281372],[-0.021955173462629318,-0.20254449546337128],[-0.22518141567707062,-0.20091339945793152]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05935400351881981,0.2531799376010895,0.7046046257019043],"rotation":[-0.013518457300961018,-0.9986743927001953,0.0030971758533269167,0.04956965520977974],"used":true,"bodyHandle":3.85e-321,"linearSpeed":0,"angularVelocityHistory":[[0.08123701065778732,-0.1736428439617157],[0.015082788653671741,-0.2145788073539734],[0.14234143495559692,-0.24943706393241882],[0.1307581663131714,-0.13072556257247925],[0.05207859352231026,-0.0012306348653510213],[0.06532537937164307,0.2993835210800171],[-0.3245382010936737,0.028596315532922745],[-0.2313968539237976,-0.18329834938049316],[-0.20254212617874146,0.028037643060088158],[-0.2671925723552704,-0.2599104344844818]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4002518951892853,0.18751774728298187,0.7712599635124207],"rotation":[0.005466258618980646,0.05112309753894806,-0.0022768997587263584,0.9986748695373535],"used":true,"bodyHandle":3.854e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.11459580063819885,0.0789867714047432],[-0.09235464781522751,0.093279168009758],[-0.11607076227664948,0.16748078167438507],[-0.44026467204093933,0.021742191165685654],[-0.19107390940189362,-0.02064327895641327],[-0.012371315620839596,0.06190770864486694],[-0.08952383697032928,0.08012166619300842],[-0.02896282635629177,-0.037735216319561005],[0.11470423638820648,0.0845736637711525],[0.04636724293231964,0.05946342647075653]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.39820989966392517,0.1872110813856125,0.7696009874343872],"rotation":[-0.005948047153651714,0.010740692727267742,-0.023940442129969597,0.999638020992279],"used":true,"bodyHandle":3.86e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.17580778896808624,-0.17971378564834595],[-0.3761752247810364,0.06275943666696548],[0.2126588225364685,-0.13606970012187958],[-0.5768099427223206,-0.18360598385334015],[0.2865371108055115,-0.154568612575531],[0.01737557351589203,-0.23138034343719482],[-0.10462991148233414,-0.1184643879532814],[0.03433768078684807,-0.17570915818214417],[-0.4954668879508972,-0.14005862176418304],[-0.036789968609809875,-0.16245654225349426]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0011157471453770995,0.25324466824531555,0.7394118309020996],"rotation":[0.0020863418467342854,-0.6830559372901917,-0.001159532694146037,-0.7303621172904968],"used":true,"bodyHandle":3.864e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.055967673659324646,0.0002608979702927172],[0.003320952644571662,0.010372361168265343],[-0.11112996935844421,-0.14451105892658234],[0.05324620380997658,0.08002368360757828],[-0.10300133377313614,0.10976205766201019],[-0.0818851962685585,-0.1734537035226822],[0.24433591961860657,-0.07277143746614456],[0.2063785195350647,0.02458670176565647],[0.10557021200656891,0.23287031054496765],[-0.05557660385966301,0.11194540560245514]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.400583952665329,0.19099417328834534,0.7721487879753113],"rotation":[-0.0008164870087057352,0.04360838979482651,-0.0000348435714840889,0.9990483522415161],"used":true,"bodyHandle":3.87e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.1851036548614502,0.019213218241930008],[-0.12228763848543167,0.1568874567747116],[-0.21892692148685455,0.3349500298500061],[-0.34340035915374756,-0.016181714832782745],[-0.13715577125549316,-0.009879841469228268],[0.09468250721693039,0.08160201460123062],[0.0006307525327429175,0.04920690879225731],[0.07449425011873245,-0.09348788857460022],[0.06104403734207153,0.03657034784555435],[0.02316443808376789,0.04481183737516403]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.39920228719711304,0.18950815498828888,0.7698405385017395],"rotation":[-0.013326137326657772,0.021562740206718445,-0.014824562706053257,0.99956876039505],"used":true,"bodyHandle":3.873e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.14425648748874664,-0.0762798935174942],[-0.4582832455635071,0.04501975700259209],[0.14282339811325073,-0.24343812465667725],[-0.7578743696212769,0.0016969743883237243],[0.20443126559257507,-0.12410047650337219],[-0.13394176959991455,-0.2880092263221741],[-0.10543690621852875,-0.1491665244102478],[-0.03144792094826698,-0.1509176790714264],[-0.007538332603871822,-0.04387982562184334],[-0.06132819876074791,-0.10149146616458893]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05879823490977287,0.25492238998413086,0.7047929167747498],"rotation":[-0.016374321654438972,-0.7574636936187744,-0.008702320978045464,-0.6526138782501221],"used":true,"bodyHandle":3.88e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.028668705374002457,0.08614225685596466],[-0.1330028474330902,0.13240750133991241],[0.1359129399061203,0.19778943061828613],[0.029751848429441452,0.16500629484653473],[0.13735921680927277,0.18945886194705963],[0.1871492564678192,0.1189657598733902],[0.14508874714374542,-0.06737782061100006],[-0.03667626529932022,-0.004459137562662363],[-0.0059539214707911015,0.024716950953006744],[0.033770110458135605,-0.08149448037147522]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.40004977583885193,0.18869829177856445,0.7709242105484009],"rotation":[0.004725909326225519,0.03725789859890938,-0.0024228980764746666,0.9992915391921997],"used":true,"bodyHandle":3.883e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.16091810166835785,0.03323102742433548],[-0.14102986454963684,0.11845792084932327],[-0.18427379429340363,0.2226315140724182],[-0.3699738681316376,0.013597458600997925],[-0.11251317709684372,0.028008027002215385],[0.07277925312519073,0.048647213727235794],[0.007248071022331715,-0.0181310772895813],[-0.06316310167312622,-0.19607137143611908],[0.09366417676210403,0.10172918438911438],[0.11960522830486298,0.03368985280394554]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4004797339439392,0.19037824869155884,0.76997971534729],"rotation":[-0.015057061798870564,0.029563037678599358,-0.018907172605395317,0.9992706179618835],"used":true,"bodyHandle":3.89e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.14294305443763733,-0.012653947807848454],[-0.0569034218788147,-0.08517253398895264],[0.11785662174224854,-0.1279243677854538],[-0.6374057531356812,-0.0943908542394638],[0.19480189681053162,-0.0793071761727333],[-0.08485406637191772,-0.3645045757293701],[-0.10779105126857758,-0.06175046041607857],[0.03183339536190033,-0.03793597221374512],[0.057367537170648575,-0.13502267003059387],[-0.21131466329097748,-0.22528980672359467]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06001028046011925,0.2554002106189728,0.6358852386474609],"rotation":[0.0084572434425354,-0.5955972075462341,0.0084236403927207,0.803194522857666],"used":true,"bodyHandle":3.893e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.019959839060902596,-0.07259906828403473],[-0.13920384645462036,0.051456253975629807],[-0.16248850524425507,-0.09705008566379547],[0.1459849327802658,-0.005404613446444273],[-0.030368482694029808,0.1633942872285843],[-0.004268876276910305,0.05911781266331673],[-0.05728787183761597,-0.03702256828546524],[-0.057052407413721085,0.05346245318651199],[-0.13391445577144623,-0.024802090600132942],[0.0061539895832538605,0.6449776887893677]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3983869254589081,0.1937050074338913,0.7700002789497375],"rotation":[-0.0010496244067326188,0.06123625859618187,-0.006105523556470871,0.9981040954589844],"used":true,"bodyHandle":3.9e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.17361728847026825,0.031912319362163544],[-0.14582587778568268,0.1612733006477356],[-0.19809700548648834,0.22367973625659943],[-0.19471271336078644,0.07935850322246552],[-0.09281761944293976,0.032808661460876465],[0.08083640784025192,0.06628160178661346],[-0.05126357078552246,0.030168138444423676],[0.08286647498607635,-0.10120151191949844],[0.0790807381272316,0.04799143597483635],[0.01462848111987114,0.06256545335054398]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.39972013235092163,0.19199956953525543,0.7675228714942932],"rotation":[-0.022377364337444305,0.02995527908205986,-0.025822049006819725,0.9989669919013977],"used":true,"bodyHandle":3.903e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.3542243242263794,0.016336718574166298],[-0.3262213170528412,-0.04466888681054115],[0.13727352023124695,-0.2182716578245163],[-2.0965640544891357,0.2651680111885071],[0.2939971685409546,-0.24045179784297943],[-0.3952605426311493,-0.22648181021213531],[-0.2586131691932678,-0.033679962158203125],[0.22632576525211334,-0.19289539754390717],[-0.2960071861743927,-0.04052715376019478],[-1.2831240892410278,-0.4194256663322449]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0000411983928643167,0.2552422881126404,0.6705873608589172],"rotation":[0.009299684315919876,-0.1706462800502777,-0.031714800745248795,0.9847778677940369],"used":true,"bodyHandle":3.91e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.03170773386955261,-0.014935439452528954],[-0.08239180594682693,0.19707591831684113],[-0.2839851677417755,-0.0868028774857521],[-0.2537873387336731,-0.01564493589103222],[-0.12645256519317627,0.01271065417677164],[-0.1209033727645874,-0.3910246193408966],[-0.13639310002326965,-0.13621003925800323],[0.283037394285202,-0.3672647774219513],[0.03827613219618797,-0.5368406176567078],[-0.08689945191144943,-0.11688870936632156]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4022931158542633,0.1948331594467163,0.7691505551338196],"rotation":[-0.008337384089827538,0.0345585010945797,-0.01963644288480282,0.9991750121116638],"used":true,"bodyHandle":3.913e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.2798365652561188,0.10109604895114899],[-0.32502326369285583,-0.07083486020565033],[0.19269470870494843,-0.18505915999412537],[-0.7283049821853638,-0.14247266948223114],[0.24703028798103333,-0.26326167583465576],[-0.07067693769931793,-0.3709108829498291],[-0.03251703083515167,-0.0423584058880806],[0.20804692804813385,-0.10122033953666687],[-0.1835489720106125,-0.03597213700413704],[-0.19797471165657043,0.018503515049815178]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.39923742413520813,0.1951369196176529,0.7723970413208008],"rotation":[-0.004219129215925932,0.04499271512031555,-0.0031579791102558374,0.9989734292030334],"used":true,"bodyHandle":3.92e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.16087591648101807,-0.017179246991872787],[-0.13154016435146332,0.13055692613124847],[-0.20385432243347168,0.2163025587797165],[-0.1437198370695114,0.016953393816947937],[-0.03405194729566574,0.07342333346605301],[0.18967516720294952,-0.0069839442148804665],[0.0037871687673032284,0.031020935624837875],[0.13880817592144012,-0.1258038878440857],[0.08339176326990128,0.13665415346622467],[-0.04879837855696678,0.07905220985412598]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0008845337433740497,0.2561888098716736,0.6021809577941895],"rotation":[0.008215661160647869,0.15448804199695587,-0.00998641550540924,0.9879100322723389],"used":true,"bodyHandle":3.923e-321,"linearSpeed":0,"angularVelocityHistory":[[0.06816720217466354,-0.09569276124238968],[-0.14525623619556427,-0.06127683445811272],[0.19301028549671173,-0.18318605422973633],[0.21587198972702026,0.11936172097921371],[0.03342165797948837,0.22375060617923737],[-0.007066550198942423,-0.08690179884433746],[0.19379720091819763,0.06946854293346405],[0.04779736325144768,-0.06870569288730621],[0.044686075299978256,-0.05326319858431816],[0.13270001113414764,0.4554641842842102]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.40097397565841675,0.19634275138378143,0.7697556614875793],"rotation":[-0.0031157825142145157,0.03785959258675575,-0.022289004176855087,0.9990295767784119],"used":true,"bodyHandle":3.93e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.22278758883476257,0.13591934740543365],[-0.6919114589691162,0.1815982460975647],[0.14555726945400238,-0.19519689679145813],[-0.8908951282501221,-0.03564769774675369],[0.3966996669769287,-0.23630034923553467],[-0.21417823433876038,-0.33883440494537354],[-0.31371837854385376,-0.07887107878923416],[0.37211066484451294,-0.0837612897157669],[-0.13857777416706085,0.024459822103381157],[-0.5688660740852356,-0.17703214287757874]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3994136154651642,0.19730128347873688,0.7707507014274597],"rotation":[-0.0026544888969510794,0.03713066503405571,-0.0035130497999489307,0.9993007183074951],"used":true,"bodyHandle":3.933e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.17541362345218658,0.020889556035399437],[-0.15119600296020508,0.13135182857513428],[-0.20651909708976746,0.22122503817081451],[-0.11055349558591843,0.006084965541958809],[-0.029786132276058197,0.05478646233677864],[0.15648098289966583,0.03868510574102402],[0.03666253015398979,-0.06894586980342865],[0.08147644251585007,-0.01119923498481512],[-0.018810423091053963,0.07533080130815506],[-0.050029363483190536,-0.008140486665070057]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05996835604310036,0.2575972378253937,0.6356502771377563],"rotation":[0.0016742267180234194,-0.8937519788742065,0.006089772097766399,0.4485170245170593],"used":true,"bodyHandle":3.94e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.008193888701498508,-0.1369691789150238],[-0.0767890140414238,0.02721453458070755],[-0.02353103831410408,0.009237389080226421],[0.09544346481561661,-0.003436909755691886],[-0.022258669137954712,0.047489460557699203],[-0.1378142237663269,-0.0062865582294762135],[-0.03134141117334366,0.05492782965302467],[-0.07669615745544434,0.04003351181745529],[-0.11594371497631073,-0.15427519381046295],[0.02998477593064308,0.6626328825950623]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.40296053886413574,0.2031051069498062,0.7683895230293274],"rotation":[0.006360507570207119,0.04524096101522446,-0.007723744958639145,0.9989259839057922],"used":true,"bodyHandle":3.943e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.32405155897140503,0.12079580128192902],[-0.5422321557998657,0.007923619821667671],[0.2908751368522644,-0.3194006681442261],[-0.86159348487854,-0.028484772890806198],[0.158150315284729,-0.2122230976819992],[-0.2076781839132309,-0.4216708242893219],[-0.2145049273967743,0.21931092441082],[0.511809766292572,-0.09624861180782318],[-0.12068761140108109,-0.13849128782749176],[-0.15395784378051758,0.0473691001534462]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.39850595593452454,0.19912907481193542,0.7706461548805237],"rotation":[-0.002836390398442745,0.04677680507302284,0.000058470926887821406,0.9989013075828552],"used":true,"bodyHandle":3.95e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.1819138079881668,-0.03373566269874573],[-0.1986599713563919,0.2315710335969925],[-0.20155011117458344,0.1992863565683365],[-0.15081973373889923,0.016703566536307335],[-0.04126974567770958,0.0677231177687645],[0.18070217967033386,0.0379679799079895],[-0.00984568614512682,-0.14311395585536957],[0.0758984237909317,-0.04247433319687843],[0.09924459457397461,0.1028226688504219],[0.020653285086154938,-0.02694687619805336]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.059683386236429214,0.25805041193962097,0.7058250904083252],"rotation":[-0.014542479068040848,-0.8100615739822388,-0.009038876742124557,-0.5860946774482727],"used":true,"bodyHandle":3.953e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.04257504269480705,0.013866661116480827],[-0.11664483696222305,-0.07859876751899719],[0.13920491933822632,0.015398096293210983],[0.05116264894604683,0.04160661995410919],[0.13755211234092712,0.035453952848911285],[0.19881349802017212,0.05289192497730255],[0.0469764843583107,-0.053038761019706726],[-0.02337600104510784,-0.03710917755961418],[0.02617393247783184,-0.018139300867915154],[0.05275677517056465,-0.0857086256146431]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.40152397751808167,0.19706787168979645,0.7672615051269531],"rotation":[-0.010200517252087593,0.04062621667981148,-0.017205238342285156,0.9989741444587708],"used":true,"bodyHandle":3.957e-321,"linearSpeed":0,"angularVelocityHistory":[[-1.1791667938232422,0.29729095101356506],[-1.5010740756988525,0.27434149384498596],[0.2631908655166626,-0.15601737797260284],[-1.4395982027053833,-0.38507118821144104],[0.3995095193386078,-0.24118758738040924],[-0.16566234827041626,-0.2941911518573761],[-0.11633335798978806,0.03159356117248535],[0.3173289895057678,-0.3473668694496155],[-0.09366001188755035,-0.08710456639528275],[0.004063677974045277,-0.022185837849974632]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.39980757236480713,0.20193108916282654,0.770682692527771],"rotation":[-0.008156117051839828,0.008691471070051193,0.0013339569559320807,0.9999280571937561],"used":true,"bodyHandle":3.96e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.1774955689907074,-0.02446513995528221],[-0.04810372367501259,0.0975215882062912],[-0.10259194672107697,0.19258910417556763],[-0.13189056515693665,0.03933076187968254],[-0.06813265383243561,0.08150118589401245],[0.20867852866649628,-0.005838972982019186],[-0.041181571781635284,-0.08458013832569122],[0.046488527208566666,-0.03368481621146202],[-0.023632019758224487,0.10222166031599045],[-0.1263287365436554,0.021175537258386612]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0001780182938091457,0.2563851475715637,0.7394614815711975],"rotation":[0.006751605309545994,-0.9881494045257568,0.0009805257432162762,-0.15334373712539673],"used":true,"bodyHandle":3.967e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.060026150196790695,-0.031460609287023544],[0.007770353928208351,0.01900603249669075],[-0.09116528928279877,-0.13957971334457397],[0.014149597845971584,0.06524676829576492],[-0.09627977758646011,0.12331882864236832],[-0.1206151619553566,-0.07749837636947632],[0.1877807080745697,-0.06949087232351303],[0.18499428033828735,0.026921290904283524],[0.09806813299655914,0.24741145968437195],[-0.12538422644138336,0.13001078367233276]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4025112986564636,0.2003181278705597,0.7679956555366516],"rotation":[0.0039452239871025085,0.03348761051893234,-0.025577453896403313,0.9991040229797363],"used":true,"bodyHandle":3.97e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.2818363904953003,0.047187451273202896],[-0.49816030263900757,-0.08420158922672272],[0.1967608481645584,-0.26216137409210205],[-0.3235969841480255,-0.7495498657226562],[0.34478941559791565,-0.24591277539730072],[-0.08317825198173523,-0.2307245135307312],[-0.2984688878059387,0.13314150273799896],[0.29425543546676636,-0.08875881135463715],[-0.11851419508457184,0.008665686473250389],[-0.16825264692306519,-0.06711279600858688]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3985491394996643,0.20305360853672028,0.7696487307548523],"rotation":[-0.008000864647328854,0.030054889619350433,-0.000009209617019223515,0.9995162487030029],"used":true,"bodyHandle":3.977e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.07264010608196259,-0.1432873159646988],[-0.11823129653930664,0.17411893606185913],[-0.13364994525909424,0.022706983610987663],[-0.0519191212952137,0.00537281995639205],[0.08411196619272232,0.16806162893772125],[0.23396696150302887,-0.09569446742534637],[-0.03873216733336449,-0.27535614371299744],[-0.035199251025915146,0.03920292481780052],[-0.04005357623100281,0.08546989411115646],[-0.05185414478182793,-0.016798729076981544]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05911938101053238,0.2564414143562317,0.7037119269371033],"rotation":[-0.011439370922744274,-0.9831354022026062,0.0014937750529497862,-0.18251477181911469],"used":true,"bodyHandle":3.98e-321,"linearSpeed":0,"angularVelocityHistory":[[0.0766458660364151,-0.21608173847198486],[0.07626969367265701,-0.2707490622997284],[0.14433154463768005,-0.21648769080638885],[0.12291324138641357,-0.12428586184978485],[0.08740177005529404,-0.027980457991361618],[0.07162992656230927,0.25280141830444336],[-0.3056870400905609,0.024442793801426888],[-0.20652785897254944,-0.14202022552490234],[-0.1559785157442093,0.030895506963133812],[-0.2380339503288269,-0.24779362976551056]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4025568664073944,0.20339712500572205,0.7684802412986755],"rotation":[-0.007423357106745243,0.02098223939538002,0.009801396168768406,0.9997042417526245],"used":true,"bodyHandle":3.987e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.2786324620246887,0.11343681812286377],[-0.5223200917243958,0.0596407875418663],[0.21496209502220154,-0.2084614783525467],[-0.8419206738471985,0.1383245289325714],[-0.11122463643550873,-0.20973968505859375],[-0.19852805137634277,-0.19059216976165771],[-0.09817097336053848,0.22466614842414856],[0.284928560256958,0.036468442529439926],[-0.1823960840702057,-0.014383497647941113],[-0.02548482082784176,0.11662807315587997]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3997100591659546,0.20543429255485535,0.7692007422447205],"rotation":[-0.005775121506303549,0.021554695442318916,0.007520709186792374,0.9997226595878601],"used":true,"bodyHandle":3.99e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.09442172944545746,-0.07117564231157303],[-0.12188563495874405,0.15590646862983704],[-0.05304954573512077,0.029031474143266678],[-0.13096299767494202,0.046784657984972],[0.22577637434005737,0.26775190234184265],[0.24951185286045074,-0.11125236004590988],[-0.058212801814079285,-0.22437752783298492],[-0.03739779442548752,0.14584435522556305],[-0.15532486140727997,0.07545328885316849],[-0.1138642355799675,0.04649277776479721]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4036560356616974,0.2063431292772293,0.7694001197814941],"rotation":[0.024018460884690285,0.03122059628367424,-0.017077017575502396,0.9990779161453247],"used":true,"bodyHandle":3.997e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.2443290799856186,0.15318775177001953],[-0.5272356867790222,-0.14269036054611206],[0.2859250605106354,-0.20025970041751862],[-0.6721192002296448,-0.03621096536517143],[0.20381145179271698,-0.5445035696029663],[0.1573861986398697,-0.8788221478462219],[-0.2714166045188904,-0.42243003845214844],[0.38581568002700806,-0.02251589670777321],[0.07206647098064423,0.13655757904052734],[-0.3464631736278534,-0.0395086407661438]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06001146137714386,0.2583136260509491,0.6351708769798279],"rotation":[-0.003659885609522462,-0.7276569604873657,-0.01023699901998043,-0.685854971408844],"used":true,"bodyHandle":4e-321,"linearSpeed":0,"angularVelocityHistory":[[0.04232204332947731,-0.04719986394047737],[0.12830352783203125,-0.31785276532173157],[0.1710411012172699,0.04092194885015488],[0.2206471562385559,-0.0878417044878006],[0.09574021399021149,-0.035742565989494324],[0.009997250512242317,0.029262281954288483],[0.370980441570282,0.05209818109869957],[0.0863913968205452,-0.002340544480830431],[0.01715972274541855,0.05241815000772476],[-0.029622336849570274,0.09340856969356537]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.40055978298187256,0.20710919797420502,0.76804518699646],"rotation":[-0.010086774826049805,0.016715819016098976,0.008211727254092693,0.9997756481170654],"used":true,"bodyHandle":4.007e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.09709096699953079,-0.10064072906970978],[-0.10421519726514816,0.15436354279518127],[0.0385616235435009,0.03823892027139664],[-0.014963277615606785,0.05984839051961899],[0.11040077358484268,0.27495360374450684],[0.23612254858016968,-0.155154749751091],[0.07232904434204102,-0.18208728730678558],[-0.011320830322802067,0.012508923187851906],[-0.03318163380026817,0.07824411988258362],[-0.03498008847236633,0.15275759994983673]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.403339684009552,0.20816506445407867,0.7684589624404907],"rotation":[0.014157743193209171,0.05179116502404213,-0.005125169642269611,0.9985443949699402],"used":true,"bodyHandle":4.01e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.2599093019962311,0.11818570643663406],[-0.46024808287620544,-0.09261169284582138],[0.21268580853939056,-0.27856361865997314],[-1.0538032054901123,-0.1439855694770813],[0.12606433033943176,-0.28075605630874634],[-0.2536379396915436,-0.20061039924621582],[-0.3290129601955414,0.2576998472213745],[0.45450928807258606,-0.11325671523809433],[0.018910272046923637,-0.047853074967861176],[-0.12445764243602753,0.032300449907779694]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0025880944449454546,0.25805529952049255,0.6701640486717224],"rotation":[-0.019415119662880898,-0.7394792437553406,0.013635965995490551,-0.672761082649231],"used":true,"bodyHandle":4.017e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.028023838996887207,-0.03249498829245567],[-0.024410244077444077,0.15630178153514862],[-0.374428927898407,-0.14807379245758057],[-0.16862772405147552,-0.04137597605586052],[-0.12406886368989944,0.014791272580623627],[-0.019665859639644623,-0.10328298807144165],[-0.14497745037078857,-0.16653670370578766],[0.10788263380527496,-0.3497649133205414],[-0.01810310035943985,-0.4735822379589081],[-0.23093844950199127,-0.08296617120504379]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.40249794721603394,0.21040421724319458,0.77082359790802],"rotation":[0.008236833848059177,0.02247304469347,0.01990482583642006,0.9995152950286865],"used":true,"bodyHandle":4.02e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.06953134387731552,0.20922067761421204],[-0.4517843425273895,0.12599271535873413],[0.2821507155895233,-0.15141624212265015],[-0.4927244782447815,-0.10496041178703308],[-0.45210111141204834,0.1641940027475357],[-0.3065561056137085,0.28024032711982727],[-0.3387454152107239,0.4994320273399353],[0.24610084295272827,0.024264918640255928],[0.06346326321363449,-0.22391363978385925],[-0.40190935134887695,-0.07850388437509537]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.40087077021598816,0.20880578458309174,0.769252598285675],"rotation":[-0.003826598869636655,0.020749280229210854,0.0023003676906228065,0.999774694442749],"used":true,"bodyHandle":4.027e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.09482351690530777,-0.10032275319099426],[0.038054849952459335,0.09828861802816391],[-0.01461232639849186,0.07532688230276108],[0.03913991153240204,0.05846133828163147],[0.18813468515872955,0.3169020116329193],[0.31118977069854736,-0.13727647066116333],[-0.08827261626720428,-0.31336963176727295],[-0.11792845278978348,0.2155560851097107],[-0.16965889930725098,0.07328924536705017],[-0.10010813921689987,0.042899757623672485]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.001193226664327085,0.25933900475502014,0.6016451120376587],"rotation":[0.0007760308217257261,0.6639195084571838,0.009370973333716393,-0.7477448582649231],"used":true,"bodyHandle":4.03e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.05413764342665672,-0.1415650099515915],[-0.14336220920085907,-0.14354637265205383],[0.1900092214345932,-0.14764897525310516],[0.26745495200157166,0.03346880152821541],[0.06836049258708954,0.21333037316799164],[0.0065055410377681255,-0.09111207723617554],[0.1317676156759262,0.04386388137936592],[-0.008584090508520603,-0.06686748564243317],[0.06485677510499954,-0.052016809582710266],[0.21313060820102692,0.373399555683136]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4024040699005127,0.21298912167549133,0.7715637683868408],"rotation":[0.023819174617528915,0.0163589958101511,-0.0023463114630430937,0.999579668045044],"used":true,"bodyHandle":4.037e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.06540672481060028,0.19724388420581818],[-0.37628528475761414,0.28890541195869446],[0.3152412176132202,-0.200100377202034],[-0.3259856104850769,0.05980098247528076],[-0.340768426656723,-0.15777349472045898],[-0.29833805561065674,-0.1419556587934494],[-0.21662458777427673,0.22991639375686646],[0.13757357001304626,0.09505411237478256],[0.11734573543071747,-0.22771766781806946],[0.06063951924443245,0.12723565101623535]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.40212899446487427,0.21162256598472595,0.7693960070610046],"rotation":[-0.01298980601131916,0.021617984399199486,-0.0047146291472017765,0.9996707439422607],"used":true,"bodyHandle":4.04e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.041318606585264206,-0.07349026948213577],[-0.1322048455476761,0.15068116784095764],[-0.009073348715901375,0.09382745623588562],[-0.019656673073768616,0.07597967982292175],[0.08463627845048904,0.31613102555274963],[0.24747821688652039,-0.09003434330224991],[0.014989825896918774,-0.27505549788475037],[-0.0476725697517395,0.19072502851486206],[-0.16474738717079163,0.08413469791412354],[-0.08450973778963089,0.05040968954563141]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06021163985133171,0.2615374028682709,0.6358042359352112],"rotation":[-0.00043083986383862793,-0.6938051581382751,-0.010644174180924892,-0.7200838923454285],"used":true,"bodyHandle":4.046e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.039937593042850494,-0.11184529960155487],[0.0874461755156517,-0.35755670070648193],[0.22803595662117004,0.016933495178818703],[0.2005147486925125,-0.1520257592201233],[0.06185205653309822,-0.05469253286719322],[0.026102621108293533,0.12056824564933777],[0.42406216263771057,0.1083574891090393],[0.10755971074104309,0.024833420291543007],[0.00712229497730732,0.027424264699220657],[-0.012574697844684124,0.11882555484771729]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.402030348777771,0.2156006246805191,0.7727189064025879],"rotation":[0.016898294910788536,0.01391834206879139,0.0256078839302063,0.9994323253631592],"used":true,"bodyHandle":4.05e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.05648239701986313,0.19706322252750397],[-0.39108309149742126,0.16692890226840973],[0.23355862498283386,-0.12653502821922302],[-0.4382646679878235,-0.03309353440999985],[-0.33375295996665955,-0.3656504452228546],[-0.2891019582748413,0.34832385182380676],[-0.38944530487060547,0.2904745638370514],[0.13439278304576874,0.07019779086112976],[0.18653132021427155,-0.1347070336341858],[0.1258944571018219,0.13477137684822083]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4004628658294678,0.21375027298927307,0.7705385088920593],"rotation":[-0.0014294424327090383,0.01619214564561844,0.00655959639698267,0.999846339225769],"used":true,"bodyHandle":4.056e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.008578457869589329,-0.0610281378030777],[-0.03773150593042374,0.090966135263443],[0.004974324721843004,0.08991807699203491],[0.03461964428424835,0.06199197471141815],[0.3393602669239044,0.297248899936676],[0.3034060299396515,-0.20313827693462372],[0.028692595660686493,-0.2917291224002838],[-0.080433689057827,0.09481198340654373],[-0.1343197077512741,0.037400681525468826],[-0.12479789555072784,0.0716327503323555]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.058006469160318375,0.25996196269989014,0.7055119872093201],"rotation":[-0.012375366874039173,-0.6519004106521606,0.006627820432186127,-0.7581746578216553],"used":true,"bodyHandle":4.06e-321,"linearSpeed":0,"angularVelocityHistory":[[0.10002943873405457,-0.15676411986351013],[0.03921985253691673,-0.25519222021102905],[0.1441417932510376,-0.2551908791065216],[0.1394975185394287,-0.13937066495418549],[0.06735050678253174,-0.009759249165654182],[0.08486602455377579,0.2926509976387024],[-0.33074066042900085,0.03664449229836464],[-0.2292354851961136,-0.19231291115283966],[-0.19955718517303467,-0.0011860951781272888],[-0.28381526470184326,-0.2708033621311188]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.40134572982788086,0.2167653888463974,0.7730104327201843],"rotation":[0.010250294581055641,0.01453007385134697,0.008214905858039856,0.999808132648468],"used":true,"bodyHandle":4.066e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.06986307352781296,0.23638886213302612],[-0.37683603167533875,0.20285511016845703],[0.21790555119514465,-0.15466053783893585],[-0.2530287802219391,-0.1857176423072815],[-0.17711730301380157,0.12525711953639984],[-0.0794236958026886,0.2925081253051758],[-0.46261847019195557,0.26287323236465454],[0.023819103837013245,0.060269810259342194],[0.2186020016670227,-0.13762305676937103],[0.08631332963705063,0.20412294566631317]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.40150779485702515,0.215825617313385,0.7688641548156738],"rotation":[-0.0007169094751589,0.028624532744288445,0.005460313055664301,0.9995750784873962],"used":true,"bodyHandle":4.07e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.014674542471766472,-0.038579508662223816],[-0.015763629227876663,-0.12063924968242645],[0.0727573111653328,-0.1797076016664505],[-0.010951975360512733,0.08630149066448212],[0.38167116045951843,0.20395606756210327],[0.35746535658836365,-0.10788804292678833],[0.03404417261481285,-0.3170017898082733],[-0.09513110667467117,0.2288522869348526],[-0.20846356451511383,0.09730272740125656],[-0.07940042018890381,0.1088113784790039]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00069616170367226,0.26016393303871155,0.7393166422843933],"rotation":[0.004204810597002506,-0.9902927279472351,0.005486047826707363,0.13882577419281006],"used":true,"bodyHandle":4.076e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.05516901612281799,-0.04706567898392677],[-0.005627097561955452,0.05715098977088928],[-0.08767065405845642,-0.09934745728969574],[0.04017948731780052,0.02076117880642414],[-0.043626584112644196,0.1282169073820114],[-0.1806289106607437,-0.01569674164056778],[-0.11249615252017975,-0.10786677151918411],[0.02169649675488472,-0.1294204145669937],[0.10539967566728592,0.13333351910114288],[-0.020047737285494804,-0.04194936528801918]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4010681211948395,0.21914732456207275,0.7729979753494263],"rotation":[0.012420311570167542,0.017569702118635178,0.016535839065909386,0.9996317625045776],"used":true,"bodyHandle":4.08e-321,"linearSpeed":0,"angularVelocityHistory":[[0.012063652276992798,0.1952514946460724],[-0.3728339672088623,0.17152120172977448],[0.32511356472969055,-0.04029429703950882],[-0.4266539514064789,0.9463687539100647],[0.07780837267637253,0.08736436069011688],[-0.021803615614771843,0.2028215378522873],[-0.3413489758968353,0.25783297419548035],[0.09964694827795029,0.1430921107530594],[0.03250247985124588,-0.11060265451669693],[0.07994502782821655,0.18090122938156128]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.40139323472976685,0.21825188398361206,0.7691569328308105],"rotation":[0.003361000446602702,0.03978751599788666,0.0008058928651735187,0.9992021918296814],"used":true,"bodyHandle":4.086e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.03174278140068054,-0.03979581221938133],[0.14090268313884735,-0.06339568644762039],[0.14014092087745667,-0.2641078531742096],[0.031321872025728226,0.08950988203287125],[0.41880902647972107,0.21523572504520416],[0.25560662150382996,-0.19137465953826904],[0.042349036782979965,-0.319033145904541],[-0.05146200954914093,0.1916622370481491],[-0.20936255156993866,0.10841752588748932],[-0.17245008051395416,0.14918066561222076]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.40112125873565674,0.22066444158554077,0.7723208069801331],"rotation":[0.020678512752056122,0.026291554793715477,0.026081230491399765,0.9991000890731812],"used":true,"bodyHandle":4.09e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.012464120984077454,0.186545729637146],[-0.09678079187870026,0.2038286328315735],[0.37631142139434814,-0.029842542484402657],[-0.14631329476833344,0.02711166813969612],[-0.15983466804027557,0.03753108158707619],[0.07434138655662537,0.11012900620698929],[-0.24241603910923004,0.12921638786792755],[0.08040877431631088,0.24413305521011353],[0.28822654485702515,-0.18174134194850922],[0.1416635662317276,0.21085119247436523]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05864005535840988,0.26171737909317017,0.7055338025093079],"rotation":[0.003952839877456427,-0.7569233179092407,-0.012696001678705215,0.653368353843689],"used":true,"bodyHandle":4.096e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.15019401907920837,0.013236996717751026],[-0.2085215449333191,0.031544800847768784],[0.08903978019952774,0.027991125360131264],[0.02877742238342762,-0.03993526101112366],[0.0741719976067543,-0.0954633504152298],[0.1377476304769516,-0.009638026356697083],[0.013769241981208324,-0.11833195388317108],[0.08002327382564545,-0.1516757607460022],[0.10306306928396225,-0.11664633452892303],[-0.04776262491941452,0.046377863734960556]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.3998475670814514,0.2231023758649826,0.771599292755127],"rotation":[0.011568646878004074,0.031884126365184784,0.0104521494358778,0.9993699193000793],"used":true,"bodyHandle":4.1e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.0005312649882398546,0.11168746650218964],[-0.12296077609062195,0.08073113858699799],[0.31617364287376404,-0.04124029353260994],[0.08286448568105698,-0.21234074234962463],[-0.20493631064891815,0.0821695551276207],[0.042539048939943314,0.19499877095222473],[-0.2219441682100296,0.1296478658914566],[0.03682937100529671,0.2940885126590729],[0.3049955368041992,-0.09305053949356079],[0.09211467206478119,0.14574596285820007]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.39866477251052856,0.22087177634239197,0.7693632245063782],"rotation":[0.001624958822503686,0.04702296853065491,0.001093480852432549,0.9988918304443359],"used":true,"bodyHandle":4.106e-321,"linearSpeed":0,"angularVelocityHistory":[[0.02776401862502098,-0.021908989176154137],[0.0820591077208519,-0.07378094643354416],[0.10467782616615295,-0.1402585804462433],[0.044472526758909225,0.09128199517726898],[0.4055156111717224,0.20799139142036438],[0.3245016038417816,-0.2096109837293625],[0.04195638746023178,-0.30846384167671204],[-0.10106465220451355,0.26682156324386597],[-0.2193695604801178,0.10066455602645874],[-0.028009561821818352,0.11285598576068878]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.059720903635025024,0.2620411515235901,0.6358594298362732],"rotation":[-0.003182558109983802,-0.4511414170265198,0.0057590426877141,0.8924282193183899],"used":true,"bodyHandle":4.11e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.017297102138400078,-0.09535478800535202],[-0.10892292857170105,0.01943078078329563],[-0.08996780216693878,-0.06771490722894669],[0.017199905589222908,-0.11063258349895477],[0.034647226333618164,0.11066260188817978],[-0.047197375446558,0.06793411821126938],[-0.011019167490303516,0.04874557629227638],[-0.07353738695383072,0.06111975014209747],[-0.01646423153579235,-0.044857822358608246],[0.05731804296374321,0.749755322933197]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4012566804885864,0.22604531049728394,0.7686534523963928],"rotation":[0.0132919205352664,-0.006501965690404177,0.020664623007178307,0.9996769428253174],"used":true,"bodyHandle":4.116e-321,"linearSpeed":0,"angularVelocityHistory":[[0.02323984168469906,0.1473492681980133],[-0.00882585160434246,0.05055311322212219],[0.3066786527633667,0.02880769595503807],[0.1962185502052307,0.17679810523986816],[-0.04289913922548294,0.3496924042701721],[0.09117940068244934,0.3572973310947418],[-0.1808518022298813,0.11257823556661606],[0.01787148043513298,0.300236314535141],[0.2701401710510254,0.0415567122399807],[0.18207547068595886,0.22867968678474426]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3991236090660095,0.2223009169101715,0.770482063293457],"rotation":[0.004182593896985054,0.040944650769233704,0.0005980151472613215,0.999152421951294],"used":true,"bodyHandle":4.12e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.0043940129689872265,0.06040560454130173],[0.12414409965276718,-0.12210271507501602],[0.16193275153636932,-0.3804299533367157],[0.06618621200323105,-0.09217626601457596],[0.396277517080307,0.12481487542390823],[0.24483053386211395,-0.18594512343406677],[0.16789346933364868,-0.1898578405380249],[-0.07730144262313843,0.3096406161785126],[-0.2066936194896698,0.19391998648643494],[-0.0039025654550641775,0.12357321381568909]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0014370960416272283,0.2624456584453583,0.6693901419639587],"rotation":[-0.004535281099379063,-0.3794569969177246,-0.023521414026618004,0.9248992204666138],"used":true,"bodyHandle":4.125e-321,"linearSpeed":0,"angularVelocityHistory":[[0.032325487583875656,-0.027996225282549858],[0.06527053564786911,0.14797517657279968],[-0.28611382842063904,-0.15600700676441193],[-0.08777421712875366,-0.06858715415000916],[-0.0801619291305542,0.07985036075115204],[-0.007428405340760946,-0.0966162458062172],[-0.13909032940864563,-0.16291461884975433],[0.1313101351261139,-0.4119255542755127],[-0.03515413776040077,-0.49400728940963745],[-0.1642802208662033,-0.20596560835838318]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4009568989276886,0.22847075760364532,0.7721622586250305],"rotation":[0.0188332237303257,0.05453917756676674,0.016642704606056213,0.9981952905654907],"used":true,"bodyHandle":4.13e-321,"linearSpeed":0,"angularVelocityHistory":[[0.053376588970422745,0.19389218091964722],[-0.10743432492017746,0.11451689898967743],[0.20780494809150696,0.08897297084331512],[0.05139922350645065,-0.1694503277540207],[-0.07892100512981415,0.014455454424023628],[0.3185688555240631,0.3677772879600525],[-0.14761687815189362,0.09885947406291962],[-0.0280647873878479,0.27009549736976624],[0.28884634375572205,0.054210737347602844],[0.16426962614059448,0.1565185934305191]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4011702835559845,0.22500932216644287,0.7684338688850403],"rotation":[0.005305598024278879,0.08486023545265198,0.0021106626372784376,0.9963765144348145],"used":true,"bodyHandle":4.135e-321,"linearSpeed":0,"angularVelocityHistory":[[0.0792488381266594,0.09631557762622833],[0.116872139275074,-0.14208978414535522],[0.22182351350784302,-0.6498722434043884],[0.04501078277826309,-0.12420912086963654],[0.4135023355484009,0.08217839151620865],[0.3522549569606781,-0.12160839885473251],[0.19189180433750153,-0.21587605774402618],[0.1064191535115242,0.35386455059051514],[-0.23527662456035614,0.10551226139068604],[-0.0018694858299568295,0.1309138536453247]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4012637138366699,0.2309904545545578,0.7691124081611633],"rotation":[0.030068431049585342,0.038810938596725464,0.019471704959869385,0.9986042380332947],"used":true,"bodyHandle":4.14e-321,"linearSpeed":0,"angularVelocityHistory":[[0.025273790583014488,0.0477895587682724],[0.03191230446100235,0.11102480441331863],[0.2275790423154831,0.18638956546783447],[0.40087324380874634,-0.3515985608100891],[-0.09037148207426071,0.026412421837449074],[0.245698019862175,0.3629186153411865],[-0.17505456507205963,0.12032470107078552],[-0.025289863348007202,0.26491838693618774],[0.2530149817466736,0.01629781909286976],[0.07354338467121124,0.0715867429971695]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0008894956554286182,0.26330846548080444,0.6016916036605835],"rotation":[0.001597865018993616,-0.18000857532024384,-0.01246004831045866,0.9835848212242126],"used":true,"bodyHandle":4.145e-321,"linearSpeed":0,"angularVelocityHistory":[[0.040437135845422745,-0.07620073109865189],[-0.13394449651241302,-0.10155962407588959],[0.1796085387468338,-0.14062391221523285],[0.2722547948360443,0.09585420787334442],[0.059694673866033554,0.21962907910346985],[0.008464556187391281,-0.09858875721693039],[0.06282456964254379,-0.0027788819279521704],[0.044088754802942276,-0.13434584438800812],[0.05041823908686638,-0.04365929588675499],[0.14951661229133606,0.26747792959213257]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.399596631526947,0.22790119051933289,0.7702748775482178],"rotation":[-0.00032267015194520354,0.035303305834531784,0.00318518397398293,0.9993714690208435],"used":true,"bodyHandle":4.15e-321,"linearSpeed":0,"angularVelocityHistory":[[0.04777456447482109,0.02207208424806595],[0.07881419360637665,-0.08862005174160004],[0.18879856169223785,-0.569489598274231],[0.1397622972726822,-0.08058913797140121],[0.43500667810440063,0.013268874026834965],[0.27528116106987,-0.09821759164333344],[0.26141658425331116,-0.1088729277253151],[-0.12915216386318207,0.3248935639858246],[-0.28971993923187256,0.13487115502357483],[-0.044131048023700714,0.1733684539794922]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.39945071935653687,0.23387327790260315,0.7713548541069031],"rotation":[0.01920524798333645,0.04523900896310806,0.015459001995623112,0.9986718893051147],"used":true,"bodyHandle":4.155e-321,"linearSpeed":0,"angularVelocityHistory":[[0.047482818365097046,0.0498092956840992],[0.000027689589842339046,0.005117224529385567],[0.1809406876564026,0.17659789323806763],[0.11432983726263046,-0.569269061088562],[-0.10987432301044464,0.015252436511218548],[0.22431178390979767,0.27651360630989075],[-0.16927284002304077,0.11412021517753601],[-0.027980240061879158,0.2842361032962799],[0.275014191865921,0.024212580174207687],[0.13483703136444092,0.12087284028530121]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06019410490989685,0.2650951147079468,0.6355350017547607],"rotation":[0.003720714943483472,-0.47302666306495667,0.008253505453467369,0.8810016512870789],"used":true,"bodyHandle":4.16e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.016887428238987923,-0.043951522558927536],[-0.13327306509017944,0.06377109885215759],[-0.07820107787847519,0.0729922503232956],[-0.19645605981349945,-0.051367901265621185],[0.05431613326072693,0.02008267492055893],[0.03285863995552063,-0.07211920619010925],[0.032448913902044296,-0.001067359116859734],[-0.059808891266584396,0.04138344153761864],[-0.173274427652359,0.007680151611566544],[0.05256865546107292,0.5448365211486816]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3979432284832001,0.22983314096927643,0.7709302306175232],"rotation":[0.009381935931742191,0.029038812965154648,0.0019753966480493546,0.9995322823524475],"used":true,"bodyHandle":4.165e-321,"linearSpeed":0,"angularVelocityHistory":[[0.0867849662899971,0.07690684497356415],[0.06948130577802658,-0.11451679468154907],[0.19426099956035614,-0.7273244857788086],[0.06162590906023979,-0.22643618285655975],[0.4310668408870697,-0.07973771542310715],[0.3342103064060211,-0.13058257102966309],[0.21136356890201569,-0.07501962780952454],[0.0006041430751793087,0.3079174757003784],[-0.212831512093544,0.16666442155838013],[-0.01907626911997795,0.1423608809709549]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4001549184322357,0.23646129667758942,0.7701022624969482],"rotation":[0.04308555647730827,0.03506675362586975,0.015824124217033386,0.9983303546905518],"used":true,"bodyHandle":4.17e-321,"linearSpeed":0,"angularVelocityHistory":[[0.11892682313919067,0.11277668923139572],[0.035630714148283005,0.09406537562608719],[0.20359480381011963,0.19707216322422028],[0.2573407292366028,-0.41213178634643555],[0.2697469890117645,0.1447066068649292],[0.6662344336509705,0.5390440821647644],[0.05254313722252846,0.17726336419582367],[-0.08772934973239899,0.2648240625858307],[0.2119920253753662,0.1430559605360031],[0.09602801501750946,0.01356540247797966]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05863817781209946,0.26516368985176086,0.7058929204940796],"rotation":[0.0027115752454847097,-0.7978731393814087,-0.018793409690260887,0.6025262475013733],"used":true,"bodyHandle":4.175e-321,"linearSpeed":0,"angularVelocityHistory":[[0.007532943040132523,0.1788620501756668],[-0.03585474193096161,0.28270837664604187],[0.17596861720085144,0.23648418486118317],[0.08377686142921448,0.04950911924242973],[0.11882281303405762,-0.024430422112345695],[0.12676610052585602,0.007657513953745365],[0.049236394464969635,-0.12467322498559952],[0.06595813482999802,-0.12231918424367905],[0.05296112969517708,-0.07687148451805115],[0.0704621970653534,-0.09022581577301025]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.3995232582092285,0.23864971101284027,0.7718417644500732],"rotation":[0.042917754501104355,0.06285349279642105,0.013813789002597332,0.9970038533210754],"used":true,"bodyHandle":4.18e-321,"linearSpeed":0,"angularVelocityHistory":[[0.09354957193136215,0.09559401124715805],[0.14015856385231018,-0.05900373309850693],[0.17345763742923737,0.21032875776290894],[0.3425549864768982,0.053073279559612274],[0.07510414719581604,0.1340811401605606],[0.1701570600271225,0.19696374237537384],[0.013457177206873894,0.1741383671760559],[-0.09056095033884048,0.2406863570213318],[0.213857963681221,0.07057688385248184],[0.09675485640764236,0.015319141559302807]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.39915627241134644,0.23277032375335693,0.7724952697753906],"rotation":[0.0023824244271963835,0.02200058475136757,0.007060970179736614,0.9997301697731018],"used":true,"bodyHandle":4.185e-321,"linearSpeed":0,"angularVelocityHistory":[[0.13736116886138916,0.07798390835523605],[0.02838059887290001,-0.02165915071964264],[0.21642491221427917,-0.715430498123169],[-0.08668489754199982,-0.10915125906467438],[0.39599916338920593,-0.16439621150493622],[0.31844666600227356,-0.07182609289884567],[0.24237926304340363,-0.05117150768637657],[-0.08124734461307526,0.3206528425216675],[-0.2080029994249344,0.2790755033493042],[-0.03856769576668739,0.17631462216377258]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0004344572080299258,0.2635429799556732,0.7392829656600952],"rotation":[0.0073228017427027225,-0.9920979142189026,0.0064210123382508755,0.12508752942085266],"used":true,"bodyHandle":4.19e-321,"linearSpeed":0,"angularVelocityHistory":[[0.02340983971953392,-0.12303035706281662],[0.051618173718452454,0.010906252078711987],[-0.01775730960071087,-0.06538629531860352],[0.02126397006213665,0.023145489394664764],[0.011293386109173298,0.14086687564849854],[-0.08834551274776459,0.03688237443566322],[-0.2096051573753357,-0.09463685005903244],[-0.11246225982904434,-0.1777372658252716],[0.0027367768343538046,-0.04748881980776787],[0.03990023955702782,-0.09614807367324829]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.39827024936676025,0.24258030951023102,0.7717064619064331],"rotation":[0.037563905119895935,0.04356589913368225,0.009137908928096294,0.9983022809028625],"used":true,"bodyHandle":4.195e-321,"linearSpeed":0,"angularVelocityHistory":[[0.22018927335739136,-0.07539524883031845],[0.15103495121002197,-0.043735090643167496],[0.1432342380285263,0.2210381031036377],[0.29021093249320984,-0.037441983819007874],[0.18865449726581573,0.11922328174114227],[0.11796825379133224,0.2634304165840149],[0.07648755609989166,0.16783934831619263],[-0.09941590577363968,0.22146539390087128],[0.20711475610733032,0.09104064851999283],[0.07675494253635406,0.027819765731692314]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3991334140300751,0.23508040606975555,0.7714822888374329],"rotation":[0.0031277795787900686,0.024436714127659798,0.007124162744730711,0.9996711015701294],"used":true,"bodyHandle":4.2e-321,"linearSpeed":0,"angularVelocityHistory":[[0.2044219821691513,-0.08638495206832886],[0.0610932782292366,-0.06149686500430107],[0.12643824517726898,-0.6530312895774841],[0.1560271978378296,-0.06906091421842575],[0.42917105555534363,-0.25545477867126465],[0.36558911204338074,-0.138787642121315],[0.24365636706352234,-0.07050929963588715],[-0.02980048768222332,0.31287458539009094],[-0.20516876876354218,0.18840302526950836],[-0.020303048193454742,0.2072327584028244]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.3989819288253784,0.24557766318321228,0.7710016965866089],"rotation":[0.05211654305458069,0.04044453054666519,0.004572564270347357,0.9978111982345581],"used":true,"bodyHandle":4.204e-321,"linearSpeed":0,"angularVelocityHistory":[[0.18759764730930328,0.00867079570889473],[0.16510367393493652,-0.05656324326992035],[0.204812690615654,0.1886838972568512],[0.3262058198451996,0.06332734227180481],[0.05082793906331062,0.14904716610908508],[0.4858139753341675,0.36844056844711304],[0.013748394325375557,0.16278095543384552],[-0.06442210078239441,0.16459603607654572],[0.19637984037399292,0.11580116301774979],[0.022450421005487442,-0.022007571533322334]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05883536487817764,0.26334208250045776,0.7055388689041138],"rotation":[-0.00770285539329052,-0.18471041321754456,0.010021989233791828,-0.9827116131782532],"used":true,"bodyHandle":4.21e-321,"linearSpeed":0,"angularVelocityHistory":[[0.11701854318380356,-0.03548171743750572],[-0.0032108481973409653,0.02041703462600708],[0.09223831444978714,-0.1840520203113556],[0.07061661779880524,-0.027374031022191048],[0.007986810989677906,-0.031701814383268356],[0.025361139327287674,0.26815667748451233],[-0.39594364166259766,0.03476596251130104],[-0.1791267991065979,-0.1671428233385086],[-0.24852991104125977,0.030505001544952393],[-0.25543615221977234,-0.17055848240852356]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.39886611700057983,0.2373359650373459,0.7717089056968689],"rotation":[-0.02211969532072544,0.020944716408848763,0.013677415437996387,0.9994423389434814],"used":true,"bodyHandle":4.214e-321,"linearSpeed":0,"angularVelocityHistory":[[0.07271692156791687,0.0445709191262722],[0.01242347713559866,-0.0349937379360199],[0.06786903738975525,-0.522901713848114],[-0.03163452073931694,-0.17513000965118408],[0.4088099002838135,-0.19498580694198608],[0.15852925181388855,-0.09337985515594482],[0.1859290450811386,-0.008532112464308739],[-0.13682004809379578,0.4610498249530792],[-0.3397807776927948,0.23463474214076996],[0.01084087323397398,0.189618319272995]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4001680314540863,0.24815861880779266,0.771091878414154],"rotation":[0.05515315756201744,0.0442192442715168,0.0011036780197173357,0.9974976778030396],"used":true,"bodyHandle":4.22e-321,"linearSpeed":0,"angularVelocityHistory":[[0.20362550020217896,-0.06071745231747627],[0.1192416325211525,-0.01659136451780796],[0.139743834733963,0.2049289494752884],[0.3023734390735626,0.07719859480857849],[0.22360946238040924,0.12610892951488495],[-0.08251558989286423,0.08239655941724777],[0.15997430682182312,0.1938403993844986],[-0.010562997311353683,0.2289590984582901],[0.1916113793849945,0.16663585603237152],[0.05398587882518768,-0.03763401508331299]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06001954898238182,0.2651020288467407,0.6354777812957764],"rotation":[-0.00580961350351572,0.056961607187986374,-0.00965555477887392,-0.998312771320343],"used":true,"bodyHandle":4.224e-321,"linearSpeed":0,"angularVelocityHistory":[[0.07329842448234558,0.06295183300971985],[0.028776682913303375,-0.05072895810008049],[0.16192418336868286,-0.018889712169766426],[0.26699838042259216,-0.05169779434800148],[0.11356361210346222,-0.08285126835107803],[0.026311250403523445,-0.044632211327552795],[0.24309656023979187,0.039445795118808746],[0.11870837211608887,-0.06993494182825089],[0.08909416943788528,0.0066901640966534615],[0.0254213884472847,0.011097325012087822]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.3997620642185211,0.24061906337738037,0.7713671922683716],"rotation":[0.00432165153324604,0.02533276006579399,0.017065877094864845,0.9995240569114685],"used":true,"bodyHandle":4.23e-321,"linearSpeed":0,"angularVelocityHistory":[[0.07142037898302078,0.03362356871366501],[-0.003570826491340995,0.02435857430100441],[0.03962661698460579,-0.5098188519477844],[0.21470023691654205,-0.11950814723968506],[0.3975391685962677,-0.33058658242225647],[0.1728191077709198,-0.050029363483190536],[0.16697722673416138,0.09067820757627487],[-0.02904030866920948,0.12643617391586304],[-0.16904757916927338,0.2116985321044922],[0.0019533021841198206,0.1642112135887146]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4004271924495697,0.25091439485549927,0.7720591425895691],"rotation":[0.06090085953474045,0.05087136849761009,-0.001466445391997695,0.996845543384552],"used":true,"bodyHandle":4.234e-321,"linearSpeed":0,"angularVelocityHistory":[[0.2753469944000244,-0.14668554067611694],[0.17412486672401428,-0.08902635425329208],[0.09496964514255524,0.2126888483762741],[0.2979600727558136,0.21298184990882874],[0.2359878271818161,0.0871475487947464],[0.1209508627653122,0.14181944727897644],[0.3111349642276764,0.1385859102010727],[-0.03285619243979454,0.055184055119752884],[0.08641062676906586,0.10944672673940659],[0.0030734215397387743,0.0002404905972070992]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4004882872104645,0.25392964482307434,0.7730366587638855],"rotation":[0.06755092740058899,0.03762199729681015,-0.002107656328007579,0.997003972530365],"used":true,"bodyHandle":4.24e-321,"linearSpeed":0,"angularVelocityHistory":[[0.21302422881126404,-0.0866655707359314],[0.1772991269826889,-0.09982623904943466],[0.0887056216597557,0.20881839096546173],[0.29151105880737305,0.19471344351768494],[0.22100460529327393,0.10115358978509903],[0.04100692644715309,0.23674334585666656],[0.20636172592639923,0.18834610283374786],[0.06471695750951767,0.012216649018228054],[0.18419402837753296,0.07054813206195831],[0.10355235636234283,-0.0030031083151698112]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.39931297302246094,0.24417026340961456,0.7730966806411743],"rotation":[-0.005814197473227978,0.016635863110423088,0.01850239560008049,0.9996734857559204],"used":true,"bodyHandle":4.244e-321,"linearSpeed":0,"angularVelocityHistory":[[0.08199657499790192,0.036409251391887665],[-0.027560817077755928,0.045296117663383484],[-0.017517251893877983,-0.43935585021972656],[0.15115666389465332,0.0017701227916404605],[0.3744347393512726,-0.3100385367870331],[0.19729962944984436,-0.10560309141874313],[0.18468952178955078,0.13698427379131317],[-0.009298831224441528,0.16985076665878296],[-0.2644248604774475,0.19462688267230988],[0.01612701453268528,0.1871853619813919]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00279440195299685,0.26587021350860596,0.6692037582397461],"rotation":[-0.0203662421554327,-0.6563202142715454,0.011600663885474205,-0.7541183233261108],"used":true,"bodyHandle":4.25e-321,"linearSpeed":0,"angularVelocityHistory":[[0.022262772545218468,-0.037188779562711716],[0.09963452070951462,0.11851490288972855],[-0.31134647130966187,-0.16293640434741974],[-0.01490160170942545,-0.12076423317193985],[-0.05571142956614494,0.01848207786679268],[0.18236535787582397,0.13997769355773926],[-0.029055407270789146,-0.1114877462387085],[0.005994608160108328,-0.20948466658592224],[-0.025229915976524353,-0.27908074855804443],[-0.074698306620121,-0.276282399892807]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4007382094860077,0.2568979561328888,0.7755451202392578],"rotation":[0.07289610803127289,0.04012240096926689,-0.0012254163157194853,0.9965314269065857],"used":true,"bodyHandle":4.254e-321,"linearSpeed":0,"angularVelocityHistory":[[0.3038293123245239,-0.16904392838478088],[0.20948411524295807,-0.058104194700717926],[0.08791627734899521,0.22968898713588715],[0.2803743779659271,0.22921012341976166],[0.1804722100496292,0.032609712332487106],[-0.05270744860172272,-0.019567051902413368],[0.2902202606201172,0.19077259302139282],[0.03819248452782631,0.04379572346806526],[0.10094656050205231,0.10951141268014908],[0.029576946049928665,0.0017474681371822953]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4023256301879883,0.24619048833847046,0.7728177905082703],"rotation":[-0.00970213022083044,0.011185326613485813,0.02066882885992527,0.9996767044067383],"used":true,"bodyHandle":4.26e-321,"linearSpeed":0,"angularVelocityHistory":[[0.067108653485775,0.03789861872792244],[-0.03558799624443054,0.055798064917325974],[0.03424164652824402,-0.3517850339412689],[0.05683887377381325,-0.0853034108877182],[0.31967538595199585,-0.22058814764022827],[0.09798768162727356,0.0029485595878213644],[0.3246975541114807,-0.021084511652588844],[0.17399410903453827,-0.306303471326828],[-0.05153447389602661,0.11755567044019699],[0.04249078407883644,0.18252280354499817]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0012158183380961418,0.26700860261917114,0.6018778085708618],"rotation":[-0.006598378997296095,-0.36667293310165405,0.008387148380279541,-0.9302886724472046],"used":true,"bodyHandle":4.264e-321,"linearSpeed":0,"angularVelocityHistory":[[0.13022078573703766,-0.08363348990678787],[-0.06936520338058472,-0.137498676776886],[0.2171228975057602,-0.10812701284885406],[0.36480429768562317,-0.007286903448402882],[0.15228047966957092,0.1418296843767166],[0.07417748868465424,-0.1282411366701126],[-0.03844987973570824,0.003816142911091447],[-0.02037973515689373,-0.1059316024184227],[0.07989562302827835,-0.055957816541194916],[0.14591862261295319,0.2203580141067505]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4018544852733612,0.26009422540664673,0.7758755087852478],"rotation":[0.07776670902967453,0.04179804399609566,-0.0010804071789607406,0.9960944652557373],"used":true,"bodyHandle":4.27e-321,"linearSpeed":0,"angularVelocityHistory":[[0.3039550483226776,-0.19816021621227264],[0.22691592574119568,-0.07890751212835312],[0.0842323750257492,0.14561055600643158],[0.24031956493854523,0.14448562264442444],[0.22312678396701813,-0.0018948045326396823],[-0.11674819886684418,0.042115744203329086],[0.269867867231369,0.11926928907632828],[0.17976145446300507,0.02425503171980381],[0.08102443069219589,0.10124436765909195],[0.1421850323677063,0.02108900621533394]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.40210527181625366,0.24861685931682587,0.7729684710502625],"rotation":[-0.008711576461791992,0.019366852939128876,0.020862465724349022,0.9995567798614502],"used":true,"bodyHandle":4.274e-321,"linearSpeed":0,"angularVelocityHistory":[[0.04943635314702988,0.06256178021430969],[-0.059960201382637024,0.10007300972938538],[0.07663161307573318,-0.4064118266105652],[0.14965204894542694,-0.05239441618323326],[0.2803252935409546,-0.2779048681259155],[0.053700581192970276,-0.04488641396164894],[0.18215766549110413,0.019772576168179512],[0.0550202801823616,-0.14183126389980316],[0.04913366213440895,0.1094520166516304],[0.07155953347682953,0.08260998874902725]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06030932441353798,0.26892784237861633,0.635848343372345],"rotation":[-0.004888799507170916,0.2430245727300644,-0.011122886091470718,-0.9699440002441406],"used":true,"bodyHandle":4.28e-321,"linearSpeed":0,"angularVelocityHistory":[[0.19260986149311066,0.1071915552020073],[0.08738476037979126,-0.0869656577706337],[0.22409479320049286,0.0532601997256279],[0.1741870492696762,-0.08922404050827026],[0.12010850757360458,-0.02369927428662777],[0.12258874624967575,0.004240317735821009],[0.27407604455947876,0.06609965115785599],[0.16926443576812744,-0.008230331353843212],[0.08591805398464203,0.017208991572260857],[0.05717439949512482,0.05767390504479408]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4008582532405853,0.2636408805847168,0.7757702469825745],"rotation":[0.07937940955162048,0.03755826875567436,-0.0018716483609750867,0.9961349368095398],"used":true,"bodyHandle":4.284e-321,"linearSpeed":0,"angularVelocityHistory":[[0.3508175313472748,-0.16625484824180603],[0.304705947637558,-0.09352456033229828],[0.1919803023338318,0.06131575256586075],[0.211936354637146,0.072247713804245],[0.32001107931137085,-0.06442004442214966],[-0.11954929679632187,0.01227152906358242],[0.3449532985687256,0.08008183538913727],[0.23487240076065063,-0.0021289708092808723],[0.11211536079645157,0.02078046277165413],[0.37290459871292114,-0.020247962325811386]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.3999321758747101,0.26723986864089966,0.778188169002533],"rotation":[0.08105480670928955,0.03623482957482338,0.0017469144659116864,0.9960492253303528],"used":true,"bodyHandle":4.29e-321,"linearSpeed":0,"angularVelocityHistory":[[0.3887195587158203,-0.1025642529129982],[0.3781577944755554,-0.03384307026863098],[0.25005316734313965,0.016901107504963875],[0.17615452408790588,0.05418967083096504],[0.3401705026626587,-0.027638360857963562],[-0.09306825697422028,-0.036647818982601166],[0.3594990670681,0.118235282599926],[0.34676051139831543,0.11803345382213593],[0.08810649812221527,0.0059233158826828],[0.21890825033187866,0.0963405892252922]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4012143611907959,0.2521815001964569,0.7733575105667114],"rotation":[-0.014622356742620468,0.027308087795972824,0.019250692799687386,0.9993347525596619],"used":true,"bodyHandle":4.293e-321,"linearSpeed":0,"angularVelocityHistory":[[0.0472070574760437,0.0641704872250557],[-0.06888984143733978,0.08763781934976578],[0.05001550167798996,-0.3933330178260803],[0.1762486696243286,-0.06539495289325714],[0.294105589389801,-0.20899057388305664],[0.06619168817996979,-0.006431214511394501],[0.11525917798280716,0.015384849160909653],[0.0694214329123497,-0.35335850715637207],[-0.020243411883711815,0.04541052132844925],[0.11160977929830551,0.005464077461510897]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0598381869494915,0.26776835322380066,0.7035848498344421],"rotation":[0.0016158625949174166,0.0552082322537899,0.007333449553698301,-0.9984466433525085],"used":true,"bodyHandle":4.3e-321,"linearSpeed":0,"angularVelocityHistory":[[0.06206458806991577,-0.043954990804195404],[-0.06463941186666489,-0.016091467812657356],[0.03764516860246658,-0.12241575121879578],[0.06309927254915237,-0.027836428955197334],[-0.0018308908911421895,0.002634703181684017],[-0.014392778277397156,0.19131530821323395],[-0.36395561695098877,0.01114854495972395],[-0.20001687109470367,-0.07409361749887466],[-0.26344582438468933,0.05958710238337517],[-0.28211379051208496,0.028432173654437065]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.3990521728992462,0.2714371085166931,0.7777658700942993],"rotation":[0.08347275108098984,0.016544893383979797,-0.004550374578684568,0.9963622689247131],"used":true,"bodyHandle":4.303e-321,"linearSpeed":0,"angularVelocityHistory":[[0.36095955967903137,-0.10138808935880661],[0.3648046851158142,-0.029236746951937675],[0.2508620321750641,0.022134121507406235],[0.19418951869010925,0.06089466065168381],[0.3666204810142517,-0.0001335690903943032],[0.03234134986996651,-0.10485462844371796],[0.3284185528755188,-0.03761463984847069],[0.32057350873947144,0.11568541079759598],[0.14949455857276917,0.016716083511710167],[0.3774704337120056,0.08073108643293381]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4030158817768097,0.25585973262786865,0.771226704120636],"rotation":[-0.014573471620678902,0.01061736885458231,0.02050596848130226,0.9996271729469299],"used":true,"bodyHandle":4.31e-321,"linearSpeed":0,"angularVelocityHistory":[[0.04681044816970825,0.05768860504031181],[-0.08724267780780792,0.12516917288303375],[0.01362860482186079,-0.2959773540496826],[0.16226071119308472,-0.025897571817040443],[0.23260270059108734,-0.21305420994758606],[-0.02201998606324196,0.015182656235992908],[0.04979221895337105,-0.0013275876408442855],[-0.05536976084113121,-0.21325527131557465],[0.0007338515133596957,0.010551407933235168],[0.06557877361774445,0.06571568548679352]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.00036252159043215215,0.267378032207489,0.7394565343856812],"rotation":[0.009245567955076694,-0.8101064562797546,-0.00092044856864959,-0.5862091779708862],"used":true,"bodyHandle":4.313e-321,"linearSpeed":0,"angularVelocityHistory":[[0.016783185303211212,-0.08715838938951492],[0.02901013009250164,0.015360231511294842],[-0.008870169520378113,-0.042493533343076706],[0.001594182918779552,0.009619382210075855],[0.018381409347057343,0.1060200184583664],[-0.0968843474984169,0.10974018275737762],[-0.15752679109573364,-0.10053261369466782],[-0.09771901369094849,-0.17182937264442444],[-0.016793396323919296,-0.10427512973546982],[0.009200363419950008,-0.10679452121257782]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.40138328075408936,0.2753632664680481,0.7797154188156128],"rotation":[0.08725659549236298,0.03566465526819229,-0.008130744099617004,0.9955139756202698],"used":true,"bodyHandle":4.32e-321,"linearSpeed":0,"angularVelocityHistory":[[0.38896992802619934,0.016359638422727585],[0.44247469305992126,-0.014310063794255257],[0.42576441168785095,-0.10367834568023682],[0.20405900478363037,0.023580461740493774],[0.4475302994251251,-0.01447407528758049],[0.17090141773223877,-0.3088635802268982],[0.3481263220310211,-0.17779913544654846],[0.39841756224632263,0.13820552825927734],[0.22106362879276276,0.04173810034990311],[0.5535122752189636,0.13910822570323944]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4024423360824585,0.258894145488739,0.7718374729156494],"rotation":[-0.02429017424583435,0.016281338408589363,0.023679597303271294,0.9992918372154236],"used":true,"bodyHandle":4.323e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.0026385944802314043,0.08242318779230118],[-0.07632225751876831,0.14549680054187775],[-0.011943859979510307,-0.3186611235141754],[0.17391575872898102,0.02965739741921425],[0.2359815537929535,-0.21285958588123322],[0.0013548905262723565,-0.022681824862957],[0.20053616166114807,-0.07537978142499924],[-0.13740922510623932,-0.09025373309850693],[0.04927046224474907,-0.09308033436536789],[0.10956262052059174,0.013614009134471416]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.058836281299591064,0.26851072907447815,0.7062084674835205],"rotation":[-0.00006481741729658097,-0.9076917171478271,-0.028039418160915375,0.4186997413635254],"used":true,"bodyHandle":4.33e-321,"linearSpeed":0,"angularVelocityHistory":[[0.07425007224082947,0.14418195188045502],[0.2559077739715576,0.40255945920944214],[0.1934862583875656,0.2564433515071869],[0.10470891743898392,-0.01192951388657093],[0.12900881469249725,-0.03618040308356285],[0.12268171459436417,-0.018083544448018074],[0.03258602321147919,-0.09529081732034683],[0.1641862988471985,-0.20198580622673035],[0.15324242413043976,-0.2010602355003357],[0.16297461092472076,-0.13832344114780426]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.40026846528053284,0.2807638645172119,0.7790960073471069],"rotation":[0.09002797305583954,0.027996910735964775,-0.007559438236057758,0.9955169558525085],"used":true,"bodyHandle":4.333e-321,"linearSpeed":0,"angularVelocityHistory":[[0.3613267242908478,0.00489588500931859],[0.42984315752983093,-0.02092885784804821],[0.4375542402267456,-0.07642658799886703],[0.24837511777877808,-0.023158909752964973],[0.44890764355659485,0.0036489656195044518],[0.175314798951149,-0.21334992349147797],[0.3440966010093689,-0.1519605666399002],[0.42824843525886536,0.2612798810005188],[0.21344804763793945,0.02709236554801464],[0.50896817445755,0.19211004674434662]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.40205252170562744,0.2621834874153137,0.7685815691947937],"rotation":[-0.025086894631385803,0.02698000706732273,0.02373357117176056,0.9990392327308655],"used":true,"bodyHandle":4.34e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.01626266911625862,0.098885677754879],[-0.09404539316892624,0.16156964004039764],[-0.04463351517915726,-0.13046538829803467],[0.15855289995670319,0.007821883074939251],[0.16411013901233673,-0.014245273545384407],[-0.060832612216472626,0.06764482706785202],[0.03876982629299164,-0.01866774819791317],[-0.0756385400891304,-0.17555846273899078],[0.06093491241335869,-0.06133950501680374],[0.13856077194213867,-0.013281709514558315]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05968513339757919,0.2700074315071106,0.6357096433639526],"rotation":[0.007857643999159336,-0.6867051124572754,0.0026520139072090387,0.7268887758255005],"used":true,"bodyHandle":4.343e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.032239943742752075,-0.054904356598854065],[-0.01246283296495676,0.06921625882387161],[-0.009531530551612377,0.06058334559202194],[-0.24027188122272491,-0.10367269814014435],[0.09509012848138809,0.029695993289351463],[-0.08385494351387024,-0.07625538110733032],[-0.07651828229427338,-0.014627644792199135],[-0.05369624122977257,0.03609234467148781],[-0.3742539584636688,0.017249152064323425],[-0.05603806674480438,0.10860149562358856]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.4007709324359894,0.28545302152633667,0.7813901901245117],"rotation":[0.08893625438213348,0.024874834343791008,-0.01284448429942131,0.9956437945365906],"used":true,"bodyHandle":4.35e-321,"linearSpeed":0,"angularVelocityHistory":[[0.373426228761673,0.06423556804656982],[0.45281076431274414,-0.0025030537508428097],[0.5604309439659119,-0.14030814170837402],[0.2801341414451599,-0.02820664271712303],[0.44091475009918213,-0.025754518806934357],[0.03261939808726311,-0.6355556845664978],[0.31259390711784363,-0.3409174680709839],[0.40766090154647827,0.23751090466976166],[0.36313971877098083,0.06510696560144424],[0.4697573482990265,0.11206461489200592]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.40188199281692505,0.2658778727054596,0.7685515880584717],"rotation":[-0.026624947786331177,0.022985108196735382,0.02640264667570591,0.9990323781967163],"used":true,"bodyHandle":4.353e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.011222480796277523,0.0894276574254036],[-0.10158439725637436,0.17072919011116028],[-0.0571952760219574,-0.04969156160950661],[0.13251928985118866,0.02988104708492756],[0.06402478367090225,0.018596813082695007],[-0.11180673539638519,0.13830140233039856],[-0.03986323997378349,0.07495743781328201],[-0.054056718945503235,-0.15717796981334686],[0.030629301443696022,-0.09186936169862747],[0.2226731777191162,-0.05407790094614029]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.40075671672821045,0.2907853424549103,0.7823234796524048],"rotation":[0.08709581941366196,0.013370241038501263,-0.013918525539338589,0.9960129261016846],"used":true,"bodyHandle":4.36e-321,"linearSpeed":0,"angularVelocityHistory":[[0.3682800829410553,0.08186455070972443],[0.449806272983551,-0.004054265096783638],[0.573358952999115,-0.14557600021362305],[0.28144511580467224,-0.02199236862361431],[0.437418133020401,-0.027462264522910118],[-0.02558184415102005,-0.612830400466919],[0.3163345456123352,-0.3328971564769745],[0.3835519850254059,0.25065332651138306],[0.37619122862815857,0.053021084517240524],[0.4518737494945526,0.13050158321857452]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0022976244799792767,0.2696876525878906,0.6715058088302612],"rotation":[0.008177632465958595,-0.1971418857574463,-0.02105499990284443,0.980114758014679],"used":true,"bodyHandle":4.363e-321,"linearSpeed":0,"angularVelocityHistory":[[0.048710260540246964,-0.048980504274368286],[0.15852025151252747,0.07719916105270386],[-0.2614336311817169,-0.1887783408164978],[-0.02021736465394497,-0.14654259383678436],[-0.03207724913954735,0.011521796695888042],[0.21336840093135834,0.09049370139837265],[-0.01807035319507122,-0.13887262344360352],[0.10322073101997375,-0.27131882309913635],[-0.06340504437685013,-0.25396400690078735],[-0.09041771292686462,-0.27786368131637573]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4024631977081299,0.26972806453704834,0.7687323689460754],"rotation":[-0.02935122512280941,0.020068001002073288,0.02993321791291237,0.9989193081855774],"used":true,"bodyHandle":4.37e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.013418344780802727,0.05884072557091713],[-0.10009162873029709,0.19304068386554718],[-0.05429578945040703,-0.06450242549180984],[0.16024810075759888,-0.013757904060184956],[0.07133501768112183,0.003870232030749321],[-0.10464032739400864,0.12790720164775848],[-0.005959280766546726,0.035432297736406326],[-0.09686806052923203,-0.04779760539531708],[-0.014047857373952866,-0.07118785381317139],[0.22111307084560394,-0.038164641708135605]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.40178099274635315,0.29671403765678406,0.7815296649932861],"rotation":[0.08611121773719788,-0.0002955833333544433,-0.015490706078708172,0.9961650371551514],"used":true,"bodyHandle":4.372e-321,"linearSpeed":0,"angularVelocityHistory":[[0.36517396569252014,0.07134804129600525],[0.4508337080478668,0.0049476162530481815],[0.5709222555160522,-0.13970287144184113],[0.27747806906700134,-0.017571309581398964],[0.4361204504966736,-0.033056363463401794],[-0.12915050983428955,-0.7594397664070129],[0.27766934037208557,-0.4348110854625702],[0.3695463538169861,0.2507285475730896],[0.3732595443725586,0.05135872960090637],[0.3473406434059143,0.0752449706196785]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0013310954673215747,0.27113771438598633,0.6014419198036194],"rotation":[0.01008444931358099,0.6995002627372742,-0.008047469891607761,0.7145158648490906],"used":true,"bodyHandle":4.377e-321,"linearSpeed":0,"angularVelocityHistory":[[0.25026533007621765,-0.059491172432899475],[-0.08940587192773819,-0.20518428087234497],[0.19026894867420197,0.015379860997200012],[0.13340488076210022,-0.12489298731088638],[0.17144961655139923,0.08585039526224136],[0.07758590579032898,-0.1250671148300171],[-0.053207527846097946,-0.06481465697288513],[0.0852789431810379,0.03934011608362198],[0.07899721711874008,-0.05781259015202522],[0.004929217975586653,0.021565096452832222]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.40266743302345276,0.27391597628593445,0.7689745426177979],"rotation":[-0.02661016397178173,0.018308810889720917,0.027397291734814644,0.9991025924682617],"used":true,"bodyHandle":4.38e-321,"linearSpeed":0,"angularVelocityHistory":[[0.012318160384893417,0.014941047877073288],[-0.10338548570871353,0.16371096670627594],[-0.1324804127216339,0.11143791675567627],[0.12517988681793213,0.04957318305969238],[0.0006521111354231834,-0.005604162812232971],[-0.06202353164553642,0.12720929086208344],[-0.10183916240930557,0.13297007977962494],[-0.14104191958904266,0.06778592616319656],[-0.08115546405315399,0.027543537318706512],[0.1274886578321457,-0.004223098512738943]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.40361401438713074,0.2784024477005005,0.7699249982833862],"rotation":[-0.02675313502550125,0.022866902872920036,0.026985136792063713,0.9990161061286926],"used":true,"bodyHandle":4.387e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.038501985371112823,0.042200151830911636],[-0.08558403700590134,0.16002808511257172],[-0.10259971767663956,0.07660343497991562],[0.1468612402677536,0.023617489263415337],[-0.017681725323200226,0.0063739013858139515],[-0.10613300651311874,0.14488600194454193],[-0.08609165996313095,0.12080732733011246],[-0.09885425120592117,0.03961659222841263],[-0.10084220767021179,0.02328573539853096],[0.14958767592906952,-0.017436206340789795]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05943187698721886,0.2741120457649231,0.6361005306243896],"rotation":[0.007862905971705914,-0.03885510191321373,0.006382101681083441,0.999193549156189],"used":true,"bodyHandle":4.39e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.025933904573321342,-0.03911382704973221],[0.032511670142412186,0.02380780316889286],[-0.03337494283914566,0.07085278630256653],[-0.24939900636672974,-0.10008464008569717],[0.08156147599220276,0.08482171595096588],[-0.16738997399806976,-0.07074668258428574],[-0.18088975548744202,-0.03136320784687996],[-0.09516198188066483,0.01634109392762184],[-0.20127137005329132,0.02232208475470543],[-0.09742974489927292,0.058262959122657776]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.40416446328163147,0.28308576345443726,0.7684046030044556],"rotation":[-0.026290783658623695,0.014202672056853771,0.027260350063443184,0.9991816878318787],"used":true,"bodyHandle":4.397e-321,"linearSpeed":0,"angularVelocityHistory":[[0.016995642334222794,-0.005431218538433313],[-0.09073209762573242,0.12314963340759277],[-0.14898236095905304,0.16056732833385468],[0.05984075367450714,0.10159134864807129],[-0.041823506355285645,-0.010653682053089142],[-0.0439370758831501,0.12588749825954437],[-0.12030554562807083,0.16378545761108398],[-0.14092129468917847,0.12144774943590164],[-0.10698139667510986,0.07568015903234482],[0.08167825639247894,-0.0069415331818163395]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.059897955507040024,0.2727316617965698,0.7065780162811279],"rotation":[-0.025436684489250183,-0.8326680064201355,-0.013880240730941296,-0.553013801574707],"used":true,"bodyHandle":4.4e-321,"linearSpeed":0,"angularVelocityHistory":[[0.049488820135593414,0.024991028010845184],[0.3459714353084564,0.3290204703807831],[0.1893581598997116,0.14194267988204956],[0.13874593377113342,-0.06315745413303375],[0.17143423855304718,-0.09648437052965164],[0.07511840015649796,-0.032410629093647],[0.12136582285165787,-0.20097336173057556],[0.17906975746154785,-0.23985296487808228],[0.21187910437583923,-0.25678303837776184],[0.1302415281534195,-0.19195108115673065]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.40391483902931213,0.28824105858802795,0.7692326903343201],"rotation":[-0.025111930444836617,0.008197708986699581,0.02697557769715786,0.999286949634552],"used":true,"bodyHandle":4.407e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.018230535089969635,-0.009972774423658848],[-0.08326130360364914,0.128138467669487],[-0.12258380651473999,0.16016103327274323],[0.0789979100227356,0.10568883270025253],[-0.05515933409333229,-0.011367397382855415],[-0.08063030242919922,0.11912707984447479],[-0.12290982156991959,0.16354630887508392],[-0.12169498205184937,0.11682434380054474],[-0.11950431764125824,0.06807117909193039],[0.09323805570602417,-0.003627413185313344]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.000035555163776734844,0.2723153531551361,0.7393659353256226],"rotation":[0.008526600897312164,-0.9313268065452576,0.0033171074464917183,-0.36406955122947693],"used":true,"bodyHandle":4.41e-321,"linearSpeed":0,"angularVelocityHistory":[[0.013578706420958042,-0.07943850755691528],[0.021594006568193436,-0.012533897534012794],[-0.003068614983931184,-0.0327213853597641],[-0.01806081458926201,-0.006175300572067499],[0.0258341021835804,0.0811702162027359],[-0.0901109054684639,0.1090005561709404],[-0.20426568388938904,-0.052047956734895706],[-0.14252859354019165,-0.11258690059185028],[-0.03733963146805763,-0.14321382343769073],[0.036275673657655716,-0.13136418163776398]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4032146632671356,0.2936721742153168,0.7689361572265625],"rotation":[-0.023928046226501465,0.009350749664008617,0.028199970722198486,0.9992721080780029],"used":true,"bodyHandle":4.417e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.02368566393852234,-0.008871585130691528],[-0.0769440084695816,0.10280371457338333],[-0.11713709682226181,0.1486975997686386],[0.04077991470694542,0.1589474380016327],[-0.07591454684734344,-0.01831374131143093],[-0.0910440981388092,0.1336742639541626],[-0.13874556124210358,0.16993238031864166],[-0.12724299728870392,0.1442273110151291],[-0.12962093949317932,0.09524456411600113],[0.07423998415470123,-0.004860632121562958]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05826187506318092,0.2715752422809601,0.7055022120475769],"rotation":[-0.012407469563186169,-0.19566237926483154,0.005991293117403984,-0.9805744886398315],"used":true,"bodyHandle":4.42e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.04472238942980766,0.0219118595123291],[-0.10157067328691483,0.11687012761831284],[-0.06220423802733421,0.011863330379128456],[-0.03792859613895416,0.023771703243255615],[-0.13380949199199677,0.009915344417095184],[-0.12116794288158417,0.1083347424864769],[-0.37854909896850586,0.016560092568397522],[-0.0846959725022316,-0.013705853372812271],[-0.23851172626018524,0.07846911996603012],[-0.28924933075904846,0.010428504087030888]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.4043505787849426,0.2993805706501007,0.7702076435089111],"rotation":[-0.023258479312062263,0.0013188092270866036,0.028178345412015915,0.9993313550949097],"used":true,"bodyHandle":4.427e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.03229035809636116,-0.023992961272597313],[-0.06996411830186844,0.09410734474658966],[-0.10449685901403427,0.15838001668453217],[0.005068465135991573,0.21502315998077393],[-0.09805670380592346,-0.03688136115670204],[-0.10572685301303864,0.12976683676242828],[-0.1405482292175293,0.16319029033184052],[-0.12823797762393951,0.1672287881374359],[-0.13329768180847168,0.11634717136621475],[0.0633327066898346,-0.005624611396342516]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0600944347679615,0.27313432097435,0.6334837079048157],"rotation":[0.005552840419113636,-0.5754125118255615,-0.011908912099897861,-0.8177578449249268],"used":true,"bodyHandle":4.43e-321,"linearSpeed":0,"angularVelocityHistory":[[0.0523238405585289,0.08358466625213623],[0.10321846604347229,-0.05851820111274719],[0.2588823735713959,0.08213678002357483],[0.2078401893377304,0.016654133796691895],[0.15794114768505096,0.0409189835190773],[0.11981615424156189,-0.06380021572113037],[0.19685475528240204,-0.02004241570830345],[0.19967195391654968,-0.0606098510324955],[0.11413057148456573,0.039090029895305634],[0.1176767572760582,0.026486137881875038]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.003106044139713049,0.27382692694664,0.6698765158653259],"rotation":[-0.02121575176715851,-0.7720975875854492,-0.0009005389292724431,-0.6351490616798401],"used":true,"bodyHandle":4.437e-321,"linearSpeed":0,"angularVelocityHistory":[[0.03087507374584675,-0.009962419047951698],[0.1890122890472412,0.02885407954454422],[-0.2756410241127014,-0.27758532762527466],[0.06829952448606491,-0.11518827825784683],[0.03625450283288956,-0.13611187040805817],[0.23015224933624268,0.16534608602523804],[0.09964831173419952,-0.0400177538394928],[-0.08674879372119904,-0.018044186756014824],[-0.03196904435753822,-0.05747345834970474],[-0.040494661778211594,-0.14919577538967133]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0013454818399623036,0.2762672007083893,0.6017404794692993],"rotation":[-0.004238379653543234,-0.46375933289527893,0.013452510349452496,-0.8858489394187927],"used":true,"bodyHandle":4.44e-321,"linearSpeed":0,"angularVelocityHistory":[[0.2664110064506531,-0.01320010144263506],[-0.07127879559993744,-0.17395630478858948],[0.17800432443618774,-0.0025998372584581375],[0.16805441677570343,-0.07268308848142624],[0.1994324028491974,0.1404830515384674],[0.09621462225914001,-0.07505237311124802],[-0.028208058327436447,-0.007938958704471588],[0.05455245077610016,-0.00036331487353891134],[0.0933237075805664,-0.03092881105840206],[0.029959751293063164,0.0554623007774353]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.06065230444073677,0.27759087085723877,0.6360943913459778],"rotation":[0.008689622394740582,-0.7445916533470154,-0.012120852246880531,-0.6673535704612732],"used":true,"bodyHandle":4.447e-321,"linearSpeed":0,"angularVelocityHistory":[[0.07305401563644409,0.04308544844388962],[0.13125735521316528,0.046215664595365524],[0.19278287887573242,0.052097853273153305],[0.1581210196018219,0.041144147515296936],[0.22834351658821106,0.05014294013381004],[0.2316204011440277,-0.021682223305106163],[0.09706832468509674,-0.002188318409025669],[0.23620449006557465,-0.09654735773801804],[0.15951353311538696,0.029482688754796982],[0.174892857670784,-0.016185685992240906]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05817535147070885,0.2757906913757324,0.7048566937446594],"rotation":[-0.008413620293140411,-0.7365373969078064,-0.0029396764002740383,-0.6763380169868469],"used":true,"bodyHandle":4.45e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.011791403405368328,0.07364283502101898],[-0.010003156028687954,0.24628853797912598],[-0.059696875512599945,0.09212874621152878],[-0.015667781233787537,0.1317301094532013],[-0.0869833454489708,0.07885643094778061],[-0.1287440061569214,-0.03592643514275551],[-0.30913254618644714,0.06982177495956421],[0.02476624958217144,0.03796352446079254],[-0.30605876445770264,0.15419337153434753],[-0.2991408109664917,0.21946154534816742]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00016262101416941732,0.27743807435035706,0.7387568950653076],"rotation":[0.00942214671522379,-0.9642184376716614,0.00729358708485961,-0.26484134793281555],"used":true,"bodyHandle":4.456e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.03125986084342003,-0.09715257585048676],[-0.009499408304691315,-0.025596387684345245],[-0.022367725148797035,-0.0386798232793808],[-0.026276949793100357,-0.013813285157084465],[0.026545565575361252,0.08377347141504288],[-0.16437220573425293,0.08000025898218155],[-0.1910896748304367,-0.07206620275974274],[-0.12678773701190948,-0.11170915514230728],[-0.045414336025714874,-0.14885298907756805],[0.06715770810842514,-0.11452654749155045]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06000657379627228,0.2772371768951416,0.706728994846344],"rotation":[-0.02291707508265972,-0.8481888175010681,-0.014747349545359612,-0.5289924144744873],"used":true,"bodyHandle":4.46e-321,"linearSpeed":0,"angularVelocityHistory":[[0.00939569529145956,-0.017548395320773125],[0.4352053999900818,0.3111940920352936],[0.17877501249313354,0.14599701762199402],[0.13956108689308167,-0.04223032295703888],[0.19775305688381195,-0.06187671795487404],[0.05062401667237282,-0.005148029886186123],[0.11580318212509155,-0.15186931192874908],[0.18480490148067474,-0.21740102767944336],[0.23096638917922974,-0.25075963139533997],[0.14083224534988403,-0.14995361864566803]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.059446144849061966,0.27925288677215576,0.6361702084541321],"rotation":[0.011048656888306141,-0.017007993534207344,0.009020871482789516,0.9997535943984985],"used":true,"bodyHandle":4.466e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.026299843564629555,-0.04599068686366081],[0.06126762926578522,0.08605121076107025],[-0.026216844096779823,0.13032899796962738],[-0.20831556618213654,-0.06768306344747543],[0.11068128794431686,0.16865523159503937],[-0.19671852886676788,-0.16038762032985687],[-0.2131453901529312,-0.13291209936141968],[-0.07824636995792389,0.04155929014086723],[-0.21639424562454224,0.0486457496881485],[-0.06333335489034653,0.08153341710567474]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0029160953126847744,0.278214693069458,0.671058714389801],"rotation":[0.014336609281599522,0.017836321145296097,-0.00957659725099802,0.9996922612190247],"used":true,"bodyHandle":4.47e-321,"linearSpeed":0,"angularVelocityHistory":[[0.03790861368179321,-0.022201666608452797],[0.1880919486284256,0.022264372557401657],[-0.27898526191711426,-0.3028247356414795],[0.05630394071340561,-0.12211613357067108],[0.028348702937364578,-0.15083923935890198],[0.22174662351608276,0.14318424463272095],[0.11242260783910751,-0.07198136299848557],[-0.0570380873978138,-0.10338839143514633],[-0.023350046947598457,-0.05823585391044617],[-0.017964888364076614,-0.18633727729320526]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0014523701975122094,0.2810289263725281,0.6014728546142578],"rotation":[0.003973371349275112,0.4720950126647949,-0.014079747721552849,0.8814262747764587],"used":true,"bodyHandle":4.476e-321,"linearSpeed":0,"angularVelocityHistory":[[0.27151772379875183,-0.020065033808350563],[-0.07959631830453873,-0.29119986295700073],[0.14647212624549866,0.0672711431980133],[0.0850948840379715,-0.043253712356090546],[0.20562182366847992,0.007883690297603607],[0.1076064333319664,-0.05292772501707077],[-0.008272094652056694,-0.10302326828241348],[0.11840338259935379,0.14322201907634735],[0.09356009215116501,-0.009334067814052105],[-0.01645915023982525,-0.00601273775100708]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05928558111190796,0.2840711176395416,0.636222243309021],"rotation":[0.013271692208945751,-0.017321908846497536,0.010845671407878399,0.999703049659729],"used":true,"bodyHandle":4.48e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.032386939972639084,-0.053073663264513016],[0.16235293447971344,0.008785245940089226],[0.04652952402830124,0.16153010725975037],[-0.22372663021087646,-0.09052305668592453],[0.14286461472511292,0.13413329422473907],[-0.23334389925003052,-0.1672695130109787],[-0.3014910817146301,-0.16162051260471344],[-0.06953809410333633,0.015839368104934692],[-0.10468645393848419,0.029545694589614868],[-0.1206325814127922,-0.049045320600271225]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05997179076075554,0.2820396423339844,0.706795871257782],"rotation":[-0.018340852111577988,-0.9459977149963379,-0.020642247051000595,-0.322995126247406],"used":true,"bodyHandle":4.486e-321,"linearSpeed":0,"angularVelocityHistory":[[0.0087149478495121,-0.011221994645893574],[0.397818386554718,0.2836453318595886],[0.19315414130687714,0.155568465590477],[0.14866356551647186,-0.039343710988759995],[0.20015586912631989,-0.06595944613218307],[0.062021832913160324,0.007127663120627403],[0.13772384822368622,-0.14301960170269012],[0.18557235598564148,-0.21558278799057007],[0.2311134785413742,-0.2509426176548004],[0.16953317821025848,-0.13805976510047913]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00010700801794882864,0.282196044921875,0.7387836575508118],"rotation":[0.012483406811952591,-0.8607539534568787,0.0044225906021893024,-0.5088488459587097],"used":true,"bodyHandle":4.49e-321,"linearSpeed":0,"angularVelocityHistory":[[0.021698933094739914,-0.0590641126036644],[0.013284641318023205,-0.05198032408952713],[0.005267850589007139,-0.027652813121676445],[-0.05811970680952072,-0.03260522335767746],[0.023728525266051292,0.047386426478624344],[-0.04381201043725014,0.0759960487484932],[-0.29137200117111206,-0.011864776723086834],[-0.19842897355556488,-0.07652635872364044],[-0.08344671130180359,-0.18938136100769043],[0.09288471937179565,-0.17769207060337067]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.058716196566820145,0.2805699408054352,0.705091655254364],"rotation":[-0.00973387248814106,-0.3612038493156433,-0.000794963154476136,-0.9324356913566589],"used":true,"bodyHandle":4.496e-321,"linearSpeed":0,"angularVelocityHistory":[[0.004937406163662672,0.03375733271241188],[-0.02075151912868023,0.2397259771823883],[-0.06429041922092438,0.14595355093479156],[0.0006556519656442106,0.11841652542352676],[-0.08737067878246307,0.029735635966062546],[-0.08704914897680283,-0.014219376258552074],[-0.346323162317276,0.010351886041462421],[0.14957557618618011,0.11340267956256866],[-0.29491814970970154,0.16387204825878143],[-0.2992486357688904,0.2508985102176666]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.061058249324560165,0.28232917189598083,0.6361766457557678],"rotation":[0.0030776215717196465,-0.3347983658313751,-0.0168444961309433,-0.9421342015266418],"used":true,"bodyHandle":4.5e-321,"linearSpeed":0,"angularVelocityHistory":[[0.07188709825277328,0.10559332370758057],[0.13140924274921417,0.03813765197992325],[0.19835688173770905,0.028734199702739716],[0.15254956483840942,0.004429685417562723],[0.2249855250120163,0.04220449551939964],[0.24074766039848328,0.03712419420480728],[0.10064491629600525,-0.01300568412989378],[0.240144744515419,-0.06190276890993118],[0.15485236048698425,0.027381185442209244],[0.17085586488246918,-0.02343989722430706]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.003128073876723647,0.28301987051963806,0.6702337861061096],"rotation":[-0.015904579311609268,-0.8902740478515625,-0.009105309844017029,-0.455056369304657],"used":true,"bodyHandle":4.506e-321,"linearSpeed":0,"angularVelocityHistory":[[0.04068055376410484,0.048551302403211594],[0.15576279163360596,-0.016411004588007927],[-0.16696055233478546,-0.28431421518325806],[0.11270447820425034,-0.042802952229976654],[0.10982059687376022,-0.2532477378845215],[0.18755793571472168,0.11745739728212357],[0.21341398358345032,-0.0031343535520136356],[-0.018226563930511475,0.0017640694277361035],[-0.05378185212612152,0.10113856941461563],[0.00006202013901202008,-0.006033316254615784]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.001646187505684793,0.2863350212574005,0.6014551520347595],"rotation":[-0.0005325332749634981,-0.3755330741405487,0.017482321709394455,-0.926643967628479],"used":true,"bodyHandle":4.51e-321,"linearSpeed":0,"angularVelocityHistory":[[0.22381676733493805,0.013699619099497795],[-0.07636430114507675,-0.30207303166389465],[0.1481001228094101,0.06652684509754181],[0.09243843704462051,-0.04646717384457588],[0.2234378606081009,0.011727392673492432],[0.09631171822547913,-0.0020600457210093737],[0.0107556888833642,-0.1012120172381401],[0.09927814453840256,0.14659005403518677],[0.09959892183542252,-0.00695531303063035],[0.012227732688188553,-0.048686277121305466]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.060800712555646896,0.28741833567619324,0.6360800862312317],"rotation":[0.0074721286073327065,-0.5940718054771423,-0.014280556701123714,-0.8042505979537964],"used":true,"bodyHandle":4.516e-321,"linearSpeed":0,"angularVelocityHistory":[[0.07282373309135437,-0.009627550840377808],[0.1659671515226364,0.09937164932489395],[0.1567043960094452,-0.005819408688694239],[0.1452452838420868,0.04753611981868744],[0.24733306467533112,0.036920495331287384],[0.24679474532604218,0.0792548879981041],[0.09736162424087524,-0.01027650386095047],[0.2130317986011505,-0.10305720567703247],[0.1875816285610199,0.01735551282763481],[0.18470172584056854,-0.0223013274371624]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05899432674050331,0.2856477200984955,0.7056640386581421],"rotation":[-0.014345087110996246,-0.3924000561237335,0.000041919294744729996,-0.9196827411651611],"used":true,"bodyHandle":4.52e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.015073065645992756,0.035285741090774536],[0.05076714605093002,0.24808122217655182],[0.010824602097272873,0.09226350486278534],[-0.014468460343778133,0.1291828602552414],[-0.08186651766300201,0.05674898996949196],[-0.06459056586027145,-0.03620010241866112],[-0.3454938530921936,0.011307396925985813],[0.1359335035085678,0.1193113625049591],[-0.2853713929653168,0.2234267145395279],[-0.28455278277397156,0.24021562933921814]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00048664581845514476,0.28722986578941345,0.7385135293006897],"rotation":[0.009255151264369488,-0.9979605674743652,0.012349952012300491,0.061939798295497894],"used":true,"bodyHandle":4.526e-321,"linearSpeed":0,"angularVelocityHistory":[[0.028896428644657135,-0.059559594839811325],[0.01387591939419508,-0.06788695603609085],[0.045205820351839066,-0.0075430735014379025],[-0.058582425117492676,-0.03523978218436241],[0.02113364450633526,0.04660393297672272],[-0.05507383123040199,0.02996753714978695],[-0.2899829149246216,-0.01935993693768978],[-0.20628385245800018,0.01876360923051834],[-0.08460694551467896,-0.20332209765911102],[0.09532596915960312,-0.1724829077720642]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05924886092543602,0.28710827231407166,0.7089455723762512],"rotation":[-0.00040577666368335485,-0.9343588948249817,-0.027805402874946594,0.3552464544773102],"used":true,"bodyHandle":4.53e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.081076979637146,-0.0742345079779625],[0.5233411192893982,0.2718672752380371],[0.1965370774269104,0.11708629876375198],[0.1678759753704071,-0.04894407466053963],[0.25214478373527527,-0.03707633167505264],[0.052333585917949677,0.0006058457656763494],[0.17992031574249268,-0.11694923788309097],[0.21398137509822845,-0.183253213763237],[0.27918264269828796,-0.24484755098819733],[0.2385263293981552,-0.18648502230644226]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05950890854001045,0.28918588161468506,0.6361432075500488],"rotation":[0.018756568431854248,-0.7911806702613831,-0.0042891367338597775,0.6112796664237976],"used":true,"bodyHandle":4.536e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.03957366198301315,-0.08882372081279755],[0.16595575213432312,0.016594387590885162],[0.12127530574798584,0.10463053733110428],[-0.33842769265174866,-0.13110889494419098],[0.1390589475631714,0.16948460042476654],[-0.2599048614501953,-0.11320975422859192],[-0.2946936786174774,-0.19416643679141998],[-0.0812377780675888,0.03292567655444145],[-0.020909113809466362,0.041632551699876785],[-0.16019964218139648,-0.08931563049554825]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.002665116684511304,0.28805065155029297,0.6714704632759094],"rotation":[0.01878330111503601,0.06691943109035492,-0.006416798569262028,0.9975609183311462],"used":true,"bodyHandle":4.54e-321,"linearSpeed":0,"angularVelocityHistory":[[0.026844648644328117,0.03264297544956207],[0.16247610747814178,-0.007954562082886696],[-0.17099915444850922,-0.29389914870262146],[0.09249848872423172,-0.05442388728260994],[0.1222836896777153,-0.2435302585363388],[0.16800051927566528,0.11844770610332489],[0.22858791053295135,-0.00261475145816803],[0.03314110264182091,0.024433312937617302],[-0.062120046466588974,0.07137016206979752],[0.0175467561930418,-0.017328929156064987]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.001875617541372776,0.2917201519012451,0.6011455059051514],"rotation":[-0.0009010016801767051,0.4474135935306549,-0.018135149031877518,0.8941428065299988],"used":true,"bodyHandle":4.545e-321,"linearSpeed":0,"angularVelocityHistory":[[0.20358441770076752,0.015652552247047424],[-0.0539497509598732,-0.40061330795288086],[0.10649606585502625,0.04202016070485115],[0.0753328800201416,-0.002226626267656684],[0.2261742800474167,-0.03309622406959534],[0.08769620954990387,0.008226209320127964],[0.04831195995211601,-0.1353580355644226],[0.11019038408994675,0.18455740809440613],[0.09414874762296677,0.021465882658958435],[0.032642390578985214,-0.035306382924318314]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05930957570672035,0.29473677277565,0.6362561583518982],"rotation":[0.02040858007967472,-0.8049547076225281,-0.005863231141120195,0.5929561853408813],"used":true,"bodyHandle":4.55e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.04182322695851326,-0.08717601001262665],[0.1659531146287918,0.032408542931079865],[0.12749597430229187,0.11462020128965378],[-0.33947980403900146,-0.15341049432754517],[0.15363748371601105,0.19050167500972748],[-0.2639589309692383,-0.1094575822353363],[-0.2978819012641907,-0.201002836227417],[-0.07804156094789505,0.03755006939172745],[-0.017808634787797928,0.05992251634597778],[-0.1551869809627533,-0.07914333045482635]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.06093314290046692,0.2926972508430481,0.7076942324638367],"rotation":[-0.006550848018378019,-0.9994319081306458,-0.0254707969725132,0.021077262237668037],"used":true,"bodyHandle":4.555e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.06856212019920349,-0.08311007171869278],[0.48500338196754456,0.3145945370197296],[0.20374718308448792,0.11419355869293213],[0.16421106457710266,-0.047834403812885284],[0.23889410495758057,-0.030581051483750343],[0.05733170360326767,-0.005990412551909685],[0.18142598867416382,-0.13125014305114746],[0.20800496637821198,-0.1855200082063675],[0.27659791707992554,-0.24367651343345642],[0.23115479946136475,-0.184180349111557]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.00047053018352016807,0.2928064465522766,0.738734245300293],"rotation":[0.010938000865280628,-0.970184326171875,0.008390597999095917,-0.2419757843017578],"used":true,"bodyHandle":4.56e-321,"linearSpeed":0,"angularVelocityHistory":[[0.02828379161655903,-0.0661616250872612],[0.017622264102101326,-0.07140305638313293],[0.043160293251276016,-0.0074381157755851746],[-0.06799706816673279,-0.0371210090816021],[0.015625402331352234,0.03306824341416359],[0.021532762795686722,0.023784345015883446],[-0.32074302434921265,0.018576035276055336],[-0.2096937745809555,0.03361009433865547],[-0.0862569510936737,-0.19148488342761993],[0.11885508894920349,-0.22547361254692078]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.059074558317661285,0.29101523756980896,0.7053900361061096],"rotation":[-0.010724266991019249,-0.646310567855835,-0.0036037492100149393,-0.7629905939102173],"used":true,"bodyHandle":4.565e-321,"linearSpeed":0,"angularVelocityHistory":[[0.011050563305616379,-0.009022077545523643],[0.05745222046971321,0.24872952699661255],[0.11002261191606522,0.033400531858205795],[-0.0016478024190291762,0.15038315951824188],[-0.0673074722290039,0.05352311581373215],[0.03641033545136452,-0.08623342961072922],[-0.4433903098106384,0.026607435196638107],[0.3510116636753082,0.10297302156686783],[-0.26658493280410767,0.22305606305599213],[-0.3020656108856201,0.32064130902290344]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.060958102345466614,0.2930653989315033,0.6360190510749817],"rotation":[0.003789701033383608,-0.4071369171142578,-0.015153490006923676,-0.9132335782051086],"used":true,"bodyHandle":4.57e-321,"linearSpeed":0,"angularVelocityHistory":[[0.05494393780827522,0.013398721814155579],[0.1551833599805832,0.10134994238615036],[0.17186802625656128,-0.009082064963877201],[0.15390914678573608,0.03610090911388397],[0.25247347354888916,0.0337078832089901],[0.21522757411003113,0.09693162143230438],[0.10509388893842697,-0.013110344298183918],[0.20241181552410126,-0.09361444413661957],[0.1832692176103592,0.021779417991638184],[0.18560437858104706,-0.026625072583556175]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0031715643126517534,0.29344642162323,0.6710052490234375],"rotation":[-0.017209988087415695,-0.8060964941978455,-0.01138082891702652,-0.5914242267608643],"used":true,"bodyHandle":4.575e-321,"linearSpeed":0,"angularVelocityHistory":[[0.045018840581178665,0.08335809409618378],[0.10254180431365967,-0.018960485234856606],[-0.1107383444905281,-0.23619942367076874],[0.13703347742557526,-0.00036685061058960855],[0.1265348494052887,-0.25982946157455444],[0.15841980278491974,0.0757281631231308],[0.2410205751657486,0.017176417633891106],[0.04423629119992256,0.02968144416809082],[-0.06732919812202454,0.12151055037975311],[-0.012623696587979794,0.11932428181171417]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.0020445489790290594,0.29740428924560547,0.6010687947273254],"rotation":[0.012583086267113686,0.2397586852312088,0.013070552609860897,-0.9706629514694214],"used":true,"bodyHandle":4.58e-321,"linearSpeed":0,"angularVelocityHistory":[[0.2012363225221634,0.012148800306022167],[-0.044549986720085144,-0.35649731755256653],[0.10722615569829941,0.040364306420087814],[0.07738958299160004,-0.0072961850091814995],[0.2286125123500824,-0.018637651577591896],[0.08592499047517776,0.006694321054965258],[0.048449091613292694,-0.11386476457118988],[0.10143105685710907,0.1659979224205017],[0.09085146337747574,0.025817373767495155],[0.032481953501701355,-0.021849507465958595]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.061765413731336594,0.29873690009117126,0.6361767649650574],"rotation":[0.0006073720869608223,-0.2042510211467743,-0.015816010534763336,-0.9787905812263489],"used":true,"bodyHandle":4.585e-321,"linearSpeed":0,"angularVelocityHistory":[[0.04776482284069061,-0.0019530383870005608],[0.16953063011169434,0.11494355648756027],[0.1574796736240387,-0.02644808404147625],[0.16140124201774597,0.03641284257173538],[0.2602532207965851,0.028715575113892555],[0.19832752645015717,0.13744284212589264],[0.12243690341711044,-0.02857573889195919],[0.17855742573738098,-0.08717755973339081],[0.19432365894317627,0.010391924530267715],[0.18973298370838165,-0.027548447251319885]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.05850778892636299,0.29673635959625244,0.7046349048614502],"rotation":[-0.010934123769402504,-0.6777262091636658,-0.0033555892296135426,-0.7352253198623657],"used":true,"bodyHandle":4.59e-321,"linearSpeed":0,"angularVelocityHistory":[[0.0016936647007241845,-0.015996163710951805],[0.05542051047086716,0.25160178542137146],[0.09269353002309799,-0.0012618985492736101],[-0.0008645158959552646,0.15301017463207245],[-0.0687115341424942,0.059899840503931046],[0.02631402760744095,-0.10447662323713303],[-0.4345396161079407,0.04050301015377045],[0.31053999066352844,0.093526691198349],[-0.27397921681404114,0.23537872731685638],[-0.30066367983818054,0.286110520362854]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[-0.0004926987458020449,0.29858553409576416,0.7386197447776794],"rotation":[0.010366004891693592,-0.9940512180328369,0.010268338955938816,-0.1079317033290863],"used":true,"bodyHandle":4.595e-321,"linearSpeed":0,"angularVelocityHistory":[[0.03865361958742142,-0.047524940222501755],[0.022568324580788612,-0.06969157606363297],[0.055743370205163956,-0.0006154482252895832],[-0.06641223281621933,-0.037979383021593094],[0.013415527530014515,0.03653736039996147],[0.02352079376578331,0.024061748757958412],[-0.31355854868888855,0.013226247392594814],[-0.21417969465255737,0.026964137330651283],[-0.08397231996059418,-0.19072511792182922],[0.11656512320041656,-0.21035175025463104]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.05929000303149223,0.29848968982696533,0.7081950902938843],"rotation":[0.0033288293052464724,-0.925262987613678,-0.02647717483341694,0.37838637828826904],"used":true,"bodyHandle":4.6e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.1060212105512619,-0.10723880678415298],[0.5472142696380615,0.31106802821159363],[0.2045714408159256,0.09631256014108658],[0.16967567801475525,-0.05135994032025337],[0.25702163577079773,-0.017842750996351242],[0.05506148934364319,-0.015804411843419075],[0.1671486496925354,-0.12083172798156738],[0.2024098038673401,-0.16647866368293762],[0.2824801206588745,-0.23345305025577545],[0.24352915585041046,-0.20477823913097382]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.058640334755182266,0.3003963530063629,0.6368259191513062],"rotation":[0.022356009110808372,-0.6049423217773438,-0.00009976746514439583,0.79595547914505],"used":true,"bodyHandle":4.605e-321,"linearSpeed":0,"angularVelocityHistory":[[-0.04153177887201309,-0.08954697847366333],[0.1753840446472168,0.009457174688577652],[0.1647750586271286,0.11096668988466263],[-0.4105083644390106,-0.15757429599761963],[0.16943693161010742,0.14520953595638275],[-0.2427525818347931,-0.09257049858570099],[-0.3115520477294922,-0.20487195253372192],[-0.08200543373823166,0.03662814199924469],[0.007951943203806877,0.04775909706950188],[-0.16132451593875885,-0.07404974102973938]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0.002162627875804901,0.2988486886024475,0.672431230545044],"rotation":[0.02218419313430786,-0.05064147338271141,-0.0066731893457472324,0.9984481334686279],"used":true,"bodyHandle":4.61e-321,"linearSpeed":0,"angularVelocityHistory":[[0.025422977283596992,0.08551729470491409],[0.11261478066444397,-0.021262384951114655],[-0.12537282705307007,-0.23783592879772186],[0.14515899121761322,0.01257194485515356],[0.1246509701013565,-0.2619170844554901],[0.15431205928325653,0.08734232187271118],[0.25019243359565735,0.01413759682327509],[0.04784596338868141,0.014014299027621746],[-0.05995963141322136,0.1034376472234726],[-0.007911060936748981,0.11030137538909912]],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.615e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.62e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.624e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.63e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.634e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.64e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.644e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.65e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.654e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.66e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.664e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.67e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.674e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.68e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.684e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.69e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.694e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.7e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.704e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.71e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.713e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.72e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.723e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.73e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.733e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.74e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.743e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.75e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.753e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.76e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.763e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.77e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.773e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.78e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.783e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.787e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.79e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.797e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.8e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.807e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.81e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.817e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.82e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.827e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.83e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.837e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.84e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.847e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.85e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.857e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.86e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.867e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.87e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.876e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.88e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.886e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.89e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.896e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.9e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.906e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.91e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.916e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.92e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.926e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.93e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.936e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.94e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.946e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.95e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.955e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.96e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.965e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.97e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.975e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.98e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.985e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.99e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":4.995e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.005e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.01e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.015e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.02e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.025e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.03e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.035e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.04e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.044e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.05e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.054e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.06e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.064e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.07e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.074e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.08e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.084e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.09e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.094e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.1e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.104e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.11e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.114e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.12e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.123e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.13e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.133e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.14e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.143e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.15e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.153e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.16e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.163e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.17e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.173e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.18e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.183e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.19e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.193e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.2e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.203e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.207e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.21e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.217e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.22e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.227e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.23e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.237e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.24e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.247e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.25e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.257e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.26e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.267e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.27e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.277e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.28e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.287e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.29e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.296e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.3e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.306e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.31e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.316e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.32e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.326e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.33e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.336e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.34e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.346e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.35e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.356e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.36e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.366e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.37e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.375e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.38e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.385e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.39e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.395e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.4e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.405e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.41e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.415e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.42e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.425e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.43e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.435e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.44e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.445e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.45e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.454e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.46e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.464e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.47e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.474e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.48e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.484e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.49e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.494e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.5e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.504e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.51e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.514e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.52e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.524e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.53e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.534e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.54e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.543e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.55e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.553e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.56e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.563e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.57e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.573e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.58e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.583e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.59e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.593e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.6e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.603e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.61e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.613e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.618e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.62e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.627e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.63e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.637e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.64e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.647e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.65e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.657e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.66e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.667e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.67e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.677e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.68e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.687e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.69e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.697e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.7e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.706e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.71e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.716e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.72e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.726e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.73e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.736e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.74e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.746e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.75e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.756e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.76e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.766e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.77e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.776e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.78e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.786e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.79e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.795e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.8e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.805e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.81e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.815e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.82e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.825e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.83e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.835e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.84e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.845e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.85e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.855e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.86e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.865e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.87e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.874e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.88e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.884e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.89e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.894e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.9e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.904e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.91e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.914e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.92e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.924e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.93e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.934e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.94e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.944e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.95e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.953e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.96e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.963e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.97e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.973e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.98e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.983e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.99e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":5.993e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.003e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.01e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.013e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.02e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.023e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.03e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.033e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.037e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.04e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.047e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.05e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.057e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.06e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.067e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.07e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.077e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.08e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.087e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.09e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.097e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.1e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.107e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.11e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.117e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.12e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.126e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.13e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.136e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.14e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.146e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.15e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.156e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.16e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.166e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.17e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.176e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.18e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.186e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.19e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.196e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.2e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.205e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.21e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.215e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.22e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.225e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.23e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.235e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.24e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.245e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.25e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.255e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.26e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.265e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.27e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.275e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.28e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.285e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.29e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.294e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.3e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.304e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.31e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.314e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.32e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.324e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.33e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.334e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.34e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.344e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.35e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.354e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.36e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.364e-321,"angularVelocityHistory":[],"sleepCandidateFrames":0,"pendingImpulse":null}],"tokens":[[{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.645e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.65e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.655e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.66e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.665e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.67e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.675e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.68e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.685e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.69e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.695e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.7e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.704e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.71e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.714e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.72e-321}],[{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.724e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.73e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.734e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.74e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.744e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.75e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.754e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.76e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.764e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.77e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.774e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.78e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.784e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.79e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.793e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.8e-321}],[{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.803e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.81e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.813e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.82e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.823e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.83e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.833e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.84e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.843e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.85e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.853e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.86e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.863e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.868e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.87e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.877e-321}],[{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.88e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.887e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.89e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.897e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.9e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.907e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.91e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.917e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.92e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.927e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.93e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.937e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.94e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.947e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.95e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.956e-321}],[{"position":[0.10378508269786835,0.1813630610704422,0.5460032820701599],"rotation":[0.05883461609482765,0.169413223862648,-0.021590745076537132,0.9835504293441772],"used":true,"bodyHandle":6.96e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.966e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.97e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.976e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.98e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.986e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.99e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":6.996e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.006e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.01e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.016e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.02e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.026e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.03e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.035e-321}],[{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.04e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.045e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.05e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.055e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.06e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.065e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.07e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.075e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.08e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.085e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.09e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.095e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.1e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.105e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.11e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.115e-321}]],"buttons":[[[{"enabled":false,"isPressing":false,"isBlinking":false,"frameBlinkStart":-1,"blinkingOn":false,"framePressStart":-1,"position":[-0.2,0.16125,1.25]},{"enabled":false,"isPressing":false,"isBlinking":false,"frameBlinkStart":-1,"blinkingOn":false,"framePressStart":-1,"position":[0,0.16125,1.25]},{"enabled":false,"isPressing":false,"isBlinking":false,"frameBlinkStart":-1,"blinkingOn":false,"framePressStart":-1,"position":[0.2,0.16125,1.25]}],[{"enabled":true,"isPressing":false,"isBlinking":true,"frameBlinkStart":47,"blinkingOn":false,"framePressStart":-1,"position":[0.4,0.16125,1.25]},{"enabled":false,"isPressing":false,"isBlinking":false,"frameBlinkStart":-1,"blinkingOn":false,"framePressStart":-1,"position":[0,0,0]},{"enabled":false,"isPressing":false,"isBlinking":false,"frameBlinkStart":-1,"blinkingOn":false,"framePressStart":-1,"position":[0,0,0]}],[{"enabled":false,"isPressing":false,"isBlinking":false,"frameBlinkStart":-1,"blinkingOn":false,"framePressStart":-1,"position":[-0.4,0.16125,1.25]},{"enabled":false,"isPressing":false,"isBlinking":false,"frameBlinkStart":-1,"blinkingOn":false,"framePressStart":-1,"position":[0,0,0]},{"enabled":false,"isPressing":false,"isBlinking":false,"frameBlinkStart":-1,"blinkingOn":false,"framePressStart":-1,"position":[0,0,0]}]]],"ingots":[{"position":[-0.011715618893504143,0.18607643246650696,0.35790830850601196],"rotation":[0.042134858667850494,-0.06037859618663788,0.0036273321602493525,0.9972792267799377],"used":true,"bodyHandle":7.12e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.124e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.13e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.134e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.14e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.144e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.15e-321},{"position":[0,0,0],"rotation":[0,0,0,1],"used":false,"bodyHandle":7.154e-321}],"state":{"score":0,"points":0,"coins":0},"sensorCollidersHandles":{"gutter":5e-324,"left-trap":1e-323,"right-trap":1.5e-323},"pusher":{"state":"pusher-moving","nextState":null,"phase":1.466076571676628,"rewards":[],"platformBodyHandle":7.17e-321,"doorBodyHandle":7.164e-321,"door":{"position":0},"lights":{"state":"pusher-lights-idle","nextState":null,"frameLastRefresh":-1,"headIndex":0,"bulbs":[{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0}]}},"sensorGate":{"colliderHandle":7.574e-321,"sensor":{"state":"sensor-letter-idle","nextState":null,"frameFlashStart":-1,"flashCount":0,"letters":[{"state":"sensor-gate-off","nextState":null,"frameFlashStart":-1,"flashCount":0},{"state":"sensor-gate-off","nextState":null,"frameFlashStart":-1,"flashCount":0},{"state":"sensor-gate-off","nextState":null,"frameFlashStart":-1,"flashCount":0},{"state":"sensor-gate-off","nextState":null,"frameFlashStart":-1,"flashCount":0},{"state":"sensor-gate-off","nextState":null,"frameFlashStart":-1,"flashCount":0},{"state":"sensor-gate-off","nextState":null,"frameFlashStart":-1,"flashCount":0}]}},"reelsBox":{"state":"reels-box-idle","nextState":null,"pendingSpins":0,"frameActive":-1,"reels":[{"state":"reel-idle","nextState":null,"index":0,"rotation":0,"previousRotation":0,"currentSpeed":0,"targetIndex":-1,"targetRotation":-1},{"state":"reel-idle","nextState":null,"index":0,"rotation":0,"previousRotation":0,"currentSpeed":0,"targetIndex":-1,"targetRotation":-1},{"state":"reel-idle","nextState":null,"index":0,"rotation":0,"previousRotation":0,"currentSpeed":0,"targetIndex":-1,"targetRotation":-1}],"lights":{"state":"reels-box-lights-idle","headIndex":0,"frameLastRefresh":-1,"bulbs":[{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0}]}},"excavator":{"state":"excavator-idle","nextState":null,"pendingPicks":0,"beaconLightAngle":0,"joints":{"joint-jaw-4":{"jointHandle":0},"joint-jaw-1":{"jointHandle":5e-324},"joint-jaw-3":{"jointHandle":1e-323},"joint-jaw-2":{"jointHandle":1.5e-323},"joint-jaws":{"jointHandle":2e-323},"joint-arms":{"jointHandle":2.5e-323},"joint-arm-rotating-platform":{"jointHandle":3e-323},"joint-rotating-platform":{"jointHandle":3.5e-323},"joint-base":{"jointHandle":4e-323}},"parts":{"jaw-1":{"bodyHandle":7.307e-321},"rotating-platform-base":{"bodyHandle":7.31e-321},"arm-rotating-platform":{"bodyHandle":7.317e-321},"rotating-platform":{"bodyHandle":7.32e-321},"arm-jaws":{"bodyHandle":7.327e-321},"jaws":{"bodyHandle":7.33e-321},"base":{"bodyHandle":7.337e-321},"trap-excavator":{"bodyHandle":7.34e-321},"jaw-4":{"bodyHandle":7.347e-321},"jaw-3":{"bodyHandle":7.35e-321},"jaw-2":{"bodyHandle":7.357e-321},"beacon-light-base":{"bodyHandle":7.36e-321},"beacon-light-mirror":{"bodyHandle":7.367e-321},"beacon-light-bulb":{"bodyHandle":7.37e-321}},"trapSensorHandle":7.82e-321},"leftTower":{"state":"tower-idle","nextState":null,"parts":{"turret":{"bodyHandle":7.22e-321},"stand":{"bodyHandle":7.223e-321},"cabinet":{"bodyHandle":7.23e-321}},"position":0,"oscillationCount":0,"pendingShots":0,"phase":0,"frameLastShot":-1,"lightOn":false},"rightTower":{"state":"tower-idle","nextState":null,"parts":{"turret":{"bodyHandle":7.233e-321},"stand":{"bodyHandle":7.24e-321},"cabinet":{"bodyHandle":7.243e-321}},"position":0,"oscillationCount":0,"pendingShots":0,"phase":0,"frameLastShot":-1,"lightOn":false},"coinRoller":{"state":"coin-roller-idle","nextState":null,"sensorCollidersHandles":{"slot-1":7.9e-321,"slot-3":7.91e-321,"slot-2":7.915e-321,"trap":7.93e-321},"coinIndex":null,"launcherBodyHandle":7.446e-321,"trapBodyHandle":7.45e-321,"doorsBodyHandle":7.46e-321,"launcherPhase":0,"trapPosition":0,"doorsPosition":0,"pendingShots":0,"lights":[{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1},{"on":false,"refreshes":-1}],"lightsHeadIndex":-1,"lightsDirection":1,"lightsRefreshes":-1},"stacker":{"state":"stacker-idle","parts":{"base":{"bodyHandle":7.184e-321},"support":{"bodyHandle":7.19e-321},"arm":{"bodyHandle":7.194e-321},"arm-protection":{"bodyHandle":7.2e-321},"arm-protection-lid":{"bodyHandle":7.203e-321},"arm-door":{"bodyHandle":7.21e-321}},"position":0,"supportPosition":0,"basePosition":0,"armPosition":0,"armDoorPosition":0,"armProtectionLidAngle":0,"rotations":0,"rotationDirection":1,"baseAngle":0,"level":0,"stacks":-1,"levels":-1,"pendingDeliveries":[],"nextState":null,"coinHandle":null,"coinsHandles":[],"lights":{"state":"stacker-lights-idle","nextState":null,"frameLastRefresh":-1,"bulbs":[{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0}]}},"leftStacker":{"state":"stacker-idle","parts":{"base":{"bodyHandle":7.25e-321},"arm":{"bodyHandle":7.253e-321},"support":{"bodyHandle":7.26e-321},"arm-protection-lid":{"bodyHandle":7.263e-321},"arm-door":{"bodyHandle":7.27e-321},"arm-protection":{"bodyHandle":7.273e-321}},"position":0,"supportPosition":0,"basePosition":0,"armPosition":0,"armDoorPosition":0,"armProtectionLidAngle":0,"baseAngle":0,"level":0,"levels":-1,"pendingDeliveries":[],"nextState":null,"coinHandle":null,"coinsHandles":[],"lights":{"state":"stacker-lights-idle","nextState":null,"frameLastRefresh":-1,"bulbs":[{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0}]}},"rightStacker":{"state":"stacker-idle","parts":{"base":{"bodyHandle":7.28e-321},"arm":{"bodyHandle":7.283e-321},"support":{"bodyHandle":7.287e-321},"arm-protection-lid":{"bodyHandle":7.29e-321},"arm-door":{"bodyHandle":7.297e-321},"arm-protection":{"bodyHandle":7.3e-321}},"position":0,"supportPosition":0,"basePosition":0,"armPosition":0,"armDoorPosition":0,"armProtectionLidAngle":0,"baseAngle":0,"level":0,"levels":-1,"pendingDeliveries":[],"nextState":null,"coinHandle":null,"coinsHandles":[],"lights":{"state":"stacker-lights-idle","nextState":null,"frameLastRefresh":-1,"bulbs":[{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0},{"intensity":0}]}},"sweepers":{"state":"sweepers-idle","nextState":null,"parts":{"left-sweeper":{"bodyHandle":7.376e-321},"left-base":{"bodyHandle":7.38e-321},"right-base":{"bodyHandle":7.386e-321},"left-door":{"bodyHandle":7.39e-321},"right-door":{"bodyHandle":7.396e-321},"left-flap":{"bodyHandle":7.4e-321},"right-flap":{"bodyHandle":7.406e-321},"right-sweeper":{"bodyHandle":7.41e-321}},"position":0,"rotation":0,"translation":0,"sweepersRotationZ":0,"sweepersRotationY":0,"doorsRotation":0,"pendingSweeps":[],"lights":{"state":"sweepers-lights-idle","nextState":null,"leftOn":false,"rightOn":false,"frameLastRefresh":-1}},"runs":{"state":"runs-idle","step":-1,"timeRunCompleted":-1},"scene":{"world":""}}'),l4={time:GA,cabinet:UA},qA=T8.TIMESTEP*1e3;class Ln{static DEBUG_MAX_SPEED=!1;static DEBUG_EMPTY_POOL=!1;static DEBUG_COLLIDERS=!1;static DEBUG_FPS=!1;static DEBUG_POLYGONS=!1;static DEBUG_CONTROLS=!1;static DEBUG_AUTOPLAY=!1;static DEBUG_HIDE_CABINET=!1;static#e;static#t=0;static#n;static#a=!1;static#r=!1;static#o;static#u;static pixelRatio=2;static async initialize(){const e=new YA(this.width/this.height);this.#n=document.body,this.#o=new T8({containerElement:this.#n,camera:e}),await this.#o.initialize(this.width,this.height,this.pixelRatio),this.#e=new zA({scene:this.#o}),this.#e.DEBUG_AUTOPLAY=this.DEBUG_AUTOPLAY,this.#e.DEBUG_HIDE_CABINET=this.DEBUG_HIDE_CABINET,await this.#e.initialize(),this.DEBUG_EMPTY_POOL||await this.load(l4),this.#u=new XA({scene:this.#o,camera:e,interactiveObjects:this.#e.interactiveObjects}),this.#u.initialize(this.width,this.height),ti.DEBUG_COLLIDERS=this.DEBUG_COLLIDERS,ti.DEBUG_FPS=this.DEBUG_FPS,ti.DEBUG_POLYGONS=this.DEBUG_POLYGONS,ti.DEBUG_CONTROLS=this.DEBUG_CONTROLS,await ti.initialize({scene:this.#o,camera:e,containerElement:this.#n,joints:this.#e.joints}),onresize=()=>this.#s(),new ResizeObserver(()=>this.#d()).observe(this.#n),onkeydown=async n=>{(n.key==="s"||n.key==="S")&&n.ctrlKey&&(n.preventDefault(),console.log(await this.save())),(n.key==="l"||n.key==="L")&&n.ctrlKey&&(n.preventDefault(),await this.load(l4))}}static run(){this.#i()}static#i(){this.#r&&(this.#r=!1,this.#a=!1),this.#a||(this.#e.update(this.#t),this.#u.update(),ti.update(),this.#o.step(),this.#o.render(),this.#t+=qA),this.DEBUG_MAX_SPEED?setTimeout(()=>this.#i(),0):requestAnimationFrame(()=>this.#i())}static async save(){return{time:this.#t,cabinet:await this.#e.save()}}static async load(e){this.#a=!0,this.#t=e.time,await this.#e.load(e.cabinet),this.#a=!1,this.#r=!0}static#s(){this.#o.resize(this.width,this.height,this.pixelRatio),this.#e.resize(this.width,this.height),this.#u.resize(this.width,this.height)}static#d(){const e=this.#n.clientWidth,t=this.#n.clientHeight;this.#o.resize(e,t),this.#e.resize(e,t)}static get width(){return innerWidth}static get height(){return innerHeight}}Ln.DEBUG_EMPTY_POOL=0;Ln.DEBUG_AUTOPLAY=0;Ln.DEBUG_MAX_SPEED=0;Ln.DEBUG_COLLIDERS=0;Ln.DEBUG_HIDE_CABINET=0;Ln.DEBUG_POLYGONS=0;Ln.DEBUG_CONTROLS=1;Ln.DEBUG_FPS=1;await Ln.initialize();Ln.run();
